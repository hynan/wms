<template>
  <div class="card-box">
    <div class="card-box-inner">
    <div class="receivingSearchBar-main">
      <el-date-picker
        style="width: 95%;margin-bottom: 5px"
        size="small"
        v-model="searchParams.dateCreated"
        type="daterange"
        align="center"
        unlink-panels
        range-separator="--"
        start-placeholder="创建开始日期"
        end-placeholder="创建结束日期"
        :picker-options="pickerOptions">
      </el-date-picker>
      <el-input v-model="searchParams.orderNum" placeholder="单据号" size="small" style="width: 47%"></el-input>
      <el-select clearable v-model="searchParams.orderSource" placeholder="单据来源" size="small" style="width:47%">
        <el-option
          v-for="item in testData"
          :key="item.code"
          :label="item.name"
          :value="item.code">
        </el-option>
      </el-select>
      <el-select clearable v-model="searchParams.foreignOrder" filterable placeholder="外来单号" size="small" style="width:47%">
        <el-option
          v-for="item in testData"
          :key="item.code"
          :label="item.name"
          :value="item.name">
        </el-option>
      </el-select>
      <el-select clearable v-model="searchParams.orderState" filterable placeholder="单据状态" size="small" style="width:47%">
        <el-option
          v-for="item in testData"
          :key="item.code"
          :label="item.name"
          :value="item.name">
        </el-option>
      </el-select>

      <div class="receivingSearchBar-foot">
        <el-button type="primary" @click="search" icon="search" size="mini">搜索</el-button>
        <el-button type="success" @click="toAddReceivingNote" size="mini" style="margin-left: 0px;">新建收货单</el-button>
      </div>
    </div>
    </div>
  </div>
</template>
<script>
  export default {
    name:"ReceivingSearchBar",
    props:{
      params:Object
    },
    mounted(){

    },
    data(){
      return {
        pickerOptions: {
          shortcuts: [{
            text: '最近一周',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近一个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit('pick', [start, end]);
            }
          }, {
            text: '最近三个月',
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
              picker.$emit('pick', [start, end]);
            }
          }]
        },
        testData:[
          {name:"1",code:"1"},
          {name:"2",code:"2"},
          {name:"3",code:"3"},
        ],
        searchParams: Object.assign({},this.params),
      }
    },
    methods:{
      handleChange(value) {
        console.log(value);
      },
      search(){
        this.$emit("search",this.searchParams);
      },
      toAddReceivingNote(){
        this.$router.push("/receivingInspection/receivingNoteAdd");
      }
    },
    computed:{

    },

  }
</script>
<style>
  .receivingSearchBar-main {padding: 7px;}
  .receivingSearchBar-main .el-input{margin-bottom: 3px;}
  .receivingSearchBar-main .el-select{margin-bottom: 3px;}
  .receivingSearchBar-foot{ float:right; width: 40%;margin-bottom: 5px;}
  .receivingSearchBar-foot .el-dialog__header{text-align: left;}
</style>
