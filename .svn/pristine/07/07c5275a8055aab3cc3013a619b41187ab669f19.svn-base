<template>
  <div v-if="show" class="shade-box" @click="close">
    <i class="el-icon-close close-btn" @click="close"></i>
    <el-carousel ref="carouselBox" class="filesContainer"  :interval="5000" :initial-index="cindex" arrow="always">
      <el-carousel-item v-for="item in fileObjects" v-if="item.type=='img'">
          <img :src="item.url" class="upload-imgbox" />
          <p>{{item.name}}</p>
      </el-carousel-item>
    </el-carousel>
  </div>
  <div v-else>
    <a @click="showImage($event,item)" v-for="item in fileObjects" class='upload-file-link' target='_blank' :href='item.url'><i class='el-icon-document'></i>{{item.sname}}.{{item.suffix}}</a>
  </div>
</template>
<script>
  export default{
    name:"UploadFile",
    props:{
      fileslink:String
    },
    data(){
      return{
        fileObjects:[],
        show:false,
        cheight:600,
        cindex:0
      }
    },
    mounted:function(){
      this.convertObject(this.fileslink);
    },
    methods:{
      convertObject(filestr){
        let fileArr = filestr.split(",");
        let fileObjects = [];
        for(let item of fileArr){
          if(item==""){
              continue;
            }else{
              let suffix =  item.slice(item.lastIndexOf(".")+1);
              let name = item.substr(item.lastIndexOf("/")+1);
              let sname = item.substr(item.lastIndexOf("/")+1,8);
              let ispic = "gif,jpg,jpeg,png".indexOf(suffix.toLowerCase());
              fileObjects.push({
                url:item,
                suffix:suffix,
                name:name,
                sname:sname,
                type:ispic!=-1 ? 'img':'file'
              });
            }
        }
        this.fileObjects = fileObjects;
      },
      showImage(event,item){
        if(item.type=='img'){
          event.preventDefault();
          let index=0;
          for(let i=0,j=this.fileObjects.length;i<j;i++){
            if(this.fileObjects[i].url==item.url){
              break;
            }else if(this.fileObjects[i].type == 'img'){
              index++;
            }
          }
          this.show=true;
          
          setTimeout(function(){
            console.log(index);
            this.$refs.carouselBox.setActiveItem(index);
          }.bind(this),300);

          //this.$store.commit('SET_OVER_HIDDEN',true);
        }
      },
      close(){
        this.show=false;
         //this.$store.commit('SET_OVER_HIDDEN',false);
      }
    },
    watch:{
      'fileslink':function(){
        this.convertObject(this.fileslink);
      }
    }
  }
</script>
