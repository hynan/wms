{"version":3,"sources":["webpack:///./static/js/pdf.worker.js","webpack:///src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue","webpack:///./src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue?529e","webpack:///./src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue","webpack:///src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue","webpack:///./src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue?3492","webpack:///./src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue","webpack:///src/components/receivingInspection/ReceivingSearchBar.vue","webpack:///./src/components/receivingInspection/ReceivingSearchBar.vue?c042","webpack:///src/components/receivingInspection/ReceivingList.vue","webpack:///./src/components/receivingInspection/ReceivingSearchBar.vue","webpack:///./src/components/receivingInspection/ReceivingList.vue?5d14","webpack:///./src/components/receivingInspection/ReceivingList.vue","webpack:///src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue","webpack:///./src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue?e341","webpack:///./src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue","webpack:///src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue","webpack:///./src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue?1cb3","webpack:///./src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue","webpack:///src/components/receivingInspection/receivingNoteInfo/DetailTable.vue","webpack:///./src/components/receivingInspection/receivingNoteInfo/DetailTable.vue?a46b","webpack:///./src/components/receivingInspection/receivingNoteInfo/DetailTable.vue","webpack:///src/components/receivingInspection/TopNavBtn.vue","webpack:///./src/components/receivingInspection/TopNavBtn.vue?1746","webpack:///src/components/receivingInspection/ReceivingDetail.vue","webpack:///./src/components/receivingInspection/TopNavBtn.vue","webpack:///./src/components/receivingInspection/ReceivingDetail.vue?a71a","webpack:///./src/components/receivingInspection/ReceivingDetail.vue","webpack:///src/components/receivingInspection/receivingNoteInfo/Info.vue","webpack:///./src/components/receivingInspection/receivingNoteInfo/Info.vue?3470","webpack:///./src/components/receivingInspection/receivingNoteInfo/Info.vue","webpack:///src/components/receivingInspection/receiving/Receiving.vue","webpack:///./src/components/receivingInspection/receiving/Receiving.vue?5197","webpack:///./src/components/receivingInspection/receiving/Receiving.vue","webpack:///./static/js/pdf.js","webpack:///src/components/common/pdfPrint/PdfPrint.vue","webpack:///./src/components/common/pdfPrint/PdfPrint.vue?86f5","webpack:///./src/components/common/pdfPrint/PdfPrint.vue","webpack:///src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue","webpack:///./src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue?1dbb","webpack:///./src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue","webpack:///src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue","webpack:///./src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue?c505","webpack:///./src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue","webpack:///src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue","webpack:///./src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue?6fc8","webpack:///./src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue","webpack:///src/components/receivingInspection/printTag/Tag.vue","webpack:///./src/components/receivingInspection/printTag/Tag.vue?2ef6","webpack:///src/components/putInStorageManage/printTag/PrintAlert.vue","webpack:///./src/components/receivingInspection/printTag/Tag.vue","webpack:///./src/components/receivingInspection/printTag/PrintAlert.vue?41c2","webpack:///src/components/receivingInspection/printTag/PrintTag.vue","webpack:///./src/components/receivingInspection/printTag/PrintAlert.vue","webpack:///./src/components/receivingInspection/printTag/PrintTag.vue?2832","webpack:///./src/components/receivingInspection/printTag/PrintTag.vue"],"names":["PDFJS","window","this","version","build","info","msg","verbosity","VERBOSITY_LEVELS","infos","console","log","warn","warnings","error","arguments","length","logArguments","push","apply","join","call","Error","e","stack","split","slice","backtrace","UnsupportedManager","notify","UNSUPPORTED_FEATURES","unknown","assert","cond","isValidUrl","url","allowRelative","protocol","exec","toLowerCase","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","bytesToString","bytes","undefined","String","fromCharCode","strBuf","i","chunkEnd","Math","min","chunk","subarray","stringToBytes","str","Uint8Array","charCodeAt","string32","log2","x","n","readInt8","data","start","readUint16","offset","readUint32","stringToPDFString","code","PDFStringTranslateTable","charAt","isEmptyObj","key","isBool","v","isInt","isNum","isString","isName","Name","isCmd","cmd","Cmd","isDict","type","Dict","dictType","get","name","isArray","Array","isStream","getBytes","isRef","Ref","createPromiseCapability","capability","promise","Promise","resolve","reject","MessageHandler","comObj","callbackIndex","postMessageTransfers","callbacksCapabilities","ah","actionHandler","onmessage","event","isReply","callbackId","callback","action","then","result","postMessage","reason","getUnicodeRangeFor","ii","UnicodeRanges","range","begin","end","reverseIfRtl","chars","charsLength","isRTLRangeFor","s","getFontType","subtype","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","type1FontGlyphMapping","properties","builtInEncoding","glyphNames","glyphId","charCode","baseEncoding","charCodeToGlyphId","create","baseEncodingName","Encodings","indexOf","flags","FontFlags","Symbolic","StandardEncoding","differences","glyphName","isEOF","EOF","globalScope","FONT_IDENTITY_MATRIX","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","AnnotationType","WIDGET","TEXT","LINK","StreamType","TYPE3","pdfBug","errors","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","forms","javaScript","smask","shadingPattern","font","listeners","listen","cb","featureId","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","PasswordException","message","prototype","constructor","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","NotImplementedException","MissingDataException","XRefParseException","buffer8","Uint16Array","buffer","isLittleEndian","canvas","document","createElement","width","height","getContext","createImageData","hasCanvasTypedArrays","Uint32ArrayView","byteLength","uint32ArrayViewSetters","createUint32ArrayProp","ensureUint32ArrayViewProps","index","set","IDENTITY_MATRIX","Util","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","p","m","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","sign","num","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","has","inherit","sub","base","loadScript","src","script","loaded","setAttribute","onload","getElementsByTagName","appendChild","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","abs","fontScale","clone","args","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","resolver","_status","STATUS_PENDING","_handlers","_resolve","bind","_reject","all","iterable","count","results","resolve_","reject_","forEach","catch","onReject","STATUS_REJECTED","HandlerManager","handlers","running","unhandledRejections","pendingRejectionCheck","scheduleHandlers","concat","setTimeout","runHandlers","timeoutAt","Date","now","handler","shift","nextStatus","thisPromise","nextValue","_value","onResolve","_unhandledRejection","removeUnhandeledRejection","ex","nextPromise","_updateStatus","addUnhandledRejection","time","scheduleRejectionCheck","splice","unhandled","promises","deferred","rejectAll","resolveAll","unresolved","isPromise","rpad","pad","StatTimer","started","times","enabled","timeEnd","toString","out","longest","span","duration","createBlob","contentType","Blob","bb","MozBlobBuilder","append","getBlob","createObjectURL","digits","disableCreateObjectURL","URL","blob","b1","b2","b3","on","actionName","scope","send","transfers","sendWithPromise","NetworkManager","isHttp","test","httpHeaders","withCredentials","getXhr","XMLHttpRequest","currXhrId","pendingRequests","loadedRequests","getArrayBuffer","xhr","response","array","requestRange","request","requestFull","xhrId","pendingRequest","open","property","setRequestHeader","rangeStr","expectedStatus","onProgressiveData","responseType","mozChunked","onError","onerror","evt","onreadystatechange","onStateChange","onprogress","onProgress","onHeadersReceived","onDone","readyState","xhrStatus","rangeHeader","getResponseHeader","matches","parseInt","hasPendingRequests","getRequestXhr","isStreamingRequest","isPendingRequest","isLoadedRequest","abortAllRequests","abortRequest","abort","ChunkedStream","chunkSize","manager","pos","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","getBaseStreams","allChunksLoaded","onReceiveData","curChunk","beginChunk","floor","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","getByteRange","skip","reset","moveStart","makeSubStream","ChunkedStreamSubstream","missingChunks","subStream","ChunkedStreamManager","stream","disableAutoFetch","msgHandler","chunkedViewerLoading","sendRequest","networkManager","currRequestId","chunksNeededByRequest","requestsByChunk","callbacksByRequest","_loadedStreamCapability","initialData","onLoadedStream","requestAllChunks","requestChunks","chunksNeeded","requestId","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","requestIds","lastChunk","err","RANGE_CHUNK_SIZE","BasePdfManager","ensureDoc","ensure","pdfDocument","ensureXRef","xref","ensureCatalog","catalog","getPage","pageIndex","cleanup","requestLoadedStream","sendProgressiveData","updatePassword","password","_passwordChangedCapability","passwordChanged","terminate","LocalPdfManager","Stream","PDFDocument","NetworkPdfManager","params","streamManager","pdfManager","ensureHelper","Page","pageDict","ref","fontCache","idCounters","resourcesPromise","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","content","resources","empty","mediaBox","view","cropBox","annotationRefs","rotate","getContentStream","streams","fetchIfRef","StreamsSequenceStream","NullStream","loadResources","keys","ObjectLoader","map","load","getOperatorList","intent","self","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","opList","OperatorList","transparency","hasBlendModes","annotationsPromise","datas","pageOpList","annotations","flush","Annotation","appendToOperatorList","extractTextContent","getTextContent","getAnnotationsData","annotationsData","getData","annotationRef","annotation","fromRef","arg","init","isArrayBuffer","XRef","find","needle","limit","backwards","lastIndexOf","DocumentInfoValidators","entries","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","parse","recoveryMode","setup","acroForm","catDict","xfa","fields","linearization","Linearization","startXRef","found","ch","Lexer","isSpace","isNaN","mainXRefEntriesOffset","checkHeader","pdfFormatVersion","substring","parseStartXRef","setStartXRef","Catalog","numPages","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","trailer","validEntries","fingerprint","idArray","hash","fileID","calculateMD5","hex","nameCache","nameValue","cmdCache","cmdValue","isRecursionAllowedFor","Type","GETALL_DICTIONARY_TYPES_WHITELIST","objId","__nonSerializable__","nonSerializable","Background","ExtGState","Halftone","Layout","Mask","Pagination","Printing","assignXref","newXref","key1","key2","key3","getAsync","fetchIfRefAsync","getRaw","getAll","queue","target","processed","item","itemObj","dereferenced","gen","RefSet","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","clear","getCatalogObj","pagePromises","metadata","streamRef","encryptMetadata","encrypt","fetch","decodeURIComponent","escape","stringToUTF8String","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","outlineDict","dest","outlineItem","title","color","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","hasOwnProperty","getDestination","destinationId","nameTree","attachments","fs","FileSpec","serializable","jsDict","js","openactionDict","objType","actionType","translatedFonts","translated","getPageDict","next","nodesToVisit","currentNode","pop","fetchAsync","currentPageIndex","kids","last","getPageIndex","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","xrefstms","cache","stats","streamTypes","fontTypes","startXRefQueue","trailerDict","indexObjects","readXRef","ids","fileId","CipherTransformFactory","processXRefTable","parser","tableState","entryNum","streamPos","lexer","parserBuf1","buf1","parserBuf2","buf2","readXRefTable","getObj","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","j","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","token","skipUntil","what","dataLength","skipped","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","xrefTagOffset","Parser","topDict","getEntry","xrefEntry","suppressEncryption","fetchUncompressed","fetchCompressed","obj3","createCipherTransform","tableOffset","allowStreams","nums","tryFetch","l","kidsOrNames","loopCount","limits","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","refSet","walk","nodesToRevisit","baseStreams","foundMissingData","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","DEFAULT_ICON_SIZE","SUPPORTED_TYPES","annotationFlags","borderStyle","borderWidth","borderArray","dashArray","dashArrayLength","isInvalid","numPositive","appearance","appearanceState","appearances","as","getDefaultAppearance","hasAppearance","id","isInvisible","isViewable","isPrintable","evaluator","appearanceDict","bbox","matrix","bounds","minX","minY","maxX","maxY","xRatio","yRatio","getTransformMatrix","addOp","getConstructor","fieldType","LinkAnnotation","TextAnnotation","TextWidgetAnnotation","WidgetAnnotation","Constructor","annotationsReadyCapability","annotationPromises","annotOpList","addOpList","fieldValue","alternativeText","defaultAppearance","fieldFlags","fieldResources","fieldName","namedItem","jj","fullName","textAlignment","annotationType","hasHtml","InteractiveAnnotation","hasBgColor","linkType","addDefaultProtocolToUrl","urlDict","PDFFunction","getSampleArray","size","outputSize","bps","codeSize","codeBuf","sampleMul","pow","strBytes","strIdx","getIR","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","fromIR","IR","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","parseArray","fnObj","fnArray","srcOffset","destOffset","toMultiArray","arr","inputLength","domain","inputSize","order","encode","decode","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","Uint32Array","k","domain_2i","domain_2i_1","size_i","e0","n0","n1","offset0","offset1","rj","c0","c1","diff","fnRefs","fns","fnsIR","tmpBuf","Float32Array","dmin","dmax","rmin","rmax","PostScriptLexer","PostScriptParser","compiled","PostScriptCompiler","compile","Function","numOutputs","numInputs","PostScriptEvaluator","cache_available","input","cachedValue","output","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","t","operators","operator","counter","atan","cos","LN10","round","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","ColorSpace","getRgb","rgb","getRgbItem","getRgbBuffer","bits","alpha01","getOutputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","PDFImage","resize","usesZeroToOneRange","cs","res","parseToIR","AlternateCS","whitePoint","blackPoint","gamma","singletons","gray","cmyk","WhitePoint","BlackPoint","Gamma","CalGrayCS","Matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","Range","LabCS","colorSpaces","refcs","mode","isDefaultDecode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","lookupArray","outputDelta","lookupPos","q","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","L","val","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","adjustToRange","decodeL","DECODE_L_CONSTANT","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","XYZ_Flat","tempConvertMatrix2","sourceWhitePoint","XYZ_In","LMS","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","convertToFlat","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","bs","M","N","ARCFourCipher","tmp","keyLength","encryptBlock","tmp2","decryptBlock","Int32Array","h0","h1","h2","h3","paddedLength","padded","w","f","rotateArg","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","calculateSHA256","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","h","calculateSHA512","mode384","tmp3","tmp1","calculateSHA384","NullCipher","AES128Cipher","decrypt128","state","u","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","cipherKey","t3","t4","rcon","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","bufferLength","iv","plain","outputLength","lastBlock","psLen","cipher","AES256Cipher","decrypt256","encrypt256","expandKey256","PDF17","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","PDF20","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","createStream","DecryptStream","decryptString","prepareKeyData","revision","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","filter","algorithm","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","PatternType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","Pattern","getPattern","ctx","parseShading","shading","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","x1","y1","r1","x2","y2","r2","distance","step","colorStops","rgbColor","ratio","cssColor","background","p0","r0","MeshStreamReader","context","tmpCompsBuf","csNumComps","colorSpace","tmpCsCompsBuf","colorFn","buildFigureFromPatch","mesh","figure","figures","coords","colors","pi","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","row","col","newColor","updateBounds","reader","bitsPerCoordinate","bitsPerComponent","bitsPerFlag","patchMesh","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","psPacked","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","nextByte","readBits","xi","yi","components","lut","t_","buildB","uniquePrefix","TimeSlotManager","check","checked","endTime","nodes","graphicStates","bm","xObjects","xObject","xResources","buildFormXObject","xobj","operatorList","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","image","inline","cacheKey","imageCache","maxImageSize","imgData","bitStrideLength","imgArray","inverseDecode","createMask","DecodeStream","cached","softMask","mask","JpegStream","addDependency","isNativelySupported","buildImage","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","handleTilingType","pattern","patternDict","tilingOpList","addDependencies","dependencies","getTilingPatternIR","argsArray","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","disableFontFace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateMap","errorFont","TranslatedFont","ErrorFont","fontRes","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontID","fontAliases","aliasFontRef","Font","getFontID","fontRefIsDict","translatedPromise","translateFont","translatedFont","fontType","fontFile3","lastIndex","opArgs","handleColorN","patterns","patternName","typeNum","xobjs","StateManager","EvalState","preprocessor","EvaluatorPreprocessor","timeSlotManager","stop","read","fontSize","cacheEntry","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","dictName","extGState","savedStatesDepth","newTextChunk","textState","textContent","styles","fontFamily","fallbackName","ascent","descent","vertical","dir","runBidi","textChunk","bidiResult","bidi","fontMatrix","buildTextGeometry","tsm","textHScale","textRise","trm","ctm","textMatrix","defaultVMetrics","glyphWidth","vmetric","glyphUnicode","unicode","NormalizedUnicodes","tx","ty","charSpacing","translateTextMatrix","wordSpacing","textLineMatrix","scaleLineX","scaleCtmX","TextState","bidiTexts","xobjsCache","leading","translateTextLineMatrix","carriageReturn","setTextLineMatrix","spaceWidth","fakeSpaces","texts","formTextContent","gsStateMap","gsStateFont","extractDataStructures","baseDict","toUnicode","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","encoding","diffEncoding","defaultEncoding","WinAnsiEncoding","MacRomanEncoding","file","SymbolSetEncoding","ZapfDingbatsEncoding","cmap","cmapObj","CMapFactory","cMapUrl","packed","cMapPacked","getMap","ToUnicodeMap","w1","w2","cidToGidStream","glyphsData","glyphID","extractWidths","widths","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","firstChar","parseFloat","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","isMonospace","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","serifFonts","search","monospace","lookupName","stdFontMap","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","hexdigest","maxCharIndex","Serif","symbolsFonts","Nonsymbolic","lastChar","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","wideChars","fixedPitch","xHeight","capHeight","italicAngle","coded","cidEncoding","cMap","type3Loaded","sent","fontData","exportData","parentOperatorList","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","glyphStream","messageHandler","CHUNK_SIZE","QueueOptimizer","optimize","getTransfers","stateStack","old","prev","calcRenderMatrix","OP_MAP","nonProcessedArgs","numArgs","variableArgs","J","ri","gs","Q","cm","re","S","F","f*","B*","b*","W","W*","BT","ET","Tc","Tw","Tz","TL","Tf","Tr","Ts","Td","TD","Tm","T*","Tj","TJ","'","\"","d0","d1","CS","SC","SCN","sc","scn","RG","rg","K","sh","BI","ID","EI","Do","MP","DP","BMC","BDC","EMC","BX","EX","BM","BD","true","fa","fal","fals","false","nu","nul","null","opSpec","argsLength","preprocessCommand","addState","parentState","InitialState","curr","iCurr","iFirstSave","iFirstTransform","iFirstPIIXO","maxLineHeight","currentX","currentY","img","imgWidth","imgHeight","imgRowSize","rowSize","dataOffset","kk","kind","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","iFirstPIXO","iFirstRestore","firstPIXOArg0","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","BUILT_IN_CMAPS","CMap","builtInCMap","codespaceRanges","numCodespaceRanges","_map","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","substr","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","charcode","IdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","MAX_NUM_SIZE","readByte","readNumber","readSigned","readHex","readHexNumber","sp","bufferSize","readHexSigned","readString","len","extend","nonBinaryRequest","disableWorker","overrideMimeType","responseText","fetchBinaryData","header","char","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMap","builtInCMapParams","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","useCodespaceRanges","parseBinaryCMap","StringStream","PRIVATE_USE_OFFSET_START","PRIVATE_USE_OFFSET_END","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","SEAC_ANALYSIS_ENABLED","Script","Italic","AllCap","SmallCap","ForceBold","ExpertEncoding","MacExpertEncoding","ArialNarrow","ArialNarrow-Bold","ArialNarrow-BoldItalic","ArialNarrow-Italic","ArialBlack","ArialBlack-Bold","ArialBlack-BoldItalic","ArialBlack-Italic","Arial","Arial-Bold","Arial-BoldItalic","Arial-Italic","Arial-BoldItalicMT","Arial-BoldMT","Arial-ItalicMT","ArialMT","Courier-Bold","Courier-BoldItalic","Courier-Italic","CourierNew","CourierNew-Bold","CourierNew-BoldItalic","CourierNew-Italic","CourierNewPS-BoldItalicMT","CourierNewPS-BoldMT","CourierNewPS-ItalicMT","CourierNewPSMT","Helvetica","Helvetica-Bold","Helvetica-BoldItalic","Helvetica-BoldOblique","Helvetica-Italic","Helvetica-Oblique","Symbol-Bold","Symbol-BoldItalic","Symbol-Italic","TimesNewRoman","TimesNewRoman-Bold","TimesNewRoman-BoldItalic","TimesNewRoman-Italic","TimesNewRomanPS","TimesNewRomanPS-Bold","TimesNewRomanPS-BoldItalic","TimesNewRomanPS-BoldItalicMT","TimesNewRomanPS-BoldMT","TimesNewRomanPS-Italic","TimesNewRomanPS-ItalicMT","TimesNewRomanPSMT","TimesNewRomanPSMT-Bold","TimesNewRomanPSMT-BoldItalic","TimesNewRomanPSMT-Italic","nonStdFontMap","CenturyGothic","CenturyGothic-Bold","CenturyGothic-BoldItalic","CenturyGothic-Italic","ComicSansMS","ComicSansMS-Bold","ComicSansMS-BoldItalic","ComicSansMS-Italic","LucidaConsole","LucidaConsole-Bold","LucidaConsole-BoldItalic","LucidaConsole-Italic","MS-Gothic","MS-Gothic-Bold","MS-Gothic-BoldItalic","MS-Gothic-Italic","MS-Mincho","MS-Mincho-Bold","MS-Mincho-BoldItalic","MS-Mincho-Italic","MS-PGothic","MS-PGothic-Bold","MS-PGothic-BoldItalic","MS-PGothic-Italic","MS-PMincho","MS-PMincho-Bold","MS-PMincho-BoldItalic","MS-PMincho-Italic","Wingdings","Adobe Jenson","Adobe Text","Albertus","Aldus","Alexandria","Algerian","American Typewriter","Antiqua","Apex","Arno","Aster","Aurora","Baskerville","Bell","Bembo","Bembo Schoolbook","Benguiat","Berkeley Old Style","Bernhard Modern","Berthold City","Bodoni","Bauer Bodoni","Book Antiqua","Bookman","Bordeaux Roman","Californian FB","Calisto","Calvert","Capitals","Cambria","Cartier","Caslon","Catull","Centaur","Century Old Style","Century Schoolbook","Chaparral","Charis SIL","Cheltenham","Cholla Slab","Clarendon","Clearface","Cochin","Colonna","Computer Modern","Concrete Roman","Constantia","Cooper Black","Corona","Ecotype","Egyptienne","Elephant","Excelsior","Fairfield","FF Scala","Folkard","Footlight","FreeSerif","Friz Quadrata","Garamond","Gentium","Georgia","Gloucester","Goudy Old Style","Goudy Schoolbook","Goudy Pro Font","Granjon","Guardian Egyptian","Heather","Hercules","High Tower Text","Hiroshige","Hoefler Text","Humana Serif","Imprint","Ionic No. 5","Janson","Joanna","Korinna","Lexicon","Liberation Serif","Linux Libertine","Literaturnaya","Lucida","Lucida Bright","Melior","Memphis","Miller","Minion","Modern","Mona Lisa","Mrs Eaves","MS Serif","Museo Slab","New York","Nimbus Roman","NPS Rawlinson Roadway","Palatino","Perpetua","Plantin","Plantin Schoolbook","Playbill","Poor Richard","Rawlinson Roadway","Renault","Requiem","Rockwell","Roman","Rotis Serif","Sabon","Scala","Seagull","Sistina","Souvenir","STIX","Stone Informal","Stone Serif","Sylfaen","Times","Trajan","Trinité","Trump Mediaeval","Utopia","Vale Type","Bitstream Vera","Vera Serif","Versailles","Wanted","Weiss","Wide Latin","Windsor","XITS","Dingbats","Symbol","ZapfDingbats","GlyphMapForStandardFonts","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","210","223","224","225","227","229","234","252","253","254","258","260","261","265","266","268","269","275","276","278","284","285","286","292","295","296","298","305","306","307","308","309","310","311","312","313","337","493","494","705","706","710","711","759","761","763","775","777","778","779","780","782","783","786","788","790","791","792","795","797","798","799","800","801","802","803","804","805","2424","2425","2426","2427","2428","2429","2430","2433","2678","2679","2830","2838","2840","2842","2843","2844","2846","2856","2857","2858","2862","2863","2864","2865","2866","2906","2908","2909","2910","2912","2913","2914","2916","2917","2918","2920","2921","2922","2924","2925","2926","2928","2929","2930","2932","2933","2934","2936","2937","2938","2940","2941","2942","2944","2946","2948","2950","2951","2952","2954","2955","2956","2958","2959","2960","2962","2963","2964","2966","2967","2968","2970","2971","2972","2974","2975","2976","2978","2979","2980","2982","2983","2984","2986","2987","2988","2990","2991","2995","2999","3002","3003","3004","3006","3007","3008","3011","3014","3015","3017","3018","3019","3075","3076","3079","3080","3083","3084","3087","3088","3091","3092","3095","3096","3099","3100","3103","3104","3107","3108","3116","3119","3120","3123","3124","3127","3128","3131","3132","3135","3136","3139","3140","3143","3144","3147","3148","3153","3154","3157","3158","3161","3162","3165","3166","3169","3170","3173","3174","3181","3182","3282","3316","3379","3393","3416","SpecialPUASymbols","63721","63193","63720","63194","63722","63195","63729","63730","63731","63740","63741","63742","63726","63727","63728","63737","63738","63739","63723","63724","63725","63734","63735","63736","MacStandardGlyphOrdering","¨","¯","´","µ","¸","Ĳ","ĳ","Ŀ","ŀ","ŉ","ſ","Ǆ","ǅ","ǆ","Ǉ","ǈ","ǉ","Ǌ","ǋ","ǌ","Ǳ","ǲ","ǳ","˘","˙","˚","˛","˜","˝","ͺ","΄","ϐ","ϑ","ϒ","ϕ","ϖ","ϰ","ϱ","ϲ","ϴ","ϵ","Ϲ","և","ٵ","ٶ","ٷ","ٸ","ำ","ຳ","ໜ","ໝ","ཷ","ཹ","ẚ","᾽","᾿","῀","῾"," "," "," "," "," "," "," "," ","‗","․","‥","…","″","‴","‶","‷","‼","‾","⁇","⁈","⁉","⁗"," ","₨","℀","℁","℃","℅","℆","ℇ","℉","№","℡","ℵ","ℶ","ℷ","ℸ","℻","Ⅰ","Ⅱ","Ⅲ","Ⅳ","Ⅴ","Ⅵ","Ⅶ","Ⅷ","Ⅸ","Ⅹ","Ⅺ","Ⅻ","Ⅼ","Ⅽ","Ⅾ","Ⅿ","ⅰ","ⅱ","ⅲ","ⅳ","ⅴ","ⅵ","ⅶ","ⅷ","ⅸ","ⅹ","ⅺ","ⅻ","ⅼ","ⅽ","ⅾ","ⅿ","∬","∭","∯","∰","⑴","⑵","⑶","⑷","⑸","⑹","⑺","⑻","⑼","⑽","⑾","⑿","⒀","⒁","⒂","⒃","⒄","⒅","⒆","⒇","⒈","⒉","⒊","⒋","⒌","⒍","⒎","⒏","⒐","⒑","⒒","⒓","⒔","⒕","⒖","⒗","⒘","⒙","⒚","⒛","⒜","⒝","⒞","⒟","⒠","⒡","⒢","⒣","⒤","⒥","⒦","⒧","⒨","⒩","⒪","⒫","⒬","⒭","⒮","⒯","⒰","⒱","⒲","⒳","⒴","⒵","⨌","⩴","⩵","⩶","⺟","⻳","⼀","⼁","⼂","⼃","⼄","⼅","⼆","⼇","⼈","⼉","⼊","⼋","⼌","⼍","⼎","⼏","⼐","⼑","⼒","⼓","⼔","⼕","⼖","⼗","⼘","⼙","⼚","⼛","⼜","⼝","⼞","⼟","⼠","⼡","⼢","⼣","⼤","⼥","⼦","⼧","⼨","⼩","⼪","⼫","⼬","⼭","⼮","⼯","⼰","⼱","⼲","⼳","⼴","⼵","⼶","⼷","⼸","⼹","⼺","⼻","⼼","⼽","⼾","⼿","⽀","⽁","⽂","⽃","⽄","⽅","⽆","⽇","⽈","⽉","⽊","⽋","⽌","⽍","⽎","⽏","⽐","⽑","⽒","⽓","⽔","⽕","⽖","⽗","⽘","⽙","⽚","⽛","⽜","⽝","⽞","⽟","⽠","⽡","⽢","⽣","⽤","⽥","⽦","⽧","⽨","⽩","⽪","⽫","⽬","⽭","⽮","⽯","⽰","⽱","⽲","⽳","⽴","⽵","⽶","⽷","⽸","⽹","⽺","⽻","⽼","⽽","⽾","⽿","⾀","⾁","⾂","⾃","⾄","⾅","⾆","⾇","⾈","⾉","⾊","⾋","⾌","⾍","⾎","⾏","⾐","⾑","⾒","⾓","⾔","⾕","⾖","⾗","⾘","⾙","⾚","⾛","⾜","⾝","⾞","⾟","⾠","⾡","⾢","⾣","⾤","⾥","⾦","⾧","⾨","⾩","⾪","⾫","⾬","⾭","⾮","⾯","⾰","⾱","⾲","⾳","⾴","⾵","⾶","⾷","⾸","⾹","⾺","⾻","⾼","⾽","⾾","⾿","⿀","⿁","⿂","⿃","⿄","⿅","⿆","⿇","⿈","⿉","⿊","⿋","⿌","⿍","⿎","⿏","⿐","⿑","⿒","⿓","⿔","⿕","〶","〸","〹","〺","゛","゜","ㄱ","ㄲ","ㄳ","ㄴ","ㄵ","ㄶ","ㄷ","ㄸ","ㄹ","ㄺ","ㄻ","ㄼ","ㄽ","ㄾ","ㄿ","ㅀ","ㅁ","ㅂ","ㅃ","ㅄ","ㅅ","ㅆ","ㅇ","ㅈ","ㅉ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ","ㅏ","ㅐ","ㅑ","ㅒ","ㅓ","ㅔ","ㅕ","ㅖ","ㅗ","ㅘ","ㅙ","ㅚ","ㅛ","ㅜ","ㅝ","ㅞ","ㅟ","ㅠ","ㅡ","ㅢ","ㅣ","ㅤ","ㅥ","ㅦ","ㅧ","ㅨ","ㅩ","ㅪ","ㅫ","ㅬ","ㅭ","ㅮ","ㅯ","ㅰ","ㅱ","ㅲ","ㅳ","ㅴ","ㅵ","ㅶ","ㅷ","ㅸ","ㅹ","ㅺ","ㅻ","ㅼ","ㅽ","ㅾ","ㅿ","ㆀ","ㆁ","ㆂ","ㆃ","ㆄ","ㆅ","ㆆ","ㆇ","ㆈ","ㆉ","ㆊ","ㆋ","ㆌ","ㆍ","ㆎ","㈀","㈁","㈂","㈃","㈄","㈅","㈆","㈇","㈈","㈉","㈊","㈋","㈌","㈍","㈎","㈏","㈐","㈑","㈒","㈓","㈔","㈕","㈖","㈗","㈘","㈙","㈚","㈛","㈜","㈝","㈞","㈠","㈡","㈢","㈣","㈤","㈥","㈦","㈧","㈨","㈩","㈪","㈫","㈬","㈭","㈮","㈯","㈰","㈱","㈲","㈳","㈴","㈵","㈶","㈷","㈸","㈹","㈺","㈻","㈼","㈽","㈾","㈿","㉀","㉁","㉂","㉃","㋀","㋁","㋂","㋃","㋄","㋅","㋆","㋇","㋈","㋉","㋊","㋋","㍘","㍙","㍚","㍛","㍜","㍝","㍞","㍟","㍠","㍡","㍢","㍣","㍤","㍥","㍦","㍧","㍨","㍩","㍪","㍫","㍬","㍭","㍮","㍯","㍰","㏠","㏡","㏢","㏣","㏤","㏥","㏦","㏧","㏨","㏩","㏪","㏫","㏬","㏭","㏮","㏯","㏰","㏱","㏲","㏳","㏴","㏵","㏶","㏷","㏸","㏹","㏺","㏻","㏼","㏽","㏾","ﬀ","ﬁ","ﬂ","ﬃ","ﬄ","ﬅ","ﬆ","ﬓ","ﬔ","ﬕ","ﬖ","ﬗ","ﭏ","ﭐ","ﭑ","ﭒ","ﭓ","ﭔ","ﭕ","ﭖ","ﭗ","ﭘ","ﭙ","ﭚ","ﭛ","ﭜ","ﭝ","ﭞ","ﭟ","ﭠ","ﭡ","ﭢ","ﭣ","ﭤ","ﭥ","ﭦ","ﭧ","ﭨ","ﭩ","ﭪ","ﭫ","ﭬ","ﭭ","ﭮ","ﭯ","ﭰ","ﭱ","ﭲ","ﭳ","ﭴ","ﭵ","ﭶ","ﭷ","ﭸ","ﭹ","ﭺ","ﭻ","ﭼ","ﭽ","ﭾ","ﭿ","ﮀ","ﮁ","ﮂ","ﮃ","ﮄ","ﮅ","ﮆ","ﮇ","ﮈ","ﮉ","ﮊ","ﮋ","ﮌ","ﮍ","ﮎ","ﮏ","ﮐ","ﮑ","ﮒ","ﮓ","ﮔ","ﮕ","ﮖ","ﮗ","ﮘ","ﮙ","ﮚ","ﮛ","ﮜ","ﮝ","ﮞ","ﮟ","ﮠ","ﮡ","ﮢ","ﮣ","ﮤ","ﮥ","ﮦ","ﮧ","ﮨ","ﮩ","ﮪ","ﮫ","ﮬ","ﮭ","ﮮ","ﮯ","ﮰ","ﮱ","ﯓ","ﯔ","ﯕ","ﯖ","ﯗ","ﯘ","ﯙ","ﯚ","ﯛ","ﯜ","ﯝ","ﯞ","ﯟ","ﯠ","ﯡ","ﯢ","ﯣ","ﯤ","ﯥ","ﯦ","ﯧ","ﯨ","ﯩ","ﯪ","ﯫ","ﯬ","ﯭ","ﯮ","ﯯ","ﯰ","ﯱ","ﯲ","ﯳ","ﯴ","ﯵ","ﯶ","ﯷ","ﯸ","ﯹ","ﯺ","ﯻ","ﯼ","ﯽ","ﯾ","ﯿ","ﰀ","ﰁ","ﰂ","ﰃ","ﰄ","ﰅ","ﰆ","ﰇ","ﰈ","ﰉ","ﰊ","ﰋ","ﰌ","ﰍ","ﰎ","ﰏ","ﰐ","ﰑ","ﰒ","ﰓ","ﰔ","ﰕ","ﰖ","ﰗ","ﰘ","ﰙ","ﰚ","ﰛ","ﰜ","ﰝ","ﰞ","ﰟ","ﰠ","ﰡ","ﰢ","ﰣ","ﰤ","ﰥ","ﰦ","ﰧ","ﰨ","ﰩ","ﰪ","ﰫ","ﰬ","ﰭ","ﰮ","ﰯ","ﰰ","ﰱ","ﰲ","ﰳ","ﰴ","ﰵ","ﰶ","ﰷ","ﰸ","ﰹ","ﰺ","ﰻ","ﰼ","ﰽ","ﰾ","ﰿ","ﱀ","ﱁ","ﱂ","ﱃ","ﱄ","ﱅ","ﱆ","ﱇ","ﱈ","ﱉ","ﱊ","ﱋ","ﱌ","ﱍ","ﱎ","ﱏ","ﱐ","ﱑ","ﱒ","ﱓ","ﱔ","ﱕ","ﱖ","ﱗ","ﱘ","ﱙ","ﱚ","ﱛ","ﱜ","ﱝ","ﱞ","ﱟ","ﱠ","ﱡ","ﱢ","ﱣ","ﱤ","ﱥ","ﱦ","ﱧ","ﱨ","ﱩ","ﱪ","ﱫ","ﱬ","ﱭ","ﱮ","ﱯ","ﱰ","ﱱ","ﱲ","ﱳ","ﱴ","ﱵ","ﱶ","ﱷ","ﱸ","ﱹ","ﱺ","ﱻ","ﱼ","ﱽ","ﱾ","ﱿ","ﲀ","ﲁ","ﲂ","ﲃ","ﲄ","ﲅ","ﲆ","ﲇ","ﲈ","ﲉ","ﲊ","ﲋ","ﲌ","ﲍ","ﲎ","ﲏ","ﲐ","ﲑ","ﲒ","ﲓ","ﲔ","ﲕ","ﲖ","ﲗ","ﲘ","ﲙ","ﲚ","ﲛ","ﲜ","ﲝ","ﲞ","ﲟ","ﲠ","ﲡ","ﲢ","ﲣ","ﲤ","ﲥ","ﲦ","ﲧ","ﲨ","ﲩ","ﲪ","ﲫ","ﲬ","ﲭ","ﲮ","ﲯ","ﲰ","ﲱ","ﲲ","ﲳ","ﲴ","ﲵ","ﲶ","ﲷ","ﲸ","ﲹ","ﲺ","ﲻ","ﲼ","ﲽ","ﲾ","ﲿ","ﳀ","ﳁ","ﳂ","ﳃ","ﳄ","ﳅ","ﳆ","ﳇ","ﳈ","ﳉ","ﳊ","ﳋ","ﳌ","ﳍ","ﳎ","ﳏ","ﳐ","ﳑ","ﳒ","ﳓ","ﳔ","ﳕ","ﳖ","ﳗ","ﳘ","ﳙ","ﳚ","ﳛ","ﳜ","ﳝ","ﳞ","ﳟ","ﳠ","ﳡ","ﳢ","ﳣ","ﳤ","ﳥ","ﳦ","ﳧ","ﳨ","ﳩ","ﳪ","ﳫ","ﳬ","ﳭ","ﳮ","ﳯ","ﳰ","ﳱ","ﳲ","ﳳ","ﳴ","ﳵ","ﳶ","ﳷ","ﳸ","ﳹ","ﳺ","ﳻ","ﳼ","ﳽ","ﳾ","ﳿ","ﴀ","ﴁ","ﴂ","ﴃ","ﴄ","ﴅ","ﴆ","ﴇ","ﴈ","ﴉ","ﴊ","ﴋ","ﴌ","ﴍ","ﴎ","ﴏ","ﴐ","ﴑ","ﴒ","ﴓ","ﴔ","ﴕ","ﴖ","ﴗ","ﴘ","ﴙ","ﴚ","ﴛ","ﴜ","ﴝ","ﴞ","ﴟ","ﴠ","ﴡ","ﴢ","ﴣ","ﴤ","ﴥ","ﴦ","ﴧ","ﴨ","ﴩ","ﴪ","ﴫ","ﴬ","ﴭ","ﴮ","ﴯ","ﴰ","ﴱ","ﴲ","ﴳ","ﴴ","ﴵ","ﴶ","ﴷ","ﴸ","ﴹ","ﴺ","ﴻ","ﴼ","ﴽ","ﵐ","ﵑ","ﵒ","ﵓ","ﵔ","ﵕ","ﵖ","ﵗ","ﵘ","ﵙ","ﵚ","ﵛ","ﵜ","ﵝ","ﵞ","ﵟ","ﵠ","ﵡ","ﵢ","ﵣ","ﵤ","ﵥ","ﵦ","ﵧ","ﵨ","ﵩ","ﵪ","ﵫ","ﵬ","ﵭ","ﵮ","ﵯ","ﵰ","ﵱ","ﵲ","ﵳ","ﵴ","ﵵ","ﵶ","ﵷ","ﵸ","ﵹ","ﵺ","ﵻ","ﵼ","ﵽ","ﵾ","ﵿ","ﶀ","ﶁ","ﶂ","ﶃ","ﶄ","ﶅ","ﶆ","ﶇ","ﶈ","ﶉ","ﶊ","ﶋ","ﶌ","ﶍ","ﶎ","ﶏ","ﶒ","ﶓ","ﶔ","ﶕ","ﶖ","ﶗ","ﶘ","ﶙ","ﶚ","ﶛ","ﶜ","ﶝ","ﶞ","ﶟ","ﶠ","ﶡ","ﶢ","ﶣ","ﶤ","ﶥ","ﶦ","ﶧ","ﶨ","ﶩ","ﶪ","ﶫ","ﶬ","ﶭ","ﶮ","ﶯ","ﶰ","ﶱ","ﶲ","ﶳ","ﶴ","ﶵ","ﶶ","ﶷ","ﶸ","ﶹ","ﶺ","ﶻ","ﶼ","ﶽ","ﶾ","ﶿ","ﷀ","ﷁ","ﷂ","ﷃ","ﷄ","ﷅ","ﷆ","ﷇ","﹉","﹊","﹋","﹌","﹍","﹎","﹏","ﺀ","ﺁ","ﺂ","ﺃ","ﺄ","ﺅ","ﺆ","ﺇ","ﺈ","ﺉ","ﺊ","ﺋ","ﺌ","ﺍ","ﺎ","ﺏ","ﺐ","ﺑ","ﺒ","ﺓ","ﺔ","ﺕ","ﺖ","ﺗ","ﺘ","ﺙ","ﺚ","ﺛ","ﺜ","ﺝ","ﺞ","ﺟ","ﺠ","ﺡ","ﺢ","ﺣ","ﺤ","ﺥ","ﺦ","ﺧ","ﺨ","ﺩ","ﺪ","ﺫ","ﺬ","ﺭ","ﺮ","ﺯ","ﺰ","ﺱ","ﺲ","ﺳ","ﺴ","ﺵ","ﺶ","ﺷ","ﺸ","ﺹ","ﺺ","ﺻ","ﺼ","ﺽ","ﺾ","ﺿ","ﻀ","ﻁ","ﻂ","ﻃ","ﻄ","ﻅ","ﻆ","ﻇ","ﻈ","ﻉ","ﻊ","ﻋ","ﻌ","ﻍ","ﻎ","ﻏ","ﻐ","ﻑ","ﻒ","ﻓ","ﻔ","ﻕ","ﻖ","ﻗ","ﻘ","ﻙ","ﻚ","ﻛ","ﻜ","ﻝ","ﻞ","ﻟ","ﻠ","ﻡ","ﻢ","ﻣ","ﻤ","ﻥ","ﻦ","ﻧ","ﻨ","ﻩ","ﻪ","ﻫ","ﻬ","ﻭ","ﻮ","ﻯ","ﻰ","ﻱ","ﻲ","ﻳ","ﻴ","ﻵ","ﻶ","ﻷ","ﻸ","ﻹ","ﻺ","ﻻ","ﻼ","Glyph","operatorListId","matchesForCache","IdentityToUnicodeMap","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","tables","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","table","tableName","numTables","tableOffsets","searchParams","checksum","addTable","tag","sizes","glyphCache","isSymbolicFont","buildToUnicode","toFontChar","missingFile","isStandardFont","black","remeasure","unicodeCharCode","symbols","GlyphsUnicode","dingbats","DingbatsGlyphsUnicode","notCidFont","loading","isTrueTypeFile","mimetype","cff","CFFFont","Type1Font","adjustWidths","convert","checkAndRepair","isOpenType","seacMap","int16","string16","safeString16","adjustMapping","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","createCmapTable","codes","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","bias","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","ascentScaled","typoAscent","typoDescent","winAscent","winDescent","createPostTable","createNameTable","proto","strings","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","readTableEntry","previousPosition","sanitizeGlyph","source","sourceStart","sourceEnd","destStart","hintsValid","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","repeat","glyphDataLength","sanitizeTTProgram","ttContext","funcId","pc","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","stackDelta","TTOpsStackDeltas","NaN","newLength","foldTTTable","hasGlyph","missingGlyphs","cffFile","VALID_TABLES","ttf","entrySelector","readOpenTypeHeader","OS/2","head","hhea","hmtx","maxp","post","isTrueType","loca","fpgm","prep","numGlyphs","maxFunctionDefs","dupFirstEntry","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","int32","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","startOffset","writeOffset","missingGlyphData","endOffset","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","maxpNumGlyphs","valid","glyphNameIndexes","customNames","stringLength","readPostScriptTable","isCidToGidMapEmpty","cid","cmapTable","segment","potentialTable","canBreak","platformId","encodingId","useTable","mappings","hasShortCmap","format","segIndex","segments","delta","offsetsCount","rangeOffset","offsetIndex","offsets","firstCode","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","CFFParser","compiler","CFFCompiler","namePrototype","numRecords","stringsStart","records","platform","language","record","nameIndex","readNameTable","builder","tableTag","getCharCodes","charCodes","createCharCode","mapping","getGlyphMapping","seacs","charset","getCharset","seac","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","charstring","ucs2CMapName","ucs2CMap","ucs2","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","mapSpecialUnicodeValues","charsCache","charsCacheKey","Type1CharString","lsb","flexing","COMMAND_MAP","encoded","subrs","wx","sbx","subrNumber","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","Type1Parser","isHexDigit","decrypt","discardNumber","decrypted","isSpecial","encrypted","isBinary","EEXEC_ENCRYPT_KEY","maybeLength","digit1","digit2","decryptAscii","nextChar","readNumberArray","getToken","readInt","readBoolean","currentChar","comment","extractFontProgram","lenIV","program","privateData","blueArray","charString","extractFontHeader","encodingArg","fontBBox","CFFStandardStrings","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","eexecBlock","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","CFF","CFFHeader","CFFTopDict","setByName","CFFStrings","globalSubrIndex","CFFIndex","charsetArray","CFFCharset","charStringsIndex","charStrings","privateDict","CFFPrivateDict","field","subrIndex","subrsIndex","charsets","isCIDFont","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackFn","parseHeader","parseIndex","endPos","topDictIndex","stringIndex","topDictParsed","parseDict","createDict","parseNameIndex","parseStringIndex","parsePrivateDict","hasName","charStringOffset","getByName","charStringsAndSeacs","parseCharStrings","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","operands","cffIndex","offsetSize","startPos","offsetStart","offsetEnd","cffDict","pair","setByKey","stackSize","hints","firstStackClearing","validationCommand","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","CFFCharsetPredefinedTypes","ISO_ADOBE","EXPERT","EXPERT_SUBSET","raw","predefined","dataStart","glyphsCount","rangesCount","gid","left","dataEnd","supplementsCount","sid","readSupplement","CFFEncoding","fdIndex","CFFFDSelect","objects","CFFDict","keyToNameMap","nameToKeyMap","defaults","types","opcodes","values","createTables","layout","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset2","offset3","offset4","compileHeader","compileNameIndex","subDict","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","epsilon","nibbles","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","navigator","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","glyphIndex","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","subrCode","stackClean","stems","subrsBias","x0","y0","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","parseGlyfTable","AE","AEacute","AEmacron","AEsmall","Aacute","Aacutesmall","Abreve","Abreveacute","Abrevecyrillic","Abrevedotbelow","Abrevegrave","Abrevehookabove","Abrevetilde","Acaron","Acircle","Acircumflex","Acircumflexacute","Acircumflexdotbelow","Acircumflexgrave","Acircumflexhookabove","Acircumflexsmall","Acircumflextilde","Acute","Acutesmall","Acyrillic","Adblgrave","Adieresis","Adieresiscyrillic","Adieresismacron","Adieresissmall","Adotbelow","Adotmacron","Agrave","Agravesmall","Ahookabove","Aiecyrillic","Ainvertedbreve","Alpha","Alphatonos","Amacron","Amonospace","Aogonek","Aring","Aringacute","Aringbelow","Aringsmall","Asmall","Atilde","Atildesmall","Aybarmenian","Bcircle","Bdotaccent","Bdotbelow","Becyrillic","Benarmenian","Beta","Bhook","Blinebelow","Bmonospace","Brevesmall","Bsmall","Btopbar","Caarmenian","Cacute","Caron","Caronsmall","Ccaron","Ccedilla","Ccedillaacute","Ccedillasmall","Ccircle","Ccircumflex","Cdot","Cdotaccent","Cedillasmall","Chaarmenian","Cheabkhasiancyrillic","Checyrillic","Chedescenderabkhasiancyrillic","Chedescendercyrillic","Chedieresiscyrillic","Cheharmenian","Chekhakassiancyrillic","Cheverticalstrokecyrillic","Chi","Chook","Circumflexsmall","Cmonospace","Coarmenian","Csmall","D","DZ","DZcaron","Daarmenian","Dafrican","Dcaron","Dcedilla","Dcircle","Dcircumflexbelow","Dcroat","Ddotaccent","Ddotbelow","Decyrillic","Deicoptic","Delta","Deltagreek","Dhook","Dieresis","DieresisAcute","DieresisGrave","Dieresissmall","Digammagreek","Djecyrillic","Dlinebelow","Dmonospace","Dotaccentsmall","Dslash","Dsmall","Dtopbar","Dz","Dzcaron","Dzeabkhasiancyrillic","Dzecyrillic","Dzhecyrillic","E","Eacute","Eacutesmall","Ebreve","Ecaron","Ecedillabreve","Echarmenian","Ecircle","Ecircumflex","Ecircumflexacute","Ecircumflexbelow","Ecircumflexdotbelow","Ecircumflexgrave","Ecircumflexhookabove","Ecircumflexsmall","Ecircumflextilde","Ecyrillic","Edblgrave","Edieresis","Edieresissmall","Edot","Edotaccent","Edotbelow","Efcyrillic","Egrave","Egravesmall","Eharmenian","Ehookabove","Eightroman","Einvertedbreve","Eiotifiedcyrillic","Elcyrillic","Elevenroman","Emacron","Emacronacute","Emacrongrave","Emcyrillic","Emonospace","Encyrillic","Endescendercyrillic","Eng","Enghecyrillic","Enhookcyrillic","Eogonek","Eopen","Epsilon","Epsilontonos","Ercyrillic","Ereversed","Ereversedcyrillic","Escyrillic","Esdescendercyrillic","Esh","Esmall","Eta","Etarmenian","Etatonos","Eth","Ethsmall","Etilde","Etildebelow","Euro","Ezh","Ezhcaron","Ezhreversed","Fcircle","Fdotaccent","Feharmenian","Feicoptic","Fhook","Fitacyrillic","Fiveroman","Fmonospace","Fourroman","Fsmall","GBsquare","Gacute","Gammaafrican","Gangiacoptic","Gbreve","Gcaron","Gcedilla","Gcircle","Gcircumflex","Gcommaaccent","Gdot","Gdotaccent","Gecyrillic","Ghadarmenian","Ghemiddlehookcyrillic","Ghestrokecyrillic","Gheupturncyrillic","Ghook","Gimarmenian","Gjecyrillic","Gmacron","Gmonospace","Grave","Gravesmall","Gsmall","Gsmallhook","Gstroke","H","H18533","H18543","H18551","H22073","HPsquare","Haabkhasiancyrillic","Hadescendercyrillic","Hardsigncyrillic","Hbar","Hbrevebelow","Hcedilla","Hcircle","Hcircumflex","Hdieresis","Hdotaccent","Hdotbelow","Hmonospace","Hoarmenian","Horicoptic","Hsmall","Hungarumlaut","Hungarumlautsmall","Hzsquare","I","IAcyrillic","IJ","IUcyrillic","Iacute","Iacutesmall","Ibreve","Icaron","Icircle","Icircumflex","Icircumflexsmall","Icyrillic","Idblgrave","Idieresis","Idieresisacute","Idieresiscyrillic","Idieresissmall","Idot","Idotaccent","Idotbelow","Iebrevecyrillic","Iecyrillic","Ifraktur","Igrave","Igravesmall","Ihookabove","Iicyrillic","Iinvertedbreve","Iishortcyrillic","Imacron","Imacroncyrillic","Imonospace","Iniarmenian","Iocyrillic","Iogonek","Iota","Iotaafrican","Iotadieresis","Iotatonos","Ismall","Istroke","Itilde","Itildebelow","Izhitsacyrillic","Izhitsadblgravecyrillic","Jaarmenian","Jcircle","Jcircumflex","Jecyrillic","Jheharmenian","Jmonospace","Jsmall","KBsquare","KKsquare","Kabashkircyrillic","Kacute","Kacyrillic","Kadescendercyrillic","Kahookcyrillic","Kappa","Kastrokecyrillic","Kaverticalstrokecyrillic","Kcaron","Kcedilla","Kcircle","Kcommaaccent","Kdotbelow","Keharmenian","Kenarmenian","Khacyrillic","Kheicoptic","Khook","Kjecyrillic","Klinebelow","Kmonospace","Koppacyrillic","Koppagreek","Ksicyrillic","Ksmall","LJ","LL","Lacute","Lambda","Lcaron","Lcedilla","Lcircle","Lcircumflexbelow","Lcommaaccent","Ldot","Ldotaccent","Ldotbelow","Ldotbelowmacron","Liwnarmenian","Lj","Ljecyrillic","Llinebelow","Lmonospace","Lslash","Lslashsmall","Lsmall","MBsquare","Macron","Macronsmall","Macute","Mcircle","Mdotaccent","Mdotbelow","Menarmenian","Mmonospace","Msmall","Mturned","Mu","NJ","Nacute","Ncaron","Ncedilla","Ncircle","Ncircumflexbelow","Ncommaaccent","Ndotaccent","Ndotbelow","Nhookleft","Nineroman","Nj","Njecyrillic","Nlinebelow","Nmonospace","Nowarmenian","Nsmall","Ntilde","Ntildesmall","Nu","O","OE","OEsmall","Oacute","Oacutesmall","Obarredcyrillic","Obarreddieresiscyrillic","Obreve","Ocaron","Ocenteredtilde","Ocircle","Ocircumflex","Ocircumflexacute","Ocircumflexdotbelow","Ocircumflexgrave","Ocircumflexhookabove","Ocircumflexsmall","Ocircumflextilde","Ocyrillic","Odblacute","Odblgrave","Odieresis","Odieresiscyrillic","Odieresissmall","Odotbelow","Ogoneksmall","Ograve","Ogravesmall","Oharmenian","Ohm","Ohookabove","Ohorn","Ohornacute","Ohorndotbelow","Ohorngrave","Ohornhookabove","Ohorntilde","Ohungarumlaut","Oi","Oinvertedbreve","Omacron","Omacronacute","Omacrongrave","Omega","Omegacyrillic","Omegagreek","Omegaroundcyrillic","Omegatitlocyrillic","Omegatonos","Omicron","Omicrontonos","Omonospace","Oneroman","Oogonek","Oogonekmacron","Oopen","Oslash","Oslashacute","Oslashsmall","Osmall","Ostrokeacute","Otcyrillic","Otilde","Otildeacute","Otildedieresis","Otildesmall","P","Pacute","Pcircle","Pdotaccent","Pecyrillic","Peharmenian","Pemiddlehookcyrillic","Phi","Phook","Pi","Piwrarmenian","Pmonospace","Psi","Psicyrillic","Psmall","Qcircle","Qmonospace","Qsmall","R","Raarmenian","Racute","Rcaron","Rcedilla","Rcircle","Rcommaaccent","Rdblgrave","Rdotaccent","Rdotbelow","Rdotbelowmacron","Reharmenian","Rfraktur","Rho","Ringsmall","Rinvertedbreve","Rlinebelow","Rmonospace","Rsmall","Rsmallinverted","Rsmallinvertedsuperior","SF010000","SF020000","SF030000","SF040000","SF050000","SF060000","SF070000","SF080000","SF090000","SF100000","SF110000","SF190000","SF200000","SF210000","SF220000","SF230000","SF240000","SF250000","SF260000","SF270000","SF280000","SF360000","SF370000","SF380000","SF390000","SF400000","SF410000","SF420000","SF430000","SF440000","SF450000","SF460000","SF470000","SF480000","SF490000","SF500000","SF510000","SF520000","SF530000","SF540000","Sacute","Sacutedotaccent","Sampigreek","Scaron","Scarondotaccent","Scaronsmall","Scedilla","Schwa","Schwacyrillic","Schwadieresiscyrillic","Scircle","Scircumflex","Scommaaccent","Sdotaccent","Sdotbelow","Sdotbelowdotaccent","Seharmenian","Sevenroman","Shaarmenian","Shacyrillic","Shchacyrillic","Sheicoptic","Shhacyrillic","Shimacoptic","Sigma","Sixroman","Smonospace","Softsigncyrillic","Ssmall","Stigmagreek","T","Tau","Tbar","Tcaron","Tcedilla","Tcircle","Tcircumflexbelow","Tcommaaccent","Tdotaccent","Tdotbelow","Tecyrillic","Tedescendercyrillic","Tenroman","Tetsecyrillic","Theta","Thook","Thorn","Thornsmall","Threeroman","Tildesmall","Tiwnarmenian","Tlinebelow","Tmonospace","Toarmenian","Tonefive","Tonesix","Tonetwo","Tretroflexhook","Tsecyrillic","Tshecyrillic","Tsmall","Twelveroman","Tworoman","U","Uacute","Uacutesmall","Ubreve","Ucaron","Ucircle","Ucircumflex","Ucircumflexbelow","Ucircumflexsmall","Ucyrillic","Udblacute","Udblgrave","Udieresis","Udieresisacute","Udieresisbelow","Udieresiscaron","Udieresiscyrillic","Udieresisgrave","Udieresismacron","Udieresissmall","Udotbelow","Ugrave","Ugravesmall","Uhookabove","Uhorn","Uhornacute","Uhorndotbelow","Uhorngrave","Uhornhookabove","Uhorntilde","Uhungarumlaut","Uhungarumlautcyrillic","Uinvertedbreve","Ukcyrillic","Umacron","Umacroncyrillic","Umacrondieresis","Umonospace","Uogonek","Upsilon","Upsilon1","Upsilonacutehooksymbolgreek","Upsilonafrican","Upsilondieresis","Upsilondieresishooksymbolgreek","Upsilonhooksymbol","Upsilontonos","Uring","Ushortcyrillic","Usmall","Ustraightcyrillic","Ustraightstrokecyrillic","Utilde","Utildeacute","Utildebelow","V","Vcircle","Vdotbelow","Vecyrillic","Vewarmenian","Vhook","Vmonospace","Voarmenian","Vsmall","Vtilde","Wacute","Wcircle","Wcircumflex","Wdieresis","Wdotaccent","Wdotbelow","Wgrave","Wmonospace","Wsmall","Xcircle","Xdieresis","Xdotaccent","Xeharmenian","Xi","Xmonospace","Xsmall","Yacute","Yacutesmall","Yatcyrillic","Ycircle","Ycircumflex","Ydieresis","Ydieresissmall","Ydotaccent","Ydotbelow","Yericyrillic","Yerudieresiscyrillic","Ygrave","Yhook","Yhookabove","Yiarmenian","Yicyrillic","Yiwnarmenian","Ymonospace","Ysmall","Ytilde","Yusbigcyrillic","Yusbigiotifiedcyrillic","Yuslittlecyrillic","Yuslittleiotifiedcyrillic","Zaarmenian","Zacute","Zcaron","Zcaronsmall","Zcircle","Zcircumflex","Zdot","Zdotaccent","Zdotbelow","Zecyrillic","Zedescendercyrillic","Zedieresiscyrillic","Zeta","Zhearmenian","Zhebrevecyrillic","Zhecyrillic","Zhedescendercyrillic","Zhedieresiscyrillic","Zlinebelow","Zmonospace","Zsmall","Zstroke","aabengali","aacute","aadeva","aagujarati","aagurmukhi","aamatragurmukhi","aarusquare","aavowelsignbengali","aavowelsigndeva","aavowelsigngujarati","abbreviationmarkarmenian","abbreviationsigndeva","abengali","abopomofo","abreve","abreveacute","abrevecyrillic","abrevedotbelow","abrevegrave","abrevehookabove","abrevetilde","acaron","acircle","acircumflex","acircumflexacute","acircumflexdotbelow","acircumflexgrave","acircumflexhookabove","acircumflextilde","acute","acutebelowcmb","acutecmb","acutecomb","acutedeva","acutelowmod","acutetonecmb","acyrillic","adblgrave","addakgurmukhi","adeva","adieresis","adieresiscyrillic","adieresismacron","adotbelow","adotmacron","ae","aeacute","aekorean","aemacron","afii00208","afii08941","afii10017","afii10018","afii10019","afii10020","afii10021","afii10022","afii10023","afii10024","afii10025","afii10026","afii10027","afii10028","afii10029","afii10030","afii10031","afii10032","afii10033","afii10034","afii10035","afii10036","afii10037","afii10038","afii10039","afii10040","afii10041","afii10042","afii10043","afii10044","afii10045","afii10046","afii10047","afii10048","afii10049","afii10050","afii10051","afii10052","afii10053","afii10054","afii10055","afii10056","afii10057","afii10058","afii10059","afii10060","afii10061","afii10062","afii10063","afii10064","afii10065","afii10066","afii10067","afii10068","afii10069","afii10070","afii10071","afii10072","afii10073","afii10074","afii10075","afii10076","afii10077","afii10078","afii10079","afii10080","afii10081","afii10082","afii10083","afii10084","afii10085","afii10086","afii10087","afii10088","afii10089","afii10090","afii10091","afii10092","afii10093","afii10094","afii10095","afii10096","afii10097","afii10098","afii10099","afii10100","afii10101","afii10102","afii10103","afii10104","afii10105","afii10106","afii10107","afii10108","afii10109","afii10110","afii10145","afii10146","afii10147","afii10148","afii10192","afii10193","afii10194","afii10195","afii10196","afii10831","afii10832","afii10846","afii299","afii300","afii301","afii57381","afii57388","afii57392","afii57393","afii57394","afii57395","afii57396","afii57397","afii57398","afii57399","afii57400","afii57401","afii57403","afii57407","afii57409","afii57410","afii57411","afii57412","afii57413","afii57414","afii57415","afii57416","afii57417","afii57418","afii57419","afii57420","afii57421","afii57422","afii57423","afii57424","afii57425","afii57426","afii57427","afii57428","afii57429","afii57430","afii57431","afii57432","afii57433","afii57434","afii57440","afii57441","afii57442","afii57443","afii57444","afii57445","afii57446","afii57448","afii57449","afii57450","afii57451","afii57452","afii57453","afii57454","afii57455","afii57456","afii57457","afii57458","afii57470","afii57505","afii57506","afii57507","afii57508","afii57509","afii57511","afii57512","afii57513","afii57514","afii57519","afii57534","afii57636","afii57645","afii57658","afii57664","afii57665","afii57666","afii57667","afii57668","afii57669","afii57670","afii57671","afii57672","afii57673","afii57674","afii57675","afii57676","afii57677","afii57678","afii57679","afii57680","afii57681","afii57682","afii57683","afii57684","afii57685","afii57686","afii57687","afii57688","afii57689","afii57690","afii57694","afii57695","afii57700","afii57705","afii57716","afii57717","afii57718","afii57723","afii57793","afii57794","afii57795","afii57796","afii57797","afii57798","afii57799","afii57800","afii57801","afii57802","afii57803","afii57804","afii57806","afii57807","afii57839","afii57841","afii57842","afii57929","afii61248","afii61289","afii61352","afii61573","afii61574","afii61575","afii61664","afii63167","afii64937","agrave","agujarati","agurmukhi","ahiragana","ahookabove","aibengali","aibopomofo","aideva","aiecyrillic","aigujarati","aigurmukhi","aimatragurmukhi","ainarabic","ainfinalarabic","aininitialarabic","ainmedialarabic","ainvertedbreve","aivowelsignbengali","aivowelsigndeva","aivowelsigngujarati","akatakana","akatakanahalfwidth","akorean","alef","alefarabic","alefdageshhebrew","aleffinalarabic","alefhamzaabovearabic","alefhamzaabovefinalarabic","alefhamzabelowarabic","alefhamzabelowfinalarabic","alefhebrew","aleflamedhebrew","alefmaddaabovearabic","alefmaddaabovefinalarabic","alefmaksuraarabic","alefmaksurafinalarabic","alefmaksurainitialarabic","alefmaksuramedialarabic","alefpatahhebrew","alefqamatshebrew","aleph","allequal","alpha","alphatonos","amacron","amonospace","ampersand","ampersandmonospace","ampersandsmall","amsquare","anbopomofo","angbopomofo","angbracketleft","angbracketright","angkhankhuthai","angle","anglebracketleft","anglebracketleftvertical","anglebracketright","anglebracketrightvertical","angleleft","angleright","angstrom","anoteleia","anudattadeva","anusvarabengali","anusvaradeva","anusvaragujarati","aogonek","apaatosquare","aparen","apostrophearmenian","apostrophemod","apple","approaches","approxequal","approxequalorimage","approximatelyequal","araeaekorean","araeakorean","arc","arighthalfring","aring","aringacute","aringbelow","arrowboth","arrowdashdown","arrowdashleft","arrowdashright","arrowdashup","arrowdblboth","arrowdbldown","arrowdblleft","arrowdblright","arrowdblup","arrowdown","arrowdownleft","arrowdownright","arrowdownwhite","arrowheaddownmod","arrowheadleftmod","arrowheadrightmod","arrowheadupmod","arrowhorizex","arrowleft","arrowleftdbl","arrowleftdblstroke","arrowleftoverright","arrowleftwhite","arrowright","arrowrightdblstroke","arrowrightheavy","arrowrightoverleft","arrowrightwhite","arrowtableft","arrowtabright","arrowup","arrowupdn","arrowupdnbse","arrowupdownbase","arrowupleft","arrowupleftofdown","arrowupright","arrowupwhite","arrowvertex","asciicircum","asciicircummonospace","asciitilde","asciitildemonospace","ascript","ascriptturned","asmallhiragana","asmallkatakana","asmallkatakanahalfwidth","asterisk","asteriskaltonearabic","asteriskarabic","asteriskmath","asteriskmonospace","asterisksmall","asterism","asuperior","asymptoticallyequal","at","atilde","atmonospace","atsmall","aturned","aubengali","aubopomofo","audeva","augujarati","augurmukhi","aulengthmarkbengali","aumatragurmukhi","auvowelsignbengali","auvowelsigndeva","auvowelsigngujarati","avagrahadeva","aybarmenian","ayin","ayinaltonehebrew","ayinhebrew","babengali","backslash","backslashmonospace","badeva","bagujarati","bagurmukhi","bahiragana","bahtthai","bakatakana","bar","barmonospace","bbopomofo","bcircle","bdotaccent","bdotbelow","beamedsixteenthnotes","because","becyrillic","beharabic","behfinalarabic","behinitialarabic","behiragana","behmedialarabic","behmeeminitialarabic","behmeemisolatedarabic","behnoonfinalarabic","bekatakana","benarmenian","bet","beta","betasymbolgreek","betdagesh","betdageshhebrew","bethebrew","betrafehebrew","bhabengali","bhadeva","bhagujarati","bhagurmukhi","bhook","bihiragana","bikatakana","bilabialclick","bindigurmukhi","birusquare","blackcircle","blackdiamond","blackdownpointingtriangle","blackleftpointingpointer","blackleftpointingtriangle","blacklenticularbracketleft","blacklenticularbracketleftvertical","blacklenticularbracketright","blacklenticularbracketrightvertical","blacklowerlefttriangle","blacklowerrighttriangle","blackrectangle","blackrightpointingpointer","blackrightpointingtriangle","blacksmallsquare","blacksmilingface","blacksquare","blackstar","blackupperlefttriangle","blackupperrighttriangle","blackuppointingsmalltriangle","blackuppointingtriangle","blank","blinebelow","block","bmonospace","bobaimaithai","bohiragana","bokatakana","bparen","bqsquare","braceex","braceleft","braceleftbt","braceleftmid","braceleftmonospace","braceleftsmall","bracelefttp","braceleftvertical","braceright","bracerightbt","bracerightmid","bracerightmonospace","bracerightsmall","bracerighttp","bracerightvertical","bracketleft","bracketleftbt","bracketleftex","bracketleftmonospace","bracketlefttp","bracketright","bracketrightbt","bracketrightex","bracketrightmonospace","bracketrighttp","breve","brevebelowcmb","brevecmb","breveinvertedbelowcmb","breveinvertedcmb","breveinverteddoublecmb","bridgebelowcmb","bridgeinvertedbelowcmb","brokenbar","bstroke","bsuperior","btopbar","buhiragana","bukatakana","bullet","bulletinverse","bulletoperator","bullseye","caarmenian","cabengali","cacute","cadeva","cagujarati","cagurmukhi","calsquare","candrabindubengali","candrabinducmb","candrabindudeva","candrabindugujarati","capslock","careof","caron","caronbelowcmb","caroncmb","carriagereturn","cbopomofo","ccaron","ccedilla","ccedillaacute","ccircle","ccircumflex","ccurl","cdot","cdotaccent","cdsquare","cedilla","cedillacmb","cent","centigrade","centinferior","centmonospace","centoldstyle","centsuperior","chaarmenian","chabengali","chadeva","chagujarati","chagurmukhi","chbopomofo","cheabkhasiancyrillic","checkmark","checyrillic","chedescenderabkhasiancyrillic","chedescendercyrillic","chedieresiscyrillic","cheharmenian","chekhakassiancyrillic","cheverticalstrokecyrillic","chi","chieuchacirclekorean","chieuchaparenkorean","chieuchcirclekorean","chieuchkorean","chieuchparenkorean","chochangthai","chochanthai","chochingthai","chochoethai","chook","cieucacirclekorean","cieucaparenkorean","cieuccirclekorean","cieuckorean","cieucparenkorean","cieucuparenkorean","circle","circlecopyrt","circlemultiply","circleot","circleplus","circlepostalmark","circlewithlefthalfblack","circlewithrighthalfblack","circumflex","circumflexbelowcmb","circumflexcmb","clickalveolar","clickdental","clicklateral","clickretroflex","club","clubsuitblack","clubsuitwhite","cmcubedsquare","cmonospace","cmsquaredsquare","coarmenian","colon","colonmonetary","colonmonospace","colonsign","colonsmall","colontriangularhalfmod","colontriangularmod","comma","commaabovecmb","commaaboverightcmb","commaaccent","commaarabic","commaarmenian","commainferior","commamonospace","commareversedabovecmb","commareversedmod","commasmall","commasuperior","commaturnedabovecmb","commaturnedmod","compass","congruent","contourintegral","control","controlACK","controlBEL","controlBS","controlCAN","controlCR","controlDC1","controlDC2","controlDC3","controlDC4","controlDEL","controlDLE","controlEM","controlENQ","controlEOT","controlESC","controlETB","controlETX","controlFF","controlFS","controlGS","controlHT","controlLF","controlNAK","controlRS","controlSI","controlSO","controlSOT","controlSTX","controlSUB","controlSYN","controlUS","controlVT","copyright","copyrightsans","copyrightserif","cornerbracketleft","cornerbracketlefthalfwidth","cornerbracketleftvertical","cornerbracketright","cornerbracketrighthalfwidth","cornerbracketrightvertical","corporationsquare","cosquare","coverkgsquare","cparen","cruzeiro","cstretched","curlyand","curlyor","currency","cyrBreve","cyrFlex","cyrbreve","cyrflex","daarmenian","dabengali","dadarabic","dadeva","dadfinalarabic","dadinitialarabic","dadmedialarabic","dagesh","dageshhebrew","dagger","daggerdbl","dagujarati","dagurmukhi","dahiragana","dakatakana","dalarabic","dalet","daletdagesh","daletdageshhebrew","dalethebrew","dalfinalarabic","dammaarabic","dammalowarabic","dammatanaltonearabic","dammatanarabic","danda","dargahebrew","dargalefthebrew","dasiapneumatacyrilliccmb","dblGrave","dblanglebracketleft","dblanglebracketleftvertical","dblanglebracketright","dblanglebracketrightvertical","dblarchinvertedbelowcmb","dblarrowleft","dblarrowright","dbldanda","dblgrave","dblgravecmb","dblintegral","dbllowline","dbllowlinecmb","dbloverlinecmb","dblprimemod","dblverticalbar","dblverticallineabovecmb","dbopomofo","dbsquare","dcaron","dcedilla","dcircle","dcircumflexbelow","dcroat","ddabengali","ddadeva","ddagujarati","ddagurmukhi","ddalarabic","ddalfinalarabic","dddhadeva","ddhabengali","ddhadeva","ddhagujarati","ddhagurmukhi","ddotaccent","ddotbelow","decimalseparatorarabic","decimalseparatorpersian","decyrillic","degree","dehihebrew","dehiragana","deicoptic","dekatakana","deleteleft","deleteright","deltaturned","denominatorminusonenumeratorbengali","dezh","dhabengali","dhadeva","dhagujarati","dhagurmukhi","dhook","dialytikatonos","dialytikatonoscmb","diamond","diamondsuitwhite","dieresis","dieresisacute","dieresisbelowcmb","dieresiscmb","dieresisgrave","dieresistonos","dihiragana","dikatakana","dittomark","divide","divides","divisionslash","djecyrillic","dkshade","dlinebelow","dlsquare","dmacron","dmonospace","dnblock","dochadathai","dodekthai","dohiragana","dokatakana","dollar","dollarinferior","dollarmonospace","dollaroldstyle","dollarsmall","dollarsuperior","dong","dorusquare","dotaccent","dotaccentcmb","dotbelowcmb","dotbelowcomb","dotkatakana","dotlessi","dotlessj","dotlessjstrokehook","dotmath","dottedcircle","doubleyodpatah","doubleyodpatahhebrew","downtackbelowcmb","downtackmod","dparen","dsuperior","dtail","dtopbar","duhiragana","dukatakana","dz","dzaltone","dzcaron","dzcurl","dzeabkhasiancyrillic","dzecyrillic","dzhecyrillic","eacute","earth","ebengali","ebopomofo","ebreve","ecandradeva","ecandragujarati","ecandravowelsigndeva","ecandravowelsigngujarati","ecaron","ecedillabreve","echarmenian","echyiwnarmenian","ecircle","ecircumflex","ecircumflexacute","ecircumflexbelow","ecircumflexdotbelow","ecircumflexgrave","ecircumflexhookabove","ecircumflextilde","ecyrillic","edblgrave","edeva","edieresis","edot","edotaccent","edotbelow","eegurmukhi","eematragurmukhi","efcyrillic","egrave","egujarati","eharmenian","ehbopomofo","ehiragana","ehookabove","eibopomofo","eight","eightarabic","eightbengali","eightcircle","eightcircleinversesansserif","eightdeva","eighteencircle","eighteenparen","eighteenperiod","eightgujarati","eightgurmukhi","eighthackarabic","eighthangzhou","eighthnotebeamed","eightideographicparen","eightinferior","eightmonospace","eightoldstyle","eightparen","eightperiod","eightpersian","eightroman","eightsuperior","eightthai","einvertedbreve","eiotifiedcyrillic","ekatakana","ekatakanahalfwidth","ekonkargurmukhi","ekorean","elcyrillic","element","elevencircle","elevenparen","elevenperiod","elevenroman","ellipsis","ellipsisvertical","emacron","emacronacute","emacrongrave","emcyrillic","emdash","emdashvertical","emonospace","emphasismarkarmenian","emptyset","enbopomofo","encyrillic","endash","endashvertical","endescendercyrillic","eng","engbopomofo","enghecyrillic","enhookcyrillic","enspace","eogonek","eokorean","eopen","eopenclosed","eopenreversed","eopenreversedclosed","eopenreversedhook","eparen","epsilontonos","equal","equalmonospace","equalsmall","equalsuperior","equivalence","erbopomofo","ercyrillic","ereversed","ereversedcyrillic","escyrillic","esdescendercyrillic","esh","eshcurl","eshortdeva","eshortvowelsigndeva","eshreversedloop","eshsquatreversed","esmallhiragana","esmallkatakana","esmallkatakanahalfwidth","estimated","esuperior","eta","etarmenian","etatonos","eth","etilde","etildebelow","etnahtafoukhhebrew","etnahtafoukhlefthebrew","etnahtahebrew","etnahtalefthebrew","eturned","eukorean","euro","evowelsignbengali","evowelsigndeva","evowelsigngujarati","exclam","exclamarmenian","exclamdbl","exclamdown","exclamdownsmall","exclammonospace","exclamsmall","existential","ezh","ezhcaron","ezhcurl","ezhreversed","ezhtail","fadeva","fagurmukhi","fahrenheit","fathaarabic","fathalowarabic","fathatanarabic","fbopomofo","fcircle","fdotaccent","feharabic","feharmenian","fehfinalarabic","fehinitialarabic","fehmedialarabic","feicoptic","female","ff","ffi","ffl","fi","fifteencircle","fifteenparen","fifteenperiod","figuredash","filledbox","filledrect","finalkaf","finalkafdagesh","finalkafdageshhebrew","finalkafhebrew","finalmem","finalmemhebrew","finalnun","finalnunhebrew","finalpe","finalpehebrew","finaltsadi","finaltsadihebrew","firsttonechinese","fisheye","fitacyrillic","five","fivearabic","fivebengali","fivecircle","fivecircleinversesansserif","fivedeva","fiveeighths","fivegujarati","fivegurmukhi","fivehackarabic","fivehangzhou","fiveideographicparen","fiveinferior","fivemonospace","fiveoldstyle","fiveparen","fiveperiod","fivepersian","fiveroman","fivesuperior","fivethai","fl","florin","fmonospace","fmsquare","fofanthai","fofathai","fongmanthai","forall","four","fourarabic","fourbengali","fourcircle","fourcircleinversesansserif","fourdeva","fourgujarati","fourgurmukhi","fourhackarabic","fourhangzhou","fourideographicparen","fourinferior","fourmonospace","fournumeratorbengali","fouroldstyle","fourparen","fourperiod","fourpersian","fourroman","foursuperior","fourteencircle","fourteenparen","fourteenperiod","fourthai","fourthtonechinese","fparen","fraction","franc","gabengali","gacute","gadeva","gafarabic","gaffinalarabic","gafinitialarabic","gafmedialarabic","gagujarati","gagurmukhi","gahiragana","gakatakana","gammalatinsmall","gammasuperior","gangiacoptic","gbopomofo","gbreve","gcaron","gcedilla","gcircle","gcircumflex","gcommaaccent","gdot","gdotaccent","gecyrillic","gehiragana","gekatakana","geometricallyequal","gereshaccenthebrew","gereshhebrew","gereshmuqdamhebrew","germandbls","gershayimaccenthebrew","gershayimhebrew","getamark","ghabengali","ghadarmenian","ghadeva","ghagujarati","ghagurmukhi","ghainarabic","ghainfinalarabic","ghaininitialarabic","ghainmedialarabic","ghemiddlehookcyrillic","ghestrokecyrillic","gheupturncyrillic","ghhadeva","ghhagurmukhi","ghook","ghzsquare","gihiragana","gikatakana","gimarmenian","gimel","gimeldagesh","gimeldageshhebrew","gimelhebrew","gjecyrillic","glottalinvertedstroke","glottalstop","glottalstopinverted","glottalstopmod","glottalstopreversed","glottalstopreversedmod","glottalstopreversedsuperior","glottalstopstroke","glottalstopstrokereversed","gmacron","gmonospace","gohiragana","gokatakana","gparen","gpasquare","gradient","grave","gravebelowcmb","gravecmb","gravecomb","gravedeva","gravelowmod","gravemonospace","gravetonecmb","greater","greaterequal","greaterequalorless","greatermonospace","greaterorequivalent","greaterorless","greateroverequal","greatersmall","gscript","gstroke","guhiragana","guillemotleft","guillemotright","guilsinglleft","guilsinglright","gukatakana","guramusquare","gysquare","haabkhasiancyrillic","haaltonearabic","habengali","hadescendercyrillic","hadeva","hagujarati","hagurmukhi","haharabic","hahfinalarabic","hahinitialarabic","hahiragana","hahmedialarabic","haitusquare","hakatakana","hakatakanahalfwidth","halantgurmukhi","hamzaarabic","hamzalowarabic","hangulfiller","hardsigncyrillic","harpoonleftbarbup","harpoonrightbarbup","hasquare","hatafpatah","hatafpatah16","hatafpatah23","hatafpatah2f","hatafpatahhebrew","hatafpatahnarrowhebrew","hatafpatahquarterhebrew","hatafpatahwidehebrew","hatafqamats","hatafqamats1b","hatafqamats28","hatafqamats34","hatafqamatshebrew","hatafqamatsnarrowhebrew","hatafqamatsquarterhebrew","hatafqamatswidehebrew","hatafsegol","hatafsegol17","hatafsegol24","hatafsegol30","hatafsegolhebrew","hatafsegolnarrowhebrew","hatafsegolquarterhebrew","hatafsegolwidehebrew","hbar","hbopomofo","hbrevebelow","hcedilla","hcircle","hcircumflex","hdieresis","hdotaccent","hdotbelow","he","heart","heartsuitblack","heartsuitwhite","hedagesh","hedageshhebrew","hehaltonearabic","heharabic","hehebrew","hehfinalaltonearabic","hehfinalalttwoarabic","hehfinalarabic","hehhamzaabovefinalarabic","hehhamzaaboveisolatedarabic","hehinitialaltonearabic","hehinitialarabic","hehiragana","hehmedialaltonearabic","hehmedialarabic","heiseierasquare","hekatakana","hekatakanahalfwidth","hekutaarusquare","henghook","herutusquare","het","hethebrew","hhook","hhooksuperior","hieuhacirclekorean","hieuhaparenkorean","hieuhcirclekorean","hieuhkorean","hieuhparenkorean","hihiragana","hikatakana","hikatakanahalfwidth","hiriq","hiriq14","hiriq21","hiriq2d","hiriqhebrew","hiriqnarrowhebrew","hiriqquarterhebrew","hiriqwidehebrew","hlinebelow","hmonospace","hoarmenian","hohipthai","hohiragana","hokatakana","hokatakanahalfwidth","holam","holam19","holam26","holam32","holamhebrew","holamnarrowhebrew","holamquarterhebrew","holamwidehebrew","honokhukthai","hookabovecomb","hookcmb","hookpalatalizedbelowcmb","hookretroflexbelowcmb","hoonsquare","horicoptic","horizontalbar","horncmb","hotsprings","house","hparen","hsuperior","hturned","huhiragana","huiitosquare","hukatakana","hukatakanahalfwidth","hungarumlaut","hungarumlautcmb","hv","hyphen","hypheninferior","hyphenmonospace","hyphensmall","hyphensuperior","hyphentwo","iacute","iacyrillic","ibengali","ibopomofo","ibreve","icaron","icircle","icircumflex","icyrillic","idblgrave","ideographearthcircle","ideographfirecircle","ideographicallianceparen","ideographiccallparen","ideographiccentrecircle","ideographicclose","ideographiccomma","ideographiccommaleft","ideographiccongratulationparen","ideographiccorrectcircle","ideographicearthparen","ideographicenterpriseparen","ideographicexcellentcircle","ideographicfestivalparen","ideographicfinancialcircle","ideographicfinancialparen","ideographicfireparen","ideographichaveparen","ideographichighcircle","ideographiciterationmark","ideographiclaborcircle","ideographiclaborparen","ideographicleftcircle","ideographiclowcircle","ideographicmedicinecircle","ideographicmetalparen","ideographicmoonparen","ideographicnameparen","ideographicperiod","ideographicprintcircle","ideographicreachparen","ideographicrepresentparen","ideographicresourceparen","ideographicrightcircle","ideographicsecretcircle","ideographicselfparen","ideographicsocietyparen","ideographicspace","ideographicspecialparen","ideographicstockparen","ideographicstudyparen","ideographicsunparen","ideographicsuperviseparen","ideographicwaterparen","ideographicwoodparen","ideographiczero","ideographmetalcircle","ideographmooncircle","ideographnamecircle","ideographsuncircle","ideographwatercircle","ideographwoodcircle","ideva","idieresis","idieresisacute","idieresiscyrillic","idotbelow","iebrevecyrillic","iecyrillic","ieungacirclekorean","ieungaparenkorean","ieungcirclekorean","ieungkorean","ieungparenkorean","igrave","igujarati","igurmukhi","ihiragana","ihookabove","iibengali","iicyrillic","iideva","iigujarati","iigurmukhi","iimatragurmukhi","iinvertedbreve","iishortcyrillic","iivowelsignbengali","iivowelsigndeva","iivowelsigngujarati","ij","ikatakana","ikatakanahalfwidth","ikorean","ilde","iluyhebrew","imacron","imacroncyrillic","imageorapproximatelyequal","imatragurmukhi","imonospace","increment","infinity","iniarmenian","integral","integralbottom","integralbt","integralex","integraltop","integraltp","intersection","intisquare","invbullet","invcircle","invsmileface","iocyrillic","iogonek","iota","iotadieresis","iotadieresistonos","iotalatin","iotatonos","iparen","irigurmukhi","ismallhiragana","ismallkatakana","ismallkatakanahalfwidth","issharbengali","istroke","isuperior","iterationhiragana","iterationkatakana","itilde","itildebelow","iubopomofo","iucyrillic","ivowelsignbengali","ivowelsigndeva","ivowelsigngujarati","izhitsacyrillic","izhitsadblgravecyrillic","jaarmenian","jabengali","jadeva","jagujarati","jagurmukhi","jbopomofo","jcaron","jcircle","jcircumflex","jcrossedtail","jdotlessstroke","jecyrillic","jeemarabic","jeemfinalarabic","jeeminitialarabic","jeemmedialarabic","jeharabic","jehfinalarabic","jhabengali","jhadeva","jhagujarati","jhagurmukhi","jheharmenian","jis","jmonospace","jparen","jsuperior","kabashkircyrillic","kabengali","kacute","kacyrillic","kadescendercyrillic","kadeva","kaf","kafarabic","kafdagesh","kafdageshhebrew","kaffinalarabic","kafhebrew","kafinitialarabic","kafmedialarabic","kafrafehebrew","kagujarati","kagurmukhi","kahiragana","kahookcyrillic","kakatakana","kakatakanahalfwidth","kappa","kappasymbolgreek","kapyeounmieumkorean","kapyeounphieuphkorean","kapyeounpieupkorean","kapyeounssangpieupkorean","karoriisquare","kashidaautoarabic","kashidaautonosidebearingarabic","kasmallkatakana","kasquare","kasraarabic","kasratanarabic","kastrokecyrillic","katahiraprolongmarkhalfwidth","kaverticalstrokecyrillic","kbopomofo","kcalsquare","kcaron","kcedilla","kcircle","kcommaaccent","kdotbelow","keharmenian","kehiragana","kekatakana","kekatakanahalfwidth","kenarmenian","kesmallkatakana","kgreenlandic","khabengali","khacyrillic","khadeva","khagujarati","khagurmukhi","khaharabic","khahfinalarabic","khahinitialarabic","khahmedialarabic","kheicoptic","khhadeva","khhagurmukhi","khieukhacirclekorean","khieukhaparenkorean","khieukhcirclekorean","khieukhkorean","khieukhparenkorean","khokhaithai","khokhonthai","khokhuatthai","khokhwaithai","khomutthai","khook","khorakhangthai","khzsquare","kihiragana","kikatakana","kikatakanahalfwidth","kiroguramusquare","kiromeetorusquare","kirosquare","kiyeokacirclekorean","kiyeokaparenkorean","kiyeokcirclekorean","kiyeokkorean","kiyeokparenkorean","kiyeoksioskorean","kjecyrillic","klinebelow","klsquare","kmcubedsquare","kmonospace","kmsquaredsquare","kohiragana","kohmsquare","kokaithai","kokatakana","kokatakanahalfwidth","kooposquare","koppacyrillic","koreanstandardsymbol","koroniscmb","kparen","kpasquare","ksicyrillic","ktsquare","kturned","kuhiragana","kukatakana","kukatakanahalfwidth","kvsquare","kwsquare","labengali","lacute","ladeva","lagujarati","lagurmukhi","lakkhangyaothai","lamaleffinalarabic","lamalefhamzaabovefinalarabic","lamalefhamzaaboveisolatedarabic","lamalefhamzabelowfinalarabic","lamalefhamzabelowisolatedarabic","lamalefisolatedarabic","lamalefmaddaabovefinalarabic","lamalefmaddaaboveisolatedarabic","lamarabic","lambda","lambdastroke","lamed","lameddagesh","lameddageshhebrew","lamedhebrew","lamfinalarabic","lamhahinitialarabic","laminitialarabic","lamjeeminitialarabic","lamkhahinitialarabic","lamlamhehisolatedarabic","lammedialarabic","lammeemhahinitialarabic","lammeeminitialarabic","largecircle","lbar","lbelt","lbopomofo","lcaron","lcedilla","lcircle","lcircumflexbelow","lcommaaccent","ldot","ldotaccent","ldotbelow","ldotbelowmacron","leftangleabovecmb","lefttackbelowcmb","less","lessequal","lessequalorgreater","lessmonospace","lessorequivalent","lessorgreater","lessoverequal","lesssmall","lezh","lfblock","lhookretroflex","lira","liwnarmenian","lj","ljecyrillic","ll","lladeva","llagujarati","llinebelow","llladeva","llvocalicbengali","llvocalicdeva","llvocalicvowelsignbengali","llvocalicvowelsigndeva","lmiddletilde","lmonospace","lmsquare","lochulathai","logicaland","logicalnot","logicalnotreversed","logicalor","lolingthai","longs","lowlinecenterline","lowlinecmb","lowlinedashed","lozenge","lparen","lslash","lsquare","lsuperior","ltshade","luthai","lvocalicbengali","lvocalicdeva","lvocalicvowelsignbengali","lvocalicvowelsigndeva","lxsquare","mabengali","macron","macronbelowcmb","macroncmb","macronlowmod","macronmonospace","macute","madeva","magujarati","magurmukhi","mahapakhhebrew","mahapakhlefthebrew","mahiragana","maichattawalowleftthai","maichattawalowrightthai","maichattawathai","maichattawaupperleftthai","maieklowleftthai","maieklowrightthai","maiekthai","maiekupperleftthai","maihanakatleftthai","maihanakatthai","maitaikhuleftthai","maitaikhuthai","maitholowleftthai","maitholowrightthai","maithothai","maithoupperleftthai","maitrilowleftthai","maitrilowrightthai","maitrithai","maitriupperleftthai","maiyamokthai","makatakana","makatakanahalfwidth","male","mansyonsquare","maqafhebrew","mars","masoracirclehebrew","masquare","mbopomofo","mbsquare","mcircle","mcubedsquare","mdotaccent","mdotbelow","meemarabic","meemfinalarabic","meeminitialarabic","meemmedialarabic","meemmeeminitialarabic","meemmeemisolatedarabic","meetorusquare","mehiragana","meizierasquare","mekatakana","mekatakanahalfwidth","mem","memdagesh","memdageshhebrew","memhebrew","menarmenian","merkhahebrew","merkhakefulahebrew","merkhakefulalefthebrew","merkhalefthebrew","mhook","mhzsquare","middledotkatakanahalfwidth","middot","mieumacirclekorean","mieumaparenkorean","mieumcirclekorean","mieumkorean","mieumpansioskorean","mieumparenkorean","mieumpieupkorean","mieumsioskorean","mihiragana","mikatakana","mikatakanahalfwidth","minus","minusbelowcmb","minuscircle","minusmod","minusplus","minute","miribaarusquare","mirisquare","mlonglegturned","mlsquare","mmcubedsquare","mmonospace","mmsquaredsquare","mohiragana","mohmsquare","mokatakana","mokatakanahalfwidth","molsquare","momathai","moverssquare","moverssquaredsquare","mparen","mpasquare","mssquare","msuperior","mturned","mu","mu1","muasquare","muchgreater","muchless","mufsquare","mugreek","mugsquare","muhiragana","mukatakana","mukatakanahalfwidth","mulsquare","multiply","mumsquare","munahhebrew","munahlefthebrew","musicalnote","musicalnotedbl","musicflatsign","musicsharpsign","mussquare","muvsquare","muwsquare","mvmegasquare","mvsquare","mwmegasquare","mwsquare","nabengali","nabla","nacute","nadeva","nagujarati","nagurmukhi","nahiragana","nakatakana","nakatakanahalfwidth","napostrophe","nasquare","nbopomofo","nbspace","ncaron","ncedilla","ncircle","ncircumflexbelow","ncommaaccent","ndotaccent","ndotbelow","nehiragana","nekatakana","nekatakanahalfwidth","newsheqelsign","nfsquare","ngabengali","ngadeva","ngagujarati","ngagurmukhi","ngonguthai","nhiragana","nhookleft","nhookretroflex","nieunacirclekorean","nieunaparenkorean","nieuncieuckorean","nieuncirclekorean","nieunhieuhkorean","nieunkorean","nieunpansioskorean","nieunparenkorean","nieunsioskorean","nieuntikeutkorean","nihiragana","nikatakana","nikatakanahalfwidth","nikhahitleftthai","nikhahitthai","nine","ninearabic","ninebengali","ninecircle","ninecircleinversesansserif","ninedeva","ninegujarati","ninegurmukhi","ninehackarabic","ninehangzhou","nineideographicparen","nineinferior","ninemonospace","nineoldstyle","nineparen","nineperiod","ninepersian","nineroman","ninesuperior","nineteencircle","nineteenparen","nineteenperiod","ninethai","nj","njecyrillic","nkatakana","nkatakanahalfwidth","nlegrightlong","nlinebelow","nmonospace","nmsquare","nnabengali","nnadeva","nnagujarati","nnagurmukhi","nnnadeva","nohiragana","nokatakana","nokatakanahalfwidth","nonbreakingspace","nonenthai","nonuthai","noonarabic","noonfinalarabic","noonghunnaarabic","noonghunnafinalarabic","nooninitialarabic","noonjeeminitialarabic","noonjeemisolatedarabic","noonmedialarabic","noonmeeminitialarabic","noonmeemisolatedarabic","noonnoonfinalarabic","notcontains","notelement","notelementof","notequal","notgreater","notgreaternorequal","notgreaternorless","notidentical","notless","notlessnorequal","notparallel","notprecedes","notsubset","notsucceeds","notsuperset","nowarmenian","nparen","nssquare","nsuperior","ntilde","nuhiragana","nukatakana","nukatakanahalfwidth","nuktabengali","nuktadeva","nuktagujarati","nuktagurmukhi","numbersign","numbersignmonospace","numbersignsmall","numeralsigngreek","numeralsignlowergreek","numero","nun","nundagesh","nundageshhebrew","nunhebrew","nvsquare","nwsquare","nyabengali","nyadeva","nyagujarati","nyagurmukhi","o","oacute","oangthai","obarred","obarredcyrillic","obarreddieresiscyrillic","obengali","obopomofo","obreve","ocandradeva","ocandragujarati","ocandravowelsigndeva","ocandravowelsigngujarati","ocaron","ocircle","ocircumflex","ocircumflexacute","ocircumflexdotbelow","ocircumflexgrave","ocircumflexhookabove","ocircumflextilde","ocyrillic","odblacute","odblgrave","odeva","odieresis","odieresiscyrillic","odotbelow","oe","oekorean","ogonek","ogonekcmb","ograve","ogujarati","oharmenian","ohiragana","ohookabove","ohorn","ohornacute","ohorndotbelow","ohorngrave","ohornhookabove","ohorntilde","ohungarumlaut","oi","oinvertedbreve","okatakana","okatakanahalfwidth","okorean","olehebrew","omacron","omacronacute","omacrongrave","omdeva","omega","omega1","omegacyrillic","omegalatinclosed","omegaroundcyrillic","omegatitlocyrillic","omegatonos","omgujarati","omicron","omicrontonos","omonospace","one","onearabic","onebengali","onecircle","onecircleinversesansserif","onedeva","onedotenleader","oneeighth","onefitted","onegujarati","onegurmukhi","onehackarabic","onehalf","onehangzhou","oneideographicparen","oneinferior","onemonospace","onenumeratorbengali","oneoldstyle","oneparen","oneperiod","onepersian","onequarter","oneroman","onesuperior","onethai","onethird","oogonek","oogonekmacron","oogurmukhi","oomatragurmukhi","oopen","oparen","openbullet","option","ordfeminine","ordmasculine","orthogonal","oshortdeva","oshortvowelsigndeva","oslash","oslashacute","osmallhiragana","osmallkatakana","osmallkatakanahalfwidth","ostrokeacute","osuperior","otcyrillic","otilde","otildeacute","otildedieresis","oubopomofo","overline","overlinecenterline","overlinecmb","overlinedashed","overlinedblwavy","overlinewavy","overscore","ovowelsignbengali","ovowelsigndeva","ovowelsigngujarati","paampssquare","paasentosquare","pabengali","pacute","padeva","pagedown","pageup","pagujarati","pagurmukhi","pahiragana","paiyannoithai","pakatakana","palatalizationcyrilliccmb","palochkacyrillic","pansioskorean","paragraph","parallel","parenleft","parenleftaltonearabic","parenleftbt","parenleftex","parenleftinferior","parenleftmonospace","parenleftsmall","parenleftsuperior","parenlefttp","parenleftvertical","parenright","parenrightaltonearabic","parenrightbt","parenrightex","parenrightinferior","parenrightmonospace","parenrightsmall","parenrightsuperior","parenrighttp","parenrightvertical","partialdiff","paseqhebrew","pashtahebrew","pasquare","patah","patah11","patah1d","patah2a","patahhebrew","patahnarrowhebrew","patahquarterhebrew","patahwidehebrew","pazerhebrew","pbopomofo","pcircle","pdotaccent","pe","pecyrillic","pedagesh","pedageshhebrew","peezisquare","pefinaldageshhebrew","peharabic","peharmenian","pehebrew","pehfinalarabic","pehinitialarabic","pehiragana","pehmedialarabic","pekatakana","pemiddlehookcyrillic","perafehebrew","percent","percentarabic","percentmonospace","percentsmall","period","periodarmenian","periodcentered","periodhalfwidth","periodinferior","periodmonospace","periodsmall","periodsuperior","perispomenigreekcmb","perpendicular","perthousand","peseta","pfsquare","phabengali","phadeva","phagujarati","phagurmukhi","phi","phi1","phieuphacirclekorean","phieuphaparenkorean","phieuphcirclekorean","phieuphkorean","phieuphparenkorean","philatin","phinthuthai","phisymbolgreek","phook","phophanthai","phophungthai","phosamphaothai","pieupacirclekorean","pieupaparenkorean","pieupcieuckorean","pieupcirclekorean","pieupkiyeokkorean","pieupkorean","pieupparenkorean","pieupsioskiyeokkorean","pieupsioskorean","pieupsiostikeutkorean","pieupthieuthkorean","pieuptikeutkorean","pihiragana","pikatakana","pisymbolgreek","piwrarmenian","plus","plusbelowcmb","pluscircle","plusminus","plusmod","plusmonospace","plussmall","plussuperior","pmonospace","pmsquare","pohiragana","pointingindexdownwhite","pointingindexleftwhite","pointingindexrightwhite","pointingindexupwhite","pokatakana","poplathai","postalmark","postalmarkface","pparen","precedes","prescription","primemod","primereversed","product","projective","prolongedkana","propellor","propersubset","propersuperset","proportion","proportional","psi","psicyrillic","psilipneumatacyrilliccmb","pssquare","puhiragana","pukatakana","pvsquare","pwsquare","qadeva","qadmahebrew","qafarabic","qaffinalarabic","qafinitialarabic","qafmedialarabic","qamats","qamats10","qamats1a","qamats1c","qamats27","qamats29","qamats33","qamatsde","qamatshebrew","qamatsnarrowhebrew","qamatsqatanhebrew","qamatsqatannarrowhebrew","qamatsqatanquarterhebrew","qamatsqatanwidehebrew","qamatsquarterhebrew","qamatswidehebrew","qarneyparahebrew","qbopomofo","qcircle","qhook","qmonospace","qof","qofdagesh","qofdageshhebrew","qofhebrew","qparen","quarternote","qubuts","qubuts18","qubuts25","qubuts31","qubutshebrew","qubutsnarrowhebrew","qubutsquarterhebrew","qubutswidehebrew","question","questionarabic","questionarmenian","questiondown","questiondownsmall","questiongreek","questionmonospace","questionsmall","quotedbl","quotedblbase","quotedblleft","quotedblmonospace","quotedblprime","quotedblprimereversed","quotedblright","quoteleft","quoteleftreversed","quotereversed","quoteright","quoterightn","quotesinglbase","quotesingle","quotesinglemonospace","raarmenian","rabengali","racute","radeva","radical","radicalex","radoverssquare","radoverssquaredsquare","radsquare","rafe","rafehebrew","ragujarati","ragurmukhi","rahiragana","rakatakana","rakatakanahalfwidth","ralowerdiagonalbengali","ramiddlediagonalbengali","ramshorn","rbopomofo","rcaron","rcedilla","rcircle","rcommaaccent","rdblgrave","rdotaccent","rdotbelow","rdotbelowmacron","referencemark","reflexsubset","reflexsuperset","registered","registersans","registerserif","reharabic","reharmenian","rehfinalarabic","rehiragana","rekatakana","rekatakanahalfwidth","resh","reshdageshhebrew","reshhebrew","reversedtilde","reviahebrew","reviamugrashhebrew","revlogicalnot","rfishhook","rfishhookreversed","rhabengali","rhadeva","rho","rhook","rhookturned","rhookturnedsuperior","rhosymbolgreek","rhotichookmod","rieulacirclekorean","rieulaparenkorean","rieulcirclekorean","rieulhieuhkorean","rieulkiyeokkorean","rieulkiyeoksioskorean","rieulkorean","rieulmieumkorean","rieulpansioskorean","rieulparenkorean","rieulphieuphkorean","rieulpieupkorean","rieulpieupsioskorean","rieulsioskorean","rieulthieuthkorean","rieultikeutkorean","rieulyeorinhieuhkorean","rightangle","righttackbelowcmb","righttriangle","rihiragana","rikatakana","rikatakanahalfwidth","ring","ringbelowcmb","ringcmb","ringhalfleft","ringhalfleftarmenian","ringhalfleftbelowcmb","ringhalfleftcentered","ringhalfright","ringhalfrightbelowcmb","ringhalfrightcentered","rinvertedbreve","rittorusquare","rlinebelow","rlongleg","rlonglegturned","rmonospace","rohiragana","rokatakana","rokatakanahalfwidth","roruathai","rparen","rrabengali","rradeva","rragurmukhi","rreharabic","rrehfinalarabic","rrvocalicbengali","rrvocalicdeva","rrvocalicgujarati","rrvocalicvowelsignbengali","rrvocalicvowelsigndeva","rrvocalicvowelsigngujarati","rsuperior","rtblock","rturned","rturnedsuperior","ruhiragana","rukatakana","rukatakanahalfwidth","rupeemarkbengali","rupeesignbengali","rupiah","ruthai","rvocalicbengali","rvocalicdeva","rvocalicgujarati","rvocalicvowelsignbengali","rvocalicvowelsigndeva","rvocalicvowelsigngujarati","sabengali","sacute","sacutedotaccent","sadarabic","sadeva","sadfinalarabic","sadinitialarabic","sadmedialarabic","sagujarati","sagurmukhi","sahiragana","sakatakana","sakatakanahalfwidth","sallallahoualayhewasallamarabic","samekh","samekhdagesh","samekhdageshhebrew","samekhhebrew","saraaathai","saraaethai","saraaimaimalaithai","saraaimaimuanthai","saraamthai","saraathai","saraethai","saraiileftthai","saraiithai","saraileftthai","saraithai","saraothai","saraueeleftthai","saraueethai","saraueleftthai","sarauethai","sarauthai","sarauuthai","sbopomofo","scaron","scarondotaccent","scedilla","schwa","schwacyrillic","schwadieresiscyrillic","schwahook","scircle","scircumflex","scommaaccent","sdotaccent","sdotbelow","sdotbelowdotaccent","seagullbelowcmb","secondtonechinese","section","seenarabic","seenfinalarabic","seeninitialarabic","seenmedialarabic","segol","segol13","segol1f","segol2c","segolhebrew","segolnarrowhebrew","segolquarterhebrew","segoltahebrew","segolwidehebrew","seharmenian","sehiragana","sekatakana","sekatakanahalfwidth","semicolon","semicolonarabic","semicolonmonospace","semicolonsmall","semivoicedmarkkana","semivoicedmarkkanahalfwidth","sentisquare","sentosquare","seven","sevenarabic","sevenbengali","sevencircle","sevencircleinversesansserif","sevendeva","seveneighths","sevengujarati","sevengurmukhi","sevenhackarabic","sevenhangzhou","sevenideographicparen","seveninferior","sevenmonospace","sevenoldstyle","sevenparen","sevenperiod","sevenpersian","sevenroman","sevensuperior","seventeencircle","seventeenparen","seventeenperiod","seventhai","sfthyphen","shaarmenian","shabengali","shacyrillic","shaddaarabic","shaddadammaarabic","shaddadammatanarabic","shaddafathaarabic","shaddakasraarabic","shaddakasratanarabic","shade","shadedark","shadelight","shademedium","shadeva","shagujarati","shagurmukhi","shalshelethebrew","shbopomofo","shchacyrillic","sheenarabic","sheenfinalarabic","sheeninitialarabic","sheenmedialarabic","sheicoptic","sheqel","sheqelhebrew","sheva","sheva115","sheva15","sheva22","sheva2e","shevahebrew","shevanarrowhebrew","shevaquarterhebrew","shevawidehebrew","shhacyrillic","shimacoptic","shin","shindagesh","shindageshhebrew","shindageshshindot","shindageshshindothebrew","shindageshsindot","shindageshsindothebrew","shindothebrew","shinhebrew","shinshindot","shinshindothebrew","shinsindot","shinsindothebrew","shook","sigma1","sigmafinal","sigmalunatesymbolgreek","sihiragana","sikatakana","sikatakanahalfwidth","siluqhebrew","siluqlefthebrew","similar","sindothebrew","siosacirclekorean","siosaparenkorean","sioscieuckorean","sioscirclekorean","sioskiyeokkorean","sioskorean","siosnieunkorean","siosparenkorean","siospieupkorean","siostikeutkorean","six","sixarabic","sixbengali","sixcircle","sixcircleinversesansserif","sixdeva","sixgujarati","sixgurmukhi","sixhackarabic","sixhangzhou","sixideographicparen","sixinferior","sixmonospace","sixoldstyle","sixparen","sixperiod","sixpersian","sixroman","sixsuperior","sixteencircle","sixteencurrencydenominatorbengali","sixteenparen","sixteenperiod","sixthai","slash","slashmonospace","slong","slongdotaccent","smileface","smonospace","sofpasuqhebrew","softhyphen","softsigncyrillic","sohiragana","sokatakana","sokatakanahalfwidth","soliduslongoverlaycmb","solidusshortoverlaycmb","sorusithai","sosalathai","sosothai","sosuathai","space","spacehackarabic","spade","spadesuitblack","spadesuitwhite","sparen","squarebelowcmb","squarecc","squarecm","squarediagonalcrosshatchfill","squarehorizontalfill","squarekg","squarekm","squarekmcapital","squareln","squarelog","squaremg","squaremil","squaremm","squaremsquared","squareorthogonalcrosshatchfill","squareupperlefttolowerrightfill","squareupperrighttolowerleftfill","squareverticalfill","squarewhitewithsmallblack","srsquare","ssabengali","ssadeva","ssagujarati","ssangcieuckorean","ssanghieuhkorean","ssangieungkorean","ssangkiyeokkorean","ssangnieunkorean","ssangpieupkorean","ssangsioskorean","ssangtikeutkorean","ssuperior","sterling","sterlingmonospace","strokelongoverlaycmb","strokeshortoverlaycmb","subset","subsetnotequal","subsetorequal","succeeds","suchthat","suhiragana","sukatakana","sukatakanahalfwidth","sukunarabic","summation","sun","superset","supersetnotequal","supersetorequal","svsquare","syouwaerasquare","tabengali","tackdown","tackleft","tadeva","tagujarati","tagurmukhi","taharabic","tahfinalarabic","tahinitialarabic","tahiragana","tahmedialarabic","taisyouerasquare","takatakana","takatakanahalfwidth","tatweelarabic","tau","tav","tavdages","tavdagesh","tavdageshhebrew","tavhebrew","tbar","tbopomofo","tcaron","tccurl","tcedilla","tcheharabic","tchehfinalarabic","tchehinitialarabic","tchehmedialarabic","tcircle","tcircumflexbelow","tcommaaccent","tdieresis","tdotaccent","tdotbelow","tecyrillic","tedescendercyrillic","teharabic","tehfinalarabic","tehhahinitialarabic","tehhahisolatedarabic","tehinitialarabic","tehiragana","tehjeeminitialarabic","tehjeemisolatedarabic","tehmarbutaarabic","tehmarbutafinalarabic","tehmedialarabic","tehmeeminitialarabic","tehmeemisolatedarabic","tehnoonfinalarabic","tekatakana","tekatakanahalfwidth","telephone","telephoneblack","telishagedolahebrew","telishaqetanahebrew","tencircle","tenideographicparen","tenparen","tenperiod","tenroman","tesh","tet","tetdagesh","tetdageshhebrew","tethebrew","tetsecyrillic","tevirhebrew","tevirlefthebrew","thabengali","thadeva","thagujarati","thagurmukhi","thalarabic","thalfinalarabic","thanthakhatlowleftthai","thanthakhatlowrightthai","thanthakhatthai","thanthakhatupperleftthai","theharabic","thehfinalarabic","thehinitialarabic","thehmedialarabic","thereexists","therefore","theta","theta1","thetasymbolgreek","thieuthacirclekorean","thieuthaparenkorean","thieuthcirclekorean","thieuthkorean","thieuthparenkorean","thirteencircle","thirteenparen","thirteenperiod","thonangmonthothai","thook","thophuthaothai","thorn","thothahanthai","thothanthai","thothongthai","thothungthai","thousandcyrillic","thousandsseparatorarabic","thousandsseparatorpersian","three","threearabic","threebengali","threecircle","threecircleinversesansserif","threedeva","threeeighths","threegujarati","threegurmukhi","threehackarabic","threehangzhou","threeideographicparen","threeinferior","threemonospace","threenumeratorbengali","threeoldstyle","threeparen","threeperiod","threepersian","threequarters","threequartersemdash","threeroman","threesuperior","threethai","thzsquare","tihiragana","tikatakana","tikatakanahalfwidth","tikeutacirclekorean","tikeutaparenkorean","tikeutcirclekorean","tikeutkorean","tikeutparenkorean","tilde","tildebelowcmb","tildecmb","tildecomb","tildedoublecmb","tildeoperator","tildeoverlaycmb","tildeverticalcmb","timescircle","tipehahebrew","tipehalefthebrew","tippigurmukhi","titlocyrilliccmb","tiwnarmenian","tlinebelow","tmonospace","toarmenian","tohiragana","tokatakana","tokatakanahalfwidth","tonebarextrahighmod","tonebarextralowmod","tonebarhighmod","tonebarlowmod","tonebarmidmod","tonefive","tonesix","tonetwo","tonos","tonsquare","topatakthai","tortoiseshellbracketleft","tortoiseshellbracketleftsmall","tortoiseshellbracketleftvertical","tortoiseshellbracketright","tortoiseshellbracketrightsmall","tortoiseshellbracketrightvertical","totaothai","tpalatalhook","tparen","trademark","trademarksans","trademarkserif","tretroflexhook","triagdn","triaglf","triagrt","triagup","ts","tsadi","tsadidagesh","tsadidageshhebrew","tsadihebrew","tsecyrillic","tsere","tsere12","tsere1e","tsere2b","tserehebrew","tserenarrowhebrew","tserequarterhebrew","tserewidehebrew","tshecyrillic","tsuperior","ttabengali","ttadeva","ttagujarati","ttagurmukhi","tteharabic","ttehfinalarabic","ttehinitialarabic","ttehmedialarabic","tthabengali","tthadeva","tthagujarati","tthagurmukhi","tturned","tuhiragana","tukatakana","tukatakanahalfwidth","tusmallhiragana","tusmallkatakana","tusmallkatakanahalfwidth","twelvecircle","twelveparen","twelveperiod","twelveroman","twentycircle","twentyhangzhou","twentyparen","twentyperiod","two","twoarabic","twobengali","twocircle","twocircleinversesansserif","twodeva","twodotenleader","twodotleader","twodotleadervertical","twogujarati","twogurmukhi","twohackarabic","twohangzhou","twoideographicparen","twoinferior","twomonospace","twonumeratorbengali","twooldstyle","twoparen","twoperiod","twopersian","tworoman","twostroke","twosuperior","twothai","twothirds","uacute","ubar","ubengali","ubopomofo","ubreve","ucaron","ucircle","ucircumflex","ucircumflexbelow","ucyrillic","udattadeva","udblacute","udblgrave","udeva","udieresis","udieresisacute","udieresisbelow","udieresiscaron","udieresiscyrillic","udieresisgrave","udieresismacron","udotbelow","ugrave","ugujarati","ugurmukhi","uhiragana","uhookabove","uhorn","uhornacute","uhorndotbelow","uhorngrave","uhornhookabove","uhorntilde","uhungarumlaut","uhungarumlautcyrillic","uinvertedbreve","ukatakana","ukatakanahalfwidth","ukcyrillic","ukorean","umacron","umacroncyrillic","umacrondieresis","umatragurmukhi","umonospace","underscore","underscoredbl","underscoremonospace","underscorevertical","underscorewavy","union","universal","uogonek","uparen","upblock","upperdothebrew","upsilon","upsilondieresis","upsilondieresistonos","upsilonlatin","upsilontonos","uptackbelowcmb","uptackmod","uragurmukhi","uring","ushortcyrillic","usmallhiragana","usmallkatakana","usmallkatakanahalfwidth","ustraightcyrillic","ustraightstrokecyrillic","utilde","utildeacute","utildebelow","uubengali","uudeva","uugujarati","uugurmukhi","uumatragurmukhi","uuvowelsignbengali","uuvowelsigndeva","uuvowelsigngujarati","uvowelsignbengali","uvowelsigndeva","uvowelsigngujarati","vadeva","vagujarati","vagurmukhi","vakatakana","vav","vavdagesh","vavdagesh65","vavdageshhebrew","vavhebrew","vavholam","vavholamhebrew","vavvavhebrew","vavyodhebrew","vcircle","vdotbelow","vecyrillic","veharabic","vehfinalarabic","vehinitialarabic","vehmedialarabic","vekatakana","venus","verticalbar","verticallineabovecmb","verticallinebelowcmb","verticallinelowmod","verticallinemod","vewarmenian","vhook","vikatakana","viramabengali","viramadeva","viramagujarati","visargabengali","visargadeva","visargagujarati","vmonospace","voarmenian","voicediterationhiragana","voicediterationkatakana","voicedmarkkana","voicedmarkkanahalfwidth","vokatakana","vparen","vtilde","vturned","vuhiragana","vukatakana","wacute","waekorean","wahiragana","wakatakana","wakatakanahalfwidth","wakorean","wasmallhiragana","wasmallkatakana","wattosquare","wavedash","wavyunderscorevertical","wawarabic","wawfinalarabic","wawhamzaabovearabic","wawhamzaabovefinalarabic","wbsquare","wcircle","wcircumflex","wdieresis","wdotaccent","wdotbelow","wehiragana","weierstrass","wekatakana","wekorean","weokorean","wgrave","whitebullet","whitecircle","whitecircleinverse","whitecornerbracketleft","whitecornerbracketleftvertical","whitecornerbracketright","whitecornerbracketrightvertical","whitediamond","whitediamondcontainingblacksmalldiamond","whitedownpointingsmalltriangle","whitedownpointingtriangle","whiteleftpointingsmalltriangle","whiteleftpointingtriangle","whitelenticularbracketleft","whitelenticularbracketright","whiterightpointingsmalltriangle","whiterightpointingtriangle","whitesmallsquare","whitesmilingface","whitesquare","whitestar","whitetelephone","whitetortoiseshellbracketleft","whitetortoiseshellbracketright","whiteuppointingsmalltriangle","whiteuppointingtriangle","wihiragana","wikatakana","wikorean","wmonospace","wohiragana","wokatakana","wokatakanahalfwidth","won","wonmonospace","wowaenthai","wparen","wring","wsuperior","wturned","wynn","xabovecmb","xbopomofo","xcircle","xdieresis","xdotaccent","xeharmenian","xmonospace","xparen","xsuperior","yaadosquare","yabengali","yacute","yadeva","yaekorean","yagujarati","yagurmukhi","yahiragana","yakatakana","yakatakanahalfwidth","yakorean","yamakkanthai","yasmallhiragana","yasmallkatakana","yasmallkatakanahalfwidth","yatcyrillic","ycircle","ycircumflex","ydieresis","ydotaccent","ydotbelow","yeharabic","yehbarreearabic","yehbarreefinalarabic","yehfinalarabic","yehhamzaabovearabic","yehhamzaabovefinalarabic","yehhamzaaboveinitialarabic","yehhamzaabovemedialarabic","yehinitialarabic","yehmedialarabic","yehmeeminitialarabic","yehmeemisolatedarabic","yehnoonfinalarabic","yehthreedotsbelowarabic","yekorean","yen","yenmonospace","yeokorean","yeorinhieuhkorean","yerahbenyomohebrew","yerahbenyomolefthebrew","yericyrillic","yerudieresiscyrillic","yesieungkorean","yesieungpansioskorean","yesieungsioskorean","yetivhebrew","ygrave","yhook","yhookabove","yiarmenian","yicyrillic","yikorean","yinyang","yiwnarmenian","ymonospace","yod","yoddagesh","yoddageshhebrew","yodhebrew","yodyodhebrew","yodyodpatahhebrew","yohiragana","yoikorean","yokatakana","yokatakanahalfwidth","yokorean","yosmallhiragana","yosmallkatakana","yosmallkatakanahalfwidth","yotgreek","yoyaekorean","yoyakorean","yoyakthai","yoyingthai","yparen","ypogegrammeni","ypogegrammenigreekcmb","yr","yring","ysuperior","ytilde","yturned","yuhiragana","yuikorean","yukatakana","yukatakanahalfwidth","yukorean","yusbigcyrillic","yusbigiotifiedcyrillic","yuslittlecyrillic","yuslittleiotifiedcyrillic","yusmallhiragana","yusmallkatakana","yusmallkatakanahalfwidth","yuyekorean","yuyeokorean","yyabengali","yyadeva","zaarmenian","zacute","zadeva","zagurmukhi","zaharabic","zahfinalarabic","zahinitialarabic","zahiragana","zahmedialarabic","zainarabic","zainfinalarabic","zakatakana","zaqefgadolhebrew","zaqefqatanhebrew","zarqahebrew","zayin","zayindagesh","zayindageshhebrew","zayinhebrew","zbopomofo","zcaron","zcircle","zcircumflex","zcurl","zdot","zdotaccent","zdotbelow","zecyrillic","zedescendercyrillic","zedieresiscyrillic","zehiragana","zekatakana","zero","zeroarabic","zerobengali","zerodeva","zerogujarati","zerogurmukhi","zerohackarabic","zeroinferior","zeromonospace","zerooldstyle","zeropersian","zerosuperior","zerothai","zerowidthjoiner","zerowidthnonjoiner","zerowidthspace","zeta","zhbopomofo","zhearmenian","zhebrevecyrillic","zhecyrillic","zhedescendercyrillic","zhedieresiscyrillic","zihiragana","zikatakana","zinorhebrew","zlinebelow","zmonospace","zohiragana","zokatakana","zparen","zretroflexhook","zstroke","zuhiragana","zukatakana",".notdef","a1","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","handleImageData","isNativelyDecodable","decodeAndClamp","addend","coefficient","isMask","jpxImage","JpxImage","parseImageProperties","componentsCount","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","imagePromise","imageData","smaskData","maskData","pixels","py","oldIndex","temp","newIndex","xScaled","w1Scanline","imageIsFromDecodeStream","computedLength","actualLength","drawWidth","drawHeight","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","rowBytes","getImageBytes","newArray","maybeUndoPreblend","forceRGB","Courier","Courier-BoldOblique","Courier-Oblique","Times-Roman","Times-Bold","Times-BoldItalic","Times-Italic","refill","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","adler32","imageStream","imageBytes","skipToNextLine","ENDSTREAM_SIGNATURE","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","PredictorStream","FlateStream","earlyChange","LZWStream","JpxStream","Ascii85Stream","AsciiHexStream","CCITTFaxStream","RunLengthStream","Jbig2Stream","knownCommands","toHexDigit","specialChars","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","getName","getHexString","firstDigit","secondDigit","isFirstHex","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","hintsLength","getHints","objectNumberFirst","endFirst","pageFirst","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","arrayBuffer","maybeMinBufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","cmf","flg","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","getCode","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","codeLengths","repeatLength","code1","dist","blockLen","predictor","readBlockTiff","readBlockPng","columns","pixBytes","rawBytes","inbuf","outbuf","inbits","outbits","compArray","bitMask","prevRow","up","upLeft","pa","pb","req","jpegImage","JpegImage","decodeArr","decodeArrLength","transformNeeded","maxValue","decodeTransform","tileCount","tiles","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","tileRowSize","jbig2Image","Jbig2Image","decodeParams","globals","parseChunks","nextChunk","initialized","hasMoreData","maxDecodeLength","digit","repeatHeader","eoline","byteAlign","rows","eoblock","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","lookBits","eatBits","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","lookChar","addPixels","blackPixels","addPixelsNeg","refPos","code3","getTwoDimCode","getBlackCode","getWhiteCode","gotEOL","findTableCode","limitValue","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","WorkerMessageHandler","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","fingerprintPromise","encryptedPromise","doc","parseFailure","supportTransfers","responseExists","supportTypedArray","onSuccess","pdfInfo","onFailure","pdfManagerCapability","disableRange","cachedChunks","fullRequestXhrId","fullRequestXhr","disableStream","pdfFile","pdfFileLength","pdfFileArray","exception","lengthComputable","getPdfManager","pdfManagerReady","page","rotatePromise","refPromise","viewPromise","pageNum","wrappedException","minimumStackMessage","consoleTimer","workerConsole","ArithmeticDecoder","bp","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","buildHuffmanTable","children","getBlockBufferOffset","component","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuCol","mcusPerLine","decodeBlock","precision","samplesPerLine","scanLines","decodeFn","progressive","maxH","maxV","componentsLength","marker","mcuExpected","blocksPerColumn","mcusPerColumn","quantizeAndInverse","blockBufferOffset","v0","v1","v2","v3","v4","v5","v6","v7","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSin6","dctCos6","dctSqrt1d2","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","clamp0to255","readDataBlock","prepareComponents","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","failOnCorruptedImage","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","tile","Number","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","siz","SIZ","tileIndex","currentTile","Csiz","blocksDimensions","tcx0","tcy0","tcx1","tcy1","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","copyCoefficients","coefficients","levelWidth","levelHeight","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","zeroBitPlanes","dataItem","totalLength","codingpasses","encodedData","decoder","setDecoder","runSignificancePropogationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","gainLog2","SubbandsGainLog2","calculate","LH","HL","HH","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","newByte","Xsiz","Ysiz","XOsiz","YOsiz","doNotRecover","sqcd","spqcdSize","mainHeader","XTsiz","YTsiz","XTOsiz","YTOsiz","isSigned","XRsiz","YRsiz","calculateComponentDimensions","numXtiles","numYtiles","tx0","ty0","tx1","ty1","tileComponent","calculateTileGrids","QCC","COC","qcd","noQuantization","spqcd","QCD","qcc","cqcc","cod","scod","sopMarkerUsed","ephMarkerUsed","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","COD","partIndex","partsCount","qcdOrQcc","initializeTile","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","codingpassesLog2","codedDataLength","packetItem","parseTilePackets","resultImages","transformedTiles","maxK","tile0","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","iterate","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmap","mmr","templateIndex","prediction","decodingContext","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","stripT","firstS","currentS","symbolId","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","newSymbols","currentHeight","currentWidth","deltaWidth","numberOfInstances","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","onImmediateLosslessTextRegion","parseJbig2Chunks","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","baseTypes","arabicTypes","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","seed","MASK_HIGH","alwaysUseUint32ArrayView","useUint32ArrayView","blockCounts","tailLength","dataUint32","k2","C1","C2","workerSrc","pdfjsSrc","body","lastChild","receivingNoteDel_DelMessageAlert","render","_h","$createElement","_c","_self","staticClass","_v","_m","staticStyle","text-align","padding","attrs","click","sure","cancel","staticRenderFns","font-size","float","margin-left","margin-right","line-height","receivingInspection_receivingNoteDel_DelMessageAlert","__webpack_require__","normalizeComponent","ssrContext","ReceivingNoteDel","Info","DetailTable","receivingNoteDel_ReceivingNoteDel","_vm","visible","dialogVisible","update:visible","$event","font-style","font-weight","ReceivingNoteDel_Component","ReceivingNoteDel_normalizeComponent","__webpack_exports__","pickerOptions","billSource","receiptBillStatus","receivingInspection_ReceivingSearchBar","placeholder","picker-options","model","$$v","$set","expression","value-format","clearable","change","billSourceChange","_l","label","filterable","icon","toAddReceivingNote","ReceivingList","getList","modulePath","_ref","ReceivingSearchBar","SlideBar","receivingInspection_ReceivingList","border","row-class-name","highlightCurrent","tableHeight","row-click","rowCurrentChange","show-overflow-tooltip","scopedSlots","_u","_s","_f","receiptBillStatusKey","current-page","pageNo","page-size","pageSize","size-change","handleSizeChange","current-change","handleCurrentChange","leftEl","rightEl","ReceivingList_Component","ReceivingList_normalizeComponent","ReceivingNoteEdit","getModifyInfo","required","trigger","validator","receiptBillCode","materialList","formData","list","submitData","warehouseList","checkerList","receivingNoteEdit_ReceivingNoteEdit","label-width","inline-message","rules","warehouseChange","margin","addDetail","$index","materialCategoryCode","materialCategoryCodeChange","materialCategoryName","materialName","materialChange","materialCode","checkerId","checkerChange","checkerName","arrivalAmount","savelDetail","delDetail","editDetail","saveOrSubmit","Component","godownEntryInfo_PutawayInformationAlert","receivingNoteInfo_DetailTable","getDetailList","receivingInspection_TopNavBtn","to","active-class","roleInfo","receiving","_e","edit","del","print","ReceivingDetail","receivingInspection_ReceivingDetail","margin-top","ReceivingDetail_Component","ReceivingDetail_normalizeComponent","receivingNoteInfo_Info","infoData","receiptBillSourceKey","externalBillCode","warehouseName","creatorName","generateTime","arrivalDate","getInfo","Receiving","getReceiptDetailList","qualifiedAmount","receivingInfo","receiving_Receiving","detailForm","unqualifiedDesc","introduction","checkDate","$store","submit","combineUrl","baseUrl","pathLength","prefixLength","createScratchCanvas","addContextCurrentTransform","mozCurrentTransform","_scaleX","_scaleY","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","ad_bc","bc_ad","cosValue","sinValue","getShadingPatternFromIR","shadingIR","ShadingIRs","isWorker","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","imageResourcesPath","disableWebGL","disableFullscreen","useOnlyCssZoom","maxCanvasPixels","openExternalLinksInNewWindow","getDocument","pdfDataRangeTransport","passwordCallback","progressCallback","task","PDFDocumentLoadingTask","PDFDataRangeTransport","onPassword","workerInitializedCapability","transport","pdfBytes","href","WorkerTransport","fetchDocument","_capability","onFulfilled","onRejected","_rangeListeners","_progressListeners","_progressiveReadListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","onDataRange","onDataProgress","onDataProgressiveRead","transportReady","requestDataRange","PDFDocumentProxy","pageNumber","getDestinations","getAttachments","getJavaScript","getOutline","getMetadata","getDownloadInfo","downloadInfoCapability","getStats","startCleanup","destroy","PDFPageProxy","enableStats","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingDestroy","intentStates","getViewport","getAnnotations","complete","intentState","renderTasks","internalRenderTask","_tryDestroy","renderingIntent","displayReadyCapability","receivingOperatorList","InternalRenderTask","renderTask","continueCallback","onContinue","initalizeGraphics","operatorListChanged","opListReadCapability","opListTask","some","_startRenderPage","_renderPageChunk","operatorListChunk","loadingTask","pageCache","Worker","worker","setupMessageHandler","setupFakeWorker","testObj","FontLoader","fakeWorkerFilesLoadedCapability","fakeWorker","exportedData","FontFaceObject","fontObjs","pageProxy","imageUrl","Image","loadJpegStream","rgbaLength","tmpCtx","drawImage","getImageData","Metadata","ensureObj","resolved","isResolved","RenderTask","_internalRenderTask","operatorListIdx","graphicsReadyCallback","graphicsReady","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","StepperManager","stepper","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","canvasContext","imageLayer","beginDrawing","viewport","updateOperatorList","requestAnimationFrame","executeOperatorList","endDrawing","FULL_CHUNK_HEIGHT","meta","d2","d3","fixMetadata","DOMParser","parseFromString","Document","metaDocument","rdf","documentElement","nodeName","firstChild","nextSibling","hasChildNodes","desc","iLength","childNodes","trim","CachedCanvases","getCanvas","trackTransform","canvasEntry","CanvasExtraState","alphaIsShape","fontSizeScale","textMatrixScale","lineX","lineY","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","setCurrentPoint","canvasCtx","pendingClip","pendingEOFill","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedGetSinglePixelWidth","putBinaryImageData","ImageData","putImageData","thisChunkHeight","elemsInThisChunk","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","srcLength","dest32","dest32DataLength","fullSrcDiff","white","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","setLineDash","getLineDash","lineDashOffset","mozDashOffset","mozDash","composeSMaskBackdrop","g0","alpha_","composeSMaskAlpha","layerData","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","WebGLUtils","isEnabled","composed","composeFn","hasBackdrop","chunkHeight","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","clearRect","mozOpaque","fillStyle","fillRect","beginLayout","executionStartIdx","argsArrayLen","fnId","chunkOperations","steps","breakIt","deps","nn","depObjId","objsPool","endLayout","style","lineCap","lineJoin","miterLimit","dashPhase","flatness","states","globalAlpha","globalCompositeOperation","endSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","ops","getSinglePixelWidth","xw","yh","consumePath","strokeStyle","needRestore","mozFillRule","paths","pendingTextPaths","beginPath","addToPath","spacing","fontRefName","fontObj","fontDirection","typeface","browserFontSize","rule","rise","paintChar","character","fillStrokeMode","getPathGenerator","fillText","strokeText","isFontSubpixelAAEnabled","showType3Text","glyphsLength","widthAdvanceScale","simpleFillText","scaledX","scaledY","scaledAccentX","scaledAccentY","restoreNeeded","vx","vy","characterScaleX","measureText","spacingLength","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","TilingPattern","patternIR","inv","mozCurrentTransformInverse","bl","ul","ur","canvasBounds","imageSmoothingEnabled","mozImageSmoothingEnabled","domImage","getCanvasPosition","appendImage","isPatternFill","width1","POINT_TYPES","lineSize","data0","sum","outlines","pp","compileType3Glyph","maskCanvas","imgToPaint","tmpCanvas","widthScale","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","inverse","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","generateGL","currentGL","currentCanvas","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","layer","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","initSmaskGL","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","deleteTexture","deleteBuffer","drawFigures","backgroundColor","scaleLocation","offsetLocation","colorLocation","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","cols","coordsBuffer","colorsBuffer","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","drawTriangle","x3","y3","car","cag","cab","cbr","cbg","cbb","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","x1_","x2_","drawFigure","combinesScale","boundsWidth","boundsHeight","owner","matrixScale","temporaryPatternCanvas","createPattern","xstep","ystep","paintType","tilingType","PaintType","createPatternCanvas","topLeft","botRight","curMatrixScale","combinedScale","graphics","setFillAndStrokeStyleToContext","setScale","transformToScale","tmpTranslate","clipBbox","tmpScale","scaleToContext","bboxWidth","bboxHeight","insertRule","styleElement","getElementById","styleSheet","sheet","cssRules","parentNode","removeChild","nativeFontFaces","nativeFontFace","fonts","delete","loadTestFont","atob","loadTestFontId","loadingContext","requests","nextRequestId","isSyncFontLoadingSupported","isFontLoadingAPISupported","addNativeFontFace","fontsToLoad","fontLoadPromises","attached","createNativeFontFace","bindDOM","queueLoadingCallback","prepareFontLoadEvent","otherRequest","spliceString","insert","isFontReady","called","btoa","div","FontFace","fontAdded","ANNOT_MIN_SIZE","AnnotationUtils","initContainer","drawBorder","container","cstyle","bWidth","borderColor","getHtmlElementForTextAnnotation","className","iconName","dataset","l10nId","l10nArgs","JSON","stringify","contentWrapper","text","lines","line","createTextNode","pinned","showAnnotation","pin","hasAttribute","zIndex","removeAttribute","hideAnnotation","unpin","addEventListener","getHtmlElement","display","textAlign","verticalAlign","direction","fontWeight","fontStyle","setTextStyles","getHtmlElementForTextWidgetAnnotation","link","getHtmlElementForLinkAnnotation","SVG_DEFAULTS","convertImgDataToPng","writePngChunk","crc","crcTable","crc32","PNG_HEADER","CHUNK_WRAPPER_SIZE","bitDepth","colorType","literals","offsetLiterals","offsetBytes","ihdr","deflateBlocks","idat","adler","pngLength","SVGExtraState","clipId","maskId","SVGGraphics","pf","toFixed","pm","acos","PI","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","NS","XLINK_NS","clipCount","maskCount","tgrp","createElementNS","setAttributeNS","pgrp","executeOpTree","loadDependencies","fnArrayLen","getSVG","svg","createScratchSVG","defs","opTree","convertOpList","REVOPS","opListLen","opListToTree","opTreeLen","lineMatrix","xcoords","tspan","txtElement","txtgrp","addFontStyle","cgrp","opLength","clippath","clipElement","cloneNode","getAttributeNS","imgObj","imgEl","imgSrc","cliprect","pdf","PdfPrint","pdfDoc_","toDataURL","reload","renderContext","pageNumPending","pdfPrint_PdfPrint","overflow","domProps","page_num","page_count","addscale","closepdf","overflow-y","common_pdfPrint_PdfPrint","receivingNotePrint_ReceivingNotePrint","ReceivingNotePrint_Component","ReceivingNotePrint_normalizeComponent","ReceivingNotePrint","ReceivingNoteInfo","date","show","date2","PutawayInformationAlert","receivingNoteInfo_ReceivingNoteInfo","ReceivingNoteAdd","receivingNoteAdd_ReceivingNoteAdd","Tag","printTag_Tag","barcode","options","displayValue","font-family","padding-right","materailCode","printTag_PrintAlert","getTagList","multipleSelection","PrintAlert_normalizeComponent","PrintAlert","printTag_PrintTag","tagList","printData","close","tooltip-effect","selection-change","handleSelectionChange","printAll","PrintTag_Component","PrintTag_normalizeComponent","PrintTag"],"mappings":"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,CACpD,IAAA4yB,EAAAuF,EAAAn4B,GAGA8C,EAAA8vB,IACAj2B,KAAAs7B,OAAAtJ,OAAAiE,GAGAj2B,KAAAu7B,KAAAhG,IACSnb,KAAApa,QAITA,KAAAs7B,OAAA,KACAt7B,KAAAsG,WAAAG,aAIA6jB,EA/HA,GAmIAqR,IACA,4DACA,4DACA,2DACA,wDACA,+DACA,yDACA,oDACA,oEACA,4DACA,wDACA,gEACA,0DACA,6DACA,yDACA,uDACA,2DACA,kEACA,yDACA,4DACA,+DACA,2DACA,6DACA,oEACA,kEACA,6DACA,gEACA,mEACA,8DACA,4DACA,+DACA,mEACA,iEACA,8DACA,wCAGAC,IACA,qEACA,mEACA,+DACA,0DACA,4DACA,6DACA,0DACA,yDACA,+DACA,4DACA,2DACA,qEACA,+DACA,+DACA,+DACA,6DACA,mEACA,0DACA,yDACA,wDACA,sDACA,6DACA,mEACA,4DACA,6DACA,2DACA,4DACA,+DACA,6DACA,+DACA,sDACA,gEACA,6DACA,6DACA,qEACA,+DACA,kBAGAC,IACA,oDACA,0DACA,sDACA,2DACA,4DACA,mEACA,+DACA,+DACA,4DACA,2DACA,kEACA,mEACA,mEACA,mEACA,4DACA,6DACA,2DACA,4DACA,+DACA,kCAIAC,GAAA,GACAC,IAAA,wBAEArQ,GAAA,WA8CA,SAAAA,EAAAhD,GACA,IAAAjR,EAAAiR,EAAAjR,KACArT,EAAApE,KAAAoE,QAEAA,EAAAoE,QAAAiP,EAAA5R,IAAA,WAAAC,KACA,IAAAwQ,EAAAmB,EAAA5R,IAAA,mBACAzB,EAAAkS,KAAA/B,GAAA8B,cAAAC,GACAlS,EAAA43B,gBAAAvkB,EAAA5R,IAAA,KAEA,IAAA+tB,EAAAnc,EAAA5R,IAAA,KACA,GAAA+tB,GAIK,GAAA7tB,EAAA6tB,GACL,OAAAA,EAAA9yB,QACA,OAEAsD,EAAAwvB,MAAA,KACA,MACA,OAEA,MACA,OACAxvB,EAAAwvB,cAXAxvB,EAAAwvB,OAAA,OAqBA,GAAAnc,EAAAC,IAAA,OACA,IAAAukB,EAAAxkB,EAAA5R,IAAA,MAC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,2CACA,+CACA,0CACA,qCACA,0CACA,8CACA,4CACA,qCACA,yCACA,8CACA,4CACA,yCACA,sCACA,4CACA,8CACA,2CACA,mCACA,2CACA,+CACA,0CACA,kBAEAyE,EAAA,IAAAzE,YACA,2CACA,8CACA,+CACA,2CACA,uCACA,yCACA,yCACA,0CACA,0CACA,2CACA,4CACA,0CACA,0CACA,sCACA,8CACA,4CACA,4CACA,0CACA,2CACA,6CACA,2CACA,gBAEA8xC,EAAA,IAAA9xC,YACA,yCACA,8CACA,2CACA,0CACA,yCACA,8CACA,4CACA,4CACA,0CACA,uCACA,wCACA,+CACA,6CACA,2CACA,yCACA,8CACA,wCACA,yCACA,6CACA,4CACA,yCACA,eACAqyC,EAAA,IAAAryC,WAAA,KACAR,EAAA,EAAiBA,EAAA,IAASA,IAE1B6yC,EAAA7yC,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAAwyC,EAAA,IAAApT,aACA,oDACA,gEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,4DACA,gEACA,kEACA,kEACA,kEACA,kEACA,iEACA,2DACA,kEACA,8DACA,+DACA,kEACA,kEACA,kEACA,iEACA,4DACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,+DACA,6DACA,kEACA,kEACA,+DACA,4DACA,kEACA,8DACA,6DACA,kEACA,kEACA,kEACA,8CAkTA,OA7DA8S,EAAA/iC,WACA4/B,aAAA,SAAAhuC,EAAAsyC,GACA,IAAArzC,EAAAszC,EAAAvyC,EAAAtD,OACAuS,EAAArT,KAAAqT,OAAAujC,EAAA52C,KAAAw2C,eAEA,IAAAnzC,EAAA,EAAiBuzC,EAAA,IAAAvzC,EAAAszC,IAAuCtzC,IAAAuzC,EACxDvjC,EAAAujC,GAAAxyC,EAAAf,GAEA,OAAAuzC,EAAA,IAEA52C,KAAA42C,eACA,IAAA/yC,iBAEA7D,KAAA62C,GAAAxjC,EACArT,KAAAqT,OAAA,IAAAxP,WAAA,IACA7D,KAAA42C,aAAA,EAEA52C,KAAAoyC,aAAAqE,EACAz2C,KAAAoy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CA,8CACA,+CACA,2CACA,uCACA,yCACA,yCACA,0CACA,0CACA,2CACA,4CACA,0CACA,0CACA,sCACA,8CACA,4CACA,4CACA,0CACA,2CACA,6CACA,2CACA,gBAEA8xC,EAAA,IAAA9xC,YACA,yCACA,8CACA,2CACA,0CACA,yCACA,8CACA,4CACA,4CACA,0CACA,uCACA,wCACA,+CACA,6CACA,2CACA,yCACA,8CACA,wCACA,yCACA,6CACA,4CACA,yCACA,eAEAqyC,EAAA,IAAAryC,WAAA,KACAR,EAAA,EAAiBA,EAAA,IAASA,IAE1B6yC,EAAA7yC,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAAwyC,EAAA,IAAApT,aACA,oDACA,gEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,4DACA,gEACA,kEACA,kEACA,kEACA,kEACA,iEACA,2DACA,kEACA,8DACA,+DACA,kEACA,kEACA,kEACA,iEACA,4DACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,+DACA,6DACA,kEACA,kEACA,+DACA,4DACA,kEACA,8DACA,6DACA,kEACA,kEACA,kEACA,8CA0UA,OApEA0U,EAAA3kC,WACA4/B,aAAA,SAAAhuC,EAAAsyC,EAAAG,GACA,IAAAxzC,EAAAszC,EAAAvyC,EAAAtD,OACAuS,EAAArT,KAAAqT,OAAAujC,EAAA52C,KAAAw2C,eAGA,GAAAK,EACA72C,KAAA62C,SACO,CACP,IAAAxzC,EAAA,EAAmBuzC,EAAA,IACnBvzC,EAAAszC,IAA8BtzC,IAAAuzC,EAC9BvjC,EAAAujC,GAAAxyC,EAAAf,GAEA,GAAAuzC,EAAA,GAGA,OADA52C,KAAA42C,eACA,IAAA/yC,eAEA7D,KAAA62C,GAAAxjC,EACAjP,IAAAV,SAAA,IAMA,OAJA1D,KAAAqT,OAAA,IAAAxP,WAAA,IACA7D,KAAA42C,aAAA,EAEA52C,KAAAoyC,aAAAqE,EACAz2C,KAAAoyC,aAAAhuC,EAAAsyC,IAEA9jB,QAAA,SAAAxuB,EAAAyyC,GACA,IAAAxzC,EAAAm1B,EAAA3wB,EAAA8uC,EAAAvyC,EAAAtD,OACAuS,EAAArT,KAAAqT,OAAAujC,EAAA52C,KAAAw2C,eACA/uC,KAIA,IAHAovC,IACAA,EAAA,IAAAhzC,WAAA,KAEAR,EAAA,EAAiBA,EAAAszC,IAAkBtzC,EAGnC,GAFAgQ,EAAAujC,GAAAxyC,EAAAf,OACAuzC,EACA,KAGA,IAAApe,EAAA,EAAmBA,EAAA,KAAQA,EAC3BnlB,EAAAmlB,IAAAqe,EAAAre,GAIA,IAAA0e,EAAAG,EAAAhkC,EAAArT,KAAA8E,KACA9E,KAAA62C,GAAAK,EACAzvC,EAAAzG,KAAAk2C,GACA7jC,EAAA,IAAAxP,WAAA,IACA+yC,EAAA,EAMA,GAHA52C,KAAAqT,SACArT,KAAA42C,eACA52C,KAAA62C,KACA,IAAApvC,EAAA3G,OACA,WAAA+C,eAGA,IAAAkzC,EAAA,GAAAtvC,EAAA3G,OACA8jC,EAAA,IAAA/gC,WAAAkzC,GACA,IAAA1zC,EAAA,EAAAm1B,EAAA,EAAA3wB,EAAAJ,EAAA3G,OAA4CuC,EAAAwE,IAAQxE,EAAAm1B,GAAA,GACpDoM,EAAAvwB,IAAA5M,EAAApE,GAAAm1B,GAEA,OAAAoM,IAIAuS,EAtcA,GAycAI,GAAA,WAEA,SAAAC,EAAAC,EAAAC,GACA,GAAAD,EAAA32C,SAAA42C,EAAA52C,OACA,SAEA,QAAAuC,EAAA,EAAmBA,EAAAo0C,EAAA32C,OAAmBuC,IACtC,GAAAo0C,EAAAp0C,KAAAq0C,EAAAr0C,GACA,SAGA,SAGA,SAAAk0C,KAkDA,OA/CAA,EAAA/kC,WACAmlC,mBAAA,SAAAzvB,EACA0vB,EACAC,EACAC,GACA,IAAAC,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,IACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAAujC,EAAA1vB,EAAApnB,QACAi3C,EAAA1jC,IAAAwjC,EAAA3vB,EAAApnB,OAAA82C,EAAA92C,QAEA,OAAA02C,EADAtD,GAAA6D,EAAA,EAAAA,EAAAj3C,QACAg3C,IAEAE,kBAAA,SAAA9vB,EACA+vB,EACAC,GACA,IAAAH,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,GACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAA4jC,EAAA/vB,EAAApnB,QAEA,OAAA02C,EADAtD,GAAA6D,EAAA,EAAAA,EAAAj3C,QACAo3C,IAEAC,YAAA,SAAAjwB,EAAAkwB,EAAAP,EACAQ,GACA,IAAAN,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,IACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAA+jC,EAAAlwB,EAAApnB,QACAi3C,EAAA1jC,IAAAwjC,EAAA3vB,EAAApnB,OAAAs3C,EAAAt3C,QACA,IAAAgE,EAAAovC,GAAA6D,EAAA,EAAAA,EAAAj3C,QAEA,OADA,IAAAq2C,GAAAryC,GACAstC,aAAAiG,GACA,EACA,IAAAx0C,WAAA,MAGAy0C,WAAA,SAAApwB,EAAAqwB,EACAC,GACA,IAAAT,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,GACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAAkkC,EAAArwB,EAAApnB,QAEA,IAAAgE,EAAAovC,GAAA6D,EAAA,EAAAA,EAAAj3C,QAEA,OADA,IAAAq2C,GAAAryC,GACAstC,aAAAoG,GACA,EACA,IAAA30C,WAAA,OAGA0zC,EAhEA,GAmEAkB,GAAA,WAEA,SAAAC,EAAAjB,EAAAC,GACA,IAAAtS,EAAA,IAAAvhC,WAAA4zC,EAAA32C,OAAA42C,EAAA52C,QAGA,OAFAskC,EAAA/wB,IAAAojC,EAAA,GACArS,EAAA/wB,IAAAqjC,EAAAD,EAAA32C,QACAskC,EAGA,SAAAuT,EAAAzwB,EAAAwc,EAAAmT,GAKA,IAHA,IAAAnV,EAAAwR,GAAAxP,EAAA,EAAAA,EAAA5jC,QAAA4C,SAAA,MACArC,GAAA,GACAgC,EAAA,EACAA,EAAA,IAAAhC,IAAAP,OAAA,GAAAuC,EAAA,KACA,IAAAu1C,EAAA1wB,EAAApnB,OAAA4hC,EAAA5hC,OAAA+2C,EAAA/2C,OAEA+3C,EAAA,IAAAh1C,WAAA,GAAA+0C,GACA34B,EAAAy4B,EAAAxwB,EAAAwa,GACAziB,EAAAy4B,EAAAz4B,EAAA43B,GACA,QAAArf,EAAA,EAAA/V,EAAA,EAA8B+V,EAAA,GAAQA,IAAA/V,GAAAm2B,EACtCC,EAAAxkC,IAAA4L,EAAAwC,GAKAphB,EADA,IAAAk0C,GAAA7S,EAAAh/B,SAAA,OACAkvB,QAAAimB,EAAAnW,EAAAh/B,SAAA,QAQA,QADAo1C,EAAA,EACA1E,EAAA,EAAqBA,EAAA,GAAQA,IAC7B0E,GAAA,EACAA,GAAA,EACAA,IAAAz3C,EAAA+yC,KAAA,KACA0E,GAAA,EAEA,IAAAA,EACApW,EAAAwR,GAAA7yC,EAAA,EAAAA,EAAAP,QAEA,IAAAg4C,EACApW,EAAA2S,GAAAh0C,EAAA,EAAAA,EAAAP,QAEA,IAAAg4C,IACApW,EAAAuS,GAAA5zC,EAAA,EAAAA,EAAAP,SAEAuC,IAEA,OAAAq/B,EAAAh/B,SAAA,MAGA,SAAA+0C,KAGA,SAAAjB,EAAAC,EAAAC,GACA,GAAAD,EAAA32C,SAAA42C,EAAA52C,OACA,SAEA,QAAAuC,EAAA,EAAmBA,EAAAo0C,EAAA32C,OAAmBuC,IACtC,GAAAo0C,EAAAp0C,KAAAq0C,EAAAr0C,GACA,SAGA,SAqDA,OAlDAo1C,EAAAjmC,WACAid,KAAA,SAAAvH,EAAA6wB,EAAAlB,GACA,OAAAc,EAAAzwB,EAAA6wB,EAAAlB,IAEAF,mBAAA,SAAAzvB,EACA0vB,EACAC,EACAC,GACA,IAAAC,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,IACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAAujC,EAAA1vB,EAAApnB,QACAi3C,EAAA1jC,IAAAwjC,EAAA3vB,EAAApnB,OAAA82C,EAAA92C,QAEA,OAAA02C,EADAmB,EAAAzwB,EAAA6vB,EAAAF,GACAC,IAEAE,kBAAA,SAAA9vB,EACA+vB,EACAC,GACA,IAAAH,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,GACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAA4jC,EAAA/vB,EAAApnB,QAEA,OAAA02C,EADAmB,EAAAzwB,EAAA6vB,MACAG,IAEAC,YAAA,SAAAjwB,EAAAkwB,EAAAP,EACAQ,GACA,IAAAN,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,IACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAA+jC,EAAAlwB,EAAApnB,QACAi3C,EAAA1jC,IAAAwjC,EAAA3vB,EAAApnB,OAAAs3C,EAAAt3C,QACA,IAAAgE,EAAA6zC,EAAAzwB,EAAA6vB,EAAAF,GAEA,OADA,IAAAV,GAAAryC,GACAstC,aAAAiG,GACA,EACA,IAAAx0C,WAAA,MAGAy0C,WAAA,SAAApwB,EAAAqwB,EACAC,GACA,IAAAT,EAAA,IAAAl0C,WAAAqkB,EAAApnB,OAAA,GACAi3C,EAAA1jC,IAAA6T,EAAA,GACA6vB,EAAA1jC,IAAAkkC,EAAArwB,EAAApnB,QAEA,IAAAgE,EAAA6zC,EAAAzwB,EAAA6vB,MAEA,OADA,IAAAZ,GAAAryC,GACAstC,aAAAoG,GACA,EACA,IAAA30C,WAAA,OAGA40C,EAvHA,GA0HAO,GAAA,WACA,SAAAA,EAAAC,EAAAC,GACAl5C,KAAAi5C,0BACAj5C,KAAAk5C,0BAmBA,OAhBAF,EAAAxmC,WACA2mC,aAAA,SAAAl0B,EAAAnkB,GACA,IAAAo2C,EAAA,IAAAl3C,KAAAk5C,wBACA,WAAAE,GAAAn0B,EAAAnkB,EACA,SAAAsD,EAAAsyC,GACA,OAAAQ,EAAA9E,aAAAhuC,EAAAsyC,MAIA2C,cAAA,SAAA/wC,GACA,IAAA4uC,EAAA,IAAAl3C,KAAAi5C,wBACA70C,EAAAT,EAAA2E,GAEA,OADAlE,EAAA8yC,EAAA9E,aAAAhuC,GAAA,GACArB,EAAAqB,KAGA40C,EAtBA,GAyBAhiB,GAAA,WAuCA,SAAAsiB,EAAAviB,EAAA7O,EAAA4vB,EAAAI,EACAluC,EAAAuvC,EAAAtH,EAAAtf,GACA,IACA6F,EAAAt0B,EADAs1C,EAAA,GAAA1B,EAAAh3C,OAAAi2B,EAAAj2B,OACAi3C,EAAA,IAAAl0C,WAAA21C,GAAAn2C,EAAA,EACA,GAAA6kB,EAEA,IADAhkB,EAAAX,KAAAC,IAAA,GAAA0kB,EAAApnB,QACYuC,EAAAa,IAAOb,EACnB00C,EAAA10C,GAAA6kB,EAAA7kB,GAIA,IADAm1B,EAAA,EACAn1B,EAAA,IACA00C,EAAA10C,KAAAo2C,EAAAjhB,KAGA,IAAAA,EAAA,EAAAt0B,EAAA4zC,EAAAh3C,OAAyC03B,EAAAt0B,IAAOs0B,EAChDuf,EAAA10C,KAAAy0C,EAAAtf,GAMA,IAJAuf,EAAA10C,KAAA,IAAA2G,EACA+tC,EAAA10C,KAAA2G,GAAA,MACA+tC,EAAA10C,KAAA2G,GAAA,OACA+tC,EAAA10C,KAAA2G,IAAA,OACAwuB,EAAA,EAAAt0B,EAAA6yB,EAAAj2B,OAAkC03B,EAAAt0B,IAAOs0B,EACzCuf,EAAA10C,KAAA0zB,EAAAyB,GAEA+gB,GAAA,IAAA5mB,IACAolB,EAAA10C,KAAA,IACA00C,EAAA10C,KAAA,IACA00C,EAAA10C,KAAA,IACA00C,EAAA10C,KAAA,KAEA,IAAAosB,EAAAE,GAAAooB,EAAA,EAAA10C,GACAq2C,EAAAzH,GAAA,EACA,GAAAsH,GAAA,EACA,IAAA/gB,EAAA,EAAiBA,EAAA,KAAQA,EACzB/I,EAAAE,GAAAF,EAAA,EAAAiqB,GAGA,IACAC,EADAC,EAAAnqB,EAAA/rB,SAAA,EAAAg2C,GAGA,GAAAH,GAAA,GACA,IAAAl2C,EAAA,EAAiBA,EAAA,KAAQA,EACzB00C,EAAA10C,GAAAo2C,EAAAp2C,GAEA,IAAAm1B,EAAA,EAAAt0B,EAAA6yB,EAAAj2B,OAAoC03B,EAAAt0B,IAAOs0B,EAC3Cuf,EAAA10C,KAAA0zB,EAAAyB,GAGAmhB,EADA,IAAA5H,GAAA6H,GACA1H,aAAAviB,GAAAooB,EAAA,EAAA10C,IACAa,EAAA01C,EAAA94C,OACA,IAAA4hC,EAAAmX,EAAA,IAAAh2C,WAAAK,GACA,IAAAs0B,EAAA,EAAiBA,GAAA,KAASA,EAAA,CAC1B,IAAAkK,EAAA,EAAmBA,EAAAx+B,IAAOw+B,EAC1BmX,EAAAnX,GAAAkX,EAAAlX,GAAAlK,EAGAmhB,EADA,IAAA5H,GAAA8H,GACA3H,aAAAyH,GAEA,IAAAnhB,EAAA,EAAAt0B,EAAAy1C,EAAA74C,OAAuC03B,EAAAt0B,IAAOs0B,EAC9C,GAAA0f,EAAA1f,KAAAmhB,EAAAnhB,GACA,iBAMA,IAAAA,EAAA,EAAAt0B,GADAy1C,EADA,IAAA5H,GAAA6H,GACA1H,aAAAuH,IACA34C,OAAuC03B,EAAAt0B,IAAOs0B,EAC9C,GAAA0f,EAAA1f,KAAAmhB,EAAAnhB,GACA,YAIA,OAAAohB,EAyCA,SAAA5iB,EAAAvf,EAAAsf,EAAA7O,GACA,IAAA4xB,EAAAriC,EAAA5R,IAAA,UACAT,EAAA00C,IAAA,aAAAA,EAAAh0C,MACAlF,EAAA,6BAEAZ,KAAAyX,OACA,IAAAsiC,EAAAtiC,EAAA5R,IAAA,OACAZ,EAAA80C,IACA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GACA,IAAAA,IACAn5C,EAAA,oCAEAZ,KAAA+5C,YACA,IAAA9H,EAAAx6B,EAAA5R,IAAA,gBACAZ,EAAAgtC,IACAA,EAAA,IAAAA,EAAA,OACArxC,EAAA,sBAIA,IAAAk3C,EAAAn0C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,MACAw0C,EAAAv0C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,MACAsG,EAAAyN,EAAA5R,IAAA,KACA0zC,EAAA9hC,EAAA5R,IAAA,KAEA8sB,GAAA,IAAAonB,GAAA,IAAAA,KACA,IAAAtiC,EAAA5R,IAAA,mBACA7F,KAAA2yB,kBAEA,IACAqnB,EADAC,EAAAt2C,EAAAozB,GAEA7O,IACA8xB,EAAAr2C,EAAAukB,IAGA,IAAA0xB,EACA,OAAAG,EACAH,EAAAN,EAAAW,EAAAD,EACAlC,EAAAI,EAAAluC,EACAuvC,EAAAtH,EAAAtf,OAEA,CACA,IAAAilB,EAAAj0C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,OACA00C,EAAAz0C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,OACAw2C,EAAAv2C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,MACAu0C,EAAAt0C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,OACA60C,EAAA50C,EAAA8T,EAAA5R,IAAA,MAAAnC,SAAA,OACA20C,EAAA10C,EAAA8T,EAAA5R,IAAA,OACA2yC,EAAA70C,EAAA8T,EAAA5R,IAAA,OACAlC,EAAA8T,EAAA5R,IAAA,UACA+zC,EApMA,SAAAL,EAAArxB,EAAA4vB,EACAF,EAAAQ,EAAA8B,EACAhC,EAAAD,EAAAM,EACAF,EAAAG,EAAA2B,GACA,GAAAjyB,EAAA,CACA,IAAAkyB,EAAA72C,KAAAC,IAAA,IAAA0kB,EAAApnB,QACAonB,IAAAxkB,SAAA,EAAA02C,QAEAlyB,KAEA,IAAAmyB,EAOA,GALAA,EADA,IAAAd,EACA,IAAAd,GAEA,IAAAlB,GAGA,CACA,GAAA8C,EAAArC,kBAAA9vB,EAAA+vB,EACAC,GACA,OAAAmC,EAAA/B,WAAApwB,EAAAqwB,EAAAC,GACO,GAAA6B,EAAA1C,mBAAAzvB,EAAA0vB,EACPsC,EACApC,GACA,OAAAuC,EAAAlC,YAAAjwB,EAAAkwB,EAAA8B,EACA7B,GAIA,YAwKAiC,CAAAf,EAAAS,EACAlC,EAAAF,EACAQ,EAAA8B,EACAhC,EAAAD,EACAM,EAAAF,EACAG,GAEA,IAAAoB,IAAA1xB,EACA,UAAA5V,EAAA,oBACAH,EAAAC,eACK,IAAAwnC,GAAA1xB,EAAA,CAIL0xB,EAAAN,EAAAW,EAvGA,SAAA/xB,EAAA4vB,EAAAyB,EAAAtH,GACA,IAAAzZ,EAAAt0B,EAAA6zC,EAAA,IAAAl0C,WAAA,IAAAR,EAAA,EAEA,IADAa,EAAAX,KAAAC,IAAA,GAAA0kB,EAAApnB,QACUuC,EAAAa,IAAOb,EACjB00C,EAAA10C,GAAA6kB,EAAA7kB,GAGA,IADAm1B,EAAA,EACAn1B,EAAA,IACA00C,EAAA10C,KAAAo2C,EAAAjhB,KAEA,IAAA/I,EAAAE,GAAAooB,EAAA,EAAA10C,GACAq2C,EAAAzH,GAAA,EACA,GAAAsH,GAAA,EACA,IAAA/gB,EAAA,EAAiBA,EAAA,KAAQA,EACzB/I,EAAAE,GAAAF,EAAA,EAAAA,EAAA3uB,QAIA,IAAAo3C,EACA,GAAAqB,GAAA,GACArB,EAAAJ,EACA,IAAApV,EAAAmX,EAAA,IAAAh2C,WAAA61C,GACA,IAAAlhB,EAAA,GAAkBA,GAAA,EAAQA,IAAA,CAC1B,IAAAkK,EAAA,EAAmBA,EAAAgX,IAAsBhX,EACzCmX,EAAAnX,GAAAjT,EAAAiT,GAAAlK,EAGA0f,EADA,IAAAnG,GAAA8H,GACA3H,aAAAgG,SAIAA,EADA,IAAAnG,GAAAtiB,EAAA/rB,SAAA,EAAAg2C,IACAxH,aAAA4F,GAEA,OAAAI,EAoEAqC,CAAAP,EAAAlC,EACAyB,EAAAtH,GAEA6F,EAAAI,EAAAluC,EACAuvC,EAAAtH,EAAAtf,GAGA,IAAAinB,EACA,UAAAtnC,EAAA,qBACAH,EAAAE,oBAGArS,KAAA45C,gBAEAG,GAAA,IACA/5C,KAAAw6C,GAAA/iC,EAAA5R,IAAA,MACA7F,KAAAy6C,KAAAhjC,EAAA5R,IAAA,SAAA60C,EACA16C,KAAA26C,KAAAljC,EAAA5R,IAAA,SAAA60C,EACA16C,KAAA46C,IAAAnjC,EAAA5R,IAAA,QAAA7F,KAAA26C,MAIA,SAAAE,EAAA9jC,EAAA8a,EAAA+nB,EAAAkB,GACA,IAAAz3C,EAAAa,EAAAY,EAAA,IAAAjB,WAAA+1C,EAAA94C,OAAA,GACA,IAAAuC,EAAA,EAAAa,EAAA01C,EAAA94C,OAAyCuC,EAAAa,IAAOb,EAChDyB,EAAAzB,GAAAu2C,EAAAv2C,GAEAyB,EAAAzB,KAAA,IAAA0T,EACAjS,EAAAzB,KAAA0T,GAAA,MACAjS,EAAAzB,KAAA0T,GAAA,OACAjS,EAAAzB,KAAA,IAAAwuB,EACA/sB,EAAAzB,KAAAwuB,GAAA,MACAipB,IACAh2C,EAAAzB,KAAA,IACAyB,EAAAzB,KAAA,GACAyB,EAAAzB,KAAA,IACAyB,EAAAzB,KAAA,IAGA,OADAssB,GAAA7qB,EAAA,EAAAzB,GACAK,SAAA,EAAAH,KAAAC,IAAAo2C,EAAA94C,OAAA,OAGA,SAAAi6C,EAAAP,EAAA10C,EAAAiR,EAAA8a,EAAA/sB,GACA,IACAk2C,EADAC,EAAAT,EAAA30C,IAAAC,QAKA,OAHA,OAAAm1C,QAAAh4C,IAAAg4C,IACAD,EAAAC,EAAAp1C,IAAA,QAEAm1C,GAAA,SAAAA,EAAAl1C,KAKA,OAAAk1C,EAAAl1C,KACA,WACA,WAAAisC,GAAA8I,EAAA9jC,EAAA8a,EAAA/sB,GAAA,KAGA,UAAAk2C,EAAAl1C,KACA,WACA,WAAAyvC,GAAAsF,EAAA9jC,EAAA8a,EAAA/sB,GAAA,KAGA,UAAAk2C,EAAAl1C,KACA,WACA,WAAAqxC,GAAAryC,SAGAlE,EAAA,yBAnBA,WACA,WAAA00C,IAzQA,IAAAmE,EAAA,IAAA51C,YACA,2BACA,wBACA,2BACA,+BAkJA62C,EAAAr1C,GAAAQ,IAAA,YA2JA,OAnBAmxB,EAAAxkB,WACA2nB,sBACA,SAAApjB,EAAA8a,GACA,OAAA7xB,KAAA+5C,WAAA,IAAA/5C,KAAA+5C,UACA,WAAAf,GACA+B,EAAA/6C,KAAAw6C,GAAAx6C,KAAAy6C,KACA1jC,EAAA8a,EAAA7xB,KAAA45C,eACAmB,EAAA/6C,KAAAw6C,GAAAx6C,KAAA26C,KACA5jC,EAAA8a,EAAA7xB,KAAA45C,gBAGA,IAAA90C,EAAA+1C,EAAA9jC,EAAA8a,EAAA7xB,KAAA45C,eAAA,GACAsB,EAAA,WACA,WAAAnJ,GAAAjtC,IAEA,WAAAk0C,GAAAkC,OAIAlkB,EAlTA,GAqTAmkB,IACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAGAC,GAAA,WAEA,SAAAA,IACA/6C,EAAA,uCAwCA,OArCA+6C,EAAAnpC,WAGAopC,WAAA,SAAAC,GACAj7C,EAAA,qCAAAi7C,KAIAF,EAAAG,aAAA,SAAAC,EAAA1e,EAAA5V,EACAqiB,GAEA,IAAAryB,EAAAxR,EAAA81C,KAAAtkC,KAAAskC,EACAr2C,EAAA+R,EAAA5R,IAAA,eAEA,IACA,OAAAH,GACA,KAAAy1C,GAAAE,MACA,KAAAF,GAAAG,OAEA,WAAAU,GAAAC,YAAAxkC,EAAA4lB,EAAA5V,EAAAqiB,GACA,KAAAqR,GAAAI,eACA,KAAAJ,GAAAK,kBACA,KAAAL,GAAAM,iBACA,KAAAN,GAAAO,kBACA,WAAAM,GAAAE,KAAAH,EAAA1e,EAAA5V,EAAAqiB,GACA,QACA,UAAA1oC,MAAA,wBAAAsE,IAEK,MAAA2W,GACL,GAAAA,aAAApJ,GACA,MAAAoJ,EAIA,OAFA3a,EAAAC,OAAAC,EAAAiQ,gBACAnR,EAAA2b,GACA,IAAA2/B,GAAAG,QAGAR,EA3CA,GA8CAK,MAMAA,GAAAI,aAAA,IAIAJ,GAAAC,YAAA,WACA,SAAAA,EAAAxkC,EAAA4lB,EAAA5V,EAAAqiB,GACA9pC,KAAAq9B,SACAr9B,KAAAq8C,UAAA5kC,EAAA5R,IAAA,UACA7F,KAAAs8C,YAAA7kC,EAAA5R,IAAA,eACA7F,KAAA0F,KAAA,UACA,IAAAmkC,EAAApyB,EAAA5R,IAAA,mBACAgkC,EAAAzB,GAAA5a,MAAAqc,EAAApiB,EAAAqiB,GACA9pC,KAAA6pC,KAEA,IAAA0S,EAAA,EAAAzH,EAAA,EACA,GAAAr9B,EAAAC,IAAA,WACA,IAAA8kC,EAAA/kC,EAAA5R,IAAA,UACA02C,EAAAC,EAAA,GACA1H,EAAA0H,EAAA,GAGA,IAAAC,GAAA,EAAAC,GAAA,EACA,GAAAjlC,EAAAC,IAAA,WACA,IAAAilC,EAAAllC,EAAA5R,IAAA,UACA42C,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAGA,KAAA38C,KAAAs8C,cAAAnB,GAAAG,QACAmB,GAAAC,GAAA,CAGA,IAAAE,EAAA58C,KAAAq8C,UAAA,GACAQ,EAAA78C,KAAAq8C,UAAA,GACAS,EAAA98C,KAAAq8C,UAAA,GACAU,EAAA/8C,KAAAq8C,UAAA,GACAW,EAAAh9C,KAAAq8C,UAAA,GACAY,EAAAj9C,KAAAq8C,UAAA,GACAa,EAAA35C,KAAA2S,MAAA0mC,EAAAG,IAAAH,EAAAG,IAAAF,EAAAG,IAAAH,EAAAG,IACAF,GAAAG,EAAAC,GACAD,GAAAH,EAAAI,GACAx8C,EAAA,gCAIAV,KAAAy8C,cACAz8C,KAAA08C,YAEA,IAAAvb,EAAA1pB,EAAA5R,IAAA,YACAusB,EAAAuN,GAAAuB,WAAAzZ,EAAA0Z,GAKAmC,EAAAwR,EAAAyH,EACAY,EAAA7Z,EAAA,GAEA8Z,EAAAp9C,KAAAo9C,cAGA,GAAAb,GAAAzH,GAAAqI,GAAA,EAGAh9C,EAAA,2BAHA,CASA,QADAk9C,EADAzpB,EAAA,IAAA+P,aAAAkG,EAAAR,UAAAiU,EAAA,IAAA3Z,aAAA,GAEAtgC,EAAAk5C,EAAoBl5C,GAAAyxC,EAASzxC,GAAA85C,EAAA,CAC7BG,EAAA,GAAAj6C,EACA+uB,EAAAkrB,EAAA,EAAA1pB,EAAA,GACAypB,EAAAxT,EAAAxB,OAAAzU,EAAA,GACA,IAAA2pB,EAAAhpC,GAAAE,WAAA4oC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAD,EAAAp8C,OAAAqC,EAAAk5C,GAAAjZ,EAAAia,IAGA,IAAAC,EAAA,cACA/lC,EAAAC,IAAA,gBACA2lC,EAAAxT,EAAAxB,OAAA5wB,EAAA5R,IAAA,iBACA23C,EAAAjpC,GAAAE,WAAA4oC,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGAZ,IAGAW,EAAAhmC,SAAA,EAAAomC,IACAJ,EAAA,OAAApB,GAAAI,cAEAM,IAEAU,IAAAt8C,OAAA,OAAAk7C,GAAAI,aACAgB,EAAAp8C,MAAA,EAAAw8C,KAGAx9C,KAAAo9C,cAkCA,OA/BAnB,EAAAzpC,WACA8tB,MAAA,WACA,IAEA56B,EAAA+3C,EAAApoC,EAAAqoC,EAAAZ,EAFAT,EAAAr8C,KAAAq8C,UACAC,EAAAt8C,KAAAs8C,YAEAA,IAAAnB,GAAAE,OACAoC,GAAApB,EAAA,GAAAA,EAAA,IACAhnC,GAAAgnC,EAAA,GAAAA,EAAA,IACAqB,EAAA,KACAZ,EAAA,KACAp3C,EAAA,SACO42C,IAAAnB,GAAAG,QACPmC,GAAApB,EAAA,GAAAA,EAAA,IACAhnC,GAAAgnC,EAAA,GAAAA,EAAA,IACAqB,EAAArB,EAAA,GACAS,EAAAT,EAAA,GACA32C,EAAA,UAEA9E,EAAA,4BAAA07C,GAGA,IAAAjf,EAAAr9B,KAAAq9B,OAMA,OALAA,IACAogB,EAAAlpC,GAAAQ,eAAA0oC,EAAApgB,GACAhoB,EAAAd,GAAAQ,eAAAM,EAAAgoB,KAGA,cAAA33B,EAAA1F,KAAAo9C,WAAAK,EAAApoC,EAAAqoC,EAAAZ,KAIAb,EA7HA,GAkIAD,GAAAE,KAAA,WACA,SAAAyB,EAAA14B,EAAA24B,GACA59C,KAAAilB,SACAjlB,KAAA49C,UACA59C,KAAAqT,OAAA,EACArT,KAAA42C,aAAA,EAEA,IAAAvN,EAAAuU,EAAAvU,SACArpC,KAAA69C,YAAA,IAAAla,aAAA0F,GACA,IAAAyU,EAAAF,EAAAG,WACA/9C,KAAAg+C,cAAAJ,EAAAK,QAAA,IAAAta,aAAAma,GACA99C,KAAA69C,YA8KA,SAAAK,EAAAC,EAAA/pC,GACA,IAAAgqC,EAAAD,EAAAE,QAAAjqC,GACAtS,EAAA,UAAAs8C,EAAA14C,KAAA,gCAEA,IAAA44C,EAAAH,EAAAG,OAAAC,EAAAJ,EAAAI,OACAC,EAAAJ,EAAAE,OACAG,EAAAL,EAAAG,OAEAG,EAAAn7C,KAAAC,IAAA86C,EAAAE,EAAA,OAAAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,QAAAF,EAAAE,EAAA,SACAG,EAAAp7C,KAAAC,IAAA86C,EAAAE,EAAA,OAAAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,QAAAF,EAAAE,EAAA,SACAI,EAAAr7C,KAAAkS,IAAA6oC,EAAAE,EAAA,OAAAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,QAAAF,EAAAE,EAAA,SACAK,EAAAt7C,KAAAkS,IAAA6oC,EAAAE,EAAA,OAAAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,QAAAF,EAAAE,EAAA,SACAM,EAAAv7C,KAAAsf,MAAA+7B,EAAAF,GAAAK,GACAZ,EAAA7gB,OAAA,GAAA6gB,EAAA7gB,OAAA,KACAwhB,EAAAv7C,KAAAkS,IAAAupC,EACAz7C,KAAAC,IAAAy7C,EAAAH,IACA,IAAAI,EAAA37C,KAAAsf,MAAAg8B,EAAAF,GAAAI,GACAZ,EAAA7gB,OAAA,GAAA6gB,EAAA7gB,OAAA,KACA4hB,EAAA37C,KAAAkS,IAAAupC,EACAz7C,KAAAC,IAAAy7C,EAAAC,IAUA,QARAC,EAAAL,EAAA,EACAM,EAAA,IAAA/M,YAAA6M,EAAA,GAAAC,GACAE,EAAA,IAAAhN,YAAA6M,EAAA,GAAAC,GACAzc,EAAA,EACA4c,EAAA,IAAAz7C,WAAA,GAAA07C,EAAA,IAAA17C,WAAA,GACAu/B,EAAAmb,EAAAE,EAAA,IAAApb,EAAAkb,EAAAE,EAAA,IACAe,EAAAjB,EAAAE,EAAA,IAAAgB,EAAAlB,EAAAE,EAAA,IACAiB,EAAAC,EAAAT,GAAAU,EAAAD,EAAAb,GACAe,EAAA,EAAqBA,GAAAX,EAAiBW,IAAA,CACtCP,EAAA,IAAAlc,EAAA,IAAA8b,EAAAW,GAAAL,EAAA,GAAAK,GAAAX,EAAA,EACAI,EAAA,IAAAlc,EAAA,IAAA8b,EAAAW,GAAAL,EAAA,GAAAK,GAAAX,EAAA,EACAI,EAAA,IAAAlc,EAAA,IAAA8b,EAAAW,GAAAL,EAAA,GAAAK,GAAAX,EAAA,EAEAK,EAAA,IAAAlc,EAAA,IAAA6b,EAAAW,GAAAJ,EAAA,GAAAI,GAAAX,EAAA,EACAK,EAAA,IAAAlc,EAAA,IAAA6b,EAAAW,GAAAJ,EAAA,GAAAI,GAAAX,EAAA,EACAK,EAAA,IAAAlc,EAAA,IAAA6b,EAAAW,GAAAJ,EAAA,GAAAI,GAAAX,EAAA,EAEA,QAAAY,EAAA,EAAuBA,GAAAhB,EAAiBgB,IAAApd,IACxC,OAAAmd,OAAAX,GACA,IAAAY,OAAAhB,EADA,CAMA,QAFA76C,EAAA,EAAAyV,EAAA,EACAgzB,EAAA,EACArpC,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAAm1B,EAAA,EAAyBA,GAAA,EAAQA,IAAAkU,IAAA,CACjC,IAAAz3B,EAAAyqC,EAAAG,GAAAx8C,GAAAu8C,EAAAE,GAAAtnB,GACAv0B,GAAAq6C,EAAAE,EAAA9R,IAAA,GAAAz3B,EACAyE,GAAA4kC,EAAAE,EAAA9R,IAAA,GAAAz3B,EAGAmqC,EAAA1c,GAAA4b,EAAAx9C,OACAw9C,EAAAt9C,MAAAiD,EAAAyV,IACA2lC,EAAA3c,GAAA6b,EAAAz9C,OACA,IAAAi/C,EAAA,IAAAl8C,WAAA,GACAk8C,EAAA,IAAAT,EAAA,IAAAR,EAAAgB,GAAAP,EAAA,GAAAO,GAAAhB,EAAA,EACAiB,EAAA,IAAAT,EAAA,IAAAR,EAAAgB,GAAAP,EAAA,GAAAO,GAAAhB,EAAA,EACAiB,EAAA,IAAAT,EAAA,IAAAR,EAAAgB,GAAAP,EAAA,GAAAO,GAAAhB,EAAA,EACAP,EAAAv9C,KAAA++C,IAGAX,EAAA,GAAAZ,EAAA,GACAa,EAAA,GAAAZ,EAAA,GACAW,EAAAN,GAAAN,EAAA,GACAa,EAAAP,GAAAL,EAAA,GACAW,EAAAD,EAAAD,GAAAV,EAAA,IACAa,EAAAF,EAAAD,GAAAT,EAAA,GACAW,EAAAD,EAAAD,EAAAJ,GAAAN,EAAA,IACAa,EAAAF,EAAAD,EAAAJ,GAAAL,EAAA,GAEAN,EAAAE,QAAAjqC,IACA1O,KAAA,UACA44C,OAAAc,EACAb,OAAAc,EACAF,kBA8KA,SAAAa,EAAA7B,GAGA,QAFA5gB,EAAA4gB,EAAAG,OAAA,MAAA9gB,EAAA2gB,EAAAG,OAAA,MACA7gB,EAAAF,EAAAG,EAAAF,EACAn6B,EAAA,EAAAwE,EAAAs2C,EAAAG,OAAAx9C,OAA4CuC,EAAAwE,EAAQxE,IAAA,CACpD,IAAAY,EAAAk6C,EAAAG,OAAAj7C,GAAA,GAAAqW,EAAAykC,EAAAG,OAAAj7C,GAAA,GACAk6B,IAAAt5B,IAAAs5B,EACAC,IAAA9jB,IAAA8jB,EACAC,IAAAx5B,IAAAw5B,EACAC,IAAAhkB,IAAAgkB,EAEAygB,EAAA7gB,QAAAC,EAAAC,EAAAC,EAAAC,GAmCA,SAAAwe,EAAAj3B,EAAAoY,EAAA5V,EAAAqiB,GACAhoC,EAAAmE,EAAAgf,GAAA,6BACA,IAAAxN,EAAAwN,EAAAxN,KACAzX,KAAAq9B,SACAr9B,KAAAs8C,YAAA7kC,EAAA5R,IAAA,eACA7F,KAAA0F,KAAA,UACA1F,KAAAo9B,KAAA3lB,EAAA5R,IAAA,QACA,IAAAgkC,EAAApyB,EAAA5R,IAAA,mBACAgkC,EAAAzB,GAAA5a,MAAAqc,EAAApiB,EAAAqiB,GACA9pC,KAAA6pC,KACA7pC,KAAAw9C,WAAA/lC,EAAAC,IAAA,cACAmyB,EAAAxB,OAAA5wB,EAAA5R,IAAA,sBAEA,IAAAs7B,EAAA1pB,EAAA5R,IAAA,YACAusB,EAAA+O,EAAAxB,GAAAuB,WAAAzZ,EAAA0Z,GAAA,KAEAnhC,KAAAs+C,UACAt+C,KAAAu+C,UACAv+C,KAAAq+C,WAEA,IASA4B,EAAA,IAAAtC,EAAA14B,GARAi7B,kBAAAzoC,EAAA5R,IAAA,qBACAs6C,iBAAA1oC,EAAA5R,IAAA,oBACAu6C,YAAA3oC,EAAA5R,IAAA,eACAi8B,OAAArqB,EAAA5R,IAAA,UACAo4C,QAAA7rB,EACA2rB,WAAAlU,EACAR,SAAAjX,EAAA,EAAAyX,EAAAR,WAIAgX,GAAA,EACA,OAAArgD,KAAAs8C,aACA,KAAAnB,GAAAI,gBAraA,SAAA4C,EAAA8B,GAMA,IALA,IAAA3B,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACAlZ,KACAib,KACAC,EAAA,EACAN,EAAAO,SAAA,CACA,IAAA3N,EAAAoN,EAAAQ,WACAC,EAAAT,EAAAU,iBACA/sB,EAAAqsB,EAAAW,iBACA,OAAAL,EAAA,CAEA,OADAz+C,EAAA,GAAA+wC,MAAA,wBACAA,GACA,OACA0N,EAAA,EACA,MACA,OACAD,EAAAt/C,KAAAs/C,IAAAx/C,OAAA,GAAAw/C,IAAAx/C,OAAA,IACAy/C,EAAA,EACA,MACA,OACAD,EAAAt/C,KAAAs/C,IAAAx/C,OAAA,GAAAw/C,IAAAx/C,OAAA,IACAy/C,EAAA,EAGAlb,EAAArkC,KAAA6xC,GAEAyN,EAAAt/C,KAAAs9C,EAAAx9C,QACAw9C,EAAAt9C,KAAA0/C,GACAnC,EAAAv9C,KAAA4yB,GACA2sB,IAEAN,EAAAY,QAGA,IAAAC,EAAA,IAAAzO,WAAAiO,GAEAnC,EAAAE,QAAAr9C,MACA0E,KAAA,YACA44C,OAAAwC,EACAvC,OAAAuC,IA8XAC,CAAA/gD,KAAAigD,GACA,MACA,KAAA9E,GAAAK,kBACA,IAAA2D,EAAA,EAAA1nC,EAAA5R,IAAA,kBACA/D,EAAAq9C,GAAA,4BA9XA,SAAAhB,EAAA8B,EAAAd,GAIA,IAHA,IAAAb,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACA+B,KACAL,EAAAO,SAAA,CACA,IAAAE,EAAAT,EAAAU,iBACA/sB,EAAAqsB,EAAAW,iBACAN,EAAAt/C,KAAAs9C,EAAAx9C,QACAw9C,EAAAt9C,KAAA0/C,GACAnC,EAAAv9C,KAAA4yB,GAGA,IAAAktB,EAAA,IAAAzO,WAAAiO,GAEAnC,EAAAE,QAAAr9C,MACA0E,KAAA,UACA44C,OAAAwC,EACAvC,OAAAuC,EACA3B,mBA6WA6B,CAAAhhD,KAAAigD,EAAAd,GACA,MACA,KAAAhE,GAAAM,kBAhQA,SAAA0C,EAAA8B,GAMA,IAJA,IAAA3B,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACA+B,EAAA,IAAAjO,WAAA,IACAxI,EAAA,IAAAwI,WAAA,GACA4N,EAAAO,SAAA,CACA,IAAA3N,EAAAoN,EAAAQ,WACA3+C,EAAA,GAAA+wC,MAAA,wBACA,IAAAxvC,EAAAwE,EACA22C,EAAAF,EAAAx9C,OACA,IAAAuC,EAAA,EAAAwE,EAAA,IAAAgrC,EAAA,KAA0CxvC,EAAAwE,EAAQxE,IAClDi7C,EAAAt9C,KAAAi/C,EAAAU,kBAEA,IAAAlC,EAAAF,EAAAz9C,OACA,IAAAuC,EAAA,EAAAwE,EAAA,IAAAgrC,EAAA,IAAyCxvC,EAAAwE,EAAQxE,IACjDk7C,EAAAv9C,KAAAi/C,EAAAW,kBAEA,IAAAxL,EAAAjD,EAAAgD,EAAA8L,EACA,OAAApO,GACA,OACAyN,EAAA,IAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAC1B8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,EAC1B8B,EAAA,GAAA9B,EAAsB8B,EAAA,GAAA9B,EAAA,GAAsB8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,EAC9D3U,EAAA,GAAA4U,EAAA,EAAyB5U,EAAA,GAAA4U,EAAA,EACzB5U,EAAA,GAAA4U,EAAqB5U,EAAA,GAAA4U,EAAA,EACrB,MACA,OACArJ,EAAAkL,EAAA,IAAwBnO,EAAAmO,EAAA,IAAenL,EAAAmL,EAAA,IAAeW,EAAAX,EAAA,IACtDA,EAAA,IAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAC1B8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAC1B8B,EAAA,GAAAlL,EAAwBkL,EAAA,GAAAnO,EAAiBmO,EAAA,GAAAnL,EAAkBmL,EAAA,GAAAW,EAC3D7L,EAAAvL,EAAA,GAAuBsI,EAAAtI,EAAA,GACvBA,EAAA,GAAA4U,EAAA,EAAyB5U,EAAA,GAAA4U,EACzB5U,EAAA,GAAAuL,EAAuBvL,EAAA,GAAAsI,EACvB,MACA,OACAmO,EAAA,IAAAA,EAAA,IAA0BA,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAC5D8B,EAAA,GAAAA,EAAA,IAA0BA,EAAA,IAAA9B,EAAA,EAC1B8B,EAAA,GAAAA,EAAA,GAAyBA,EAAA,GAAA9B,EAAA,EACzB8B,EAAA,GAAAA,EAAA,GAAyBA,EAAA,GAAA9B,EAAc8B,EAAA,GAAA9B,EAAA,EAAqB8B,EAAA,GAAA9B,EAAA,EAC5D3U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAA4U,EAAA,EACxB5U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAA4U,EACxB,MACA,OACA6B,EAAA,IAAAA,EAAA,GAAyBA,EAAA,IAAAA,EAAA,GAAiBA,EAAA,IAAAA,EAAA,GAAkBA,EAAA,IAAAA,EAAA,GAC5DA,EAAA,GAAA9B,EAAsB8B,EAAA,IAAA9B,EAAA,EACtB8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,EAC1B8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,EAAiB8B,EAAA,GAAA9B,EAAA,EAAkB8B,EAAA,GAAA9B,EAAA,EAC7D3U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAAA,EAAA,GACxBA,EAAA,GAAA4U,EAAqB5U,EAAA,GAAA4U,EAAA,EAIrB6B,EAAA,GAAAhC,EAAAx9C,OACAw9C,EAAAt9C,QACA,EAAAs9C,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,aACA,EAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,aAEAA,EAAA,GAAAhC,EAAAx9C,OACAw9C,EAAAt9C,QACA,EAAAs9C,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,cACA,EAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,cAEAA,EAAA,GAAAhC,EAAAx9C,OACAw9C,EAAAt9C,QACA,EAAAs9C,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,OACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,aACA,EAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,OACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,aAEAA,EAAA,IAAAhC,EAAAx9C,OACAw9C,EAAAt9C,QACA,EAAAs9C,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,OACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,aACA,EAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,OACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,SACA,GAAAhC,EAAAgC,EAAA,QAAAhC,EAAAgC,EAAA,QACA,GAAAhC,EAAAgC,EAAA,OAAAhC,EAAAgC,EAAA,aAEAnC,EAAAE,QAAAr9C,MACA0E,KAAA,QACA44C,OAAA,IAAAjM,WAAAiO,GACA/B,OAAA,IAAAlM,WAAAxI,MA0JAqX,CAAAlhD,KAAAigD,GACAI,GAAA,EACA,MACA,KAAAlF,GAAAO,mBAxJA,SAAAyC,EAAA8B,GAKA,IAJA,IAAA3B,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACA+B,EAAA,IAAAjO,WAAA,IACAxI,EAAA,IAAAwI,WAAA,GACA4N,EAAAO,SAAA,CACA,IAAA3N,EAAAoN,EAAAQ,WACA3+C,EAAA,GAAA+wC,MAAA,wBACA,IAAAxvC,EAAAwE,EACA22C,EAAAF,EAAAx9C,OACA,IAAAuC,EAAA,EAAAwE,EAAA,IAAAgrC,EAAA,MAA2CxvC,EAAAwE,EAAQxE,IACnDi7C,EAAAt9C,KAAAi/C,EAAAU,kBAEA,IAAAlC,EAAAF,EAAAz9C,OACA,IAAAuC,EAAA,EAAAwE,EAAA,IAAAgrC,EAAA,IAAyCxvC,EAAAwE,EAAQxE,IACjDk7C,EAAAv9C,KAAAi/C,EAAAW,kBAEA,IAAAxL,EAAAjD,EAAAgD,EAAA8L,EACA,OAAApO,GACA,OACAyN,EAAA,IAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,IAAA9B,EAAA,GAAkB8B,EAAA,IAAA9B,EAAA,EAC9D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,EAC9D8B,EAAA,GAAA9B,EAAsB8B,EAAA,GAAA9B,EAAA,GAAsB8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,EAC9D3U,EAAA,GAAA4U,EAAA,EAAyB5U,EAAA,GAAA4U,EAAA,EACzB5U,EAAA,GAAA4U,EAAqB5U,EAAA,GAAA4U,EAAA,EACrB,MACA,OACArJ,EAAAkL,EAAA,IAAwBnO,EAAAmO,EAAA,IAAenL,EAAAmL,EAAA,IAAeW,EAAAX,EAAA,IACtDA,EAAA,IAAA9B,EAAA,EAA0B8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,IAAA9B,EAAA,GAAkB8B,EAAA,IAAA9B,EAAA,EAC9D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,EAAiB8B,EAAA,GAAA9B,EAAA,EAAkB8B,EAAA,GAAA9B,EAC7D8B,EAAA,GAAAlL,EAAwBkL,EAAA,GAAAnO,EAAiBmO,EAAA,GAAAnL,EAAkBmL,EAAA,GAAAW,EAC3D7L,EAAAvL,EAAA,GAAuBsI,EAAAtI,EAAA,GACvBA,EAAA,GAAA4U,EAAA,EAAyB5U,EAAA,GAAA4U,EACzB5U,EAAA,GAAAuL,EAAuBvL,EAAA,GAAAsI,EACvB,MACA,OACAmO,EAAA,IAAAA,EAAA,IAA0BA,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,EAC5D8B,EAAA,GAAAA,EAAA,IAA0BA,EAAA,GAAA9B,EAAA,EAAiB8B,EAAA,IAAA9B,EAAA,GAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAAA,EAAA,GAAyBA,EAAA,GAAA9B,EAAA,EAAkB8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,EAC7D8B,EAAA,GAAAA,EAAA,GAAyBA,EAAA,GAAA9B,EAAc8B,EAAA,GAAA9B,EAAA,EAAqB8B,EAAA,GAAA9B,EAAA,EAC5D3U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAA4U,EAAA,EACxB5U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAA4U,EACxB,MACA,OACA6B,EAAA,IAAAA,EAAA,GAAyBA,EAAA,IAAAA,EAAA,GAAiBA,EAAA,IAAAA,EAAA,GAAkBA,EAAA,IAAAA,EAAA,GAC5DA,EAAA,GAAA9B,EAAsB8B,EAAA,GAAA9B,EAAA,EAAqB8B,EAAA,IAAA9B,EAAA,EAAkB8B,EAAA,IAAA9B,EAAA,EAC7D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,GAAkB8B,EAAA,GAAA9B,EAAA,EAC9D8B,EAAA,GAAA9B,EAAA,EAA0B8B,EAAA,GAAA9B,EAAA,EAAiB8B,EAAA,GAAA9B,EAAA,EAAkB8B,EAAA,GAAA9B,EAAA,EAC7D3U,EAAA,GAAAA,EAAA,GAAwBA,EAAA,GAAAA,EAAA,GACxBA,EAAA,GAAA4U,EAAqB5U,EAAA,GAAA4U,EAAA,EAGrBN,EAAAE,QAAAr9C,MACA0E,KAAA,QACA44C,OAAA,IAAAjM,WAAAiO,GACA/B,OAAA,IAAAlM,WAAAxI,MAgGAsX,CAAAnhD,KAAAigD,GACAI,GAAA,EACA,MACA,QACAz/C,EAAA,0BAIA,GAAAy/C,EAAA,CAEAL,EAAAhgD,MACA,QAAAqD,EAAA,EAAAwE,EAAA7H,KAAAq+C,QAAAv9C,OAA+CuC,EAAAwE,EAAQxE,IACvD66C,EAAAl+C,KAAAqD,GAIA28C,EAAAhgD,MA9FA,SAAAm+C,GACA,IAAA96C,EAAAwE,EAAA2wB,EAAAyG,EAEAqf,EAAAH,EAAAG,OACA8C,EAAA,IAAAzd,aAAA,EAAA2a,EAAAx9C,QACA,IAAAuC,EAAA,EAAAm1B,EAAA,EAAA3wB,EAAAy2C,EAAAx9C,OAA0CuC,EAAAwE,EAAQxE,IAAA,CAClD,IAAAg+C,EAAA/C,EAAAj7C,GACA+9C,EAAA5oB,KAAA6oB,EAAA,GACAD,EAAA5oB,KAAA6oB,EAAA,GAEAlD,EAAAG,OAAA8C,EAEA,IAAA7C,EAAAJ,EAAAI,OACA+C,EAAA,IAAAz9C,WAAA,EAAA06C,EAAAz9C,QACA,IAAAuC,EAAA,EAAAm1B,EAAA,EAAA3wB,EAAA02C,EAAAz9C,OAA0CuC,EAAAwE,EAAQxE,IAAA,CAClD,IAAA0S,EAAAwoC,EAAAl7C,GACAi+C,EAAA9oB,KAAAziB,EAAA,GACAurC,EAAA9oB,KAAAziB,EAAA,GACAurC,EAAA9oB,KAAAziB,EAAA,GAEAooC,EAAAI,OAAA+C,EAEA,IAAAjD,EAAAF,EAAAE,QACA,IAAAh7C,EAAA,EAAAwE,EAAAw2C,EAAAv9C,OAAoCuC,EAAAwE,EAAQxE,IAAA,CAC5C,IAAA+6C,EAAAC,EAAAh7C,GAAAi9C,EAAAlC,EAAAE,OAAAzU,EAAAuU,EAAAG,OACA,IAAA/lB,EAAA,EAAAyG,EAAAqhB,EAAAx/C,OAAiC03B,EAAAyG,EAAQzG,IACzC8nB,EAAA9nB,IAAA,EACAqR,EAAArR,IAAA,GAqEA+oB,CAAAvhD,MAthBA29C,EAAAnrC,WACAguC,cACA,GAAAxgD,KAAAilB,OAAAhd,IACA,OAAAjI,KAAAilB,OAAAxC,IAAAziB,KAAAilB,OAAAhd,IAEA,GAAAjI,KAAA42C,aAAA,EACA,SAEA,IAAA4K,EAAAxhD,KAAAilB,OAAAjB,UACA,QAAAw9B,EAAA,KAGAxhD,KAAAqT,OAAAmuC,EACAxhD,KAAA42C,aAAA,GACA,IAEA6K,SAAA,SAAAv9C,GACA,IAAAmP,EAAArT,KAAAqT,OACAujC,EAAA52C,KAAA42C,aACA,QAAA1yC,EAAA,CACA,OAAA0yC,EACA,OAAA52C,KAAAilB,OAAAjB,WAAA,GACAhkB,KAAAilB,OAAAjB,WAAA,GAAAhkB,KAAAilB,OAAAjB,WAAA,EACAhkB,KAAAilB,OAAAjB,aAAA,EAEA3Q,KAAA,GAAArT,KAAAilB,OAAAjB,WAAA,GACAhkB,KAAAilB,OAAAjB,WAAA,EAAAhkB,KAAAilB,OAAAjB,UACA,IAAAw9B,EAAAxhD,KAAAilB,OAAAjB,UAEA,OADAhkB,KAAAqT,OAAAmuC,GAAA,GAAA5K,GAAA,GACAvjC,GAAA,EAAAujC,GACA,IAAA4K,IAAA5K,KAAA,EAEA,OAAA1yC,GAAA,IAAA0yC,EACA,OAAA52C,KAAAilB,OAAAjB,UAEA,KAAA4yB,EAAA1yC,GACAmP,KAAA,EAAArT,KAAAilB,OAAAjB,UACA4yB,GAAA,EAKA,OAHAA,GAAA1yC,EACAlE,KAAA42C,eACA52C,KAAAqT,UAAA,GAAAujC,GAAA,EACAvjC,GAAAujC,GAEAiK,MAAA,WACA7gD,KAAAqT,OAAA,EACArT,KAAA42C,aAAA,GAEA6J,SAAA,WACA,OAAAzgD,KAAAyhD,SAAAzhD,KAAA49C,QAAAwC,cAEAO,eAAA,WACA,IAAAT,EAAAlgD,KAAA49C,QAAAsC,kBACAwB,EAAA1hD,KAAAyhD,SAAAvB,GACAyB,EAAA3hD,KAAAyhD,SAAAvB,GACApe,EAAA9hC,KAAA49C,QAAA9b,OACAtpB,EAAA0nC,EAAA,UAAAA,GAAA,GACA,uBACA,OACAwB,EAAAlpC,GAAAspB,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACA6f,EAAAnpC,GAAAspB,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAGA8e,eAAA,WAOA,QANAvX,EAAArpC,KAAA49C,QAAAvU,SACA8W,EAAAngD,KAAA49C,QAAAuC,iBACA3nC,EAAA2nC,EAAA,UAAAA,GAAA,GACA,uBACAre,EAAA9hC,KAAA49C,QAAA9b,OACA8f,EAAA5hD,KAAA69C,YACAx6C,EAAA,EAAAm1B,EAAA,EAA4Bn1B,EAAAgmC,EAAchmC,IAAAm1B,GAAA,GAC1C,IAAAimB,EAAAz+C,KAAAyhD,SAAAtB,GACAyB,EAAAv+C,GAAAo7C,EAAAjmC,GAAAspB,EAAAtJ,EAAA,GAAAsJ,EAAAtJ,IAAAsJ,EAAAtJ,GAEA,IAAA5E,EAAA5zB,KAAAg+C,cAIA,OAHAh+C,KAAA49C,QAAAK,SACAj+C,KAAA49C,QAAAK,QAAA2D,EAAA,EAAAhuB,EAAA,GAEA5zB,KAAA49C,QAAAG,WAAA1V,OAAAzU,EAAA,KAsEA,IAAAorB,EAAA,EACAC,EAAA,GAEAF,EAAA,GAEAY,EAAA,WAUA,IAAArpB,KACA,gBAAA9b,GAIA,OAHA8b,EAAA9b,KACA8b,EAAA9b,GAZA,SAAAA,GAEA,QADAqnC,KACAx+C,EAAA,EAAqBA,GAAAmX,EAAYnX,IAAA,CACjC,IAAA+hC,EAAA/hC,EAAAmX,EAAAsnC,EAAA,EAAA1c,EACAyc,EAAA7gD,KAAA,IAAA2iC,cAAAme,MAAA,EAAA1c,EAAA0c,IACA,EAAA1c,IAAA0c,EAAA1c,SAEA,OAAAyc,EAKAE,CAAAvnC,IAEA8b,EAAA9b,IAfA,GAuYA,OAPA0hC,EAAA1pC,WACA8tB,MAAA,WACA,cAAAtgC,KAAAs8C,YAAAt8C,KAAAs+C,OAAAt+C,KAAAu+C,OAAAv+C,KAAAq+C,QACAr+C,KAAAs9B,OAAAt9B,KAAAq9B,OAAAr9B,KAAAo9B,KAAAp9B,KAAAw9C,cAIAtB,EA7iBA,GAgjBAF,GAAAG,MAAA,WACA,SAAAA,IACAn8C,KAAA0F,KAAA,UAQA,OALAy2C,EAAA3pC,WACA8tB,MAAA,WACA,kBAGA6b,EAVA,GA4BA,IAAArxB,GAAA,WACA,SAAAA,EAAAlC,EAAAnB,EAAA7L,EAAAiM,EACAm6B,EAAA94B,EAAAD,GACAjpB,KAAA4oB,aACA5oB,KAAAynB,OACAznB,KAAA4b,UACA5b,KAAA6nB,YACA7nB,KAAAgiD,eACAhiD,KAAAkpB,aACAlpB,KAAAipB,YAMA,SAAAg5B,IACAjiD,KAAA0kB,QAEAu9B,EAAAzvC,WACA0vC,MAAA,WACA,UAAAliD,KAAAmiD,QANA,OASAniD,KAAAmiD,QAAA,EACAniD,KAAAoiD,SAAA1mC,KAAAC,QAEA+I,MAAA,WACA1kB,KAAAoiD,QAAA1mC,KAAAC,MAdA,GAeA3b,KAAAmiD,QAAA,IAIA,IAAArlC,EAAAtW,QAAAC,UAmpDA,OA/oDAqkB,EAAAtY,WACA4Y,cAAA,SAAA5B,GACA,IAAA/jB,EAAA+jB,GACA,SAGA,IAAAiI,EAAA/uB,OAAAkH,OAAA,MACA4f,EAAA4G,QACAqB,EAAAjI,EAAA4G,QAAA,GAIA,IADA,IAAAiyB,GAAA74B,GACA64B,EAAAvhD,QAAA,CACA,IAAAgE,EACAmxB,EAAAosB,EAAAxmC,QAEAymC,EAAArsB,EAAApwB,IAAA,aACA,GAAAJ,EAAA68C,GAAA,CACAA,IAAAhxB,SACA,IAAAxsB,KAAAw9C,EAAA,CACA,IACAC,EADAD,EAAAx9C,GACA,GACA,GAAAM,EAAAm9C,IAAA,WAAAA,EAAAz8C,KACA,UAKA,IAAA08C,EAAAvsB,EAAApwB,IAAA,WACA,GAAAJ,EAAA+8C,GAAA,CAGAA,IAAAlxB,SACA,IAAAxsB,KAAA09C,EAAA,CACA,IAAAC,EAAAD,EAAA19C,GACA,GAAAmB,EAAAw8C,GAAA,CAGA,GAAAA,EAAAhrC,KAAA2Y,MAAA,CACA,GAAAqB,EAAAgxB,EAAAhrC,KAAA2Y,OAEA,SAEAqB,EAAAgxB,EAAAhrC,KAAA2Y,QAAA,EAEA,IAAAsyB,EAAAD,EAAAhrC,KAAA5R,IAAA,cAEAJ,EAAAi9C,IACAA,EAAAtyB,OAAAqB,EAAAixB,EAAAtyB,SACAiyB,EAAArhD,KAAA0hD,GACAA,EAAAtyB,QACAqB,EAAAixB,EAAAtyB,QAAA,OAKA,UAGAuyB,iBAAA,SAAAn5B,EACAo5B,EAAAhxC,EACAixC,EACAC,GACA,IAAAzlB,EAAAulB,EAAAnrC,KAAA5R,IAAA,UACAu3B,EAAAwlB,EAAAnrC,KAAA5R,IAAA,QACAk9C,EAAAH,EAAAnrC,KAAA5R,IAAA,SACA,GAAAk9C,EAAA,CACA,IASAhF,EATAiF,GACA3lB,SACAD,OACAxrB,QACAqxC,UAAA,EACAC,UAAA,GAGAC,EAAAJ,EAAAl9C,IAAA,KAEAT,EAAA+9C,IAAA,iBAAAA,EAAAr9C,OACAk9C,EAAAC,SAAAF,EAAAl9C,IAAA,SACAm9C,EAAAE,SAAAH,EAAAl9C,IAAA,SACAk4C,EAAAgF,EAAArrC,IAAA,MACA0wB,GAAA5a,MAAAu1B,EAAAl9C,IAAA,MAAA7F,KAAAynB,KAAA+B,GAAA,MAGA5X,KAAAwxC,WACArF,KAAA3V,GAAAgC,WAAA9B,IACA12B,EAAAwxC,SAAArF,EAAA1V,OAAAz2B,EAAAwxC,SAAA,IAGAP,EAAA/kB,MAAAhyB,EAAA4E,YAAAsyC,IAKA,OAFAH,EAAA/kB,MAAAhyB,EAAA0E,uBAAA6sB,EAAAD,IAEAp9B,KAAAyqB,gBAAAm4B,EACAA,EAAAnrC,KAAA5R,IAAA,cAAA2jB,EAAAq5B,EAAAC,GACAt7C,KAAA,WACAq7C,EAAA/kB,MAAAhyB,EAAA2E,wBAEAsyC,GACAF,EAAA/kB,MAAAhyB,EAAA6E,UAAAqyC,OAKAK,uBACA,SAAA75B,EAAA85B,EACAC,EAAAV,EACAW,EAAAC,GACA,IAAA94B,EAAA3qB,KACAyX,EAAA6rC,EAAA7rC,KACAm7B,EAAAn7B,EAAA5R,IAAA,aACAmvC,EAAAv9B,EAAA5R,IAAA,cAEA,GAAA+sC,GAAA1tC,EAAA0tC,IAAAoC,GAAA9vC,EAAA8vC,GAIA,QAAAl1C,MAAA4jD,cAAA9Q,EAAAoC,EAAAl1C,MAAA4jD,aACAhjD,EAAA,4DADA,CAKA,IACAijD,EAAAnqC,EACA,GAFA/B,EAAA5R,IAAA,sBAEA,CAOA,IAAA6N,EAAA+D,EAAA5R,IAAA,aACA8N,EAAA8D,EAAA5R,IAAA,cACA+9C,EAAAlwC,EAAA,KACAmwC,EAAAP,EAAAp9C,SAAA09C,EAAAjwC,GACAmuB,EAAArqB,EAAA5R,IAAA,cACAi+C,IAAAhiB,KAAA,KAcA,OAZA6hB,EAAAja,GAAAqa,WAAAF,EAAAnwC,EAAAC,EACA2vC,aAAAU,GACAF,GACAH,EAAAM,QAAA,EACAzqC,GAAAmqC,GACAd,EAAA/kB,MAAAhyB,EAAAmF,sBAAAuI,QACAgqC,IACAC,EAAAD,IACApxB,GAAAtmB,EAAAmF,sBACAuI,UAMA,IAAA0qC,EAAAzsC,EAAA5R,IAAA,kBACAs+C,EAAA1sC,EAAA5R,IAAA,YAIA,GAAA09C,IAAAW,IAAAC,KAAAb,aAAAc,KACAxR,EAAAoC,EAHA,IAGA,CAOA,OAFA2O,EAJA,IAAAja,GAAA1pC,KAAAynB,KAAA+B,EAAA85B,EACAC,EAAA,WAGA1vC,iBAAA,QACAgvC,EAAA/kB,MAAAhyB,EAAAsF,yBAAAuyC,IAMA,IACAvzB,EAAA,QADApwB,KAAAgiD,cAAA,OACAhiD,KAAAkpB,WAAA3mB,IAIA,GAHAsgD,EAAAwB,cAAAj0B,GACA5W,GAAA4W,EAAAwiB,EAAAoC,IAEAkP,IAAAC,GAAAb,aAAAc,IACAd,EAAAgB,oBAAAtkD,KAAAynB,KAAA+B,GAKA,OAHAq5B,EAAA/kB,MAAAhyB,EAAAkF,iBAAAwI,QACAxZ,KAAA4b,QAAAqD,KAAA,OACAmR,EAAApwB,KAAA6nB,UAAA,aAAAy7B,EAAAhjB,UAIAoJ,GAAA6a,WAAA55B,EAAA/O,QAAA+O,EAAAlD,KAAA+B,EAAA85B,EAAAC,GACA/7C,KAAA,SAAAg9C,GACA,IAAAb,EAAAa,EAAA3wC,iBAAA,GACA8W,EAAA/O,QAAAqD,KAAA,OAAAmR,EAAAzF,EAAA9C,UAAA,QAAA87B,IACAA,EAAAv/C,KAAAiP,WACS7L,UAAAvE,EAAA,SAAA0E,GACTjH,EAAA,2BAAAiH,GACAgjB,EAAA/O,QAAAqD,KAAA,OAAAmR,EAAAzF,EAAA9C,UAAA,iBAGAg7B,EAAA/kB,MAAAhyB,EAAAqF,kBAAAqI,GACAgqC,IACAC,EAAAD,IACApxB,GAAAtmB,EAAAqF,kBACAqI,cArFA9Y,EAAA,kDA0FA+jD,YAAA,SAAA7yC,EAAA4X,EACAq5B,EACA6B,GACA,IAAAC,EAAA/yC,EAAA/L,IAAA,KACA++C,GACAp8C,QAAAoJ,EAAA/L,IAAA,KAAAC,KACAs9C,SAAAxxC,EAAA/L,IAAA,OAEA,OAAA7F,KAAA2iD,iBAAAn5B,EAAAm7B,EAAAC,EACA/B,EAAA6B,EAAAjP,MAAAl8B,UAGAsrC,iBACA,SAAAzyB,EAAA5Y,EAAAgQ,EACAs7B,EAAAC,EACAlC,GAEA,IAAAmC,EAAA,IAAA95B,GACA,OAAAlrB,KAAAyqB,gBAAAq6B,EACAC,EAAAl/C,IAAA,cAAA2jB,EAAAw7B,GACAx9C,KAAA,WAGAq7C,EAAAoC,gBAAAD,EAAAE,cACArC,EAAA/kB,MAAA1L,EAxRA,SAAAywB,EAAAprC,EAAA+B,GAQA,OACA,gBAAAA,EAAAqpC,EARAprC,EAAA5R,IAAA,UACA4R,EAAA5R,IAAA,QACA4R,EAAA5R,IAAA,SACA4R,EAAA5R,IAAA,SACA4R,EAAA5R,IAAA,aACA4R,EAAA5R,IAAA,eAkRAs/C,EACA/jB,QAAA4jB,EAAA5jB,QACAgkB,UAAAJ,EAAAI,WACWL,EAAAvrC,OAIX6rC,cACA,SAAA77B,EAAA87B,EAAAC,EACA1C,EAAApN,GAEA,IAAA+P,EACAF,IAEAE,GADAF,IAAA9jD,SACA,GAAAsE,MAGA,IAAA6kB,EAAA3qB,KACA,OAAAA,KAAAylD,SAAAD,EAAAD,EAAAvlD,KAAAynB,KAAA+B,GAAAhiB,KACA,SAAA4tB,GACA,OAAAA,EAAAtjB,KAAA4zC,YAGAtwB,EAAAuwB,cAAAh7B,EAAAnB,EAAAq5B,GAAAr7C,KACA,WACA,OAAA4tB,IAJAA,IAMO5tB,KAAA,SAAA4tB,GAGP,OAFAqgB,EAAA3jC,KAAAsjB,EAAAtjB,KACAsjB,EAAAnW,KAAA0L,EAAA/O,SACAwZ,EAAAwwB,cAIAC,WAAA,SAAA19C,EAAAstC,GACA,IAAA3jC,EAAA2jC,EAAA3jC,KACAg0C,EAAAh0C,EAAAi0C,cAAA59C,GACA69C,KAAAvQ,EAAAwQ,kBACAv7C,EAAAU,kBACA,GAAA0G,EAAA1N,OAAA4hD,GAAAlmD,MAAAomD,iBAYA,QAXAC,EAAA,SAAAC,GACA,IAAAt0C,EAAAu0C,SAAAC,aAAAF,GAAA,CACA,IAAAG,EAAAz0C,EAAAu0C,SAAAG,UAAAJ,GACApmD,KAAA4b,QAAAqD,KAAA,aACAnN,EAAA8zC,WAAA,SAAAQ,EACA,WACAG,MAGSnsC,KAAApa,MAETqD,EAAA,EAAAwE,EAAAi+C,EAAAhlD,OAA2CuC,EAAAwE,EAAQxE,IAAA,CACnD,IAAAojD,EAAAX,EAAAziD,GACA,UAAAojD,EAAA,CAGAN,EAAAM,EAAAL,UAIA,IAAAM,EAAAD,EAAAC,OACAA,KAAAN,UACAD,EAAAO,EAAAN,WAKA,OAAAN,GAGAv5C,UAAA,SAAAid,EAAAm9B,EACA9D,EAAAp7B,EACAi9B,GAEA,IAAAkC,KACAC,EAAAF,EAAAp8B,IACAI,EAAA3qB,KACAuG,EAAAC,QAAAC,UACA,QAAA3B,KAAA+hD,EAAA,CACA,IAAApkD,EAAAokD,EAAA/hD,GACA,OAAAA,GACA,WACA,MACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA8hD,EAAA5lD,MAAA8D,EAAArC,IACA,MACA,WACA8D,IAAAiB,KAAA,WACA,OAAAmjB,EAAA06B,cAAA77B,EAAA,KAAA/mB,EAAA,GACAogD,EAAA6B,EAAAjP,OACAjuC,KAAA,SAAAo+C,GACA/C,EAAAwB,cAAAuB,GACAgB,EAAA5lD,MAAA8D,GAAA8gD,EAAAnjD,EAAA,UAGA,MACA,SACAmkD,EAAA5lD,MAAA8D,EAAArC,IACA,MACA,YACA,GAAA2C,EAAA3C,IAAA,SAAAA,EAAAqD,KAAA,CACA8gD,EAAA5lD,MAAA8D,GAAA,IACA,MAEA,IAAA2S,EAAAgQ,EAAAwC,WAAAxnB,GACAgD,EAAAgS,IACAlR,IAAAiB,KAAA,WACA,OAAAmjB,EAAA85B,YAAAhtC,EAAA+R,EAAAq5B,EACA6B,KAEAkC,EAAA5lD,MAAA8D,GAAA,KAEApE,EAAA,0BAGA,MAGA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SAEAP,EAAA,0BAAA2E,GACA,MACA,QACA3E,EAAA,kCAAA2E,IAIA,OAAAyB,EAAAiB,KAAA,WACAo/C,EAAA9lD,QAAA,GACA+hD,EAAA/kB,MAAAhyB,EAAAS,WAAAq6C,OAKAnB,SAAA,SAAAD,EAAA1zC,EAAA2V,EACA+B,GAEA,SAAAs9B,IACA,OAAAtgD,QAAAC,QAAA,IAAAsgD,GAAA,eACA,IAAAC,GAAA,QAAAxB,EAAA,qBAAA1zC,IAEA,IAAAyzC,EACA,GAAAzzC,EACAhQ,EAAAqE,EAAA2L,IACAyzC,EAAAzzC,MACO,CACP,IAAAm1C,EAAAz9B,EAAA3jB,IAAA,QACA,IAAAohD,EAIA,OADAvmD,EAAA,yBACAomD,IAHAvB,EAAA0B,EAAA51B,OAAAm0B,GAMA,IAAAD,EAEA,OADA7kD,EAAA,yBACAomD,IAGA,GAAA9mD,KAAAipB,UAAAvR,IAAA6tC,GACA,OAAAvlD,KAAAipB,UAAApjB,IAAA0/C,GAIA,GADAzzC,EAAA2V,EAAAwC,WAAAs7B,IACA9/C,EAAAqM,GACA,OAAAg1C,IAKA,GAAAh1C,EAAAsjB,WACA,OAAAtjB,EAAAsjB,WAGA,IAAA8xB,EAAA7gD,IAEA8gD,EAAAnnD,KAAAonD,gBAAAt1C,EAAA2V,GACA4/B,EAAAF,EAAAE,WACAC,EAAA/B,EAAAxuC,IAAA,IAAAwuC,EAAA1zB,IACA,GAAApsB,EAAA4hD,GAAA,CACAA,EAAAE,cACAF,EAAAE,YAAA7kD,OAAAkH,OAAA,OAGA,IAAA29C,EAAAF,EAAAE,YACA93B,EAAA03B,EAAA13B,KACA,GAAA83B,EAAA93B,GAAA,CACA,IAAA+3B,EAAAD,EAAA93B,GAAA0C,SACA,GAAAq1B,GAAAxnD,KAAAipB,UAAAvR,IAAA8vC,GAEA,OADAxnD,KAAAipB,UAAAiJ,SAAAqzB,EAAAiC,GACAxnD,KAAAipB,UAAApjB,IAAA0/C,GAIAgC,EAAA93B,KACA83B,EAAA93B,IACA63B,OAAAG,GAAAC,cAIAH,EAAA93B,GAAA0C,SAAAozB,EACA+B,EAAAC,EAAA93B,GAAA63B,OAQA,IAAAK,EAAAliD,EAAA8/C,GACAoC,GACA3nD,KAAAipB,UAAA8I,IAAAwzB,EAAA2B,EAAA3gD,SAKAuL,EAAA8zC,WAAA,WAAA+B,EACAnC,EAAAvqB,QAAA,UAAAqsB,GAEAx1C,EAAAsjB,WAAA8xB,EAAA3gD,QAGA,IAAAqhD,EACA,IACAA,EAAAphD,QAAAC,QACAzG,KAAA6nD,cAAAV,EAAA1/B,IACO,MAAApmB,GACPumD,EAAAphD,QAAAE,OAAArF,GA8BA,OA3BAumD,EAAApgD,KAAA,SAAAsgD,GACA,QAAA7kD,IAAA6kD,EAAAC,SAAA,CACAtgC,EAAA8O,MAAAE,UACAqxB,EAAAC,WAAA,EAGAb,EAAAzgD,QAAA,IAAAsgD,GAAAj1C,EAAA8zC,WACAkC,EAAAh2C,KACO,SAAAnK,GAEPjG,EAAAC,OAAAC,EAAAkQ,MAEA,IAEA,IAAAu1C,EAAAF,EAAAE,WACAW,EAAAX,KAAAxhD,IAAA,aACA2C,EAAAw/C,KAAAniD,IAAA,WACAkiD,EAAAx/C,EAAA4+C,EAAAzhD,KACA8C,KAAA1C,MACA2hB,EAAA8O,MAAAE,UACAsxB,IAAA,EACS,MAAA1rC,IAET6qC,EAAAzgD,QAAA,IAAAsgD,GAAAj1C,EAAA8zC,WACA,IAAAoB,GAAAr/C,aAAAvG,MAAAuG,EAAA4K,QAAA5K,GACAmK,MAEAo1C,EAAA3gD,SAGA4/C,UAAA,SAAAtD,EAAAzwB,EAAA5Y,GACA,IAAAyuC,EAAApF,EAAA/hD,OAAA,EAIA,GAHA0Y,IACAA,MAEAyuC,EAAA,GACApF,EAAAzhB,QAAA6mB,KAAAn8C,EAAA2F,cACAoxC,EAAA/kB,MAAAhyB,EAAA2F,gBAAA2gB,GAAA5Y,QACO,CACP,IAAA0uC,EAAArF,EAAAuC,UAAA6C,GACAC,EAAA,GAAAlnD,KAAAoxB,GACApsB,MAAAwM,UAAAxR,KAAAC,MAAAinD,EAAA,GAAA1uC,KAIA2uC,aAAA,SAAAtF,EAAAzwB,EAAA5Y,EACAqwB,EAAAue,EAAA5+B,EAAA/B,GAEA,IAEAq9B,EAFAuD,EAAA7uC,IAAA1Y,OAAA,GAGA,GAAAsE,EAAAijD,KACAvD,EAAAsD,EAAAviD,IAAAwiD,EAAAviD,OAAA,CACA,IAAA2R,EAAAxR,EAAA6+C,KAAArtC,KAAAqtC,EACAwD,EAAA7wC,EAAA5R,IAAA,eAEA,GA1hBA,IA0hBAyiD,EAAA,CACA,IAAA10B,EAAAiW,EAAAhyB,KAAAgyB,EAAAhyB,KAAAwwB,OAAA7uB,EAAA,QACA,OAAAxZ,KAAA6kD,iBAAAzyB,EAAAwB,EAAApK,EAAAs7B,EACArtC,EAAAorC,GACS,GA9hBT,IA8hBSyF,EAAA,CACT,IAAAvM,EAAAtkC,EAAA5R,IAAA,WACAw3B,EAAA5lB,EAAA5R,IAAA,UAGA,OAFAi/C,EAAAnJ,GAAAG,aAAAC,EAAA1e,EAAA5V,EAAA+B,GACAq5B,EAAA/kB,MAAA1L,EAAA0yB,EAAAxkB,SACA95B,QAAAC,UAEA,OAAAD,QAAAE,OAAA,wBAAA4hD,GAKA,OADAzF,EAAA/kB,MAAA1L,EAAA5Y,GACAhT,QAAAC,WAGAgkB,gBAAA,SAAAxF,EACAuE,EACAq5B,EACAC,GAEA,IAAAn4B,EAAA3qB,KACAynB,EAAAznB,KAAAynB,KACAg8B,KAEA3hD,EAAA+gD,GAGA,IAAA0F,GADA/+B,KAAA7jB,GAAA8jB,OACA5jB,IAAA,YAAAF,GAAA8jB,MACA2+B,EAAA5+B,EAAA3jB,IAAA,YAAAF,GAAA8jB,MACAi7B,EAAA,IAAA8D,GAAA1F,GAAA,IAAA2F,IACAC,EAAA,IAAAC,GAAA1jC,EAAAwC,EAAAi9B,GACAkE,EAAA,IAAA3G,EAEA,WAAAz7C,QAAA,SAAA8uB,EAAA7uB,EAAAC,GACAkiD,EAAAlkC,QAEA,IADA,IAAAmkC,EAAgCxlD,EAAAwE,EAAAgiC,EAAhCnC,OACAmhB,EAAAD,EAAA1G,WAKAxa,EAAAluB,KAAA,KACAkvC,EAAAI,KAAAphB,KANA,CASA,IAAAluB,EAAAkuB,EAAAluB,KACA4Y,EAAAsV,EAAAtV,GAEA,SAAAA,GACA,KAAAtmB,EAAAkE,aACA,GAAAwJ,EAAA,GAAA9U,KACA,MAGA,IAAAoB,EAAA0T,EAAA,GAAA1T,KACA,QAAA7C,IAAAwgD,EAAA39C,GAAA,CACA+8C,EAAA/kB,MAAA2lB,EAAA39C,GAAAssB,GAAAqxB,EAAA39C,GAAA0T,MACAA,EAAA,KACA,SAGA,IAAAopC,EAAA2F,EAAA1iD,IAAAC,GACA,GAAA88C,EAAA,CACA9gD,EAAAmE,EAAA28C,GAAA,8BAEA,IAAAl9C,EAAAk9C,EAAAnrC,KAAA5R,IAAA,WAIA,GAHA/D,EAAAsD,EAAAM,GACA,sCAEA,SAAAA,EAAAI,KAEA,OADA4+C,EAAAl4C,OACAme,EAAAg4B,iBAAAn5B,EAAAo5B,EAAA,KACAC,EACA6B,EAAAjP,MAAAl8B,SACA/R,KAAA,WACAk9C,EAAAj4C,UACA6oB,EAAA7uB,EAAAC,IACqBA,GACJ,aAAAhB,EAAAI,KAAA,CACjB6kB,EAAA04B,uBAAA75B,EAAAo5B,GAAA,EACAC,EAAA/8C,EAAA29C,GACAjqC,EAAA,KACA,SACiB,UAAA9T,EAAAI,KAAA,CAGjB3F,EAAA,8BACA,SAEAS,EAAA,6BAAA8E,EAAAI,MAGA,MACA,KAAAgG,EAAAqC,QACA,IAAA46C,EAAAvvC,EAAA,GAEA,OAAAmR,EAAA06B,cAAA77B,EAAAhQ,EAAA,KACAqpC,EAAA6B,EAAAjP,OACAjuC,KAAA,SAAAo+C,GACA/C,EAAAwB,cAAAuB,GACA/C,EAAA/kB,MAAAhyB,EAAAqC,SAAAy3C,EAAAmD,IACAzzB,EAAA7uB,EAAAC,IACiBA,GACjB,KAAAoF,EAAAiE,eACA,IAAAyzC,EAAAhqC,EAAA,GAAAgqC,SACA,GAAAA,EAAA,CACA,IAAAwF,EAAAvF,EAAAD,GACA,QAAAvgD,IAAA+lD,EAAA,CACAnG,EAAA/kB,MAAAkrB,EAAA52B,GAAA42B,EAAAxvC,MACAA,EAAA,KACA,UAGAmR,EAAA04B,uBAAA75B,EAAAhQ,EAAA,MACAqpC,EAAAW,EAAAC,GACAjqC,EAAA,KACA,SACA,KAAA1N,EAAA4C,SACA8K,EAAA,GAAAmR,EAAAk7B,WAAArsC,EAAA,GAAAkrC,EAAAjP,OACA,MACA,KAAA3pC,EAAA6C,eACA,IAAA6yB,EAAAhoB,EAAA,GACAyvC,KACAC,EAAA1nB,EAAA1gC,OACA,IAAAuC,EAAA,EAAyBA,EAAA6lD,IAAe7lD,EAAA,CACxC,IAAA8lD,EAAA3nB,EAAAn+B,GACA8B,EAAAgkD,GACAnjD,MAAAwM,UAAAxR,KAAAC,MAAAgoD,EACAt+B,EAAAk7B,WAAAsD,EAAAzE,EAAAjP,QACiBvwC,EAAAikD,IACjBF,EAAAjoD,KAAAmoD,GAGA3vC,EAAA,GAAAyvC,EACA72B,EAAAtmB,EAAA4C,SACA,MACA,KAAA5C,EAAA8C,iBACAi0C,EAAA/kB,MAAAhyB,EAAA2C,UACA+K,EAAA,GAAAmR,EAAAk7B,WAAArsC,EAAA,GAAAkrC,EAAAjP,OACArjB,EAAAtmB,EAAA4C,SACA,MACA,KAAA5C,EAAA+C,2BACAg0C,EAAA/kB,MAAAhyB,EAAA2C,UACAo0C,EAAA/kB,MAAAhyB,EAAAkC,gBAAAwL,EAAAqC,UACAgnC,EAAA/kB,MAAAhyB,EAAAiC,gBAAAyL,EAAAqC,UACArC,EAAA,GAAAmR,EAAAk7B,WAAArsC,EAAA,GAAAkrC,EAAAjP,OACArjB,EAAAtmB,EAAA4C,SACA,MACA,KAAA5C,EAAAsC,qBACAs2C,EAAAjP,MAAAwQ,kBAAAzsC,EAAA,GACA,MAEA,KAAA1N,EAAAmD,kBACAy1C,EAAAjP,MAAA2T,eACAhhB,GAAA5a,MAAAhU,EAAA,GAAAiO,EAAA+B,GACA,SACA,KAAA1d,EAAAkD,oBACA01C,EAAAjP,MAAA4T,iBACAjhB,GAAA5a,MAAAhU,EAAA,GAAAiO,EAAA+B,GACA,SACA,KAAA1d,EAAAsD,aAEAoK,GADAqwB,EAAA6a,EAAAjP,MAAA2T,gBACA/gB,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA2D,gBACA,MACA,KAAA3D,EAAAoD,eAEAsK,GADAqwB,EAAA6a,EAAAjP,MAAA4T,kBACAhhB,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA0D,kBACA,MACA,KAAA1D,EAAAyD,YACAm1C,EAAAjP,MAAA2T,eAAAhhB,GAAAgC,WAAAC,KACA7wB,EAAA4uB,GAAAgC,WAAAC,KAAAhC,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA2D,gBACA,MACA,KAAA3D,EAAAwD,cACAo1C,EAAAjP,MAAA4T,iBAAAjhB,GAAAgC,WAAAC,KACA7wB,EAAA4uB,GAAAgC,WAAAC,KAAAhC,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA0D,kBACA,MACA,KAAA1D,EAAA6D,iBACA+0C,EAAAjP,MAAA2T,eAAAhhB,GAAAgC,WAAAE,KACA9wB,EAAA4uB,GAAAgC,WAAAE,KAAAjC,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA2D,gBACA,MACA,KAAA3D,EAAA4D,mBACAg1C,EAAAjP,MAAA4T,iBAAAjhB,GAAAgC,WAAAE,KACA9wB,EAAA4uB,GAAAgC,WAAAE,KAAAjC,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA0D,kBACA,MACA,KAAA1D,EAAA2D,gBACAi1C,EAAAjP,MAAA2T,eAAAhhB,GAAAgC,WAAA9B,IACA9uB,EAAA4uB,GAAAgC,WAAA9B,IAAAD,OAAA7uB,EAAA,GACA,MACA,KAAA1N,EAAA0D,kBACAk1C,EAAAjP,MAAA4T,iBAAAjhB,GAAAgC,WAAA9B,IACA9uB,EAAA4uB,GAAAgC,WAAA9B,IAAAD,OAAA7uB,EAAA,GACA,MACA,KAAA1N,EAAAuD,cAEA,gBADAw6B,EAAA6a,EAAAjP,MAAA2T,gBACAtjD,KACA,OAAA6kB,EAAAw9B,aAAAtF,EAAA/2C,EAAAuD,cACAmK,EAAAqwB,EAAAue,EAAA5+B,EAAA/B,GAAAjgB,KAAA,WACA8tB,EAAA7uB,EAAAC,IACmBA,GAEnB8S,EAAAqwB,EAAAxB,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA2D,gBACA,MACA,KAAA3D,EAAAqD,gBAEA,gBADA06B,EAAA6a,EAAAjP,MAAA4T,kBACAvjD,KACA,OAAA6kB,EAAAw9B,aAAAtF,EAAA/2C,EAAAqD,gBACAqK,EAAAqwB,EAAAue,EAAA5+B,EAAA/B,GAAAjgB,KAAA,WACA8tB,EAAA7uB,EAAAC,IACmBA,GAEnB8S,EAAAqwB,EAAAxB,OAAA7uB,EAAA,GACA4Y,EAAAtmB,EAAA0D,kBACA,MAEA,KAAA1D,EAAA8D,YACA,IAAA05C,EAAA9/B,EAAA3jB,IAAA,WACAyjD,GACA1oD,EAAA,6BAGA,IAAAm7C,EAAAuN,EAAAzjD,IAAA2T,EAAA,GAAA1T,MACAi2C,GACAn7C,EAAA,2BAMA4Y,GAHAmiC,GAAAG,aAAAC,EAAA,KAAAt0B,EACA+B,GACA8W,SAEAlO,EAAAtmB,EAAA8D,YACA,MACA,KAAA9D,EAAAS,UACA,IAAAg9C,EAAA/vC,EAAA,GACAgwC,EAAAhgC,EAAA3jB,IAAA,aAEA,IAAAJ,EAAA+jD,OAAA9xC,IAAA6xC,EAAAzjD,MACA,MAGA,IAAA6gD,EAAA6C,EAAA3jD,IAAA0jD,EAAAzjD,MACA,OAAA6kB,EAAApe,UAAAid,EAAAm9B,EAAA9D,EAAAp7B,EACAi9B,GAAAl9C,KAAA,WACA8tB,EAAA7uB,EAAAC,IACiBA,GACjB,KAAAoF,EAAAa,OACA,KAAAb,EAAAc,OACA,KAAAd,EAAAe,QACA,KAAAf,EAAAgB,SACA,KAAAhB,EAAAiB,SACA,KAAAjB,EAAAkB,UAGA,KAAAlB,EAAAmB,UACA0d,EAAAw7B,UAAAtD,EAAAzwB,EAAA5Y,GACA,SAEAqpC,EAAA/kB,MAAA1L,EAAA5Y,GAEA,GAAAqvC,EACA/rC,EAAAtV,KAAA,WACA8tB,EAAA7uB,EAAAC,SAFA,CAQA,IAAArD,EAAA,EAAAwE,EAAA6gD,EAAAe,iBAAuDpmD,EAAAwE,EAAQxE,IAC/Dw/C,EAAA/kB,MAAAhyB,EAAAW,YAEAhG,QAIAolB,eAAA,SAAA5G,EAAAuE,EACAk7B,GAyBA,SAAAgF,IACA,IAAA53C,EAAA63C,EAAA73C,KASA,OARAA,EAAA8zC,cAAAgE,EAAAC,SACAD,EAAAC,OAAA/3C,EAAA8zC,aACAkE,WAAAh4C,EAAAi4C,aACAC,OAAAl4C,EAAAk4C,OACAC,QAAAn4C,EAAAm4C,QACAC,SAAAp4C,EAAAo4C,YAMAtmD,OACAumD,IAAA,KACAz2C,MAAA,EACAC,OAAA,EACAjH,UAAA,KACA84C,SAAA1zC,EAAA8zC,YAIA,SAAAwE,EAAAC,GACA,IAAAzmD,EAAAymD,EAAAzmD,IAAA1C,KAAA,IACAopD,EAAAxqD,MAAAyqD,KAAA3mD,GAAA,EAAA+lD,EAAA73C,KAAAo4C,UAGA,OAFAG,EAAAzmD,IAAA0mD,EAAA1mD,IACAymD,EAAAF,IAAAG,EAAAH,IACAE,EAGA,SAAAhF,EAAAG,EAAAD,GACA,OAAA56B,EAAA86B,SAAAD,EAAAD,EAAA99B,EAAA+B,GACAhiB,KAAA,SAAA4tB,GACAu0B,EAAA73C,KAAAsjB,EAAAtjB,KACA63C,EAAAa,WAAAp1B,EAAAtjB,KAAA04C,YACA//C,IAIA,SAAAggD,EAAAtiD,EAAAkiD,GACA,IAAAv4C,EAAA63C,EAAA73C,KAEA,KADAu4C,KAAAX,KACAh9C,UAAA,CAEA,IAAAg+C,GAAAf,EAAAZ,SAAAY,EAAAgB,WAAA,EACA,EAAAhB,EAAAZ,SACA,EAAAY,EAAAiB,UACAC,EAAAR,EAAA39C,UAAA6H,GAAA7H,UAAAi9C,EAAAmB,IACAv2C,GAAA7H,UAAAi9C,EAAAoB,WAAAL,IACA54C,EAAAo4C,SAGAG,EAAA32C,MAAAnQ,KAAA2S,KAAA20C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAFAR,EAAA12C,OAAApQ,KAAA2S,KAAA20C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASA,QAJAn3C,EAAA,EACAC,EAAA,EACAmyC,EAAAh0C,EAAAi0C,cAAA59C,GACA6iD,EAAAl5C,EAAAk5C,gBACA3nD,EAAA,EAAuBA,EAAAyiD,EAAAhlD,OAAmBuC,IAAA,CAC1C,IAAAojD,EAAAX,EAAAziD,GACA,GAAAojD,EAAA,CAIA,IAEAwE,EAAA,KACAn5C,EAAAo4C,SACAzD,EAAAyE,SACAD,EAAAxE,EAAAyE,QAAA,GACAzE,EAAAyE,QAAA,GACAzE,EAAAyE,QAAA,KAEAD,EAAAxE,EAAA/yC,MACA,GAAA+yC,EAAA/yC,MACAs3C,EAAA,IAGAC,EAAAxE,EAAA/yC,MAGA,IAAAy3C,EAAA1E,EAAA2E,aACAnoD,IAAAooD,GAAAF,KACAA,EAAAE,GAAAF,IAEAA,EAAAjjD,EAAAijD,GAcA,IAAAG,EAAA,EACAC,EAAA,EACA,GAAAz5C,EAAAo4C,SAKW,CAGXv2C,GADA43C,EADAN,EAAAtB,EAAAa,WAAA,GACAb,EAAAZ,SAAAY,EAAA6B,gBAPA,CAIA93C,GAFA43C,GADAL,EAAAtB,EAAAa,WAAA,GACAb,EAAAZ,SAAAY,EAAA6B,aACA7B,EAAAgB,WAOAhB,EAAA8B,oBAAAH,EAAAC,GAEAlB,EAAAzmD,IAAA5C,KAAAmqD,QApDAz3C,GAAAi2C,EAAA+B,YAAA/B,EAAAgB,WAuDA,IAAA70C,EAAA6zC,EAAAgC,eAAA,GACA/2C,EAAA+0C,EAAAgC,eAAA,GACAC,EAAAroD,KAAA2S,KAAAJ,IAAAlB,KACAkB,EAAA6zC,EAAAmB,IAAA,GACAl2C,EAAA+0C,EAAAmB,IAAA,GACA,IAAAe,EAAAtoD,KAAA2S,KAAAJ,IAAAlB,KAMA,OALA9C,EAAAo4C,SAGAG,EAAA12C,QAAApQ,KAAA8V,IAAA1F,EAAAk4C,EAAAD,GAFAvB,EAAA32C,SAAAm4C,EAAAD,EAIAvB,EAvJA3F,KAAA,IAAA8D,GAAA,IAAAsD,IAEA,IAAAlC,GACAt2B,SACAu2B,OAAAnnD,OAAAkH,OAAA,OAEAmiD,EAAAnC,EAAAt2B,MAIA3I,EAAA3qB,KACAynB,EAAAznB,KAAAynB,KAEA+B,EAAA/B,EAAAwC,WAAAT,IAAA7jB,GAAA8jB,MAGA,IAKAkgC,EALApB,EAAA,KACAyD,KAEAtD,EAAA,IAAAC,GAAA1jC,EAAAwC,EAAAi9B,GAuIAkE,EAAA,IAAA3G,EAEA,WAAAz7C,QAAA,SAAA8uB,EAAA7uB,EAAAC,GACAkiD,EAAAlkC,QAEA,IADA,IAAAmkC,EAAAnhB,KAAgCluB,OAChCqvC,EAAAD,EAAA1G,WAIA1oC,EAAA1Y,OAAA,EACA4mC,EAAAluB,OACAkvC,EAAAI,KAAAphB,KANA,CASAiiB,EAAAjF,EAAAjP,MACA,IAAArjB,EAAAsV,EAAAtV,GAGA,OAFA5Y,EAAAkuB,EAAAluB,KAEA,EAAA4Y,GACA,KAAAtmB,EAAAqC,QAEA,OADAw7C,EAAAZ,SAAAvvC,EAAA,GACA6rC,EAAA7rC,EAAA,GAAA1T,MAAA0B,KAAA,WACA8tB,EAAA7uB,EAAAC,IACeA,GACf,KAAAoF,EAAAuC,YACAs7C,EAAAiB,SAAApxC,EAAA,GACA,MACA,KAAA1N,EAAAmC,UACA07C,EAAAgB,WAAAnxC,EAAA,OACA,MACA,KAAA1N,EAAAoC,WACAy7C,EAAAsC,QAAAzyC,EAAA,GACA,MACA,KAAA1N,EAAAwC,SACAq7C,EAAAuC,wBAAA1yC,EAAA,GAAAA,EAAA,IACAmwC,EAAAoB,WAAApB,EAAAgC,eAAAnqD,QACA,MACA,KAAAsK,EAAAyC,mBACAo7C,EAAAsC,SAAAzyC,EAAA,GACAmwC,EAAAuC,wBAAA1yC,EAAA,GAAAA,EAAA,IACAmwC,EAAAoB,WAAApB,EAAAgC,eAAAnqD,QACA,MACA,KAAAsK,EAAA2C,SACAk7C,EAAAwC,iBACA,MACA,KAAArgD,EAAA0C,cACAm7C,EAAAn7C,cAAAgL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAmwC,EAAAyC,kBAAA5yC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACA,MACA,KAAA1N,EAAAiC,eACA47C,EAAA6B,YAAAhyC,EAAA,GACA,MACA,KAAA1N,EAAAkC,eACA27C,EAAA+B,YAAAlyC,EAAA,GACA,MACA,KAAA1N,EAAA+B,UACA87C,EAAAoB,WAAAz2C,GAAA9S,QACAmoD,EAAAgC,eAAAr3C,GAAA9S,QACA,MACA,KAAAsK,EAAA6C,eAIA,QADApK,EAFA+uB,EAAA9Z,EAAA,GACA6wC,EAAAX,IAEAlxB,EAAA,EAAAyG,EAAA3L,EAAAxyB,OAAgD03B,EAAAyG,EAAQzG,IACxD,oBAAAlF,EAAAkF,GACAiyB,EAAAn3B,EAAAkF,GAAA6xB,OACiB,CACjB,IAAA9c,EAAAja,EAAAkF,GAAA,IAYA,GAXAmxB,EAAA73C,KAAAo4C,UAMA3lD,GAAAgpC,EAAAoc,EAAAZ,SACAY,EAAAoB,WAAA,GACApB,EAAA8B,oBAAA,EAAAlnD,GACA8lD,EAAA12C,QAAApP,IARAA,GAAAgpC,EAAAoc,EAAAZ,SAAAY,EAAAgB,WACAhB,EAAAoB,WAAA,GACApB,EAAA8B,oBAAAlnD,EAAA,GACA8lD,EAAA32C,OAAAnP,GAOA+uB,EAAAkF,GAAA,GAAAmxB,EAAA73C,KAAAu6C,WAAA,GACA,IAAAC,GAAAh5B,EAAAkF,GAAAmxB,EAAA73C,KAAAu6C,WACA,GAAAC,EArOA,IAuOA,IADAA,EAAA/oD,KAAAoiC,MAAA2mB,GACAA,KACAjC,EAAAzmD,IAAA5C,KAAA,UAEqBsrD,EA3OrB,IA4OAjC,EAAAzmD,IAAA5C,KAAA,MAKA+qD,EAAA/qD,KAAAopD,EAAAC,IACA,MACA,KAAAv+C,EAAA4C,SACAq9C,EAAA/qD,KAAAopD,EAAAK,EAAAjxC,EAAA,MACA,MACA,KAAA1N,EAAA8C,iBACA+6C,EAAAwC,iBACAJ,EAAA/qD,KAAAopD,EAAAK,EAAAjxC,EAAA,MACA,MACA,KAAA1N,EAAA+C,2BACA86C,EAAA+B,YAAAlyC,EAAA,GACAmwC,EAAA6B,YAAAhyC,EAAA,GACAmwC,EAAAwC,iBACAJ,EAAA/qD,KAAAopD,EAAAK,EAAAjxC,EAAA,MACA,MACA,KAAA1N,EAAAkE,aACA,GAAAwJ,EAAA,GAAA9U,KACA,MAGA6jD,IACAA,EAAA/+B,EAAA3jB,IAAA,YAAAF,GAAA8jB,OAGA,IAAA3jB,EAAA0T,EAAA,GAAA1T,KACA,GAAAkmD,EAAAlnD,MAAAgB,EAAA,CACAkmD,EAAAO,QACAh4C,GAAAyC,cAAA+0C,EAAAC,EAAAO,MAAAj5B,OACA/e,GAAA8C,UAAAuyC,EAAAC,OAAAmC,EAAAO,MAAA1C,SAEA,MAGA,IAAAjH,EAAA2F,EAAA1iD,IAAAC,GACA,IAAA88C,EACA,MAEA9gD,EAAAmE,EAAA28C,GAAA,8BAEA,IAAAl9C,EAAAk9C,EAAAnrC,KAAA5R,IAAA,WAIA,GAHA/D,EAAAsD,EAAAM,GACA,sCAEA,SAAAA,EAAAI,KAAA,CACAkmD,EAAAlnD,IAAAgB,EACAkmD,EAAAO,MAAA,KACA,MAGA7H,EAAAl4C,OACA,IAAA6wB,EAAAulB,EAAAnrC,KAAA5R,IAAA,UAKA,OAJAE,EAAAs3B,IAAA,IAAAA,EAAAv8B,QACA4jD,EAAAh4C,UAAA2wB,GAGA1S,EAAAkB,eAAA+2B,EACAA,EAAAnrC,KAAA5R,IAAA,cAAA2jB,EAAAk7B,GACAl9C,KAAA,SAAAglD,GACAj4C,GAAAyC,cAAA+0C,EAAAS,EAAAl5B,OACA/e,GAAA8C,UAAAuyC,EAAAC,OAAA2C,EAAA3C,QACAnF,EAAAj4C,UAEAu/C,EAAAlnD,IAAAgB,EACAkmD,EAAAO,MAAAC,EAEAl3B,EAAA7uB,EAAAC,IACiBA,GACjB,KAAAoF,EAAAS,UACA,IAAAg9C,EAAA/vC,EAAA,GACAgwC,EAAAhgC,EAAA3jB,IAAA,aAEA,IAAAJ,EAAA+jD,OAAA9xC,IAAA6xC,EAAAzjD,MACA,MAGA,IAAA2mD,EAAAjD,EAAA3jD,IAAA0jD,EAAAzjD,MACA4mD,EAAA,KACA,QAAA5nD,KAAA2nD,EACA,SAAA3nD,IACAhD,GAAA4qD,GACAA,EAAAD,EAAA3nD,IAGA,GAAA4nD,EAEA,OADA/C,EAAAZ,SAAA2D,EAAA,GACArH,EAAAqH,EAAA,IAAAllD,KAAA,WACA8tB,EAAA7uB,EAAAC,IACiBA,IAKjBmiD,EACA/rC,EAAAtV,KAAA,WACA8tB,EAAA7uB,EAAAC,KAIAD,EAAAmjD,MAIA+C,sBAAA,SACAl1C,EAAAm1C,EACAnlC,EAAApe,GAEA,IAAAwjD,EAAAp1C,EAAA5R,IAAA,cAAA+mD,EAAA/mD,IAAA,aAIA,GAHAgnD,IACAxjD,EAAAwjD,UAAA7sD,KAAA8sD,cAAAD,IAEAxjD,EAAA0jD,UAAA,CAEA,IAAAC,EAAAv1C,EAAA5R,IAAA,iBACAJ,EAAAunD,KACA3jD,EAAA2jD,eACAC,SAAAD,EAAAnnD,IAAA,YACAqnD,SAAAF,EAAAnnD,IAAA,YACAsnD,WAAAH,EAAAnnD,IAAA,gBAIA,IAAAunD,EAAA31C,EAAA5R,IAAA,eACAI,EAAAmnD,KACA/jD,EAAA+jD,YAAAptD,KAAAqtD,gBAAAD,IAUA,IAEAE,EAFAljD,KACAP,EAAA,KAEA,GAAA4N,EAAAC,IAAA,aAEA,GADA41C,EAAA71C,EAAA5R,IAAA,YACAJ,EAAA6nD,IAKA,GAJAzjD,EAAAyjD,EAAAznD,IAAA,gBACAgE,EAAAzE,EAAAyE,GACAA,EAAA/D,KAAA,KAEAwnD,EAAA51C,IAAA,eAGA,QAFA61C,EAAAD,EAAAznD,IAAA,eACAuO,EAAA,EACAokB,EAAA,EAAAyG,EAAAsuB,EAAAzsD,OAAqD03B,EAAAyG,EAAQzG,IAAA,CAC7D,IAAAp0B,EAAAmpD,EAAA/0B,GACAtzB,EAAAd,GACAgQ,EAAAhQ,EAEAgG,EAAAgK,KAAAhQ,EAAA0B,WAISV,EAAAkoD,GACTzjD,EAAAyjD,EAAAxnD,KAEAlF,EAAA,qCAIA,qBAAAiJ,GACA,sBAAAA,GACA,oBAAAA,IACAA,EAAA,MAIAA,EACAR,EAAAmkD,gBAAA1jD,GAAAD,GAAArI,SAEA8rD,EAAA,aAAAjkD,EAAA3D,KACAoE,GAAA2jD,gBAAA3jD,GAAAK,iBAGAd,EAAAW,MAAAC,GAAAC,WACAojD,EAAAxjD,GAAA4jD,iBACArkD,EAAAskD,OACA,UAAAruC,KAAAjW,EAAAvD,MACAwnD,EAAAxjD,GAAA8jD,kBACa,YAAAtuC,KAAAjW,EAAAvD,QACbwnD,EAAAxjD,GAAA+jD,wBAIAxkD,EAAAmkD,gBAAAF,GAGAjkD,EAAAe,cACAf,EAAAQ,mBACAR,EAAAoO,QAGAq1C,cAAA,SAAAD,GACA,IAAAiB,EAAAC,EAAAlB,EACA,OAAAznD,EAAA2oD,IACAD,EAAAE,GAAApkD,OAAAmkD,GACW9rD,IAAAnC,MAAAmuD,QAAAC,OAAApuD,MAAAquD,YAA+C,MAAAC,SAC1D,IAAAC,GAAAP,IACO7nD,EAAA8nD,KACPD,EAAAE,GAAApkD,OAAAmkD,GACW9rD,IAAAnC,MAAAmuD,QAAAC,OAAApuD,MAAAquD,YAA+C,MAAAC,UAI1DxzC,QAAA,SAAAke,EAAAz1B,GAEA,QADAO,KACA8+B,EAAA,EAAyBA,EAAA5J,EAAAh4B,OAAkB4hC,GAAA,GAC3C,IAAA4rB,EAAAx1B,EAAAh1B,WAAA4+B,IAAA,EAAA5J,EAAAh1B,WAAA4+B,EAAA,GACA,iBAAA4rB,GAAA,CAIA5rB,GAAA,EACA,IAAA6rB,EAAAz1B,EAAAh1B,WAAA4+B,IAAA,EAAA5J,EAAAh1B,WAAA4+B,EAAA,GACA9+B,EAAA5C,OAAA,KAAAstD,IAAA,UAAAC,GAAA,YALA3qD,EAAA5C,KAAAstD,GAOAR,EAAAzqD,GAAAH,OAAAC,aAAAlC,MAAAiC,OAAAU,KAEA,IAAAyqD,GAAAP,IAEA,MAGAT,gBAAA,SAAAmB,GAMA,QAJAC,EAAAD,EAAAtoD,WAGAuB,KACA+wB,EAAA,EAAAyG,EAAAwvB,EAAA3tD,OAA6C03B,EAAAyG,EAAQzG,IAAA,CACrD,IAAAk2B,EAAAD,EAAAj2B,MAAA,EAAAi2B,EAAAj2B,GACA,OAAAk2B,EAAA,CAIAjnD,EADA+wB,GAAA,GACAk2B,GAEA,OAAAjnD,GAGAknD,cAAA,SAAAl3C,EAAAgQ,EACA4/B,EACAh+C,GACA,IAGA2hD,EACA3nD,EAAAwE,EAAA2wB,EAAAyG,EAAA56B,EAAAK,EAAAkqD,EAJAC,KACAC,EAAA,EACAC,KAGA,GAAA1lD,EAAA0jD,UAAA,CAIA,GAHA+B,EAAAr3C,EAAA5R,IAAA,WAEA+oD,EAAAn3C,EAAA5R,IAAA,KAEA,IAAAxC,EAAA,EAAAwE,EAAA+mD,EAAA9tD,OAAyCuC,EAAAwE,EAAQxE,IAGjD,GAFAgB,EAAAuqD,EAAAvrD,KACAqB,EAAA+iB,EAAAwC,WAAA2kC,EAAAvrD,IACA0C,EAAArB,GACA,IAAA8zB,EAAA,EAAAyG,EAAAv6B,EAAA5D,OAA2C03B,EAAAyG,EAAQzG,IACnDq2B,EAAAxqD,KAAAK,EAAA8zB,OAEa,CACb,IAAA9kB,EAAAk7C,IAAAvrD,GACA,IAAAm1B,EAAAn0B,EAA6Bm0B,GAAA9zB,EAAW8zB,IACxCq2B,EAAAr2B,GAAA9kB,EAMA,GAAArK,EAAA6gD,SAAA,CACA,IAAA8E,EAAAv3C,EAAA5R,IAAA,mBAGA,GAFAmlD,GAAAgE,EAAA,MAAAF,EAAAE,EAAA,IACAA,EAAAv3C,EAAA5R,IAAA,MAEA,IAAAxC,EAAA,EAAAwE,EAAAmnD,EAAAluD,OAA6CuC,EAAAwE,EAAQxE,IAGrD,GAFAgB,EAAA2qD,EAAA3rD,KACAqB,EAAA+iB,EAAAwC,WAAA+kC,EAAA3rD,IACA0C,EAAArB,GACA,IAAA8zB,EAAA,EAAAyG,EAAAv6B,EAAA5D,OAA6C03B,EAAAyG,EAAQzG,IACrDu2B,EAAA1qD,MAAAK,EAAA8zB,KAAA9zB,EAAA8zB,KAAA9zB,EAAA8zB,QAEe,CACf,IAAA0yB,GAAA8D,IAAA3rD,GAAA2rD,IAAA3rD,GAAA2rD,IAAA3rD,IACA,IAAAm1B,EAAAn0B,EAA+Bm0B,GAAA9zB,EAAW8zB,IAC1Cu2B,EAAAv2B,GAAA0yB,QAMO,CACP,IAAA+D,EAAA5lD,EAAA4lD,UAEA,GADAL,EAAAn3C,EAAA5R,IAAA,UACA,CAEA,IADA2yB,EAAAy2B,EACA5rD,EAAA,EAAAwE,EAAA+mD,EAAA9tD,OAAyCuC,EAAAwE,EAAQxE,IACjDwrD,EAAAr2B,KAAAo2B,EAAAvrD,GAEAyrD,EAAAI,WAAA7H,EAAAxhD,IAAA,wBACS,CAET,IAAAspD,EAAA13C,EAAA5R,IAAA,YACA,GAAAT,EAAA+pD,GAAA,CACA,IAAAC,EAAApvD,KAAAqvD,mBAAAF,EAAArpD,MAEA+oD,EAAA7uD,KAAAsvD,qBAAAF,EAAAR,OACAvlD,GACAylD,EAAAM,EAAAN,eAMA,IAAAS,GAAA,EACAC,EAAAV,EACA,QAAArI,KAAAoI,EAAA,CACA,IAAA5D,EAAA4D,EAAApI,GACA,GAAAwE,EAGA,GAAAuE,GAIA,GAAAA,IAAAvE,EAAA,CACAsE,GAAA,EACA,YALAC,EAAAvE,EAQAsE,IACAlmD,EAAAW,OAAAC,GAAAwlD,YAGApmD,EAAAylD,eACAzlD,EAAAulD,OAAAC,EACAxlD,EAAA2hD,kBACA3hD,EAAA2lD,SAAAD,GAGAW,YAAA,SAAAP,GAEA,IAAAQ,EAAAR,EAAA5tD,MAAA,QACA,OAAAouD,KAAAC,KACA,IAAAD,EAAAE,OAAA,YAGAR,mBAAA,SAAAvpD,GACA,IAAAgpD,EAAA,EACAF,KACAkB,GAAA,EACAC,EAAAC,GAAAlqD,MAEAiqD,KAAAE,KAIAF,EADA/vD,KAAA0vD,YAAA5pD,GACA,cAEA,aAGA,IAAAoqD,EAAAD,GAAAF,GASA,OAPA7qD,EAAAgrD,IACApB,EAAAoB,EACAJ,GAAA,GAEAlB,EAAAsB,GAIApB,eACAgB,YACAlB,WAIAU,qBACA,SAAAa,EACA9mD,GAIA,QAHAulD,EAAAlsD,OAAAkH,OAAA,MACAQ,EAAAf,EAAAe,YACAkjD,EAAAjkD,EAAAmkD,gBACA/jD,EAAA,EAA4BA,EAAA,IAAgBA,IAC5CA,KAAAW,GACA+lD,EAAA/lD,EAAAX,IACAmlD,EAAAnlD,GAAA0mD,EAAA/lD,EAAAX,IAGAA,KAAA6jD,GAAA6C,EAAA7C,EAAA7jD,MACAmlD,EAAAnlD,GAAA0mD,EAAA7C,EAAA7jD,KAIA,OAAAmlD,GAGAxH,gBAAA,SAAA3vC,EAAAgQ,GACA,IAAAmlC,EAAAn1C,EACA/R,EAAA+R,EAAA5R,IAAA,WACA/D,EAAAsD,EAAAM,GAAA,wBAEA,IACA0qD,EADArD,GAAA,EAEA,aAAArnD,EAAAI,KAAA,CAKA,IAAAuqD,EAAA54C,EAAA5R,IAAA,mBACAwqD,GACAzvD,EAAA,sCAKAkB,EAAAsD,EADAM,GAFA+R,EAAA1R,EAAAsqD,GAAA5oC,EAAAwC,WAAAomC,EAAA,IAAAA,GAEAxqD,IAAA,YACA,wBACAknD,GAAA,EAGA,IAAA1F,EAAA5vC,EAAA5R,IAAA,kBACA,GAAAwhD,EAAA,CACA,IAAA53B,EAAA,IAAA6gC,GACAhD,EAAAV,EAAAv7B,OAAA,YACAjsB,EAAAkoD,GACA79B,EAAA8gC,OAAAjD,EAAAxnD,MACSK,EAAAmnD,IACT79B,EAAA8gC,OAAAjD,EAAAv2C,IAAA,IAAAu2C,EAAAz7B,KAGA,IAAAg7B,EAAAp1C,EAAA5R,IAAA,cAAA+mD,EAAA/mD,IAAA,aACA,GAAAI,EAAA4mD,GAAA,CACA,IAAA5nC,EAAA4nC,EAAAjpD,KAAAipD,EACAuD,EAAAnrC,EAAA5R,OACA,IAAAxP,WAAAohB,EAAA5R,cAAA,EAAA4R,EAAA2xB,cACA,IAAA/yC,WAAAohB,EAAAjiB,MAAAqQ,OACA4R,EAAA5gB,MAAA4gB,EAAAhd,IAAAgd,EAAA5gB,OACAorB,EAAA8gC,OAAAH,QAEShrD,EAAAynD,IACTp9B,EAAA8gC,OAAA1D,EAAA/mD,MAGA,IAAA8oD,EAAAn3C,EAAA5R,IAAA,WAAA+mD,EAAA/mD,IAAA,UACA+oD,IACAwB,EAAA,IAAAvsD,WAAA,IAAA4+B,YAAAmsB,GAAAv7C,QACAoc,EAAA8gC,OAAAH,IAIA,OACA/I,aACA5vC,OACAm1C,WACAG,YACArnD,OAAAI,KACA2pB,SAAA+gC,YAAA,KAIA3I,cAAA,SAAAV,EACA1/B,GACA,IAMApe,EANAujD,EAAAzF,EAAAyF,SACAn1C,EAAA0vC,EAAA1vC,KACAs1C,EAAA5F,EAAA4F,UACA1F,EAAAF,EAAAE,WACA3hD,EAAAyhD,EAAAzhD,KACA+qD,EAAA1D,EAAA,UAGA,IAAA1F,EAAA,CACA,aAAA3hD,EAKS,CAIT,IAAAypD,EAAA13C,EAAA5R,IAAA,YACAT,EAAA+pD,IACAvuD,EAAA,8BAIAuuD,IAAArpD,KAAAm1B,QAAA,aACA,IAAAm0B,EAAApvD,KAAAqvD,mBAAAF,GAGAQ,EAAAR,EAAA5tD,MAAA,QACAyI,GACAhK,KAAA0vD,YAAAC,GAAA1lD,GAAAymD,MAAA,IACAtB,EAAAU,UAAA7lD,GAAAwlD,WAAA,IACAkB,GAAAhB,GAAA1lD,GAAAC,SACAD,GAAA2mD,aAcA,OAZAvnD,GACA3D,OACAI,KAAAqpD,EACAP,OAAAQ,EAAAR,OACAE,aAAAM,EAAAN,aACA9kD,QACAilD,UAAA,EACA4B,SAAAJ,GAEAzwD,KAAA2sD,sBAAAl1C,IAAAgQ,EAAApe,GACAA,EAAAulD,OAAA5uD,KAAAsvD,qBAAAF,EAAAR,OACAvlD,GACA,IAAAo+C,GAAA0H,EAAA,KAAA9lD,IAnCAg+C,EAAA,IAAA1hD,GAAA,OACA0O,IAAA,WAAAhP,GAAAQ,IAAAH,IA2CA,IAAAupD,EAAAx3C,EAAA5R,IAAA,gBACAgrD,EAAAp5C,EAAA5R,IAAA,aAAA4qD,EAEAjL,EAAA6B,EAAAxhD,IAAA,YACAirD,EAAAr5C,EAAA5R,IAAA,YASA,GAPAV,EAAAqgD,KACAA,EAAAngD,GAAAQ,IAAA2/C,IAEArgD,EAAA2rD,KACAA,EAAAzrD,GAAAQ,IAAAirD,IAGA,UAAAprD,EAAA,CACA,IAAAqrD,EAAAvL,KAAA1/C,KACAkrD,EAAAF,KAAAhrD,KACAirD,IAAAC,IACA7wD,EAAA,sCAAA4wD,EACA,qDACAC,EAAA,KAGAD,GAAAC,GACA,IAAAA,EAAAjnD,QAAAgnD,KACAvL,EAAAsL,IAMAhvD,EAAAsD,EAFAogD,KAAAsL,GAEA,qBAEA,IAAAG,EAAA5J,EAAAxhD,IAAA,oCACA,GAAAorD,GACAA,EAAAx5C,KAAA,CACA,IAAAjP,EAAAyoD,EAAAx5C,KAAA5R,IAAA,WACA2C,IACAA,IAAA1C,MAEA,IAAAorD,EAAAD,EAAAx5C,KAAA5R,IAAA,WACAsrD,EAAAF,EAAAx5C,KAAA5R,IAAA,WA4BA,GAxBAwD,GACA3D,OACAI,KAAA0/C,EAAA1/C,KACA0C,UACAmlD,KAAAsD,EACAC,UACAC,UACAvL,WAAAgH,EAAAhH,WACAmH,YACAqE,UAAArE,EACAsE,YAAA,EACA7G,WAAA/yC,EAAA5R,IAAA,eAAA4E,EACAwkD,aAAA,EACA4B,YAAAJ,EACArzB,KAAAiqB,EAAAxhD,IAAA,YACAmkD,OAAA3C,EAAAxhD,IAAA,UACAokD,QAAA5C,EAAAxhD,IAAA,WACAyrD,QAAAjK,EAAAxhD,IAAA,WACA0rD,UAAAlK,EAAAxhD,IAAA,aACAmE,MAAAq9C,EAAAxhD,IAAA,SACA2rD,YAAAnK,EAAAxhD,IAAA,eACA4rD,OAAA,GAGA1E,EAAA,CACA,IAAA2E,EAAA9E,EAAA/mD,IAAA,YACAT,EAAAssD,KACAroD,EAAAqoD,cAAA5rD,MAEAuD,EAAAsoD,KAAA3D,GAAApkD,OAAA8nD,GACWzvD,IAAAnC,MAAAmuD,QAAAC,OAAApuD,MAAAquD,YAA+C,MAC1D9kD,EAAA6gD,SAAA7gD,EAAAsoD,KAAAzH,SASA,OAPAlqD,KAAA2sD,sBAAAl1C,EAAAm1C,EAAAnlC,EAAApe,GACArJ,KAAA2uD,cAAAl3C,EAAAgQ,EAAA4/B,EAAAh+C,GAEA,UAAA3D,IACA2D,EAAAq8C,aAAA,GAGA,IAAA+B,GAAAjC,EAAA1/C,KAAAmrD,EAAA5nD,KAIAyhB,EAnrDA,GAsrDAi8B,GAAA,WACA,SAAAA,EAAAnB,EAAA9zC,EAAA2F,GACAzX,KAAA4lD,aACA5lD,KAAA8R,OACA9R,KAAAyX,OACAzX,KAAA4xD,YAAA,KACA5xD,KAAA6xD,MAAA,EAoDA,OAlDA9K,EAAAv0C,WACAyM,KAAA,SAAArD,GACA,IAAA5b,KAAA6xD,KAAA,CAGA,IAAAC,EAAA9xD,KAAA8R,KAAAigD,aACAn2C,EAAAqD,KAAA,aACAjf,KAAA4lD,WACA,OACAkM,IAEA9xD,KAAA6xD,MAAA,IAEAlM,cAAA,SAAAzoB,EAAA1T,EAAAwoC,GAGA,GAFAlwD,EAAA9B,KAAA8R,KAAA4zC,aAEA1lD,KAAA4xD,YACA,OAAA5xD,KAAA4xD,YASA,QANA9J,EAAA9nD,KAAA8R,KACAmgD,EAAAzrD,QAAAC,UACAyrD,EAAAlyD,KAAAyX,KAAA5R,IAAA,aAAAyrB,SACA6gC,EAAAnyD,KAAAyX,KAAA5R,IAAA,cAAA2jB,EACA4oC,EAAA1vD,OAAA2nB,KAAA6nC,GACAG,KACAhvD,EAAA,EAAAa,EAAAkuD,EAAAtxD,OAA8CuC,EAAAa,IAAOb,EACrD4uD,IAAAzqD,KAAA,SAAA1C,GACA,IAAAwtD,EAAAJ,EAAAptD,GACA+9C,EAAA,IAAA33B,GACA,OAAAgS,EAAAzS,gBAAA6nC,EAAAH,EACAtP,GAAAr7C,KAAA,WACA6qD,EAAAvtD,GAAA+9C,EAAAviB,QAIA0xB,EAAA/M,gBAAApC,EAAAqC,eACW,SAAAv9C,GACXjH,EAAA,wBAAAoE,EAAA,sBACA,IAAA+9C,EAAA,IAAA33B,GACAmnC,EAAAvtD,GAAA+9C,EAAAviB,WAESlmB,KAAApa,KAAAoyD,EAAA/uD,KAKT,OAHArD,KAAA4xD,YAAAK,EAAAzqD,KAAA,WACAsgD,EAAAuK,yBAEAryD,KAAA4xD,cAGA7K,EA1DA,GA6DA77B,GAAA,WAsBA,SAAAA,EAAAR,EAAA6nC,EAAA1qC,GACA7nB,KAAAuyD,iBACAvyD,KAAAohC,WACAphC,KAAAolD,aACAplD,KAAAklD,gBACAllD,KAAA6nB,YACA7nB,KAAA0qB,SAwEA,OArEAQ,EAAA1Y,WACA1R,aACA,OAAAd,KAAAolD,UAAAtkD,QAGAg9B,MAAA,SAAA1L,EAAA5Y,GACAxZ,KAAAohC,QAAApgC,KAAAoxB,GACApyB,KAAAolD,UAAApkD,KAAAwY,GACAxZ,KAAAuyD,iBACAvyD,KAAAohC,QAAAtgC,QAvCA,IAwCAd,KAAAyrB,QACSzrB,KAAAohC,QAAAtgC,QAxCT0xD,MAyCApgC,IAAAtmB,EAAAW,SAAA2lB,IAAAtmB,EAAAgC,UAEA9N,KAAAyrB,UAKA44B,cAAA,SAAAt4C,GACAA,KAAA/L,KAAAklD,eAGAllD,KAAAklD,aAAAn5C,IAAA,EACA/L,KAAA89B,MAAAhyB,EAAAC,kBAGAk5C,gBAAA,SAAAC,GACA,QAAApgD,KAAAogD,EACAllD,KAAAqkD,cAAAv/C,IAIA25B,UAAA,SAAAxT,GACA1W,GAAA8C,UAAArX,KAAAklD,aAAAj6B,EAAAi6B,cACA,QAAA7hD,EAAA,EAAAwE,EAAAojB,EAAAnqB,OAAyCuC,EAAAwE,EAAQxE,IACjDrD,KAAA89B,MAAA7S,EAAAmW,QAAA/9B,GAAA4nB,EAAAm6B,UAAA/hD,KAIAi9B,MAAA,WACA,OACAc,QAAAphC,KAAAohC,QACAgkB,UAAAplD,KAAAolD,UACAtkD,OAAAd,KAAAc,SAIA2qB,MAAA,SAAAxE,GACA,WAAAjnB,KAAA0qB,SACA,IAAA+nC,IAAAC,SAAA1yD,MAEA,IAAAkf,EA/EA,SAAAqS,GAGA,QAFArS,KACAkiB,EAAA7P,EAAA6P,QAAAgkB,EAAA7zB,EAAA6zB,UACA/hD,EAAA,EAAAwE,EAAA0pB,EAAAzwB,OAAsCuC,EAAAwE,EAAQxE,IAC9C,OAAA+9B,EAAA/9B,IACA,KAAAyI,EAAAsF,wBACA,KAAAtF,EAAAuF,6BACA,KAAAvF,EAAAmF,sBACA,IAAAmb,EAAAg5B,EAAA/hD,GAAA,GACA+oB,EAAA63B,QACA/kC,EAAAle,KAAAorB,EAAAhoB,KAAAiP,QAKA,OAAA6L,EAgEAyzC,CAAA3yD,MACAA,KAAAuyD,eAAAtzC,KAAA,mBACA4jC,cACAzhB,QAAAphC,KAAAohC,QACAgkB,UAAAplD,KAAAolD,UACAn+B,YACAnmB,OAAAd,KAAAc,QAEA+mB,UAAA7nB,KAAA6nB,UACA6C,OAAA1qB,KAAA0qB,QACOxL,GACPlf,KAAAklD,gBACAllD,KAAAohC,QAAAtgC,OAAA,EACAd,KAAAolD,UAAAtkD,OAAA,IAIAoqB,EApGA,GAuGAs9B,GAAA,WACA,SAAAA,EAAA1F,GACA9iD,KAAAy1C,MAAAqN,EACA9iD,KAAA4yD,cAkBA,OAhBApK,EAAAh2C,WACAhG,KAAA,WACA,IAAAqmD,EAAA7yD,KAAAy1C,MACAz1C,KAAA4yD,WAAA5xD,KAAAhB,KAAAy1C,OACAz1C,KAAAy1C,MAAAod,EAAAt5C,SAEA9M,QAAA,WACA,IAAAqmD,EAAA9yD,KAAA4yD,WAAAn9B,MACAq9B,IACA9yD,KAAAy1C,MAAAqd,IAGApmD,UAAA,SAAA8M,GACAxZ,KAAAy1C,MAAAqV,IAAAv2C,GAAA7H,UAAA1M,KAAAy1C,MAAAqV,IAAAtxC,KAGAgvC,EArBA,GAwBAsD,GAAA,WACA,SAAAA,IACA9rD,KAAA8qD,IAAA,IAAAnnB,aAAArvB,IACAtU,KAAA+oD,SAAA,EACA/oD,KAAA8R,KAAA,KACA9R,KAAAwqD,WAAA//C,EACAzK,KAAA+qD,WAAAz2C,GAAA9S,QACAxB,KAAA2rD,eAAAr3C,GAAA9S,QACAxB,KAAAwrD,YAAA,EACAxrD,KAAA0rD,YAAA,EACA1rD,KAAAisD,QAAA,EACAjsD,KAAA2qD,WAAA,EACA3qD,KAAA4qD,SAAA,EAyCA,OAtCAkB,EAAAt5C,WACAhE,cAAA,SAAAsH,EAAAlB,EAAAmB,EAAAZ,EAAA9T,EAAAwxC,GACA,IAAA59B,EAAAjV,KAAA+qD,WACA91C,EAAA,GAAAa,EAAeb,EAAA,GAAAL,EAAUK,EAAA,GAAAc,EAAUd,EAAA,GAAAE,EAAUF,EAAA,GAAA5T,EAAU4T,EAAA,GAAA49B,GAEvDuZ,kBAAA,SAAAt2C,EAAAlB,EAAAmB,EAAAZ,EAAA9T,EAAAwxC,GACA,IAAA59B,EAAAjV,KAAA2rD,eACA12C,EAAA,GAAAa,EAAeb,EAAA,GAAAL,EAAUK,EAAA,GAAAc,EAAUd,EAAA,GAAAE,EAAUF,EAAA,GAAA5T,EAAU4T,EAAA,GAAA49B,GAEvD4Y,oBAAA,SAAAxnD,EAAAyV,GACA,IAAAzE,EAAAjV,KAAA+qD,WACA91C,EAAA,GAAAA,EAAA,GAAAhR,EAAAgR,EAAA,GAAAyE,EAAAzE,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAhR,EAAAgR,EAAA,GAAAyE,EAAAzE,EAAA,IAEAi3C,wBAAA,SAAAjoD,EAAAyV,GACA,IAAAzE,EAAAjV,KAAA2rD,eACA12C,EAAA,GAAAA,EAAA,GAAAhR,EAAAgR,EAAA,GAAAyE,EAAAzE,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAhR,EAAAgR,EAAA,GAAAyE,EAAAzE,EAAA,IAEA89C,iBAAA,SAAAjI,GAEA,IAAAJ,GAAA1qD,KAAA+oD,SAAA/oD,KAAA2qD,WAAA,EACA,EAAA3qD,KAAA+oD,SACA,EAAA/oD,KAAA4qD,UACA,OAAAr2C,GAAA7H,UAAAo+C,EAAAv2C,GAAA7H,UAAA1M,KAAA+qD,WAAAL,KAEAyB,eAAA,WACAnsD,KAAAksD,wBAAA,GAAAlsD,KAAAisD,SACAjsD,KAAA+qD,WAAA/qD,KAAA2rD,eAAAnqD,SAEA+X,MAAA,WACA,IAAAA,EAAA7W,OAAAkH,OAAA5J,MAIA,OAHAuZ,EAAAwxC,WAAA/qD,KAAA+qD,WAAAvpD,QACA+X,EAAAoyC,eAAA3rD,KAAA2rD,eAAAnqD,QACA+X,EAAAixC,WAAAxqD,KAAAwqD,WAAAhpD,QACA+X,IAGAuyC,EArDA,GAwDArD,GAAA,WACA,SAAAA,IACAzoD,KAAA8qD,IAAA,IAAAnnB,aAAArvB,IACAtU,KAAA8R,KAAA,KACA9R,KAAAimD,kBAAAv7C,EAAAC,KACA3K,KAAAopD,eAAAhhB,GAAAgC,WAAAC,KACArqC,KAAAqpD,iBAAAjhB,GAAAgC,WAAAC,KAOA,OALAoe,EAAAj2C,WACA+G,MAAA,WACA,OAAA7W,OAAAkH,OAAA5J,QAGAyoD,EAbA,GAgBAE,GAAA,WAkHA,SAAAA,EAAA1jC,EAAAwC,EAAAi9B,GAGA1kD,KAAAk3B,OAAA,IAAAyC,GAAA,IAAAvL,GAAAnJ,EAAA+tC,IAAA,EAAAvrC,GACAznB,KAAA0kD,eACA1kD,KAAAizD,oBAlHA,IAAAD,GAEApgB,GAAQ9V,GAAAhxB,EAAAE,aAAAknD,QAAA,EAAAC,cAAA,GACRC,GAAQt2B,GAAAhxB,EAAAG,WAAAinD,QAAA,EAAAC,cAAA,GACR36B,GAAQsE,GAAAhxB,EAAAI,YAAAgnD,QAAA,EAAAC,cAAA,GACRthB,GAAQ/U,GAAAhxB,EAAAK,cAAA+mD,QAAA,EAAAC,cAAA,GACRh+C,GAAQ2nB,GAAAhxB,EAAAM,QAAA8mD,QAAA,EAAAC,cAAA,GACRE,IAASv2B,GAAAhxB,EAAAO,mBAAA6mD,QAAA,EAAAC,cAAA,GACT9vD,GAAQy5B,GAAAhxB,EAAAQ,YAAA4mD,QAAA,EAAAC,cAAA,GACRG,IAASx2B,GAAAhxB,EAAAS,UAAA2mD,QAAA,EAAAC,cAAA,GACTzmB,GAAQ5P,GAAAhxB,EAAAU,KAAA0mD,QAAA,EAAAC,cAAA,GACRI,GAAQz2B,GAAAhxB,EAAAW,QAAAymD,QAAA,EAAAC,cAAA,GACRK,IAAS12B,GAAAhxB,EAAAY,UAAAwmD,QAAA,EAAAC,cAAA,GAGTl+C,GAAQ6nB,GAAAhxB,EAAAa,OAAAumD,QAAA,EAAAC,cAAA,GACR34B,GAAQsC,GAAAhxB,EAAAc,OAAAsmD,QAAA,EAAAC,cAAA,GACRp9C,GAAQ+mB,GAAAhxB,EAAAe,QAAAqmD,QAAA,EAAAC,cAAA,GACRnuD,GAAQ83B,GAAAhxB,EAAAgB,SAAAomD,QAAA,EAAAC,cAAA,GACRz5C,GAAQojB,GAAAhxB,EAAAiB,SAAAmmD,QAAA,EAAAC,cAAA,GACRne,GAAQlY,GAAAhxB,EAAAkB,UAAAkmD,QAAA,EAAAC,cAAA,GACRM,IAAS32B,GAAAhxB,EAAAmB,UAAAimD,QAAA,EAAAC,cAAA,GACTO,GAAQ52B,GAAAhxB,EAAAoB,OAAAgmD,QAAA,EAAAC,cAAA,GACR7qD,GAAQw0B,GAAAhxB,EAAAqB,YAAA+lD,QAAA,EAAAC,cAAA,GACRtgB,GAAQ/V,GAAAhxB,EAAAsB,KAAA8lD,QAAA,EAAAC,cAAA,GACRQ,GAAQ72B,GAAAhxB,EAAAsB,KAAA8lD,QAAA,EAAAC,cAAA,GACRS,MAAW92B,GAAAhxB,EAAAuB,OAAA6lD,QAAA,EAAAC,cAAA,GACX1kB,GAAQ3R,GAAAhxB,EAAAwB,WAAA4lD,QAAA,EAAAC,cAAA,GACRU,MAAW/2B,GAAAhxB,EAAAyB,aAAA2lD,QAAA,EAAAC,cAAA,GACXv+C,GAAQkoB,GAAAhxB,EAAA0B,gBAAA0lD,QAAA,EAAAC,cAAA,GACRW,MAAWh3B,GAAAhxB,EAAA2B,kBAAAylD,QAAA,EAAAC,cAAA,GACXjvD,GAAQ44B,GAAAhxB,EAAA4B,QAAAwlD,QAAA,EAAAC,cAAA,GAGRY,GAAQj3B,GAAAhxB,EAAA6B,KAAAulD,QAAA,EAAAC,cAAA,GACRa,MAAWl3B,GAAAhxB,EAAA8B,OAAAslD,QAAA,EAAAC,cAAA,GAGXc,IAASn3B,GAAAhxB,EAAA+B,UAAAqlD,QAAA,EAAAC,cAAA,GACTe,IAASp3B,GAAAhxB,EAAAgC,QAAAolD,QAAA,EAAAC,cAAA,GACTgB,IAASr3B,GAAAhxB,EAAAiC,eAAAmlD,QAAA,EAAAC,cAAA,GACTiB,IAASt3B,GAAAhxB,EAAAkC,eAAAklD,QAAA,EAAAC,cAAA,GACTkB,IAASv3B,GAAAhxB,EAAAmC,UAAAilD,QAAA,EAAAC,cAAA,GACTmB,IAASx3B,GAAAhxB,EAAAoC,WAAAglD,QAAA,EAAAC,cAAA,GACToB,IAASz3B,GAAAhxB,EAAAqC,QAAA+kD,QAAA,EAAAC,cAAA,GACTqB,IAAS13B,GAAAhxB,EAAAsC,qBAAA8kD,QAAA,EAAAC,cAAA,GACTsB,IAAS33B,GAAAhxB,EAAAuC,YAAA6kD,QAAA,EAAAC,cAAA,GACTuB,IAAS53B,GAAAhxB,EAAAwC,SAAA4kD,QAAA,EAAAC,cAAA,GACTwB,IAAS73B,GAAAhxB,EAAAyC,mBAAA2kD,QAAA,EAAAC,cAAA,GACTyB,IAAS93B,GAAAhxB,EAAA0C,cAAA0kD,QAAA,EAAAC,cAAA,GACT0B,MAAW/3B,GAAAhxB,EAAA2C,SAAAykD,QAAA,EAAAC,cAAA,GACX2B,IAASh4B,GAAAhxB,EAAA4C,SAAAwkD,QAAA,EAAAC,cAAA,GACT4B,IAASj4B,GAAAhxB,EAAA6C,eAAAukD,QAAA,EAAAC,cAAA,GACT6B,KAAWl4B,GAAAhxB,EAAA8C,iBAAAskD,QAAA,EAAAC,cAAA,GACX8B,KAAUn4B,GAAAhxB,EAAA+C,2BAAAqkD,QAAA,EACVC,cAAA,GAGA+B,IAASp4B,GAAAhxB,EAAAgD,aAAAokD,QAAA,EAAAC,cAAA,GACTgC,IAASr4B,GAAAhxB,EAAAiD,sBAAAmkD,QAAA,EAAAC,cAAA,GAGTiC,IAASt4B,GAAAhxB,EAAAkD,oBAAAkkD,QAAA,EAAAC,cAAA,GACTtpB,IAAS/M,GAAAhxB,EAAAmD,kBAAAikD,QAAA,EAAAC,cAAA,GACTkC,IAASv4B,GAAAhxB,EAAAoD,eAAAgkD,QAAA,EAAAC,cAAA,GACTmC,KAAUx4B,GAAAhxB,EAAAqD,gBAAA+jD,QAAA,GAAAC,cAAA,GACVoC,IAASz4B,GAAAhxB,EAAAsD,aAAA8jD,QAAA,EAAAC,cAAA,GACTqC,KAAU14B,GAAAhxB,EAAAuD,cAAA6jD,QAAA,GAAAC,cAAA,GACVhmB,GAAQrQ,GAAAhxB,EAAAwD,cAAA4jD,QAAA,EAAAC,cAAA,GACRx+C,GAAQmoB,GAAAhxB,EAAAyD,YAAA2jD,QAAA,EAAAC,cAAA,GACRsC,IAAS34B,GAAAhxB,EAAA0D,kBAAA0jD,QAAA,EAAAC,cAAA,GACTuC,IAAS54B,GAAAhxB,EAAA2D,gBAAAyjD,QAAA,EAAAC,cAAA,GACTwC,GAAQ74B,GAAAhxB,EAAA4D,mBAAAwjD,QAAA,EAAAC,cAAA,GACRzwB,GAAQ5F,GAAAhxB,EAAA6D,iBAAAujD,QAAA,EAAAC,cAAA,GAGRyC,IAAS94B,GAAAhxB,EAAA8D,YAAAsjD,QAAA,EAAAC,cAAA,GAGT0C,IAAS/4B,GAAAhxB,EAAA+D,iBAAAqjD,QAAA,EAAAC,cAAA,GACT2C,IAASh5B,GAAAhxB,EAAAgE,eAAAojD,QAAA,EAAAC,cAAA,GACT4C,IAASj5B,GAAAhxB,EAAAiE,eAAAmjD,QAAA,EAAAC,cAAA,GAGT6C,IAASl5B,GAAAhxB,EAAAkE,aAAAkjD,QAAA,EAAAC,cAAA,GACT8C,IAASn5B,GAAAhxB,EAAAmE,UAAAijD,QAAA,EAAAC,cAAA,GACT+C,IAASp5B,GAAAhxB,EAAAoE,eAAAgjD,QAAA,EAAAC,cAAA,GACTgD,KAAUr5B,GAAAhxB,EAAAqE,mBAAA+iD,QAAA,EAAAC,cAAA,GACViD,KAAUt5B,GAAAhxB,EAAAsE,wBAAA8iD,QAAA,EACVC,cAAA,GACAkD,KAAUv5B,GAAAhxB,EAAAuE,iBAAA6iD,QAAA,EAAAC,cAAA,GAGVmD,IAASx5B,GAAAhxB,EAAAwE,YAAA4iD,QAAA,EAAAC,cAAA,GACToD,IAASz5B,GAAAhxB,EAAAyE,UAAA2iD,QAAA,EAAAC,cAAA,GAGTqD,GAAA,KACAC,GAAA,KACAC,KAAA,KACAC,GAAA,KACAC,IAAA,KACAC,KAAA,KACAC,MAAA,KACAC,GAAA,KACAC,IAAA,KACAC,KAAA,MA0HA,OA/GAtO,EAAAn2C,WACAi3C,uBACA,OAAAzpD,KAAA0kD,aAAAkO,WAAA9xD,QAwBAgoD,KAAA,SAAAphB,GAEA,IADA,IAAAluB,EAAAkuB,EAAAluB,OACA,CACA,IAAAjX,EAAAvC,KAAAk3B,OAAAU,SACA,GAAAtyB,EAAA/C,GAAA,CACA,IAAAgD,EAAAhD,EAAAgD,IAEA2xD,EAAAlE,EAAAztD,GACA,IAAA2xD,EAAA,CACAx2D,EAAA,oBAAA6E,EAAA,KACA,SAGA,IAAA6sB,EAAA8kC,EAAAp6B,GACAo2B,EAAAgE,EAAAhE,QACAiE,EAAA,OAAA39C,IAAA1Y,OAAA,EAEA,GAAAo2D,EAAA/D,aA0BWgE,EAAAjE,GACX/yD,EAAA,WAAAiyB,EAAA,iBAAA8gC,EACA,wBAAAiE,EAAA,aA5BA,CAEA,GAAAA,IAAAjE,EAAA,CAEA,IADA,IAAAD,EAAAjzD,KAAAizD,iBACAkE,EAAAjE,GACAD,EAAAjyD,KAAAwY,EAAAqC,SACAs7C,IAEA,KAAAA,EAAAjE,GAAA,IAAAD,EAAAnyD,QACA0Y,IACAA,MAEAA,EAAApC,QAAA67C,EAAAx9B,OACA0hC,IAIA,GAAAA,EAAAjE,EAAA,CAGA/yD,EAAA,WAAAiyB,EAAA,sBACA8gC,EAAA,uBAAAiE,EACA,mBACA39C,EAAA,KACA,UAYA,OAJAxZ,KAAAo3D,kBAAAhlC,EAAA5Y,GAEAkuB,EAAAtV,KACAsV,EAAAluB,QACA,EAEA,GAAAlP,EAAA/H,GACA,SAGA,OAAAA,IACAiX,IACAA,MAEAA,EAAAxY,KAAAuB,aAAAoD,GAAApD,EAAA+uB,SAAA/uB,GACAT,EAAA0X,EAAA1Y,QAAA,4BAMAs2D,kBACA,SAAAhlC,EAAA5Y,GACA,SAAA4Y,GACA,KAAAtmB,EAAAU,KACAxM,KAAA0kD,aAAAl4C,OACA,MACA,KAAAV,EAAAW,QACAzM,KAAA0kD,aAAAj4C,UACA,MACA,KAAAX,EAAAY,UACA1M,KAAA0kD,aAAAh4C,UAAA8M,MAKAmvC,EAzOA,GA4OA8J,GAAA,WACA,SAAA4E,EAAAC,EAAAxS,EAAA1yB,GAEA,QADAqjB,EAAA6hB,EACAj0D,EAAA,EAAAwE,EAAAi9C,EAAAhkD,OAAA,EAA4CuC,EAAAwE,EAAQxE,IAAA,CACpD,IAAAquB,EAAAozB,EAAAzhD,GACAoyC,IAAA/jB,KAAA+jB,EAAA/jB,OAEA+jB,EAAAqP,IAAAhkD,OAAA,IAAAsxB,EA8WA,SAAAqgC,KAtVA,IAAA8E,KAkXA,OA9WAF,EAAAE,GACAzrD,EAAAU,KAAAV,EAAAY,UAAAZ,EAAAsF,wBAAAtF,EAAAW,SACA,SAAAmxC,GAeA,IAdA,IAKAxc,EAAAwc,EAAAxc,QAAAgkB,EAAAxH,EAAAwH,UACAoS,EAAA5Z,EAAA6Z,MACAC,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACAI,EAAAJ,EAAA,EAGAn0D,EAAAq0D,EAAA,EACA7vD,EAAAu5B,EAAAtgC,OACAuC,EAAA,EAAAwE,GACAu5B,EAAA/9B,KAAAyI,EAAAU,MACA40B,EAAA/9B,EAAA,KAAAyI,EAAAY,WACA00B,EAAA/9B,EAAA,KAAAyI,EAAAsF,yBACAgwB,EAAA/9B,EAAA,KAAAyI,EAAAW,SAGApJ,GAAA,EAKA,IAAAmX,EAAAjX,KAAAC,KAAAH,EAAAq0D,GAAA,EAzBA,KA2BA,GAAAl9C,EA5BA,GA6BA,OAAAnX,EAKA,IAGAqpC,EAHAjP,EAAA,EACAlT,KAAAstC,EAAA,EACAC,EAjCA,EAiCAC,EAjCA,EAmCA,IAAArrB,EAAA,EAAiBA,EAAAlyB,EAAWkyB,IAAA,CAC5B,IAAAhgC,EAAA04C,EAAAuS,GAAAjrB,GAAA,IACAsrB,EAAA5S,EAAAwS,GAAAlrB,GAAA,OACAorB,EAAAE,EAAAtkD,MAvCA,MAyCA+pB,EAAAl6B,KAAAkS,IAAAgoB,EAAAq6B,GACAC,GAAAF,EAAA,EACAC,EAAA,EACAD,EAAA,GAEAttC,EAAAvpB,MACA0L,YACAzI,EAAA6zD,EAAAp+C,EAAAq+C,EACAnlB,EAAAolB,EAAAtkD,MAAAshC,EAAAgjB,EAAArkD,SAEAmkD,GAAAE,EAAAtkD,MAAA,EACAmkD,EAAAt0D,KAAAkS,IAAAoiD,EAAAG,EAAArkD,QAEA,IAAAskD,EAAA10D,KAAAkS,IAAAgoB,EAAAq6B,GArDA,EAsDAI,EAAAH,EAAAF,EAtDA,EAuDAlU,EAAA,IAAA9/C,WAAAo0D,EAAAC,EAAA,GACAC,EAAAF,GAAA,EACA,IAAAvrB,EAAA,EAAiBA,EAAAlyB,EAAWkyB,IAAA,CAC5B,IAAAtoC,EAAAghD,EAAAwS,GAAAlrB,GAAA,OAAAtoC,KAEAg0D,EAAA7tC,EAAAmiB,GAAAkG,GAAA,EACAylB,EAAA,EACA9zD,EAAAgmB,EAAAmiB,GAAAzoC,EAAAsmB,EAAAmiB,GAAAhzB,EAAAu+C,GAAA,EACAtU,EAAAtvC,IAAAjQ,EAAAV,SAAA,EAAA00D,GAAA7zD,EAAA4zD,GACA,QAAAz1B,EAAA,EAAA41B,EAAA/tC,EAAAmiB,GAAAsI,EAAsCtS,EAAA41B,EAAQ51B,IAC9CihB,EAAAtvC,IAAAjQ,EAAAV,SAAA20D,IAAAD,GAAA7zD,GACA8zD,GAAAD,EACA7zD,GAAA4zD,EAGA,IADAxU,EAAAtvC,IAAAjQ,EAAAV,SAAA20D,EAAAD,EAAAC,GAAA9zD,GACAA,GAAA,GACAH,EAAAG,EAAA,GAAAH,EAAAG,GACAH,EAAAG,EAAA,GAAAH,EAAAG,EAAA,GACAH,EAAAG,EAAA,GAAAH,EAAAG,EAAA,GACAH,EAAAG,EAAA,GAAAH,EAAAG,EAAA,GACAH,EAAAG,EAAA6zD,GAAAh0D,EAAAG,EAAA6zD,EAAA,GACAh0D,EAAAG,EAAA6zD,EAAA,GAAAh0D,EAAAG,EAAA6zD,EAAA,GACAh0D,EAAAG,EAAA6zD,EAAA,GAAAh0D,EAAAG,EAAA6zD,EAAA,GACAh0D,EAAAG,EAAA6zD,EAAA,GAAAh0D,EAAAG,EAAA6zD,EAAA,GACA7zD,GAAA4zD,EAUA,OALA/2B,EAAAzkB,OAAA+6C,EAAA,EAAAl9C,EAAA1O,EAAAuF,8BACA+zC,EAAAzoC,OAAA+6C,EAAA,EAAAl9C,IACU9G,MAAAukD,EAAAtkD,OAAAukD,EAAAK,KAAAltD,EACVjH,KAAAu/C,GAA0Bp5B,IAE1BmtC,EAAA,IAMAL,EAAAE,GACAzrD,EAAAU,KAAAV,EAAAY,UAAAZ,EAAAmF,sBAAAnF,EAAAW,SACA,SAAAmxC,GAcA,IAbA,IAIAxc,EAAAwc,EAAAxc,QAAAgkB,EAAAxH,EAAAwH,UACAoS,EAAA5Z,EAAA6Z,MACAC,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACAgB,EAAAhB,EAAA,EAGAn0D,EAAAq0D,EAAA,EACA7vD,EAAAu5B,EAAAtgC,OACAuC,EAAA,EAAAwE,GACAu5B,EAAA/9B,KAAAyI,EAAAU,MACA40B,EAAA/9B,EAAA,KAAAyI,EAAAY,WACA00B,EAAA/9B,EAAA,KAAAyI,EAAAmF,uBACAmwB,EAAA/9B,EAAA,KAAAyI,EAAAW,SAGApJ,GAAA,EAKA,IAAAmX,GAAAnX,EAAAq0D,GAAA,EAGA,IAFAl9C,EA3JA,SAAAk9C,EAAAl9C,EAAA4mB,EACAgkB,GAMA,QADAoT,EAAAd,EAAA,EACAr0D,EAAA,EAAmBA,EAAAmX,EAAWnX,IAAA,CAC9B,IAAA+oB,EAAAg5B,EAAAoT,EAAA,EAAAn1D,GACAo1D,EAAA,IAAArsC,EAAAtrB,QAAAsrB,EAAA,GACA,IAAAqsC,GAAA,IAAAA,EAAA/kD,OAAA,IAAA+kD,EAAA9kD,QACA8kD,EAAAr0D,KAAAtD,SACA,IAAA23D,EAAAr0D,KAAAtD,QAAA,IAAA23D,EAAAr0D,KAAA,IAIA,MAHAg9B,EAAAo3B,EAAA,EAAAn1D,GAAAyI,EAAA0F,yBAKA,OAAAgJ,EAAAnX,EAyIAq1D,CAAAhB,EAAAl9C,EAAA4mB,EACAgkB,IA3BA,GA6BA,OAAA/hD,EAGA,IAAAqpC,EAEAisB,EAAAC,EADAC,GAAA,EAEAC,EAAA1T,EAAAoT,GAAA,GACA,OAAApT,EAAAuS,GAAA,IACA,IAAAvS,EAAAuS,GAAA,IACAkB,GAAA,EACA,IAAAE,EAAA3T,EAAAuS,GAAA,GACAqB,EAAA5T,EAAAuS,GAAA,GACAgB,EAAAhB,EAAA,EACA,IAAAsB,EAAAT,EAAA,EACA,IAAA9rB,EAAA,EAAmBA,EAAAlyB,EAAWkyB,IAAAisB,GAAA,EAAAM,GAAA,EAE9B,GADAL,EAAAxT,EAAAuT,GACAvT,EAAA6T,GAAA,KAAAH,GACAF,EAAA,KAAAG,GACA,IAAAH,EAAA,IACA,IAAAA,EAAA,IACAA,EAAA,KAAAI,EAAA,CACAtsB,EAlDA,GAmDAmsB,GAAA,EAEAr+C,EAAAkyB,EAEA,OAKA,GAAAmsB,EAAA,CACAr+C,EAAAjX,KAAAC,IAAAgX,EA3DA,KA4DA,IAAA0+C,EAAA,IAAAv1B,aAAA,EAAAnpB,GAEA,IADAm+C,EAAAhB,EACAjrB,EAAA,EAAmBA,EAAAlyB,EAAWkyB,IAAAisB,GAAA,EAC9BC,EAAAxT,EAAAuT,GACAO,EAAAxsB,GAAA,GAAAksB,EAAA,GACAM,EAAA,GAAAxsB,GAAA,IAAAksB,EAAA,GAIAx3B,EAAAzkB,OAAA+6C,EAAA,EAAAl9C,EAAA1O,EAAAyF,6BACA6zC,EAAAzoC,OAAA+6C,EAAA,EAAAl9C,GACAs+C,EAAAC,EAAAC,EAAAE,QACO,CACP1+C,EAAAjX,KAAAC,IAAAgX,EA1EA,KA2EA,IAAA2+C,KACA,IAAAzsB,EAAA,EAAmBA,EAAAlyB,EAAWkyB,IAAA,CAC9BksB,EAAAxT,EAAAuS,GAAAjrB,GAAA,IACA,IAAA0sB,EAAAhU,EAAAoT,GAAA9rB,GAAA,OACAysB,EAAAn4D,MAAuBoD,KAAAg1D,EAAAh1D,KAAAsP,MAAA0lD,EAAA1lD,MACvBC,OAAAylD,EAAAzlD,OACAjH,UAAAksD,IAIAx3B,EAAAzkB,OAAA+6C,EAAA,EAAAl9C,EAAA1O,EAAAoF,4BACAk0C,EAAAzoC,OAAA+6C,EAAA,EAAAl9C,GAAA2+C,IAGA,OAAAzB,EAAA,IAMAL,EAAAE,GACAzrD,EAAAU,KAAAV,EAAAY,UAAAZ,EAAAqF,kBAAArF,EAAAW,SACA,SAAAmxC,GACA,IAGAxc,EAAAwc,EAAAxc,QAAAgkB,EAAAxH,EAAAwH,UACAoS,EAAA5Z,EAAA6Z,MACAC,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACA6B,EAAA7B,EAAA,EACA8B,EAAA9B,EAEA,OAAApS,EAAAuS,GAAA,IACA,IAAAvS,EAAAuS,GAAA,GACA,OAAA2B,EAAA,EASA,IALA,IAAAC,EAAAnU,EAAAiU,GAAA,GACAN,EAAA3T,EAAAuS,GAAA,GACAqB,EAAA5T,EAAAuS,GAAA,GACAt0D,EAAAq0D,EAAA,EACA7vD,EAAAu5B,EAAAtgC,OACAuC,EAAA,EAAAwE,GACAu5B,EAAA/9B,KAAAyI,EAAAU,MACA40B,EAAA/9B,EAAA,KAAAyI,EAAAY,WACA00B,EAAA/9B,EAAA,KAAAyI,EAAAqF,mBACAiwB,EAAA/9B,EAAA,KAAAyI,EAAAW,SAGA24C,EAAA/hD,EAAA,QAAA01D,GACA,IAAA3T,EAAA/hD,EAAA,OACA,IAAA+hD,EAAA/hD,EAAA,OACA+hD,EAAA/hD,EAAA,QAAA21D,GAGA5T,EAAA/hD,EAAA,QAAAk2D,GAGAl2D,GAAA,EAKA,IAAAmX,EAAAjX,KAAAC,KAAAH,EAAAq0D,GAAA,EAzCA,KA0CA,GAAAl9C,EA3CA,EA4CA,OAAAnX,EAMA,QAFA61D,EAAA,IAAAv1B,aAAA,EAAAnpB,GACAm+C,EAAAhB,EACAjrB,EAAA,EAAqBA,EAAAlyB,EAAWkyB,IAAAisB,GAAA,GAChC,IAAAC,EAAAxT,EAAAuT,GACAO,EAAAxsB,GAAA,GAAAksB,EAAA,GACAM,EAAA,GAAAxsB,GAAA,IAAAksB,EAAA,GAIA,IAAAp/C,GAAA+/C,EAAAR,EAAAC,EACAE,GAIA,OAHA93B,EAAAzkB,OAAA+6C,EAAA,EAAAl9C,EAAA1O,EAAAwF,yBACA8zC,EAAAzoC,OAAA+6C,EAAA,EAAAl9C,EAAAhB,GAEAk+C,EAAA,IAMAL,EAAAE,GACAzrD,EAAA+B,UAAA/B,EAAAqC,QAAArC,EAAA0C,cAAA1C,EAAA4C,SAAA5C,EAAAgC,SACA,SAAA8vC,GAiBA,IAhBA,IAGAxc,EAAAwc,EAAAxc,QAAAgkB,EAAAxH,EAAAwH,UACAoS,EAAA5Z,EAAA6Z,MACA+B,EAAAhC,EAAA,EACAiC,EAAAjC,EAAA,EACAkC,EAAAlC,EAAA,EACAmC,EAAAnC,EAAA,EACAoC,EAAApC,EAGAqC,EAAAzU,EAAAqU,GAAA,GACAK,EAAA1U,EAAAqU,GAAA,GACAp2D,EAAAm2D,EAAA,EACA3xD,EAAAu5B,EAAAtgC,OACAuC,EAAA,EAAAwE,GACAu5B,EAAA/9B,KAAAyI,EAAA+B,WACAuzB,EAAA/9B,EAAA,KAAAyI,EAAAqC,SACAizB,EAAA/9B,EAAA,KAAAyI,EAAA0C,eACA4yB,EAAA/9B,EAAA,KAAAyI,EAAA4C,UACA0yB,EAAA/9B,EAAA,KAAAyI,EAAAgC,SAGAs3C,EAAA/hD,EAAA,QAAAw2D,GACAzU,EAAA/hD,EAAA,QAAAy2D,GAGAz2D,GAAA,EAKA,IAAAmX,EAAAjX,KAAAC,KAAAH,EAAAm2D,GAAA,EAhCA,KAiCA,GAAAh/C,EAlCA,EAmCA,OAAAnX,EAMA,IAAA02D,EAAAP,EACAA,GAAA,GACAp4B,EAAAo4B,EAAA,KAAAp4B,EAAAq4B,IACAr4B,EAAAo4B,EAAA,KAAAp4B,EAAAs4B,IACAt4B,EAAAo4B,EAAA,KAAAp4B,EAAAu4B,IACAv4B,EAAAo4B,EAAA,KAAAp4B,EAAAw4B,IACAxU,EAAAoU,EAAA,QAAAK,GACAzU,EAAAoU,EAAA,QAAAM,IACAt/C,IACAu/C,GAAA,GAKA,QADAC,EAAAD,EAAA,EACArtB,EAAA,EAAqBA,EAAAlyB,EAAWkyB,IAChCtL,EAAAzkB,OAAAq9C,EAAA,GACA5U,EAAAzoC,OAAAq9C,EAAA,GACAA,GAAA,EAGA,OAAAA,EAAA,IAKAvH,EAAAjgD,WACAkgD,SAAA,SAAAnhC,GASA,IARA,IAMAkkB,EANArU,EAAA7P,EAAA6P,QACAwc,GACA6Z,MAAA,EACAr2B,UACAgkB,UAJA7zB,EAAA6zB,WAOA/hD,EAAA,EAAAwE,EAAAu5B,EAAAtgC,OACAuC,EAAAwE,GAEA,mBADA4tC,MAAA8hB,GAAAn2B,EAAA/9B,MAEAu6C,EAAA6Z,MAAAp0D,EAIAA,EAAAoyC,EAAAmI,GACAnI,OAAAxyC,EACA4E,EAAA+1C,EAAAxc,QAAAtgC,QAEAuC,MAKAovD,EAjZA,GAqZAwH,IAEA,iBACA,kBACA,oBACA,oBAEA,WACA,WACA,OACA,YACA,YACA,OACA,cACA,cACA,cACA,cACA,cACA,eACA,eACA,cACA,cACA,QACA,aACA,aACA,QACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,OACA,OACA,SACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,YACA,YACA,cACA,cACA,QACA,QACA,QACA,aACA,aACA,QACA,WACA,WACA,OACA,OACA,YACA,YACA,UACA,UACA,aACA,aACA,YACA,YACA,QACA,QACA,cACA,cACA,aACA,aACA,IACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,UACA,WACA,YACA,YACA,QACA,cACA,cACA,QACA,cACA,iBACA,iBACA,cACA,cACA,cACA,WACA,QACA,QACA,SACA,SACA,QACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,mBACA,mBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,sBACA,mBACA,mBACA,sBACA,sBACA,0BACA,0BACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,IACA,aAGAC,GAAA,WACA,SAAAA,EAAAC,GAIAn6D,KAAAo6D,8BACAp6D,KAAAq6D,mBAAA,EAKAr6D,KAAAs6D,QACAt6D,KAAAkqD,UAAA,EACAlqD,KAAAu6D,QAAA,KACAv6D,KAAAm6D,cAmGA,OAjGAD,EAAA1nD,WACAgoD,kBAAA,SAAAt2D,EAAAivC,EAAAD,GACAlzC,KAAAo6D,gBAAAl2D,EAAA,GAAAlD,KAAAmyC,EAAAD,GACAlzC,KAAAq6D,sBAGAI,YAAA,SAAAtnB,EAAAD,EAAAwnB,GACA,KAAAvnB,GAAAD,GACAlzC,KAAAs6D,KAAAnnB,KAAAunB,KAIAC,WAAA,SAAAxnB,EAAAD,EAAAwnB,GAEA,IADA,IAAAE,EAAAF,EAAA55D,OAAA,EACAqyC,GAAAD,GACAlzC,KAAAs6D,KAAAnnB,KAAAunB,EAEAA,IAAAG,OAAA,EAAAD,GACA13D,OAAAC,aAAAu3D,EAAA52D,WAAA82D,GAAA,IAIAE,kBAAA,SAAA3nB,EAAAD,EAAAjzB,GAEA,IAD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AAA59C,EAAA,IAAAT,eACAzd,EAAA87D,EAAA97D,IAAA6D,EACAqa,EAAAI,KAAA,MAAAte,GAAA,GACAke,EAAAlB,KAAA,MACAkB,EAAA28C,cACAl8D,EAAA,0BAAAqB,GAEA,IAAA0vD,EAAA,IAAAuI,IAAA,GAGA,OADA4D,EAAAnM,EADA,IAAAvjC,GAAA,IAAAmwC,GAAAp+C,EAAA28C,eACAiB,EAAA,MACApM,EAGA,OACA/nD,OAAA,SAAA0jD,EAAAyQ,EAAAxD,GACA,GAAAn1D,EAAAkoD,GACA,OAAA8Q,EAAA9Q,EAAAxnD,KAAAi4D,GACO,GAAA93D,EAAAqnD,GAAA,CACP,IAAAqE,EAAA,IAAAuI,GACA5iC,EAAA,IAAAlJ,GAAAk/B,GACA,IACAwQ,EAAAnM,EAAAr6B,EAAAymC,EAAAxD,GACS,MAAAl5D,GACTX,EAAA,sBAAAW,GAEA,OAAAswD,EAEA/wD,EAAA,wBAvQA,GA8QA49D,GAAA,MACAC,GAAA,MACAC,IAAA,EAIAC,GAAA,IAQAC,IAAA,EAEA30D,IACAwlD,WAAA,EACAiB,MAAA,EACAxmD,SAAA,EACA20D,OAAA,EACAjO,YAAA,GACAkO,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAGAn1D,IACAo1D,gBAAA,6CACA,mDACA,8DACA,mEACA,+DACA,0DACA,4DACA,qEACA,mEACA,sEACA,4DACA,kEACA,qDACA,qEACA,+DACA,+DACA,+DACA,6DACA,6DACA,yDACA,iEACA,+DACA,2DACA,8DACA,+DACA,6DACA,2DACA,2DACA,6DACA,0DACA,4DACA,8DACA,gEACA,gEACA,mEACA,gEACA,6DACA,6DACA,qEACA,+DACA,kBACAC,mBAAA,0CACA,sDACA,yDACA,gEACA,0DACA,qEACA,2DACA,6DACA,+DACA,0DACA,mEACA,6DACA,kEACA,kEACA,+DACA,+DACA,+DACA,gEACA,0DACA,gEACA,uEACA,gEACA,gEACA,gEACA,mEACA,6DACA,gEACA,6DACA,oEACA,kEACA,0DACA,gEACA,gEACA,qEACA,4DACA,6DACA,kEACA,sDACA,kEACA,+CACAzR,kBAAA,6CACA,mDACA,4DACA,qEACA,6DACA,+DACA,iEACA,4DACA,6DACA,+DACA,4DACA,+DACA,6DACA,iEACA,+DACA,8DACA,8DACA,8DACA,qEACA,mEACA,gEACA,mEACA,+DACA,yDACA,oEACA,kEACA,mEACA,kEACA,+DACA,mEACA,kEACA,iEACA,qEACA,kBACAvjD,kBAAA,6CACA,mDACA,4DACA,oEACA,6DACA,+DACA,iEACA,4DACA,6DACA,+DACA,4DACA,gEACA,yDACA,0DACA,iEACA,6DACA,4DACA,0DACA,2DACA,gEACA,oEACA,8DACA,0DACA,gEACA,+DACAsjD,iBAAA,6CACA,mDACA,4DACA,qEACA,6DACA,+DACA,iEACA,4DACA,6DACA,+DACA,4DACA,4DACA,kEACA,oEACA,qEACA,8DACA,qEACA,4DACA,8DACA,iEACA,oEACA,0DACA,uEACA,oEACA,oEACA,oEACA,gEACA,6DACA,kEACA,oEACA,oEACA,8DACA,6DACA,aACAG,mBAAA,0CACA,sDACA,kEACA,sEACA,mEACA,+DACA,8DACA,8DACA,8DACA,2DACA,oEACA,kEACA,+DACA,2DACA,8DACA,yDACA,4DACA,gEACA,oEACA,8DACA,yDACA,uEACA,6DACA,gEACA,qEACA,iEACA,4DACA,oEACA,oEACA,0DACA,4DACA,qEACA,kEACA,8DACA,iEACA,gBACAC,sBAAA,0CACA,sDACA,6DACA,6DACA,gEACA,gEACA,4DACA,4DACA,4DACA,6DACA,6DACA,iEACA,6DACA,4DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,kEACA,iEAOAmC,IACAoP,YAAA,YACAC,mBAAA,iBACAC,yBAAA,wBACAC,qBAAA,oBACAC,WAAA,YACAC,kBAAA,iBACAC,wBAAA,wBACAC,oBAAA,oBACAC,MAAA,YACAC,aAAA,iBACAC,mBAAA,wBACAC,eAAA,oBACAC,qBAAA,wBACAC,eAAA,iBACAC,iBAAA,oBACAC,QAAA,YACAC,eAAA,eACAC,qBAAA,sBACAC,i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C,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,IACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GACAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,IAAAC,GAAA,IACAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IACAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IACAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IACAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KACAC,IAAA,IAAAC,IAAA,MAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MACAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MACAC,IAAA,MAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IACAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IACAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,MACAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MAAAC,KAAA,MACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IACAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,IAAAC,KAAA,KAAAC,KAAA,KACAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,KAAAC,KAAA,MACAC,KAAA,IAAAC,KAAA,MAAAC,KAAA,KAAAC,KAAA,MAMAC,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,IACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,MAWAh/E,KACGE,MAAA,EAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,MACAD,MAAA,IAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,OAAAC,IAAA,SACAD,MAAA,OAAAC,IAAA,SACAD,MAAA,QAAAC,IAAA,UACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,OAAAC,IAAA,SACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,OAAAC,IAAA,SACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,OAAAC,IAAA,SACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,KAAAC,IAAA,OACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,KAAAC,IAAA,QACAD,MAAA,MAAAC,IAAA,QACAD,MAAA,OAAAC,IAAA,SAGH8+E,IACA,iEACA,sEACA,iEACA,+DACA,oEACA,4DACA,0DACA,sEACA,4DACA,mEACA,8DACA,oEACA,wEACA,uEACA,mEACA,mEACA,sEACA,uEACA,mEACA,8DACA,4DACA,kEACA,iEACA,iEACA,iEACA,wEACA,4DACA,mEACA,sEACA,gEACA,qEACA,kEACA,iEACA,mEACA,kEACA,yDA0BA17B,IACA27B,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,OACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,MACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,OACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,OACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,OACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,UACAC,IAAA,SACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACA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AC,UAAA,IACAC,UAAA,IACAC,eAAA,IACAC,eAAA,KACAC,eAAA,IACAC,kBAAA,KACAC,eAAA,IACAC,gBAAA,IACAC,eAAA,MACAC,UAAA,KACAC,OAAA,IACAC,YAAA,MACAC,WAAA,KACAC,MAAA,IACAC,WAAA,KACAC,cAAA,KACAC,WAAA,KACAC,eAAA,KACAC,WAAA,KACAC,cAAA,IACAC,sBAAA,KACAC,eAAA,IACAC,WAAA,KACAC,QAAA,IACAC,gBAAA,KACAC,gBAAA,KACAC,WAAA,MACAC,QAAA,IACAC,QAAA,IACAC,SAAA,IACAC,4BAAA,IACAC,eAAA,IACAC,gBAAA,IACAC,+BAAA,IACAC,kBAAA,IACAC,aAAA,IACAC,MAAA,IACAC,eAAA,KACAC,OAAA,MACAC,kBAAA,KACAC,wBAAA,KACAC,OAAA,IACAC,YAAA,KACAC,YAAA,KACAC,EAAA,GACAC,QAAA,KACAC,UAAA,KACAC,WAAA,KACAC,YAAA,KACAC,MAAA,IACAC,WAAA,MACAC,WAAA,KACAC,OAAA,MACAC,OAAA,KACArzG,EAAA,GACAszG,OAAA,KACAC,QAAA,KACAC,YAAA,IACAC,UAAA,KACAC,WAAA,KACAC,UAAA,KACAC,OAAA,KACAC,WAAA,MACAC,OAAA,MACA/4H,EAAA,GACAg5H,QAAA,KACAC,UAAA,KACAC,WAAA,KACAC,YAAA,KACAC,GAAA,IACAC,WAAA,MACAC,OAAA,MACAr5H,EAAA,GACAs5H,OAAA,IACAC,YAAA,MACAC,YAAA,KACAC,QAAA,KACAC,YAAA,IACAC,UAAA,IACAC,eAAA,MACAC,WAAA,KACAC,UAAA,KACAC,aAAA,KACAC,qBAAA,KACAC,OAAA,KACAC,MAAA,IACAC,WAAA,KACAC,WAAA,KACAC,WAAA,KACAC,aAAA,KACAC,WAAA,MACAC,OAAA,MACAC,OAAA,KACAC,eAAA,KACAC,uBAAA,KACAC,kBAAA,KACAC,0BAAA,KACA56H,EAAA,GACA66H,WAAA,KACAC,OAAA,IACAC,OAAA,IACAC,YAAA,MACAC,QAAA,KACAC,YAAA,KACAC,KAAA,IACAC,WAAA,IACAC,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,KACAC,QAAA,KACAC,QAAA,IACAC,SAAA,MACAC,MAAA,IACAC,YAAA,IACAC,cAAA,IACAC,oBAAA,IACAC,kBAAA,IACAC,OAAA,KACAhvD,QAAA,IACAivD,aAAA,IACAC,MAAA,GACAC,eAAA,MACAC,WAAA,MACAC,cAAA,KACAC,YAAA,KACAC,WAAA,MACAC,WAAA,KACAC,UAAA,IACAC,kBAAA,KACAC,WAAA,KACAC,oBAAA,KACAC,IAAA,IACAC,QAAA,IACAC,WAAA,KACAC,oBAAA,KACAC,gBAAA,IACAC,iBAAA,IACAC,eAAA,MACAC,eAAA,MACAC,wBAAA,MACAC,UAAA,KACAC,UAAA,MACAC,IAAA,IACAC,WAAA,KACAC,SAAA,IACAC,IAAA,IACAC,OAAA,KACAC,YAAA,KACAC,mBAAA,KACAC,uBAAA,KACAC,cAAA,KACAC,kBAAA,KACAC,QAAA,IACAC,SAAA,MACAC,KAAA,KACAC,kBAAA,KACAC,eAAA,KACAC,mBAAA,KACAC,OAAA,GACAC,eAAA,KACAC,UAAA,KACAC,WAAA,IACAC,gBAAA,MACAC,gBAAA,MACAC,YAAA,MACAC,YAAA,KACAC,IAAA,IACAC,SAAA,IACAC,QAAA,IACAC,YAAA,IACAC,QAAA,IACA75J,EAAA,IACA85J,OAAA,KACAC,WAAA,KACAC,WAAA,KACAC,YAAA,KACAC,eAAA,KACAC,eAAA,KACAC,UAAA,MACAC,QAAA,KACAC,WAAA,KACAC,UAAA,KACAC,YAAA,KACAC,eAAA,MACAC,iBAAA,MACAC,gBAAA,MACAC,UAAA,IACAC,OAAA,KACAC,GAAA,MACAC,IAAA,MACAC,IAAA,MACAC,GAAA,MACAC,cAAA,KACAC,aAAA,KACAC,cAAA,KACAC,WAAA,KACAC,UAAA,KACAC,WAAA,KACAC,SAAA,KACAC,eAAA,MACAC,qBAAA,MACAC,eAAA,KACAC,SAAA,KACAC,eAAA,KACAC,SAAA,KACAC,eAAA,KACAC,QAAA,KACAC,cAAA,KACAC,WAAA,KACAC,iBAAA,KACAC,iBAAA,IACAC,QAAA,KACAC,aAAA,KACAC,KAAA,GACAC,WAAA,KACAC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AAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,KAAA,MACAC,IAAA,MACAC,KAAA,MACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MACAC,IAAA,KACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KAAA,MACAC,KA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,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,WAAA,IACA53F,OAAA,IACAiE,WAAA,IACAwqG,UAAA,IACAhyG,OAAA,IACAs5F,OAAA,IACA/S,QAAA,IACAnkE,OAAA,IACAC,OAAA,IACAiuC,aAAA,IACAruD,IAAA,IACAlH,SAAA,IACAszE,aAAA,IACAylC,OAAA,IACAzyD,QAAA,IACArjC,QAAA,IACAhnB,OAAA,I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IACA/e,OAAA,IACAyhD,QAAA,IACAgM,OAAA,IACA08B,WAAA,IACA9wE,OAAA,IACAS,aAAA,IACAxH,cAAA,IACA0lC,OAAA,IACA4uC,OAAA,IACAvqF,OAAA,IACAkpH,OAAA,IACAxqB,QAAA,IACA78F,OAAA,IACAg+F,aAAA,IACApsF,OAAA,IACA+7E,OAAA,IACAl2E,aAAA,IACAvI,aAAA,IACAlS,OAAA,IACAN,QAAA,IACAC,MAAA,IACAkZ,OAAA,IACAilH,WAAA,IACA74H,OAAA,IACA4J,QAAA,IACAg/D,aAAA,IACAwP,MAAA,IACAjwE,YAAA,IACAm0E,OAAA,IACAq5B,aAAA,IACA9jC,WAAA,IACAqU,UAAA,IACA0+B,UAAA,IACA3iC,SAAA,IACAt0B,aAAA,IACAhJ,IAAA,IACA6zE,OAAA,IACA97C,aAAA,IACAwN,YAAA,IACAxoB,QAAA,IACAj+D,KAAA,KAEA3oF,qBACAm1L,MAAA,IACAzqD,OAAA,IACAi0C,SAAA,IACAhW,WAAA,IACAlpC,OAAA,IACAs2C,QAAA,IACA12D,UAAA,IACAggE,WAAA,IACA1M,UAAA,IACAU,WAAA,IACAxuD,SAAA,IACAq0D,KAAA,IACAjlD,MAAA,IACAqsB,OAAA,IACA61B,OAAA,IACA8d,MAAA,IACAqqB,KAAA,IACA1wC,IAAA,IACA05B,IAAA,IACA5H,MAAA,IACA7vD,KAAA,IACA7B,KAAA,IACAykD,IAAA,IACAhG,MAAA,IACAvoD,MAAA,IACAy/B,KAAA,IACAjwC,MAAA,IACAu4D,UAAA,IACA/2B,KAAA,IACA9sB,MAAA,IACAuO,QAAA,IACAwnC,SAAA,IACA74D,GAAA,KACAt5I,EAAA,IACAqB,EAAA,IACAC,EAAA,IACAs1G,EAAA,IACAkC,EAAA,IACAvyF,EAAA,IACAxmB,EAAA,IACAq/G,EAAA,IACAwB,EAAA,IACA56F,EAAA,IACAuC,EAAA,IACAroB,EAAA,IACAuE,EAAA,IACAC,EAAA,IACAskH,EAAA,IACAkE,EAAA,IACA/mG,EAAA,IACAioG,EAAA,IACA9nG,EAAA,IACAytG,EAAA,IACAiC,EAAA,IACAuD,EAAA,IACA5yG,EAAA,IACAjlB,EAAA,IACAC,EAAA,IACAC,EAAA,IACAy+I,YAAA,IACA1F,UAAA,IACA+F,aAAA,IACAtI,YAAA,IACAynF,WAAA,IACA3sB,UAAA,IACAxqO,EAAA,IACAlB,EAAA,IACAmB,EAAA,IACAZ,EAAA,IACA9T,EAAA,IACAwxC,EAAA,IACAl+B,EAAA,IACAqgC,EAAA,IACA3xC,EAAA,IACAm1B,EAAA,IACAkK,EAAA,IACAlI,EAAA,IACAvlB,EAAA,IACA/Q,EAAA,IACA6mO,EAAA,IACA/1N,EAAA,IACA03B,EAAA,IACAh4B,EAAA,IACApM,EAAA,IACA88B,EAAA,IACAsQ,EAAA,IACA1wC,EAAA,IACA4tC,EAAA,IACA3uC,EAAA,IACAyV,EAAA,IACA06B,EAAA,IACAu4I,UAAA,IACApE,IAAA,IACA2E,WAAA,IACAxH,WAAA,IACAumB,WAAA,IACA/a,KAAA,IACA2nE,SAAA,IACAlmD,SAAA,IACA+mE,IAAA,IACAhpE,OAAA,IACAy7C,QAAA,IACA3yD,SAAA,IACAonD,YAAA,IACAX,aAAA,IACAvnC,cAAA,IACAE,cAAA,IACAC,eAAA,IACA/K,GAAA,IACA2C,GAAA,IACAlI,OAAA,IACAjO,OAAA,IACAC,UAAA,IACAk9C,eAAA,IACA5D,UAAA,IACA5kD,OAAA,IACA0xD,eAAA,IACAX,aAAA,IACAK,cAAA,IACA1nC,eAAA,IACAjR,SAAA,IACAuwC,YAAA,IACAyH,aAAA,IACAnoC,MAAA,IACAvqC,MAAA,IACAgnB,WAAA,IACA+uE,MAAA,IACAvpC,OAAA,IACArrC,MAAA,IACAkT,UAAA,IACA/B,SAAA,IACAwmD,KAAA,IACA90D,QAAA,IACAuwB,aAAA,IACAsrB,OAAA,IACA38C,MAAA,IACA8X,OAAA,IACA1pD,GAAA,IACA6yF,YAAA,IACAl9E,OAAA,IACA2F,OAAA,IACAvD,GAAA,IACA+6E,aAAA,IACApjE,GAAA,IACA0zB,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,WAAA,IACA53F,OAAA,IACAiE,WAAA,IACAwqG,UAAA,IACAhyG,OAAA,IACAs5F,OAAA,IACA/S,QAAA,IACAnkE,OAAA,IACAC,OAAA,IACAiuC,aAAA,IACAruD,IAAA,IACAlH,SAAA,IACAszE,aAAA,IACAylC,OAAA,IACAzyD,QAAA,IACArjC,QAAA,IACAhnB,OAAA,IACAsB,UAAA,IACA+kD,OAAA,IACA44E,OAAA,IACAv0D,QAAA,IACA7yD,OAAA,IACAy0E,OAAA,IACAzqD,QAAA,IACAyoE,OAAA,IACAjjC,UAAA,IACAhvD,YAAA,IACA0N,OAAA,IACA3f,MAAA,IACAw7G,MAAA,IACA2J,YAAA,IACAxyG,UAAA,IACA2oE,GAAA,IACA1Z,OAAA,IACAgnB,cAAA,IACA7kF,QAAA,IACAq0C,OAAA,IACA+kE,cAAA,IACAtiG,SAAA,IACAg2D,OAAA,IACA1jE,aAAA,IACAgB,OAAA,IACAsyG,UAAA,IACA7gE,WAAA,IACAn1C,OAAA,IACAM,QAAA,IACAsD,OAAA,IACAy8E,QAAA,IACArZ,UAAA,IACAuV,YAAA,IACAvC,OAAA,IACArkE,cAAA,IACA/e,OAAA,IACAyhD,QAAA,IACAgM,OAAA,IACA08B,WAAA,IACA9wE,OAAA,IACAS,aAAA,IACAxH,cAAA,IACA0lC,OAAA,IACA4uC,OAAA,IACAvqF,OAAA,IACAkpH,OAAA,IACAxqB,QAAA,IACA78F,OAAA,IACAg+F,aAAA,IACApsF,OAAA,IACA+7E,OAAA,IACAl2E,aAAA,IACAvI,aAAA,IACAlS,OAAA,IACAN,QAAA,IACAC,MAAA,IACAkZ,OAAA,IACAilH,WAAA,IACA74H,OAAA,IACA4J,QAAA,IACAg/D,aAAA,IACAwP,MAAA,IACAjwE,YAAA,IACAm0E,OAAA,IACAq5B,aAAA,IACA9jC,WAAA,IACAqU,UAAA,IACA0+B,UAAA,IACA3iC,SAAA,IACAt0B,aAAA,IACAhJ,IAAA,IACA6zE,OAAA,IACA97C,aAAA,IACAwN,YAAA,IACAxoB,QAAA,IACAj+D,KAAA,KAEAr9E,QACA6pL,MAAA,IACAzqD,OAAA,IACAyhE,UAAA,IACAxjC,WAAA,IACA19B,YAAA,IACA8qC,QAAA,IACA12D,UAAA,IACA44E,SAAA,IACAtlB,UAAA,IACAU,WAAA,IACAruD,aAAA,IACAk0D,KAAA,IACAjlD,MAAA,IACAqpC,MAAA,IACA6Y,OAAA,IACA8d,MAAA,IACAqqB,KAAA,IACA1wC,IAAA,IACA05B,IAAA,IACA5H,MAAA,IACA7vD,KAAA,IACA7B,KAAA,IACAykD,IAAA,IACAhG,MAAA,IACAvoD,MAAA,IACAy/B,KAAA,IACAjwC,MAAA,IACAu4D,UAAA,IACA/2B,KAAA,IACA9sB,MAAA,IACAuO,QAAA,IACAwnC,SAAA,IACAnpD,UAAA,IACAz1C,MAAA,IACAkB,KAAA,IACA6B,IAAA,IACAoB,MAAA,IACAiE,QAAA,IACA8R,IAAA,IACApwH,MAAA,IACA++G,IAAA,IACA2G,KAAA,IACAsvG,OAAA,IACA9tG,MAAA,IACAuB,OAAA,IACA6B,GAAA,IACAoB,GAAA,IACAkD,QAAA,IACA0B,GAAA,IACAkH,MAAA,IACA5F,IAAA,IACAwE,MAAA,IACAO,IAAA,IACAuE,QAAA,IACA8sF,OAAA,IACA15F,MAAA,IACAmP,GAAA,IACAhN,IAAA,IACAuP,KAAA,IACAgjB,YAAA,IACA8xE,UAAA,IACAzxE,aAAA,IACAkqD,cAAA,IACAi1B,WAAA,IACA9rB,UAAA,IACA9gE,MAAA,IACAsJ,KAAA,IACA4I,IAAA,IACA3nD,MAAA,IACA0P,QAAA,IACAk+F,IAAA,IACAruM,MAAA,IACA2gK,IAAA,IACAue,KAAA,IACAovB,KAAA,IACA5qB,MAAA,IACA2G,OAAA,IACA4L,GAAA,IACArpK,GAAA,IACA83K,QAAA,IACArwL,GAAA,IACAghN,MAAA,IACAvb,IAAA,IACA3vM,MAAA,IACA0mN,IAAA,IACA4S,QAAA,IACAt/B,OAAA,IACAD,MAAA,IACA3sL,GAAA,IACA46L,IAAA,IACAokC,KAAA,IACA/zF,UAAA,IACApE,IAAA,IACA2E,WAAA,IACA+lE,QAAA,IACAlpG,KAAA,IACA6b,SAAA,IACAm5D,OAAA,IACAxI,UAAA,IACA5jB,SAAA,IACA2V,SAAA,IACA5X,OAAA,IACAnc,KAAA,IACA6K,QAAA,IACAsd,MAAA,IACA+5C,MAAA,IACAzzE,UAAA,KACAmB,UAAA,IACAY,QAAA,IACAP,WAAA,IACAd,UAAA,IACAya,OAAA,IACAs8C,UAAA,IACAxkO,OAAA,IACA+hM,aAAA,IACAgpB,SAAA,IACAqb,aAAA,IACAlH,YAAA,IACAlmD,OAAA,IACA8Q,OAAA,IACAwoC,SAAA,IACA3+B,YAAA,IACAtnB,YAAA,IACAolB,SAAA,IACAniB,YAAA,IACArB,aAAA,IACAmM,eAAA,IACAlQ,MAAA,IACA7wB,SAAA,IACA8M,SAAA,IACA23G,YAAA,IACArgF,eAAA,IACAE,WAAA,IACAwU,SAAA,IACA0gB,aAAA,IACAwkD,MAAA,IACAnxB,eAAA,IACAyG,eAAA,IACA5Z,UAAA,IACAkT,aAAA,IACAyG,aAAA,IACAt7C,QAAA,IACAghC,WAAA,IACAnnD,MAAA,IACAo2B,SAAA,IACAyrC,cAAA,IACAtqD,eAAA,IACAgtE,eAAA,IACA3pB,QAAA,IACAoF,QAAA,IACAr/C,QAAA,IACAs2B,WAAA,IACAD,WAAA,IACAG,UAAA,IACAh1C,aAAA,KACAE,aAAA,IACAE,WAAA,IACAD,cAAA,IACAF,aAAA,IACAq1C,QAAA,IACAp3C,UAAA,IACAuhE,aAAA,IACAtqD,cAAA,IACAgtE,cAAA,IACA9L,UAAA,IACAnlB,YAAA,IACAL,YAAA,IACAD,YAAA,IACApmD,cAAA,IACAF,cAAA,IACAD,cAAA,IACAV,YAAA,IACAH,aAAA,IACAD,YAAA,IACAF,QAAA,IACAlL,WAAA,IACAgnC,SAAA,IACAK,WAAA,IACAF,WAAA,IACAD,WAAA,IACAusB,aAAA,IACAL,aAAA,IACAD,aAAA,IACAzmD,eAAA,IACAF,eAAA,IACAD,eAAA,IACAR,aAAA,IACAH,cAAA,IACAD,aAAA,IACA/K,MAAA,KAEAiwG,eACA97B,MAAA,IACAzqD,OAAA,IACAi0C,SAAA,IACAhW,WAAA,IACAlpC,OAAA,IACAs2C,QAAA,IACA12D,UAAA,IACAggE,WAAA,IACA1M,UAAA,IACAU,WAAA,IACAxuD,SAAA,IACAq0D,KAAA,IACAjlD,MAAA,IACAqsB,OAAA,IACA61B,OAAA,IACA8d,MAAA,IACAqqB,KAAA,IACA1wC,IAAA,IACA05B,IAAA,IACA5H,MAAA,IACA7vD,KAAA,IACA7B,KAAA,IACAykD,IAAA,IACAhG,MAAA,IACAvoD,MAAA,IACAy/B,KAAA,IACAjwC,MAAA,IACAu4D,UAAA,IACA/2B,KAAA,IACA9sB,MAAA,IACAuO,QAAA,IACAwnC,SAAA,IACA74D,GAAA,IACAt5I,EAAA,IACAqB,EAAA,IACAC,EAAA,IACAs1G,EAAA,IACAkC,EAAA,IACAvyF,EAAA,IACAxmB,EAAA,IACAq/G,EAAA,IACAwB,EAAA,IACA56F,EAAA,IACAuC,EAAA,IACAroB,EAAA,IACAuE,EAAA,IACAC,EAAA,IACAskH,EAAA,IACAkE,EAAA,IACA/mG,EAAA,IACAioG,EAAA,IACA9nG,EAAA,IACAytG,EAAA,IACAiC,EAAA,IACAuD,EAAA,IACA5yG,EAAA,IACAjlB,EAAA,IACAC,EAAA,IACAC,EAAA,IACAy+I,YAAA,IACA1F,UAAA,IACA+F,aAAA,IACAtI,YAAA,IACAynF,WAAA,IACA3sB,UAAA,IACAxqO,EAAA,IACAlB,EAAA,IACAmB,EAAA,IACAZ,EAAA,IACA9T,EAAA,IACAwxC,EAAA,IACAl+B,EAAA,IACAqgC,EAAA,IACA3xC,EAAA,IACAm1B,EAAA,IACAkK,EAAA,IACAlI,EAAA,IACAvlB,EAAA,IACA/Q,EAAA,IACA6mO,EAAA,IACA/1N,EAAA,IACA03B,EAAA,IACAh4B,EAAA,IACApM,EAAA,IACA88B,EAAA,IACAsQ,EAAA,IACA1wC,EAAA,IACA4tC,EAAA,IACA3uC,EAAA,IACAyV,EAAA,IACA06B,EAAA,IACAu4I,UAAA,IACApE,IAAA,IACA2E,WAAA,IACAxH,WAAA,IACAumB,WAAA,IACA/a,KAAA,IACA2nE,SAAA,IACAlmD,SAAA,IACA+mE,IAAA,IACAhpE,OAAA,IACAy7C,QAAA,IACA3yD,SAAA,IACAonD,YAAA,IACAX,aAAA,IACAvnC,cAAA,IACAE,cAAA,IACAC,eAAA,IACA/K,GAAA,IACA2C,GAAA,IACAlI,OAAA,IACAjO,OAAA,IACAC,UAAA,IACAk9C,eAAA,IACA5D,UAAA,IACA5kD,OAAA,IACA0xD,eAAA,IACAX,aAAA,IACAK,cAAA,IACA1nC,eAAA,IACAjR,SAAA,IACAuwC,YAAA,IACAyH,aAAA,IACAnoC,MAAA,IACAvqC,MAAA,IACAgnB,WAAA,IACA+uE,MAAA,IACAvpC,OAAA,IACArrC,MAAA,IACAkT,UAAA,IACA/B,SAAA,IACAwmD,KAAA,IACA90D,QAAA,IACAuwB,aAAA,IACAsrB,OAAA,IACA38C,MAAA,IACA8X,OAAA,IACA1pD,GAAA,IACA6yF,YAAA,IACAl9E,OAAA,IACA2F,OAAA,IACAvD,GAAA,IACA+6E,aAAA,IACApjE,GAAA,IACA0zB,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,WAAA,IACA53F,OAAA,IACAiE,WAAA,IACAwqG,UAAA,IACAhyG,OAAA,IACAs5F,OAAA,IACA/S,QAAA,IACAnkE,OAAA,IACAC,OAAA,IACAiuC,aAAA,IACAruD,IAAA,IACAlH,SAAA,IACAszE,aAAA,IACAylC,OAAA,IACAzyD,QAAA,IACArjC,QAAA,IACAhnB,OAAA,IACAsB,UAAA,IACA+kD,OAAA,IACA44E,OAAA,IACAv0D,QAAA,IACA7yD,OAAA,IACAy0E,OAAA,IACAzqD,QAAA,IACAyoE,OAAA,IACAjjC,UAAA,IACAhvD,YAAA,IACA0N,OAAA,IACA3f,MAAA,IACAw7G,MAAA,IACA2J,YAAA,IACAxyG,UAAA,IACA2oE,GAAA,IACA1Z,OAAA,IACAgnB,cAAA,IACA7kF,QAAA,IACAq0C,OAAA,IACA+kE,cAAA,IACAtiG,SAAA,IACAg2D,OAAA,IACA1jE,aAAA,IACAgB,OAAA,IACAsyG,UAAA,IACA7gE,WAAA,IACAn1C,OAAA,IACAM,QAAA,IACAsD,OAAA,IACAy8E,QAAA,IACArZ,UAAA,IACAuV,YAAA,IACAvC,OAAA,IACArkE,cAAA,IACA/e,OAAA,IACAyhD,QAAA,IACAgM,OAAA,IACA08B,WAAA,IACA9wE,OAAA,IACAS,aAAA,IACAxH,cAAA,IACA0lC,OAAA,IACA4uC,OAAA,IACAvqF,OAAA,IACAkpH,OAAA,IACAxqB,QAAA,IACA78F,OAAA,IACAg+F,aAAA,IACApsF,OAAA,IACA+7E,OAAA,IACAl2E,aAAA,IACAvI,aAAA,IACAlS,OAAA,IACAN,QAAA,IACAC,MAAA,IACAkZ,OAAA,IACAilH,WAAA,IACA74H,OAAA,IACA4J,QAAA,IACAg/D,aAAA,IACAwP,MAAA,IACAjwE,YAAA,IACAm0E,OAAA,IACAq5B,aAAA,IACA9jC,WAAA,IACAqU,UAAA,IACA0+B,UAAA,IACA3iC,SAAA,IACAt0B,aAAA,IACAhJ,IAAA,IACA6zE,OAAA,IACA97C,aAAA,IACAwN,YAAA,IACAxoB,QAAA,IACAj+D,KAAA,KAEAuoI,cACA/7B,MAAA,IACAzqD,OAAA,IACAi0C,SAAA,IACAhW,WAAA,IACAlpC,OAAA,IACAs2C,QAAA,IACA12D,UAAA,IACAggE,WAAA,IACA1M,UAAA,IACAU,WAAA,IACAxuD,SAAA,IACAq0D,KAAA,IACAjlD,MAAA,IACAqsB,OAAA,IACA61B,OAAA,IACA8d,MAAA,IACAqqB,KAAA,IACA1wC,IAAA,IACA05B,IAAA,IACA5H,MAAA,IACA7vD,KAAA,IACA7B,KAAA,IACAykD,IAAA,IACAhG,MAAA,IACAvoD,MAAA,IACAy/B,KAAA,IACAjwC,MAAA,IACAu4D,UAAA,IACA/2B,KAAA,IACA9sB,MAAA,IACAuO,QAAA,IACAwnC,SAAA,IACA74D,GAAA,IACAt5I,EAAA,IACAqB,EAAA,IACAC,EAAA,IACAs1G,EAAA,IACAkC,EAAA,IACAvyF,EAAA,IACAxmB,EAAA,IACAq/G,EAAA,IACAwB,EAAA,IACA56F,EAAA,IACAuC,EAAA,IACAroB,EAAA,IACAuE,EAAA,IACAC,EAAA,IACAskH,EAAA,IACAkE,EAAA,IACA/mG,EAAA,IACAioG,EAAA,IACA9nG,EAAA,IACAytG,EAAA,IACAiC,EAAA,IACAuD,EAAA,IACA5yG,EAAA,IACAjlB,EAAA,IACAC,EAAA,IACAC,EAAA,IACAy+I,YAAA,IACA1F,UAAA,IACA+F,aAAA,IACAtI,YAAA,IACAynF,WAAA,IACA3sB,UAAA,IACAxqO,EAAA,IACAlB,EAAA,IACAmB,EAAA,IACAZ,EAAA,IACA9T,EAAA,IACAwxC,EAAA,IACAl+B,EAAA,IACAqgC,EAAA,IACA3xC,EAAA,IACAm1B,EAAA,IACAkK,EAAA,IACAlI,EAAA,IACAvlB,EAAA,IACA/Q,EAAA,IACA6mO,EAAA,IACA/1N,EAAA,IACA03B,EAAA,IACAh4B,EAAA,IACApM,EAAA,IACA88B,EAAA,IACAsQ,EAAA,IACA1wC,EAAA,IACA4tC,EAAA,IACA3uC,EAAA,IACAyV,EAAA,IACA06B,EAAA,IACAu4I,UAAA,IACApE,IAAA,IACA2E,WAAA,IACAxH,WAAA,IACAumB,WAAA,IACA/a,KAAA,IACA2nE,SAAA,IACAlmD,SAAA,IACA+mE,IAAA,IACAhpE,OAAA,IACAy7C,QAAA,IACA3yD,SAAA,IACAonD,YAAA,IACAX,aAAA,IACAvnC,cAAA,IACAE,cAAA,IACAC,eAAA,IACA/K,GAAA,IACA2C,GAAA,IACAlI,OAAA,IACAjO,OAAA,IACAC,UAAA,IACAk9C,eAAA,IACA5D,UAAA,IACA5kD,OAAA,IACA0xD,eAAA,IACAX,aAAA,IACAK,cAAA,IACA1nC,eAAA,IACAjR,SAAA,IACAuwC,YAAA,IACAyH,aAAA,IACAnoC,MAAA,IACAvqC,MAAA,IACAgnB,WAAA,IACA+uE,MAAA,IACAvpC,OAAA,IACArrC,MAAA,IACAkT,UAAA,IACA/B,SAAA,IACAwmD,KAAA,IACA90D,QAAA,IACAuwB,aAAA,IACAsrB,OAAA,IACA38C,MAAA,IACA8X,OAAA,IACA1pD,GAAA,IACA6yF,YAAA,IACAl9E,OAAA,IACA2F,OAAA,IACAvD,GAAA,IACA+6E,aAAA,IACApjE,GAAA,IACA0zB,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,WAAA,IACA53F,OAAA,IACAiE,WAAA,IACAwqG,UAAA,IACAhyG,OAAA,IACAs5F,OAAA,IACA/S,QAAA,IACAnkE,OAAA,IACAC,OAAA,IACAiuC,aAAA,IACAruD,IAAA,IACAlH,SAAA,IACAszE,aAAA,IACAylC,OAAA,IACAzyD,QAAA,IACArjC,QAAA,IACAhnB,OAAA,IACAsB,UAAA,IACA+kD,OAAA,IACA44E,OAAA,IACAv0D,QAAA,IACA7yD,OAAA,IACAy0E,OAAA,IACAzqD,QAAA,IACAyoE,OAAA,IACAjjC,UAAA,IACAhvD,YAAA,IACA0N,OAAA,IACA3f,MAAA,IACAw7G,MAAA,IACA2J,YAAA,IACAxyG,UAAA,IACA2oE,GAAA,IACA1Z,OAAA,IACAgnB,cAAA,IACA7kF,QAAA,IACAq0C,OAAA,IACA+kE,cAAA,IACAtiG,SAAA,IACAg2D,OAAA,IACA1jE,aAAA,IACAgB,OAAA,IACAsyG,UAAA,IACA7gE,WAAA,IACAn1C,OAAA,IACAM,QAAA,IACAsD,OAAA,IACAy8E,QAAA,IACArZ,UAAA,IACAuV,YAAA,IACAvC,OAAA,IACArkE,cAAA,IACA/e,OAAA,IACAyhD,QAAA,IACAgM,OAAA,IACA08B,WAAA,IACA9wE,OAAA,IACAS,aAAA,IACAxH,cAAA,IACA0lC,OAAA,IACA4uC,OAAA,IACAvqF,OAAA,IACAkpH,OAAA,IACAxqB,QAAA,IACA78F,OAAA,IACAg+F,aAAA,IACApsF,OAAA,IACA+7E,OAAA,IACAl2E,aAAA,IACAvI,aAAA,IACAlS,OAAA,IACAN,QAAA,IACAC,MAAA,IACAkZ,OAAA,IACAilH,WAAA,IACA74H,OAAA,IACA4J,QAAA,IACAg/D,aAAA,IACAwP,MAAA,IACAjwE,YAAA,IACAm0E,OAAA,IACAq5B,aAAA,IACA9jC,WAAA,IACAqU,UAAA,IACA0+B,UAAA,IACA3iC,SAAA,IACAt0B,aAAA,IACAhJ,IAAA,IACA6zE,OAAA,IACA97C,aAAA,IACAwN,YAAA,IACAxoB,QAAA,IACAj+D,KAAA,KAEAwoI,oBACAh8B,MAAA,IACAzqD,OAAA,IACAi0C,SAAA,IACAhW,WAAA,IACAlpC,OAAA,IACAs2C,QAAA,IACA12D,UAAA,IACAggE,WAAA,IACA1M,UAAA,IACAU,WAAA,IACAxuD,SAAA,IACAq0D,KAAA,IACAjlD,MAAA,IACAqsB,OAAA,IACA61B,OAAA,IACA8d,MAAA,IACAqqB,KAAA,IACA1wC,IAAA,IACA05B,IAAA,IACA5H,MAAA,IACA7vD,KAAA,IACA7B,KAAA,IACAykD,IAAA,IACAhG,MAAA,IACAvoD,MAAA,IACAy/B,KAAA,IACAjwC,MAAA,IACAu4D,UAAA,IACA/2B,KAAA,IACA9sB,MAAA,IACAuO,QAAA,IACAwnC,SAAA,IACA74D,GAAA,IACAt5I,EAAA,IACAqB,EAAA,IACAC,EAAA,IACAs1G,EAAA,IACAkC,EAAA,IACAvyF,EAAA,IACAxmB,EAAA,IACAq/G,EAAA,IACAwB,EAAA,IACA56F,EAAA,IACAuC,EAAA,IACAroB,EAAA,IACAuE,EAAA,IACAC,EAAA,IACAskH,EAAA,IACAkE,EAAA,IACA/mG,EAAA,IACAioG,EAAA,IACA9nG,EAAA,IACAytG,EAAA,IACAiC,EAAA,IACAuD,EAAA,IACA5yG,EAAA,IACAjlB,EAAA,IACAC,EAAA,IACAC,EAAA,IACAy+I,YAAA,IACA1F,UAAA,IACA+F,aAAA,IACAtI,YAAA,IACAynF,WAAA,IACA3sB,UAAA,IACAxqO,EAAA,IACAlB,EAAA,IACAmB,EAAA,IACAZ,EAAA,IACA9T,EAAA,IACAwxC,EAAA,IACAl+B,EAAA,IACAqgC,EAAA,IACA3xC,EAAA,IACAm1B,EAAA,IACAkK,EAAA,IACAlI,EAAA,IACAvlB,EAAA,IACA/Q,EAAA,IACA6mO,EAAA,IACA/1N,EAAA,IACA03B,EAAA,IACAh4B,EAAA,IACApM,EAAA,IACA88B,EAAA,IACAsQ,EAAA,IACA1wC,EAAA,IACA4tC,EAAA,IACA3uC,EAAA,IACAyV,EAAA,IACA06B,EAAA,IACAu4I,UAAA,IACApE,IAAA,IACA2E,WAAA,IACAxH,WAAA,IACAumB,WAAA,IACA/a,KAAA,IACA2nE,SAAA,IACAlmD,SAAA,IACA+mE,IAAA,IACAhpE,OAAA,IACAy7C,QAAA,IACA3yD,SAAA,IACAonD,YAAA,IACAX,aAAA,IACAvnC,cAAA,IACAE,cAAA,IACAC,eAAA,IACA/K,GAAA,IACA2C,GAAA,IACAlI,OAAA,IACAjO,OAAA,IACAC,UAAA,IACAk9C,eAAA,IACA5D,UAAA,IACA5kD,OAAA,IACA0xD,eAAA,IACAX,aAAA,IACAK,cAAA,IACA1nC,eAAA,IACAjR,SAAA,IACAuwC,YAAA,IACAyH,aAAA,IACAnoC,MAAA,IACAvqC,MAAA,IACAgnB,WAAA,IACA+uE,MAAA,IACAvpC,OAAA,IACArrC,MAAA,IACAkT,UAAA,IACA/B,SAAA,IACAwmD,KAAA,IACA90D,QAAA,IACAuwB,aAAA,IACAsrB,OAAA,IACA38C,MAAA,IACA8X,OAAA,IACA1pD,GAAA,IACA6yF,YAAA,IACAl9E,OAAA,IACA2F,OAAA,IACAvD,GAAA,IACA+6E,aAAA,IACApjE,GAAA,IACA0zB,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,WAAA,IACA53F,OAAA,IACAiE,WAAA,IACAwqG,UAAA,IACAhyG,OAAA,IACAs5F,OAAA,IACA/S,QAAA,IACAnkE,OAAA,IACAC,OAAA,IACAiuC,aAAA,IACAruD,IAAA,IACAlH,SAAA,IACAszE,aAAA,IACAylC,OAAA,IACAzyD,QAAA,IACArjC,QAAA,IACAhnB,OAAA,IACAsB,UAAA,IACA+kD,OAAA,IACA44E,OAAA,IACAv0D,QAAA,IACA7yD,OAAA,IACAy0E,OAAA,IACAzqD,QAAA,IACAyoE,OAAA,IACAjjC,UAAA,IACAhvD,YAAA,IACA0N,OAAA,IACA3f,MAAA,IACAw7G,MAAA,IACA2J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CArrC,MAAA,IACAkT,UAAA,IACA/B,SAAA,IACAwmD,KAAA,IACA90D,QAAA,IACAuwB,aAAA,IACAsrB,OAAA,IACA38C,MAAA,IACA8X,OAAA,IACA1pD,GAAA,IACA6yF,YAAA,IACAl9E,OAAA,IACA2F,OAAA,IACAvD,GAAA,IACA+6E,aAAA,IACApjE,GAAA,IACA0zB,SAAA,IACAm3B,OAAA,IACA2Y,OAAA,IACA7E,GAAA,IACAh4B,WAAA,IACA9lD,UAAA,IACAm0C,OAAA,IACA/2B,OAAA,IACAogG,cAAA,IACA5oE,OAAA,IACA/6B,UAAA,IACAq3B,OAAA,IACA13B,OAAA,IACAhpB,YAAA,IACA+rB,OAAA,IACA1H,YAAA,IACA8zG,OAAA,IACA3rB,aAAA,IACA/nD,YAAA,IACA39B,MAAA,IACAnC,UAAA,IACA+d,QAAA,IACA1e,OAAA,IACAmqG,QAAA,IACApmH,UAAA,IACA3C,OAAA,IACA+wC,YAAA,IACA+C,UAAA,IACApwC,QAAA,IACAooC,OAAA,IACA1N,MAAA,IACAvtB,aAAA,IACAo+D,OAAA,IACAh2C,OAAA,IACAhc,aAAA,IACArf,OAAA,IACAskC,OAAA,IACAp/B,WAAA,IACA6jG,OAAA,IACAE,SAAA,IACAtpC,OAAA,IACA2W,QAAA,IACAh9D,OAAA,IACArQ,aAAA,IACAq/G,YAAA,IACAj+F,YAAA,IACA7rB,QAAA,IACAqhG,OAAA,IACA1xD,SAAA,IACApmB,WAAA,IACAjI,MAAA,IACAvJ,QAAA,IACA8C,OAAA,IACA2D,OAAA,IACAy9B,OAAA,IACAx3B,QAAA,IACA8oG,MAAA,IACAhM,cAAA,IACAtqG,OAAA,IACAxX,OAAA,IACA1B,OAAA,IACAoiF,SAAA,IACAopC,OAAA,IACA9oG,OAAA,IACA6zE,YAAA,IACAqjC,UAAA,IACAvjH,OAAA,IACAstD,YAAA,IACA77D,YAAA,IACAinB,UAAA,IACA62B,UAAA,IACAjV,OAAA,IACA0yC,OAAA,IACA2qC,QAAA,IACA13G,OAAA,IACA9G,OAAA,IACAqsF,UAAA,IACA9rD,UAAA,IACAk0D,W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CACA,gBACA,gBACA,QACA,QACA,gBACA,gBACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gCACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,gCACA,gCACA,gCACA,gCACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BACA,4BACA,4BACA,4BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBAGAC,KACA,eACA,IA3QA,IA2QA,IA3QA,KA4QA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,+BACA,wCACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,wCACA,wCACA,oBACA,oBACA,oBACA,oBACA,gCACA,gCACA,gBACA,SACA,SACA,SACA,SACA,gBACA,gBACA,UACA,UACA,UACA,UACA,gBACA,gBACA,UACA,UACA,gCACA,gCACA,UACA,UACA,kBACA,kBACA,kBACA,SACA,SACA,gBACA,gBACA,SACA,SACA,UACA,UACA,UACA,UACA,gCACA,gCAGAC,IACA,4BACA,4BACA,4BACA,4BACA,gBACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,gCACA,gCACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,gBACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,SACA,SACA,QACA,QACA,QACA,QACA,gBACA,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,GAAA,MAAAC,KAAA,EAAAC,KAAA,EAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,EAAAC,KAAA,EAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,EAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,EAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,IAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,EAAAC,KAAA,EAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,EAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,EAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,MAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,KAAA,GAAAC,KAAA,GAAAC,WAAA,IACAH,GAAA,KAAAC,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","file":"static/wms/static/js/4.d4b51241fca0c84516d0.js","sourcesContent":["/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*jshint globalstrict: false */\n/* globals PDFJS */\n\n// Initializing PDFJS global object (if still undefined)\nif (typeof PDFJS === 'undefined') {\n  (typeof window !== 'undefined' ? window : this).PDFJS = {};\n}\n\nPDFJS.version = '1.1.9';\nPDFJS.build = 'c5eb34e';\n\n(function pdfjsWrapper() {\n  // Use strict in our context only - users might not want it\n  'use strict';\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals Cmd, ColorSpace, Dict, MozBlobBuilder, Name, PDFJS, Ref, URL,\n           Promise */\n\n'use strict';\n\nvar globalScope = (typeof window === 'undefined') ? this : window;\n\nvar isWorker = (typeof window === 'undefined');\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\n\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\n\nvar AnnotationType = {\n  WIDGET: 1,\n  TEXT: 2,\n  LINK: 3\n};\n\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\n\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\n\n// The global PDFJS object exposes the API\n// In production, it will be declared outside a global wrapper\n// In development, it will be declared here\nif (!globalScope.PDFJS) {\n  globalScope.PDFJS = {};\n}\n\nglobalScope.PDFJS.pdfBug = false;\n\nPDFJS.VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\n\n// All the possible operations for an operator list.\nvar OPS = PDFJS.OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\n\n// Fatal errors that should trigger the fallback UI and halt execution by\n// throwing an exception.\nfunction error(msg) {\n  // If multiple arguments were passed, pass them all to the log function.\n  if (arguments.length > 1) {\n    var logArguments = ['Error:'];\n    logArguments.push.apply(logArguments, arguments);\n    console.log.apply(console, logArguments);\n    // Join the arguments into a single string for the lines below.\n    msg = [].join.call(arguments, ' ');\n  } else {\n    console.log('Error: ' + msg);\n  }\n  console.log(backtrace());\n  UnsupportedManager.notify(UNSUPPORTED_FEATURES.unknown);\n  throw new Error(msg);\n}\n\nfunction backtrace() {\n  try {\n    throw new Error();\n  } catch (e) {\n    return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n  }\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    error(msg);\n  }\n}\n\nvar UNSUPPORTED_FEATURES = PDFJS.UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\n\nvar UnsupportedManager = PDFJS.UnsupportedManager =\n  (function UnsupportedManagerClosure() {\n  var listeners = [];\n  return {\n    listen: function (cb) {\n      listeners.push(cb);\n    },\n    notify: function (featureId) {\n      warn('Unsupported feature \"' + featureId + '\"');\n      for (var i = 0, ii = listeners.length; i < ii; i++) {\n        listeners[i](featureId);\n      }\n    }\n  };\n})();\n\n// Combines two URLs. The baseUrl shall be absolute URL. If the url is an\n// absolute URL, it will be returned as is.\nfunction combineUrl(baseUrl, url) {\n  if (!url) {\n    return baseUrl;\n  }\n  if (/^[a-z][a-z0-9+\\-.]*:/i.test(url)) {\n    return url;\n  }\n  var i;\n  if (url.charAt(0) === '/') {\n    // absolute path\n    i = baseUrl.indexOf('://');\n    if (url.charAt(1) === '/') {\n      ++i;\n    } else {\n      i = baseUrl.indexOf('/', i + 3);\n    }\n    return baseUrl.substring(0, i) + url;\n  } else {\n    // relative path\n    var pathLength = baseUrl.length;\n    i = baseUrl.lastIndexOf('#');\n    pathLength = i >= 0 ? i : pathLength;\n    i = baseUrl.lastIndexOf('?', pathLength);\n    pathLength = i >= 0 ? i : pathLength;\n    var prefixLength = baseUrl.lastIndexOf('/', pathLength);\n    return baseUrl.substring(0, prefixLength + 1) + url;\n  }\n}\n\n// Validates if URL is safe and allowed, e.g. to avoid XSS.\nfunction isValidUrl(url, allowRelative) {\n  if (!url) {\n    return false;\n  }\n  // RFC 3986 (http://tools.ietf.org/html/rfc3986#section-3.1)\n  // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  var protocol = /^[a-z][a-z0-9+\\-.]*(?=:)/i.exec(url);\n  if (!protocol) {\n    return allowRelative;\n  }\n  protocol = protocol[0].toLowerCase();\n  switch (protocol) {\n    case 'http':\n    case 'https':\n    case 'ftp':\n    case 'mailto':\n    case 'tel':\n      return true;\n    default:\n      return false;\n  }\n}\nPDFJS.isValidUrl = isValidUrl;\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, { value: value,\n                                     enumerable: true,\n                                     configurable: true,\n                                     writable: false });\n  return value;\n}\nPDFJS.shadow = shadow;\n\nvar PasswordResponses = PDFJS.PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\n\nvar PasswordException = (function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n\n  return PasswordException;\n})();\nPDFJS.PasswordException = PasswordException;\n\nvar UnknownErrorException = (function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n\n  return UnknownErrorException;\n})();\nPDFJS.UnknownErrorException = UnknownErrorException;\n\nvar InvalidPDFException = (function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n\n  return InvalidPDFException;\n})();\nPDFJS.InvalidPDFException = InvalidPDFException;\n\nvar MissingPDFException = (function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n\n  return MissingPDFException;\n})();\nPDFJS.MissingPDFException = MissingPDFException;\n\nvar UnexpectedResponseException =\n    (function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n\n  return UnexpectedResponseException;\n})();\nPDFJS.UnexpectedResponseException = UnexpectedResponseException;\n\nvar NotImplementedException = (function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n\n  return NotImplementedException;\n})();\n\nvar MissingDataException = (function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n\n  return MissingDataException;\n})();\n\nvar XRefParseException = (function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n\n  return XRefParseException;\n})();\n\n\nfunction bytesToString(bytes) {\n  assert(bytes !== null && typeof bytes === 'object' &&\n         bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  return String.fromCharCode((value >> 24) & 0xff, (value >> 16) & 0xff,\n                             (value >> 8) & 0xff, value & 0xff);\n}\n\nfunction log2(x) {\n  var n = 1, i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\n\nfunction readInt8(data, start) {\n  return (data[start] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return ((data[offset] << 24) | (data[offset + 1] << 16) |\n         (data[offset + 2] << 8) | data[offset + 3]) >>> 0;\n}\n\n// Lazy test the endianness of the platform\n// NOTE: This will be 'true' for simulated TypedArrays\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(2);\n  buffer8[0] = 1;\n  var buffer16 = new Uint16Array(buffer8.buffer);\n  return (buffer16[0] === 1);\n}\n\nObject.defineProperty(PDFJS, 'isLittleEndian', {\n  configurable: true,\n  get: function PDFJS_isLittleEndian() {\n    return shadow(PDFJS, 'isLittleEndian', isLittleEndian());\n  }\n});\n\n  // Lazy test if the userAgant support CanvasTypedArrays\nfunction hasCanvasTypedArrays() {\n  var canvas = document.createElement('canvas');\n  canvas.width = canvas.height = 1;\n  var ctx = canvas.getContext('2d');\n  var imageData = ctx.createImageData(1, 1);\n  return (typeof imageData.data.buffer !== 'undefined');\n}\n\nObject.defineProperty(PDFJS, 'hasCanvasTypedArrays', {\n  configurable: true,\n  get: function PDFJS_hasCanvasTypedArrays() {\n    return shadow(PDFJS, 'hasCanvasTypedArrays', hasCanvasTypedArrays());\n  }\n});\n\nvar Uint32ArrayView = (function Uint32ArrayViewClosure() {\n\n  function Uint32ArrayView(buffer, length) {\n    this.buffer = buffer;\n    this.byteLength = buffer.length;\n    this.length = length === undefined ? (this.byteLength >> 2) : length;\n    ensureUint32ArrayViewProps(this.length);\n  }\n  Uint32ArrayView.prototype = Object.create(null);\n\n  var uint32ArrayViewSetters = 0;\n  function createUint32ArrayProp(index) {\n    return {\n      get: function () {\n        var buffer = this.buffer, offset = index << 2;\n        return (buffer[offset] | (buffer[offset + 1] << 8) |\n          (buffer[offset + 2] << 16) | (buffer[offset + 3] << 24)) >>> 0;\n      },\n      set: function (value) {\n        var buffer = this.buffer, offset = index << 2;\n        buffer[offset] = value & 255;\n        buffer[offset + 1] = (value >> 8) & 255;\n        buffer[offset + 2] = (value >> 16) & 255;\n        buffer[offset + 3] = (value >>> 24) & 255;\n      }\n    };\n  }\n\n  function ensureUint32ArrayViewProps(length) {\n    while (uint32ArrayViewSetters < length) {\n      Object.defineProperty(Uint32ArrayView.prototype,\n        uint32ArrayViewSetters,\n        createUint32ArrayProp(uint32ArrayViewSetters));\n      uint32ArrayViewSetters++;\n    }\n  }\n\n  return Uint32ArrayView;\n})();\n\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n\nvar Util = PDFJS.Util = (function UtilClosure() {\n  function Util() {}\n\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n\n  // makeCssRgb() can be called thousands of times. Using |rgbBuf| avoids\n  // creating many intermediate strings.\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n\n  // Concatenates two transformation matrices together and returns the result.\n  Util.transform = function Util_transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n    ];\n  };\n\n  // For 2d affine transforms\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  Util.getAxialAlignedBoundingBox =\n    function Util_getAxialAlignedBoundingBox(r, m) {\n\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1])\n    ];\n  };\n\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n    ];\n  };\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  Util.singularValueDecompose2dScale =\n    function Util_singularValueDecompose2dScale(m) {\n\n    var transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if ((orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n        (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if ((orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n        (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n\n    return result;\n  };\n\n  Util.sign = function Util_sign(num) {\n    return num < 0 ? -1 : 1;\n  };\n\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict,\n                                                                     name) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return dict.get(name);\n  };\n\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function() {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n\n  return Util;\n})();\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n * @class\n * @alias PDFJS.PageViewport\n */\nvar PageViewport = PDFJS.PageViewport = (function PageViewportClosure() {\n  /**\n   * @constructor\n   * @private\n   * @param viewBox {Array} xMin, yMin, xMax and yMax coordinates.\n   * @param scale {number} scale of the viewport.\n   * @param rotation {number} rotations of the viewport in degrees.\n   * @param offsetX {number} offset X\n   * @param offsetY {number} offset Y\n   * @param dontFlip {boolean} if true, axis Y will not be flipped.\n   */\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1; rotateB = 0; rotateC = 0; rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0; rotateB = 1; rotateC = 1; rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0; rotateB = -1; rotateC = -1; rotateD = 0;\n        break;\n      //case 0:\n      default:\n        rotateA = 1; rotateB = 0; rotateC = 0; rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC; rotateD = -rotateD;\n    }\n\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n    ];\n\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = /** @lends PDFJS.PageViewport.prototype */ {\n    /**\n     * Clones viewport with additional properties.\n     * @param args {Object} (optional) If specified, may contain the 'scale' or\n     * 'rotation' properties to override the corresponding properties in\n     * the cloned viewport.\n     * @returns {PDFJS.PageViewport} Cloned viewport.\n     */\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    },\n    /**\n     * Converts PDF point to the viewport coordinates. For examples, useful for\n     * converting PDF location into canvas pixel coordinates.\n     * @param x {number} X coordinate.\n     * @param y {number} Y coordinate.\n     * @returns {Object} Object that contains 'x' and 'y' properties of the\n     * point in the viewport coordinate space.\n     * @see {@link convertToPdfPoint}\n     * @see {@link convertToViewportRectangle}\n     */\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    /**\n     * Converts PDF rectangle to the viewport coordinates.\n     * @param rect {Array} xMin, yMin, xMax and yMax coordinates.\n     * @returns {Array} Contains corresponding coordinates of the rectangle\n     * in the viewport coordinate space.\n     * @see {@link convertToViewportPoint}\n     */\n    convertToViewportRectangle:\n      function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    /**\n     * Converts viewport coordinates to the PDF location. For examples, useful\n     * for converting canvas pixel location into PDF one.\n     * @param x {number} X coordinate.\n     * @param y {number} Y coordinate.\n     * @returns {Object} Object that contains 'x' and 'y' properties of the\n     * point in the PDF coordinate space.\n     * @see {@link convertToViewportPoint}\n     */\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n})();\n\nvar PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  var i, n = str.length, strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    // UTF16BE BOM\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(\n        (str.charCodeAt(i) << 8) | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isInt(v) {\n  return typeof v === 'number' && ((v | 0) === v);\n}\n\nfunction isNum(v) {\n  return typeof v === 'number';\n}\n\nfunction isString(v) {\n  return typeof v === 'string';\n}\n\nfunction isName(v) {\n  return v instanceof Name;\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  if (!(v instanceof Dict)) {\n    return false;\n  }\n  if (!type) {\n    return true;\n  }\n  var dictType = v.get('Type');\n  return isName(dictType) && dictType.name === type;\n}\n\nfunction isArray(v) {\n  return v instanceof Array;\n}\n\nfunction isStream(v) {\n  return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n}\n\nfunction isRef(v) {\n  return v instanceof Ref;\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A promise object.\n * @property {function} resolve - Fullfills the promise.\n * @property {function} reject - Rejects the promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias PDFJS.createPromiseCapability\n *\n * @return {PromiseCapability} A capability object contains:\n * - a Promise, resolve and reject methods.\n */\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\n\nPDFJS.createPromiseCapability = createPromiseCapability;\n\n/**\n * Polyfill for Promises:\n * The following promise implementation tries to generally implement the\n * Promise/A+ spec. Some notable differences from other promise libaries are:\n * - There currently isn't a seperate deferred and promise object.\n * - Unhandled rejections eventually show an error if they aren't handled.\n *\n * Based off of the work in:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=810490\n */\n(function PromiseClosure() {\n  if (globalScope.Promise) {\n    // Promises existing in the DOM/Worker, checking presence of all/resolve\n    if (typeof globalScope.Promise.all !== 'function') {\n      globalScope.Promise.all = function (iterable) {\n        var count = 0, results = [], resolve, reject;\n        var promise = new globalScope.Promise(function (resolve_, reject_) {\n          resolve = resolve_;\n          reject = reject_;\n        });\n        iterable.forEach(function (p, i) {\n          count++;\n          p.then(function (result) {\n            results[i] = result;\n            count--;\n            if (count === 0) {\n              resolve(results);\n            }\n          }, reject);\n        });\n        if (count === 0) {\n          resolve(results);\n        }\n        return promise;\n      };\n    }\n    if (typeof globalScope.Promise.resolve !== 'function') {\n      globalScope.Promise.resolve = function (value) {\n        return new globalScope.Promise(function (resolve) { resolve(value); });\n      };\n    }\n    if (typeof globalScope.Promise.reject !== 'function') {\n      globalScope.Promise.reject = function (reason) {\n        return new globalScope.Promise(function (resolve, reject) {\n          reject(reason);\n        });\n      };\n    }\n    if (typeof globalScope.Promise.prototype.catch !== 'function') {\n      globalScope.Promise.prototype.catch = function (onReject) {\n        return globalScope.Promise.prototype.then(undefined, onReject);\n      };\n    }\n    return;\n  }\n  var STATUS_PENDING = 0;\n  var STATUS_RESOLVED = 1;\n  var STATUS_REJECTED = 2;\n\n  // In an attempt to avoid silent exceptions, unhandled rejections are\n  // tracked and if they aren't handled in a certain amount of time an\n  // error is logged.\n  var REJECTION_TIMEOUT = 500;\n\n  var HandlerManager = {\n    handlers: [],\n    running: false,\n    unhandledRejections: [],\n    pendingRejectionCheck: false,\n\n    scheduleHandlers: function scheduleHandlers(promise) {\n      if (promise._status === STATUS_PENDING) {\n        return;\n      }\n\n      this.handlers = this.handlers.concat(promise._handlers);\n      promise._handlers = [];\n\n      if (this.running) {\n        return;\n      }\n      this.running = true;\n\n      setTimeout(this.runHandlers.bind(this), 0);\n    },\n\n    runHandlers: function runHandlers() {\n      var RUN_TIMEOUT = 1; // ms\n      var timeoutAt = Date.now() + RUN_TIMEOUT;\n      while (this.handlers.length > 0) {\n        var handler = this.handlers.shift();\n\n        var nextStatus = handler.thisPromise._status;\n        var nextValue = handler.thisPromise._value;\n\n        try {\n          if (nextStatus === STATUS_RESOLVED) {\n            if (typeof handler.onResolve === 'function') {\n              nextValue = handler.onResolve(nextValue);\n            }\n          } else if (typeof handler.onReject === 'function') {\n              nextValue = handler.onReject(nextValue);\n              nextStatus = STATUS_RESOLVED;\n\n              if (handler.thisPromise._unhandledRejection) {\n                this.removeUnhandeledRejection(handler.thisPromise);\n              }\n          }\n        } catch (ex) {\n          nextStatus = STATUS_REJECTED;\n          nextValue = ex;\n        }\n\n        handler.nextPromise._updateStatus(nextStatus, nextValue);\n        if (Date.now() >= timeoutAt) {\n          break;\n        }\n      }\n\n      if (this.handlers.length > 0) {\n        setTimeout(this.runHandlers.bind(this), 0);\n        return;\n      }\n\n      this.running = false;\n    },\n\n    addUnhandledRejection: function addUnhandledRejection(promise) {\n      this.unhandledRejections.push({\n        promise: promise,\n        time: Date.now()\n      });\n      this.scheduleRejectionCheck();\n    },\n\n    removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n      promise._unhandledRejection = false;\n      for (var i = 0; i < this.unhandledRejections.length; i++) {\n        if (this.unhandledRejections[i].promise === promise) {\n          this.unhandledRejections.splice(i);\n          i--;\n        }\n      }\n    },\n\n    scheduleRejectionCheck: function scheduleRejectionCheck() {\n      if (this.pendingRejectionCheck) {\n        return;\n      }\n      this.pendingRejectionCheck = true;\n      setTimeout(function rejectionCheck() {\n        this.pendingRejectionCheck = false;\n        var now = Date.now();\n        for (var i = 0; i < this.unhandledRejections.length; i++) {\n          if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n            var unhandled = this.unhandledRejections[i].promise._value;\n            var msg = 'Unhandled rejection: ' + unhandled;\n            if (unhandled.stack) {\n              msg += '\\n' + unhandled.stack;\n            }\n            warn(msg);\n            this.unhandledRejections.splice(i);\n            i--;\n          }\n        }\n        if (this.unhandledRejections.length) {\n          this.scheduleRejectionCheck();\n        }\n      }.bind(this), REJECTION_TIMEOUT);\n    }\n  };\n\n  function Promise(resolver) {\n    this._status = STATUS_PENDING;\n    this._handlers = [];\n    try {\n      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /**\n   * Builds a promise that is resolved when all the passed in promises are\n   * resolved.\n   * @param {array} array of data and/or promises to wait for.\n   * @return {Promise} New dependant promise.\n   */\n  Promise.all = function Promise_all(promises) {\n    var resolveAll, rejectAll;\n    var deferred = new Promise(function (resolve, reject) {\n      resolveAll = resolve;\n      rejectAll = reject;\n    });\n    var unresolved = promises.length;\n    var results = [];\n    if (unresolved === 0) {\n      resolveAll(results);\n      return deferred;\n    }\n    function reject(reason) {\n      if (deferred._status === STATUS_REJECTED) {\n        return;\n      }\n      results = [];\n      rejectAll(reason);\n    }\n    for (var i = 0, ii = promises.length; i < ii; ++i) {\n      var promise = promises[i];\n      var resolve = (function(i) {\n        return function(value) {\n          if (deferred._status === STATUS_REJECTED) {\n            return;\n          }\n          results[i] = value;\n          unresolved--;\n          if (unresolved === 0) {\n            resolveAll(results);\n          }\n        };\n      })(i);\n      if (Promise.isPromise(promise)) {\n        promise.then(resolve, reject);\n      } else {\n        resolve(promise);\n      }\n    }\n    return deferred;\n  };\n\n  /**\n   * Checks if the value is likely a promise (has a 'then' function).\n   * @return {boolean} true if value is thenable\n   */\n  Promise.isPromise = function Promise_isPromise(value) {\n    return value && typeof value.then === 'function';\n  };\n\n  /**\n   * Creates resolved promise\n   * @param value resolve value\n   * @returns {Promise}\n   */\n  Promise.resolve = function Promise_resolve(value) {\n    return new Promise(function (resolve) { resolve(value); });\n  };\n\n  /**\n   * Creates rejected promise\n   * @param reason rejection value\n   * @returns {Promise}\n   */\n  Promise.reject = function Promise_reject(reason) {\n    return new Promise(function (resolve, reject) { reject(reason); });\n  };\n\n  Promise.prototype = {\n    _status: null,\n    _value: null,\n    _handlers: null,\n    _unhandledRejection: null,\n\n    _updateStatus: function Promise__updateStatus(status, value) {\n      if (this._status === STATUS_RESOLVED ||\n          this._status === STATUS_REJECTED) {\n        return;\n      }\n\n      if (status === STATUS_RESOLVED &&\n          Promise.isPromise(value)) {\n        value.then(this._updateStatus.bind(this, STATUS_RESOLVED),\n                   this._updateStatus.bind(this, STATUS_REJECTED));\n        return;\n      }\n\n      this._status = status;\n      this._value = value;\n\n      if (status === STATUS_REJECTED && this._handlers.length === 0) {\n        this._unhandledRejection = true;\n        HandlerManager.addUnhandledRejection(this);\n      }\n\n      HandlerManager.scheduleHandlers(this);\n    },\n\n    _resolve: function Promise_resolve(value) {\n      this._updateStatus(STATUS_RESOLVED, value);\n    },\n\n    _reject: function Promise_reject(reason) {\n      this._updateStatus(STATUS_REJECTED, reason);\n    },\n\n    then: function Promise_then(onResolve, onReject) {\n      var nextPromise = new Promise(function (resolve, reject) {\n        this.resolve = resolve;\n        this.reject = reject;\n      });\n      this._handlers.push({\n        thisPromise: this,\n        onResolve: onResolve,\n        onReject: onReject,\n        nextPromise: nextPromise\n      });\n      HandlerManager.scheduleHandlers(this);\n      return nextPromise;\n    },\n\n    catch: function Promise_catch(onReject) {\n      return this.then(undefined, onReject);\n    }\n  };\n\n  globalScope.Promise = Promise;\n})();\n\nvar StatTimer = (function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = {};\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      // Remove timer from started so it can be called again.\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      // Find the longest name for padding purposes.\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n})();\n\nPDFJS.createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  // Blob builder is deprecated in FF14 and removed in FF18.\n  var bb = new MozBlobBuilder();\n  bb.append(data);\n  return bb.getBlob(contentType);\n};\n\nPDFJS.createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  var digits =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  return function createObjectURL(data, contentType) {\n    if (!PDFJS.disableCreateObjectURL &&\n        typeof URL !== 'undefined' && URL.createObjectURL) {\n      var blob = PDFJS.createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2, d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      var d3 = i + 1 < ii ? ((b2 & 0xF) << 2) | (b3 >> 6) : 64;\n      var d4 = i + 2 < ii ? (b3 & 0x3F) : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nfunction MessageHandler(name, comObj) {\n  this.name = name;\n  this.comObj = comObj;\n  this.callbackIndex = 1;\n  this.postMessageTransfers = true;\n  var callbacksCapabilities = this.callbacksCapabilities = {};\n  var ah = this.actionHandler = {};\n\n  ah['console_log'] = [function ahConsoleLog(data) {\n    console.log.apply(console, data);\n  }];\n  ah['console_error'] = [function ahConsoleError(data) {\n    console.error.apply(console, data);\n  }];\n  ah['_unsupported_feature'] = [function ah_unsupportedFeature(data) {\n    UnsupportedManager.notify(data);\n  }];\n\n  comObj.onmessage = function messageHandlerComObjOnMessage(event) {\n    var data = event.data;\n    if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(data.error);\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            isReply: true,\n            callbackId: data.callbackId,\n            error: reason\n          });\n        });\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      error('Unknown action from worker: ' + data.action);\n    }\n  };\n}\n\nMessageHandler.prototype = {\n  on: function messageHandlerOn(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {String} actionName Action to call.\n   * @param {JSON} data JSON data to send.\n   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers\n   */\n  send: function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that other side will callback with the response.\n   * @param {String} actionName Action to call.\n   * @param {JSON} data JSON data to send.\n   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise:\n    function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  /**\n   * Sends raw message to the comObj.\n   * @private\n   * @param message {Object} Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   */\n  postMessage: function (message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n};\n\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = (function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  });\n  img.onerror = (function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  });\n  img.src = imageUrl;\n}\n\n\n\n\nvar NetworkManager = (function NetworkManagerClosure() {\n\n  var OK_RESPONSE = 200;\n  var PARTIAL_CONTENT_RESPONSE = 206;\n\n  function NetworkManager(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr = args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = {};\n    this.loadedRequests = {};\n  }\n\n  function getArrayBuffer(xhr) {\n    var data = xhr.response;\n    if (typeof data !== 'string') {\n      return data;\n    }\n    var length = data.length;\n    var array = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n      array[i] = data.charCodeAt(i) & 0xFF;\n    }\n    return array.buffer;\n  }\n\n  NetworkManager.prototype = {\n    requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n      var args = {\n        begin: begin,\n        end: end\n      };\n      for (var prop in listeners) {\n        args[prop] = listeners[prop];\n      }\n      return this.request(args);\n    },\n\n    requestFull: function NetworkManager_requestFull(listeners) {\n      return this.request(listeners);\n    },\n\n    request: function NetworkManager_request(args) {\n      var xhr = this.getXhr();\n      var xhrId = this.currXhrId++;\n      var pendingRequest = this.pendingRequests[xhrId] = {\n        xhr: xhr\n      };\n\n      xhr.open('GET', this.url);\n      xhr.withCredentials = this.withCredentials;\n      for (var property in this.httpHeaders) {\n        var value = this.httpHeaders[property];\n        if (typeof value === 'undefined') {\n          continue;\n        }\n        xhr.setRequestHeader(property, value);\n      }\n      if (this.isHttp && 'begin' in args && 'end' in args) {\n        var rangeStr = args.begin + '-' + (args.end - 1);\n        xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n        pendingRequest.expectedStatus = 206;\n      } else {\n        pendingRequest.expectedStatus = 200;\n      }\n\n      if (args.onProgressiveData) {\n        // Some legacy browsers might throw an exception.\n        try {\n          xhr.responseType = 'moz-chunked-arraybuffer';\n        } catch(e) {}\n        if (xhr.responseType === 'moz-chunked-arraybuffer') {\n          pendingRequest.onProgressiveData = args.onProgressiveData;\n          pendingRequest.mozChunked = true;\n        } else {\n          xhr.responseType = 'arraybuffer';\n        }\n      } else {\n        xhr.responseType = 'arraybuffer';\n      }\n\n      if (args.onError) {\n        xhr.onerror = function(evt) {\n          args.onError(xhr.status);\n        };\n      }\n      xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n      xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n      pendingRequest.onHeadersReceived = args.onHeadersReceived;\n      pendingRequest.onDone = args.onDone;\n      pendingRequest.onError = args.onError;\n      pendingRequest.onProgress = args.onProgress;\n\n      xhr.send(null);\n\n      return xhrId;\n    },\n\n    onProgress: function NetworkManager_onProgress(xhrId, evt) {\n      var pendingRequest = this.pendingRequests[xhrId];\n      if (!pendingRequest) {\n        // Maybe abortRequest was called...\n        return;\n      }\n\n      if (pendingRequest.mozChunked) {\n        var chunk = getArrayBuffer(pendingRequest.xhr);\n        pendingRequest.onProgressiveData(chunk);\n      }\n\n      var onProgress = pendingRequest.onProgress;\n      if (onProgress) {\n        onProgress(evt);\n      }\n    },\n\n    onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n      var pendingRequest = this.pendingRequests[xhrId];\n      if (!pendingRequest) {\n        // Maybe abortRequest was called...\n        return;\n      }\n\n      var xhr = pendingRequest.xhr;\n      if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n        pendingRequest.onHeadersReceived();\n        delete pendingRequest.onHeadersReceived;\n      }\n\n      if (xhr.readyState !== 4) {\n        return;\n      }\n\n      if (!(xhrId in this.pendingRequests)) {\n        // The XHR request might have been aborted in onHeadersReceived()\n        // callback, in which case we should abort request\n        return;\n      }\n\n      delete this.pendingRequests[xhrId];\n\n      // success status == 0 can be on ftp, file and other protocols\n      if (xhr.status === 0 && this.isHttp) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n        return;\n      }\n      var xhrStatus = xhr.status || OK_RESPONSE;\n\n      // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n      // \"A server MAY ignore the Range header\". This means it's possible to\n      // get a 200 rather than a 206 response from a range request.\n      var ok_response_on_range_request =\n          xhrStatus === OK_RESPONSE &&\n          pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n      if (!ok_response_on_range_request &&\n          xhrStatus !== pendingRequest.expectedStatus) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n        return;\n      }\n\n      this.loadedRequests[xhrId] = true;\n\n      var chunk = getArrayBuffer(xhr);\n      if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n        var rangeHeader = xhr.getResponseHeader('Content-Range');\n        var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n        var begin = parseInt(matches[1], 10);\n        pendingRequest.onDone({\n          begin: begin,\n          chunk: chunk\n        });\n      } else if (pendingRequest.onProgressiveData) {\n        pendingRequest.onDone(null);\n      } else {\n        pendingRequest.onDone({\n          begin: 0,\n          chunk: chunk\n        });\n      }\n    },\n\n    hasPendingRequests: function NetworkManager_hasPendingRequests() {\n      for (var xhrId in this.pendingRequests) {\n        return true;\n      }\n      return false;\n    },\n\n    getRequestXhr: function NetworkManager_getXhr(xhrId) {\n      return this.pendingRequests[xhrId].xhr;\n    },\n\n    isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n      return !!(this.pendingRequests[xhrId].onProgressiveData);\n    },\n\n    isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n      return xhrId in this.pendingRequests;\n    },\n\n    isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n      return xhrId in this.loadedRequests;\n    },\n\n    abortAllRequests: function NetworkManager_abortAllRequests() {\n      for (var xhrId in this.pendingRequests) {\n        this.abortRequest(xhrId | 0);\n      }\n    },\n\n    abortRequest: function NetworkManager_abortRequest(xhrId) {\n      var xhr = this.pendingRequests[xhrId].xhr;\n      delete this.pendingRequests[xhrId];\n      xhr.abort();\n    }\n  };\n\n  return NetworkManager;\n})();\n\n\nvar ChunkedStream = (function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;  // a single-entry cache\n  }\n\n  // required methods for a stream. if a particular stream does not\n  // implement these, an error should be thrown\n  ChunkedStream.prototype = {\n\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n\n      assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n      // Using this.length is inaccurate here since this.start can be moved\n      // See ChunkedStream.moveStart()\n      var length = this.bytes.length;\n      assert(end % this.chunkSize === 0 || end === length,\n             'Bad end offset: ' + end);\n\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n\n    onReceiveProgressiveData:\n        function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks :\n                     Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n\n      if (!this.loadedChunks[chunk]) {\n        throw new MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new MissingDataException(begin, end);\n        }\n      }\n    },\n\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk, n;\n      for (chunk = beginChunk, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      // Wrap around to beginning\n      for (chunk = 0; chunk < beginChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n\n    get length() {\n      return this.end - this.start;\n    },\n\n    get isEmpty() {\n      return this.length === 0;\n    },\n\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n\n    // returns subarray of original buffer\n    // should only be read\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function() {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    },\n\n    isStream: true\n  };\n\n  return ChunkedStream;\n})();\n\nvar ChunkedStreamManager = (function ChunkedStreamManagerClosure() {\n\n  function ChunkedStreamManager(length, chunkSize, url, args) {\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.url = url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    var msgHandler = this.msgHandler = args.msgHandler;\n\n    if (args.chunkedViewerLoading) {\n      msgHandler.on('OnDataRange', this.onReceiveData.bind(this));\n      msgHandler.on('OnDataProgress', this.onProgress.bind(this));\n      this.sendRequest = function ChunkedStreamManager_sendRequest(begin, end) {\n        msgHandler.send('RequestDataRange', { begin: begin, end: end });\n      };\n    } else {\n\n      var getXhr = function getXhr() {\n        return new XMLHttpRequest();\n      };\n      this.networkManager = new NetworkManager(this.url, {\n        getXhr: getXhr,\n        httpHeaders: args.httpHeaders,\n        withCredentials: args.withCredentials\n      });\n      this.sendRequest = function ChunkedStreamManager_sendRequest(begin, end) {\n        this.networkManager.requestRange(begin, end, {\n          onDone: this.onReceiveData.bind(this),\n          onProgress: this.onProgress.bind(this)\n        });\n      };\n    }\n\n    this.currRequestId = 0;\n\n    this.chunksNeededByRequest = {};\n    this.requestsByChunk = {};\n    this.callbacksByRequest = {};\n    this.progressiveDataLength = 0;\n\n    this._loadedStreamCapability = createPromiseCapability();\n\n    if (args.initialData) {\n      this.onReceiveData({chunk: args.initialData});\n    }\n  }\n\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n\n    // Get all the chunks that are not yet loaded and groups them into\n    // contiguous ranges to load in as few requests as possible\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this.requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n\n    requestChunks: function ChunkedStreamManager_requestChunks(chunks,\n                                                               callback) {\n      var requestId = this.currRequestId++;\n\n      var chunksNeeded;\n      var i, ii;\n      this.chunksNeededByRequest[requestId] = chunksNeeded = {};\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n\n      if (isEmptyObj(chunksNeeded)) {\n        if (callback) {\n          callback();\n        }\n        return;\n      }\n\n      this.callbacksByRequest[requestId] = callback;\n\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n\n      if (!chunksToRequest.length) {\n        return;\n      }\n\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n    },\n\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n\n    // Loads any chunks in the requested range that are not yet loaded\n    requestRange: function ChunkedStreamManager_requestRange(\n                      begin, end, callback) {\n\n      end = Math.min(end, this.length);\n\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n\n      this.requestChunks(chunks, callback);\n    },\n\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges,\n                                                               callback) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n\n      chunksToRequest.sort(function(a, b) { return a - b; });\n      this.requestChunks(chunksToRequest, callback);\n    },\n\n    // Groups a sorted array of chunks into as few continguous larger\n    // chunks as possible\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({ beginChunk: beginChunk,\n                               endChunk: prevChunk + 1 });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({ beginChunk: beginChunk,\n                               endChunk: chunk + 1 });\n        }\n\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = (this.stream.numChunksLoaded * this.chunkSize +\n                         args.loaded);\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) :\n                                         Math.ceil(end / this.chunkSize);\n\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        // The server might return more chunks than requested\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n\n          if (!isEmptyObj(chunksNeeded)) {\n            continue;\n          }\n\n          loadedRequests.push(requestId);\n        }\n      }\n\n      // If there are no pending requests, automatically fetch the next\n      // unfetched chunk of the PDF\n      if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          // This is a special optimization so that after fetching the first\n          // chunk, rather than fetching the second chunk, we fetch the last\n          // chunk.\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (isInt(nextEmptyChunk)) {\n          this.requestChunks([nextEmptyChunk]);\n        }\n      }\n\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var callback = this.callbacksByRequest[requestId];\n        delete this.callbacksByRequest[requestId];\n        if (callback) {\n          callback();\n        }\n      }\n\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      if (end % this.chunkSize === 0) {\n        return end / this.chunkSize;\n      }\n\n      // 0 -> 0\n      // 1 -> 1\n      // 99 -> 1\n      // 100 -> 1\n      // 101 -> 2\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    }\n  };\n\n  return ChunkedStreamManager;\n})();\n\n\n// The maximum number of bytes fetched per range request\nvar RANGE_CHUNK_SIZE = 65536;\n\n// TODO(mack): Make use of PDFJS.Util.inherit() when it becomes available\nvar BasePdfManager = (function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n\n  BasePdfManager.prototype = {\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new NotImplementedException();\n    },\n\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n\n    getPage: function BasePdfManager_pagePage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new NotImplementedException();\n    },\n\n    requestRange: function BasePdfManager_ensure(begin, end) {\n      return new NotImplementedException();\n    },\n\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new NotImplementedException();\n    },\n\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new NotImplementedException();\n    },\n\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this.pdfDocument.xref.password = this.password = password;\n      if (this._passwordChangedCapability) {\n        this._passwordChangedCapability.resolve();\n      }\n    },\n\n    passwordChanged: function BasePdfManager_passwordChanged() {\n      this._passwordChangedCapability = createPromiseCapability();\n      return this._passwordChangedCapability.promise;\n    },\n\n    terminate: function BasePdfManager_terminate() {\n      return new NotImplementedException();\n    }\n  };\n\n  return BasePdfManager;\n})();\n\nvar LocalPdfManager = (function LocalPdfManagerClosure() {\n  function LocalPdfManager(data, password) {\n    var stream = new Stream(data);\n    this.pdfDocument = new PDFDocument(this, stream, password);\n    this._loadedStreamCapability = createPromiseCapability();\n    this._loadedStreamCapability.resolve(stream);\n  }\n\n  LocalPdfManager.prototype = Object.create(BasePdfManager.prototype);\n  LocalPdfManager.prototype.constructor = LocalPdfManager;\n\n  LocalPdfManager.prototype.ensure =\n      function LocalPdfManager_ensure(obj, prop, args) {\n    return new Promise(function (resolve, reject) {\n      try {\n        var value = obj[prop];\n        var result;\n        if (typeof value === 'function') {\n          result = value.apply(obj, args);\n        } else {\n          result = value;\n        }\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n\n  LocalPdfManager.prototype.requestRange =\n      function LocalPdfManager_requestRange(begin, end) {\n    return Promise.resolve();\n  };\n\n  LocalPdfManager.prototype.requestLoadedStream =\n      function LocalPdfManager_requestLoadedStream() {\n  };\n\n  LocalPdfManager.prototype.onLoadedStream =\n      function LocalPdfManager_getLoadedStream() {\n    return this._loadedStreamCapability.promise;\n  };\n\n  LocalPdfManager.prototype.terminate =\n      function LocalPdfManager_terminate() {\n    return;\n  };\n\n  return LocalPdfManager;\n})();\n\nvar NetworkPdfManager = (function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(args, msgHandler) {\n\n    this.msgHandler = msgHandler;\n\n    var params = {\n      msgHandler: msgHandler,\n      httpHeaders: args.httpHeaders,\n      withCredentials: args.withCredentials,\n      chunkedViewerLoading: args.chunkedViewerLoading,\n      disableAutoFetch: args.disableAutoFetch,\n      initialData: args.initialData\n    };\n    this.streamManager = new ChunkedStreamManager(args.length, RANGE_CHUNK_SIZE,\n                                                  args.url, params);\n\n    this.pdfDocument = new PDFDocument(this, this.streamManager.getStream(),\n                                    args.password);\n  }\n\n  NetworkPdfManager.prototype = Object.create(BasePdfManager.prototype);\n  NetworkPdfManager.prototype.constructor = NetworkPdfManager;\n\n  NetworkPdfManager.prototype.ensure =\n      function NetworkPdfManager_ensure(obj, prop, args) {\n    var pdfManager = this;\n\n    return new Promise(function (resolve, reject) {\n      function ensureHelper() {\n        try {\n          var result;\n          var value = obj[prop];\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch(e) {\n          if (!(e instanceof MissingDataException)) {\n            reject(e);\n            return;\n          }\n          pdfManager.streamManager.requestRange(e.begin, e.end, ensureHelper);\n        }\n      }\n\n      ensureHelper();\n    });\n  };\n\n  NetworkPdfManager.prototype.requestRange =\n      function NetworkPdfManager_requestRange(begin, end) {\n    return new Promise(function (resolve) {\n      this.streamManager.requestRange(begin, end, function() {\n        resolve();\n      });\n    }.bind(this));\n  };\n\n  NetworkPdfManager.prototype.requestLoadedStream =\n      function NetworkPdfManager_requestLoadedStream() {\n    this.streamManager.requestAllChunks();\n  };\n\n  NetworkPdfManager.prototype.sendProgressiveData =\n      function NetworkPdfManager_sendProgressiveData(chunk) {\n    this.streamManager.onReceiveData({ chunk: chunk });\n  };\n\n  NetworkPdfManager.prototype.onLoadedStream =\n      function NetworkPdfManager_getLoadedStream() {\n    return this.streamManager.onLoadedStream();\n  };\n\n  NetworkPdfManager.prototype.terminate =\n      function NetworkPdfManager_terminate() {\n    this.streamManager.networkManager.abortAllRequests();\n  };\n\n  return NetworkPdfManager;\n})();\n\n\nvar Page = (function PageClosure() {\n\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n\n  function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache) {\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.idCounters = {\n      obj: 0\n    };\n    this.resourcesPromise = null;\n  }\n\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n\n    getInheritedPageProp: function Page_inheritPageProp(key) {\n      var dict = this.pageDict;\n      var value = dict.get(key);\n      while (value === undefined) {\n        dict = dict.get('Parent');\n        if (!dict) {\n          break;\n        }\n        value = dict.get(key);\n      }\n      return value;\n    },\n\n    get content() {\n      return this.getPageProp('Contents');\n    },\n\n    get resources() {\n      var value = this.getInheritedPageProp('Resources');\n      // For robustness: The spec states that a \\Resources entry has to be\n      // present, but can be empty. Some document omit it still. In this case\n      // return an empty dictionary:\n      if (value === undefined) {\n        value = Dict.empty;\n      }\n      return shadow(this, 'resources', value);\n    },\n\n    get mediaBox() {\n      var obj = this.getInheritedPageProp('MediaBox');\n      // Reset invalid media box to letter size.\n      if (!isArray(obj) || obj.length !== 4) {\n        obj = LETTER_SIZE_MEDIABOX;\n      }\n      return shadow(this, 'mediaBox', obj);\n    },\n\n    get view() {\n      var mediaBox = this.mediaBox;\n      var cropBox = this.getInheritedPageProp('CropBox');\n      if (!isArray(cropBox) || cropBox.length !== 4) {\n        return shadow(this, 'view', mediaBox);\n      }\n\n      // From the spec, 6th ed., p.963:\n      // \"The crop, bleed, trim, and art boxes should not ordinarily\n      // extend beyond the boundaries of the media box. If they do, they are\n      // effectively reduced to their intersection with the media box.\"\n      cropBox = Util.intersect(cropBox, mediaBox);\n      if (!cropBox) {\n        return shadow(this, 'view', mediaBox);\n      }\n      return shadow(this, 'view', cropBox);\n    },\n\n    get annotationRefs() {\n      return shadow(this, 'annotationRefs',\n                    this.getInheritedPageProp('Annots'));\n    },\n\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      // Normalize rotation so it's a multiple of 90 and between 0 and 270\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        // The spec doesn't cover negatives, assume its counterclockwise\n        // rotation. The following is the other implementation of modulo.\n        rotate = ((rotate % 360) + 360) % 360;\n      }\n      return shadow(this, 'rotate', rotate);\n    },\n\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (isArray(content)) {\n        // fetching items\n        var xref = this.xref;\n        var i, n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new StreamsSequenceStream(streams);\n      } else if (isStream(content)) {\n        stream = content;\n      } else {\n        // replacing non-existent page content with empty one\n        stream = new NullStream();\n      }\n      return stream;\n    },\n\n    loadResources: function Page_loadResources(keys) {\n      if (!this.resourcesPromise) {\n        // TODO: add async getInheritedPageProp and remove this.\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function resourceSuccess() {\n        var objectLoader = new ObjectLoader(this.resources.map,\n                                            keys,\n                                            this.xref);\n        return objectLoader.load();\n      }.bind(this));\n    },\n\n    getOperatorList: function Page_getOperatorList(handler, intent) {\n      var self = this;\n\n      var pdfManager = this.pdfManager;\n      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream',\n                                                   []);\n      var resourcesPromise = this.loadResources([\n        'ExtGState',\n        'ColorSpace',\n        'Pattern',\n        'Shading',\n        'XObject',\n        'Font'\n        // ProcSet\n        // Properties\n      ]);\n\n      var partialEvaluator = new PartialEvaluator(pdfManager, this.xref,\n                                                  handler, this.pageIndex,\n                                                  'p' + this.pageIndex + '_',\n                                                  this.idCounters,\n                                                  this.fontCache);\n\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function(data) {\n        var contentStream = data[0];\n        var opList = new OperatorList(intent, handler, self.pageIndex);\n\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(self.resources),\n          pageIndex: self.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList(contentStream, self.resources,\n          opList).then(function () {\n            return opList;\n          });\n      });\n\n      var annotationsPromise = pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(\n          function(datas) {\n        var pageOpList = datas[0];\n        var annotations = datas[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n\n        var annotationsReadyPromise = Annotation.appendToOperatorList(\n          annotations, pageOpList, pdfManager, partialEvaluator, intent);\n        return annotationsReadyPromise.then(function () {\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n\n    extractTextContent: function Page_extractTextContent() {\n      var handler = {\n        on: function nullHandlerOn() {},\n        send: function nullHandlerSend() {}\n      };\n\n      var self = this;\n\n      var pdfManager = this.pdfManager;\n      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream',\n                                                   []);\n\n      var resourcesPromise = this.loadResources([\n        'ExtGState',\n        'XObject',\n        'Font'\n      ]);\n\n      var dataPromises = Promise.all([contentStreamPromise,\n                                      resourcesPromise]);\n      return dataPromises.then(function(data) {\n        var contentStream = data[0];\n        var partialEvaluator = new PartialEvaluator(pdfManager, self.xref,\n                                                    handler, self.pageIndex,\n                                                    'p' + self.pageIndex + '_',\n                                                    self.idCounters,\n                                                    self.fontCache);\n\n        return partialEvaluator.getTextContent(contentStream,\n                                               self.resources);\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData() {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        annotationsData.push(annotations[i].getData());\n      }\n      return annotationsData;\n    },\n\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = (this.annotationRefs || []);\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = Annotation.fromRef(this.xref, annotationRef);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return shadow(this, 'annotations', annotations);\n    }\n  };\n\n  return Page;\n})();\n\n/**\n * The `PDFDocument` holds all the data of the PDF file. Compared to the\n * `PDFDoc`, this one doesn't have any job management code.\n * Right now there exists one PDFDocument on the main thread + one object\n * for each worker. If there is no worker support enabled, there are two\n * `PDFDocument` objects on the main thread created.\n */\nvar PDFDocument = (function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' +\n    '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\n  function PDFDocument(pdfManager, arg, password) {\n    if (isStream(arg)) {\n      init.call(this, pdfManager, arg, password);\n    } else if (isArrayBuffer(arg)) {\n      init.call(this, pdfManager, new Stream(arg), password);\n    } else {\n      error('PDFDocument: Unknown argument type');\n    }\n  }\n\n  function init(pdfManager, stream, password) {\n    assert(stream.length > 0, 'stream must have data');\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    var xref = new XRef(this.stream, password, pdfManager);\n    this.xref = xref;\n  }\n\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false; /* not found */\n    }\n    stream.pos += index;\n    return true; /* found */\n  }\n\n  var DocumentInfoValidators = {\n    get entries() {\n      // Lazily build this since all the validation functions below are not\n      // defined until after this file loads.\n      return shadow(this, 'entries', {\n        Title: isString,\n        Author: isString,\n        Subject: isString,\n        Keywords: isString,\n        Creator: isString,\n        Producer: isString,\n        CreationDate: isString,\n        ModDate: isString,\n        Trapped: isName\n      });\n    }\n  };\n\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      try {\n        // checking if AcroForm is present\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !isArray(fields) || fields.length === 0) &&\n              !this.xfa) {\n            // no fields and no XFA -- not a form (?)\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        info('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof MissingDataException) {\n            throw err;\n          }\n          info(err);\n        }\n      }\n      // shadow the prototype getter with a data property\n      return shadow(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        // Find end of first obj.\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        // Find startxref by jumping backward from the end of the file.\n        var step = 1024;\n        var found = false, pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while (Lexer.isSpace(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) { // < '9'\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      // shadow the prototype getter with a data property\n      return shadow(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      // shadow the prototype getter with a data property\n      return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    // Find the header, remove leading garbage and setup the stream\n    // starting from the header.\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        // Found the header, trim off any garbage before it.\n        stream.moveStart();\n        // Reading file format version\n        var MAX_VERSION_LENGTH = 12;\n        var version = '', ch;\n        while ((ch = stream.getByte()) > 0x20) { // SPACE\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        // removing \"%PDF-\"-prefix\n        this.pdfFormatVersion = version.substring(5);\n        return;\n      }\n      // May not be a PDF file, continue anyway.\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      this.xref.parse(recoveryMode);\n      this.catalog = new Catalog(this.pdfManager, this.xref);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      // shadow the prototype getter\n      return shadow(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        info('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        // Only fill the document info with valid entries from the spec.\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            // Make sure the value conforms to the spec.\n            if (validEntries[key](value)) {\n              docInfo[key] = (typeof value !== 'string' ?\n                              value : stringToPDFString(value));\n            } else {\n              info('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return shadow(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref, idArray, hash, fileID = '';\n\n      if (xref.trailer.has('ID')) {\n        idArray = xref.trailer.get('ID');\n      }\n      if (idArray && isArray(idArray) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = stringToBytes(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0,\n            Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = calculateMD5(this.stream.bytes.subarray(0,\n          FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n\n      return shadow(this, 'fingerprint', fileID);\n    },\n\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n\n  return PDFDocument;\n})();\n\n\nvar Name = (function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n\n  Name.prototype = {};\n\n  var nameCache = {};\n\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return (nameValue ? nameValue : (nameCache[name] = new Name(name)));\n  };\n\n  return Name;\n})();\n\nvar Cmd = (function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n\n  Cmd.prototype = {};\n\n  var cmdCache = {};\n\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return (cmdValue ? cmdValue : (cmdCache[cmd] = new Cmd(cmd)));\n  };\n\n  return Cmd;\n})();\n\nvar Dict = (function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable; // creating closure on some variable\n  };\n\n  var GETALL_DICTIONARY_TYPES_WHITELIST = {\n    'Background': true,\n    'ExtGState': true,\n    'Halftone': true,\n    'Layout': true,\n    'Mask': true,\n    'Pagination': true,\n    'Printing': true\n  };\n\n  function isRecursionAllowedFor(dict) {\n    if (!isName(dict.Type)) {\n      return true;\n    }\n    var dictType = dict.Type.name;\n    return GETALL_DICTIONARY_TYPES_WHITELIST[dictType] === true;\n  }\n\n  // xref is optional\n  function Dict(xref) {\n    // Map should only be used internally, use functions below to access.\n    this.map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.__nonSerializable__ = nonSerializable; // disable cloning of the Dict\n  }\n\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n\n    // automatically dereferences Ref objects\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref;\n      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map ||\n          typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value) : value;\n      }\n      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map ||\n          typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value) : value;\n      }\n      value = this.map[key3] || null;\n      return xref ? xref.fetchIfRef(value) : value;\n    },\n\n    // Same as get(), but returns a promise and uses fetchIfRefAsync().\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref;\n      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map ||\n          typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map ||\n          typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value);\n        }\n        return Promise.resolve(value);\n      }\n      value = this.map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value);\n      }\n      return Promise.resolve(value);\n    },\n\n    // no dereferencing\n    getRaw: function Dict_getRaw(key) {\n      return this.map[key];\n    },\n\n    // creates new map and dereferences all Refs\n    getAll: function Dict_getAll() {\n      var all = Object.create(null);\n      var queue = null;\n      var key, obj;\n      for (key in this.map) {\n        obj = this.get(key);\n        if (obj instanceof Dict) {\n          if (isRecursionAllowedFor(obj)) {\n            (queue || (queue = [])).push({target: all, key: key, obj: obj});\n          } else {\n            all[key] = this.getRaw(key);\n          }\n        } else {\n          all[key] = obj;\n        }\n      }\n      if (!queue) {\n        return all;\n      }\n\n      // trying to take cyclic references into the account\n      var processed = Object.create(null);\n      while (queue.length > 0) {\n        var item = queue.shift();\n        var itemObj = item.obj;\n        var objId = itemObj.objId;\n        if (objId && objId in processed) {\n          item.target[item.key] = processed[objId];\n          continue;\n        }\n        var dereferenced = Object.create(null);\n        for (key in itemObj.map) {\n          obj = itemObj.get(key);\n          if (obj instanceof Dict) {\n            if (isRecursionAllowedFor(obj)) {\n              queue.push({target: dereferenced, key: key, obj: obj});\n            } else {\n              dereferenced[key] = itemObj.getRaw(key);\n            }\n          } else {\n            dereferenced[key] = obj;\n          }\n        }\n        if (objId) {\n          processed[objId] = dereferenced;\n        }\n        item.target[item.key] = dereferenced;\n      }\n      return all;\n    },\n\n    set: function Dict_set(key, value) {\n      this.map[key] = value;\n    },\n\n    has: function Dict_has(key) {\n      return key in this.map;\n    },\n\n    forEach: function Dict_forEach(callback) {\n      for (var key in this.map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n\n  Dict.empty = new Dict(null);\n\n  return Dict;\n})();\n\nvar Ref = (function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      // This function is hot, so we make the string as compact as possible.\n      // |this.gen| is almost always zero, so we treat that case specially.\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n\n  return Ref;\n})();\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nvar RefSet = (function RefSetClosure() {\n  function RefSet() {\n    this.dict = {};\n  }\n\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n\n  return RefSet;\n})();\n\nvar RefSetCache = (function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n\n  return RefSetCache;\n})();\n\nvar Catalog = (function CatalogClosure() {\n  function Catalog(pdfManager, xref) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    this.fontCache = new RefSetCache();\n    assert(isDict(this.catDict),\n      'catalog object is not a dictionary');\n\n    this.pagePromises = [];\n  }\n\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!isRef(streamRef)) {\n        return shadow(this, 'metadata', null);\n      }\n\n      var encryptMetadata = (!this.xref.encrypt ? false :\n                             this.xref.encrypt.encryptMetadata);\n\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && isDict(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n\n        if (isName(type) && isName(subtype) &&\n            type.name === 'Metadata' && subtype.name === 'XML') {\n          // XXX: This should examine the charset the XML document defines,\n          // however since there are currently no real means to decode\n          // arbitrary charsets, let's just hope that the author of the PDF\n          // was reasonable enough to stick with the XML default charset,\n          // which is UTF-8.\n          try {\n            metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n          } catch (e) {\n            info('Skipping invalid metadata.');\n          }\n        }\n      }\n\n      return shadow(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n      // shadow the prototype getter\n      return shadow(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof MissingDataException) {\n          throw ex;\n        }\n        warn('Unable to read document outline');\n      }\n      return shadow(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Outlines');\n      var root = { items: [] };\n      if (isDict(obj)) {\n        obj = obj.getRaw('First');\n        var processed = new RefSet();\n        if (isRef(obj)) {\n          var queue = [{obj: obj, parent: root}];\n          // to avoid recursion keeping track of the items\n          // in the processed dictionary\n          processed.put(obj);\n          while (queue.length > 0) {\n            var i = queue.shift();\n            var outlineDict = xref.fetchIfRef(i.obj);\n            if (outlineDict === null) {\n              continue;\n            }\n            if (!outlineDict.has('Title')) {\n              error('Invalid outline item');\n            }\n            var dest = outlineDict.get('A');\n            if (dest) {\n              dest = dest.get('D');\n            } else if (outlineDict.has('Dest')) {\n              dest = outlineDict.getRaw('Dest');\n              if (isName(dest)) {\n                dest = dest.name;\n              }\n            }\n            var title = outlineDict.get('Title');\n            var outlineItem = {\n              dest: dest,\n              title: stringToPDFString(title),\n              color: outlineDict.get('C') || [0, 0, 0],\n              count: outlineDict.get('Count'),\n              bold: !!(outlineDict.get('F') & 2),\n              italic: !!(outlineDict.get('F') & 1),\n              items: []\n            };\n            i.parent.items.push(outlineItem);\n            obj = outlineDict.getRaw('First');\n            if (isRef(obj) && !processed.has(obj)) {\n              queue.push({obj: obj, parent: outlineItem});\n              processed.put(obj);\n            }\n            obj = outlineDict.getRaw('Next');\n            if (isRef(obj) && !processed.has(obj)) {\n              queue.push({obj: obj, parent: i.parent});\n              processed.put(obj);\n            }\n          }\n        }\n      }\n      return (root.items.length > 0 ? root.items : null);\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      assert(\n        isInt(obj),\n        'page count in top level pages object is not an integer'\n      );\n      // shadow the prototype getter\n      return shadow(this, 'num', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return isDict(dest) ? dest.get('D') : dest;\n      }\n\n      var xref = this.xref;\n      var dests = {}, nameTreeRef, nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n\n      if (nameDictionaryRef) {\n        // reading simple destination dictionary\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          if (!names.hasOwnProperty(name)) {\n            continue;\n          }\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return shadow(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return isDict(dest) ? dest.get('D') : dest;\n      }\n\n      var xref = this.xref;\n      var dest, nameTreeRef, nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n\n      if (nameDictionaryRef) {\n        // reading simple destination dictionary\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          if (key === destinationId) {\n            dest = fetchDestination(value);\n          }\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null, nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          if (!names.hasOwnProperty(name)) {\n            continue;\n          }\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = {};\n          }\n          attachments[stringToPDFString(name)] = fs.serializable;\n        }\n      }\n      return shadow(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n\n      var javaScript = [];\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          if (!names.hasOwnProperty(name)) {\n            continue;\n          }\n          // We don't really use the JavaScript right now. This code is\n          // defensive so we don't cause errors on document load.\n          var jsDict = names[name];\n          if (!isDict(jsDict)) {\n            continue;\n          }\n          var type = jsDict.get('S');\n          if (!isName(type) || type.name !== 'JavaScript') {\n            continue;\n          }\n          var js = jsDict.get('JS');\n          if (!isString(js) && !isStream(js)) {\n            continue;\n          }\n          if (isStream(js)) {\n            js = bytesToString(js.getBytes());\n          }\n          javaScript.push(stringToPDFString(js));\n        }\n      }\n\n      // Append OpenAction actions to javaScript array\n      var openactionDict = this.catDict.get('OpenAction');\n      if (isDict(openactionDict)) {\n        var objType = openactionDict.get('Type');\n        var actionType = openactionDict.get('S');\n        var action = openactionDict.get('N');\n        var isPrintAction = (isName(objType) && objType.name === 'Action' &&\n                            isName(actionType) && actionType.name === 'Named' &&\n                            isName(action) && action.name === 'Print');\n\n        if (isPrintAction) {\n          javaScript.push('print(true);');\n        }\n      }\n\n      return shadow(this, 'javaScript', javaScript);\n    },\n\n    cleanup: function Catalog_cleanup() {\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        this.fontCache.clear();\n      }.bind(this));\n    },\n\n    getPage: function Catalog_getPage(pageIndex) {\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(\n          function (a) {\n            var dict = a[0];\n            var ref = a[1];\n            return new Page(this.pdfManager, this.xref, pageIndex, dict, ref,\n                            this.fontCache);\n          }.bind(this)\n        );\n      }\n      return this.pagePromises[pageIndex];\n    },\n\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = createPromiseCapability();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var currentPageIndex = 0;\n      var xref = this.xref;\n\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n\n          if (isRef(currentNode)) {\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((isDict(obj, 'Page') || (isDict(obj) && !obj.has('Kids')))) {\n                if (pageIndex === currentPageIndex) {\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n\n          // must be a child page dictionary\n          assert(\n            isDict(currentNode),\n            'page dictionary kid reference points to wrong type of object'\n          );\n          var count = currentNode.get('Count');\n          // Skip nodes where the page can't be.\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n\n          var kids = currentNode.get('Kids');\n          assert(isArray(kids), 'page dictionary kids object is not an array');\n          if (count === kids.length) {\n            // Nodes that don't have the page have been skipped and this is the\n            // bottom of the tree which means the page requested must be a\n            // descendant of this pages node. Ideally we would just resolve the\n            // promise with the page ref here, but there is the case where more\n            // pages nodes could link to single a page (see issue 3666 pdf). To\n            // handle this push it back on the queue so if it is a pages node it\n            // will be descended into.\n            nodesToVisit = [kids[pageIndex - currentPageIndex]];\n            currentPageIndex = pageIndex;\n            continue;\n          } else {\n            for (var last = kids.length - 1; last >= 0; last--) {\n              nodesToVisit.push(kids[last]);\n            }\n          }\n        }\n        capability.reject('Page index ' + pageIndex + ' not found.');\n      }\n      next();\n      return capability.promise;\n    },\n\n    getPageIndex: function Catalog_getPageIndex(ref) {\n      // The page tree nodes have the count of all the leaves below them. To get\n      // how many pages are before we just have to walk up the tree and keep\n      // adding the count of siblings to the left of the node.\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if (!node) {\n            return null;\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            assert(isRef(kid), 'kids must be a ref');\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else { // page leaf node\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            error('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n\n      return next(ref);\n    }\n  };\n\n  return Catalog;\n})();\n\nvar XRef = (function XRefClosure() {\n  function XRef(stream, password) {\n    this.stream = stream;\n    this.entries = [];\n    this.xrefstms = {};\n    // prepare the XRef cache\n    this.cache = [];\n    this.password = password;\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      // Store the starting positions of xref tables as we process them\n      // so we can recover from missing data errors\n      this.startXRefQueue = [startXRef];\n    },\n\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        warn('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if (encrypt) {\n        var ids = trailerDict.get('ID');\n        var fileId = (ids && ids.length) ? ids[0] : '';\n        this.encrypt = new CipherTransformFactory(encrypt, fileId,\n                                                  this.password);\n      }\n\n      // get the root dictionary (catalog) object\n      if (!(this.root = trailerDict.get('Root'))) {\n        error('Invalid root reference');\n      }\n    },\n\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        // Stores state of the table as we process it so we can resume\n        // from middle of table in case of missing data error\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n\n      var obj = this.readXRefTable(parser);\n\n      // Sanity check\n      if (!isCmd(obj, 'trailer')) {\n        error('Invalid XRef table: could not find trailer dictionary');\n      }\n      // Read trailer dictionary, e.g.\n      // trailer\n      //    << /Size 22\n      //      /Root 20R\n      //      /Info 10R\n      //      /ID [ <81b14aafa313db63dbd6f981e49f94f4> ]\n      //    >>\n      // The parser goes through the entire stream << ... >> and provides\n      // a getter interface for the key-value table\n      var dict = parser.getObj();\n\n      // The pdflib PDF generator can generate a nested trailer dictionary\n      if (!isDict(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!isDict(dict)) {\n        error('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n\n      return dict;\n    },\n\n    readXRefTable: function XRef_readXRefTable(parser) {\n      // Example of cross-reference table:\n      // xref\n      // 0 1                    <-- subsection header (first obj #, obj count)\n      // 0000000000 65535 f     <-- actual object (offset, generation #, f/n)\n      // 23 2                   <-- subsection header ... and so on ...\n      // 0000025518 00002 n\n      // 0000025635 00000 n\n      // trailer\n      // ...\n\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n\n      // Outer loop is over subsection headers\n      var obj;\n\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if (isCmd(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!isInt(first) || !isInt(count)) {\n          error('Invalid XRef table: wrong types in subsection header');\n        }\n        // Inner loop is over objects themselves\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n\n          if (isCmd(type, 'f')) {\n            entry.free = true;\n          } else if (isCmd(type, 'n')) {\n            entry.uncompressed = true;\n          }\n\n          // Validate entry obj\n          if (!isInt(entry.offset) || !isInt(entry.gen) ||\n              !(entry.free || entry.uncompressed)) {\n            error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n\n      // Per issue 3248: hp scanners generate bad XRef\n      if (first === 1 && this.entries[1] && this.entries[1].free) {\n        // shifting the entries\n        this.entries.shift();\n      }\n\n      // Sanity check: as per spec, first object must be free\n      if (this.entries[0] && !this.entries[0].free) {\n        error('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        // Stores state of the stream as we process it so we can resume\n        // from middle of stream in case of missing data error\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n\n      return stream.dict;\n    },\n\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n\n        if (!isInt(first) || !isInt(n)) {\n          error('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) ||\n            !isInt(generationFieldWidth)) {\n          error('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n\n          var type = 0, offset = 0, generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = (type << 8) | stream.getByte();\n          }\n          // if type field is absent, its default value is 1\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = (offset << 8) | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = (generation << 8) | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              error('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n\n    indexObjects: function XRef_indexObjects() {\n      // Simple scan through the PDF content to find objects,\n      // trailers and XRef streams.\n      function readToken(data, offset) {\n        var token = '', ch = data[offset];\n        while (ch !== 13 && ch !== 10) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length, dataLength = data.length;\n        var skipped = 0;\n        // finding byte sequence\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break; // sequence found\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114,\n                                          101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start, length = buffer.length;\n      var trailers = [], xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === 32 || ch === 9 || ch === 13 || ch === 10) {\n          ++position;\n          continue;\n        }\n        if (ch === 37) { // %-comment\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== 13 && ch !== 10);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token === 'xref') {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if ((m = /^(\\d+)\\s+(\\d+)\\s+obj\\b/.exec(token))) {\n          this.entries[m[1]] = {\n            offset: position,\n            gen: m[2] | 0,\n            uncompressed: true\n          };\n\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n\n          // checking XRef stream suspect\n          // (it shall have '/XRef' and next char is not a letter)\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength &&\n              content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position);\n            this.xrefstms[position] = 1; // don't read it recursively\n          }\n\n          position += contentLength;\n        } else {\n          position += token.length + 1;\n        }\n      }\n      // reading XRef streams\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(/* recoveryMode */ true);\n      }\n      // finding main trailer\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new Parser(new Lexer(stream), true, this);\n        var obj = parser.getObj();\n        if (!isCmd(obj, 'trailer')) {\n          continue;\n        }\n        // read the trailer dictionary\n        if (!isDict(dict = parser.getObj())) {\n          continue;\n        }\n        // taking the first one with 'ID'\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      // no tailer with 'ID', taking last one (if exists)\n      if (dict) {\n        return dict;\n      }\n      // nothing helps\n      // calling error() would reject worker with an UnknownErrorException.\n      throw new InvalidPDFException('Invalid PDF structure');\n    },\n\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n\n          stream.pos = startXRef + stream.start;\n\n          var parser = new Parser(new Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n\n          // Get dictionary\n          if (isCmd(obj, 'xref')) {\n            // Parse end-of-file XRef\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n\n            // Recursively get other XRefs 'XRefStm', if any\n            obj = dict.get('XRefStm');\n            if (isInt(obj)) {\n              var pos = obj;\n              // ignore previously loaded xref streams\n              // (possible infinite recursion)\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (isInt(obj)) {\n            // Parse in-stream XRef\n            if (!isInt(parser.getObj()) ||\n                !isCmd(parser.getObj(), 'obj') ||\n                !isStream(obj = parser.getObj())) {\n              error('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              error('Failed to read XRef stream');\n            }\n          } else {\n            error('Invalid XRef stream header');\n          }\n\n          // Recursively get previous dictionary, if any\n          obj = dict.get('Prev');\n          if (isInt(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if (isRef(obj)) {\n            // The spec says Prev must not be a reference, i.e. \"/Prev NNN\"\n            // This is a fallback for non-compliant PDFs, i.e. \"/Prev NNN 0 R\"\n            this.startXRefQueue.push(obj.num);\n          }\n\n          this.startXRefQueue.shift();\n        }\n\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof MissingDataException) {\n          throw e;\n        }\n        info('(while reading XRef): ' + e);\n      }\n\n      if (recoveryMode) {\n        return;\n      }\n      throw new XRefParseException();\n    },\n\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n\n    fetchIfRef: function XRef_fetchIfRef(obj) {\n      if (!isRef(obj)) {\n        return obj;\n      }\n      return this.fetch(obj);\n    },\n\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      assert(isRef(ref), 'ref object is not a reference');\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        return cacheEntry;\n      }\n\n      var xrefEntry = this.getEntry(num);\n\n      // the referenced entry can be free\n      if (xrefEntry === null) {\n        return (this.cache[num] = null);\n      }\n\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if (isDict(xrefEntry)){\n        xrefEntry.objId = ref.toString();\n      } else if (isStream(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry,\n                                                       suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        error('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset +\n                                             this.stream.start);\n      var parser = new Parser(new Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!isInt(obj1) || parseInt(obj1, 10) !== num ||\n          !isInt(obj2) || parseInt(obj2, 10) !== gen ||\n          !isCmd(obj3)) {\n        error('bad XRef entry');\n      }\n      if (!isCmd(obj3, 'obj')) {\n        // some bad PDFs use \"obj1234\" and really mean 1234\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!isNaN(num)) {\n            return num;\n          }\n        }\n        error('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!isStream(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry,\n                                                   suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new Ref(tableOffset, 0));\n      if (!isStream(stream)) {\n        error('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!isInt(first) || !isInt(n)) {\n        error('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new Parser(new Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i, entries = [], num, nums = [];\n      // read the object numbers to populate cache\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!isInt(num)) {\n          error('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!isInt(offset)) {\n          error('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      // read stream objects for cache\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        error('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj) {\n      if (!isRef(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj);\n    },\n\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof MissingDataException) {\n            streamManager.requestRange(e.begin, e.end, function () {\n              tryFetch(resolve, reject);\n            });\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n\n  return XRef;\n})();\n\n/**\n * A NameTree is like a Dict but has some advantageous properties, see the\n * spec (7.9.6) for more details.\n * TODO: implement all the Dict functions and make this more efficent.\n */\nvar NameTree = (function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n  }\n\n  NameTree.prototype = {\n    getAll: function NameTree_getAll() {\n      var dict = {};\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      // reading name tree\n      var processed = new RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!isDict(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              error('invalid destinations');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var names = obj.get('Names');\n        if (names) {\n          for (i = 0, n = names.length; i < n; i += 2) {\n            dict[names[i]] = xref.fetchIfRef(names[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n\n    get: function NameTree_get(destinationId) {\n      if (!this.root) {\n        return null;\n      }\n\n      var xref = this.xref;\n      var kidsOrNames = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_NAMES_LEVELS = 10;\n      var l, r, m;\n\n      // Perform a binary search to quickly find the entry that\n      // contains the named destination we are looking for.\n      while (kidsOrNames.has('Kids')) {\n        loopCount++;\n        if (loopCount > MAX_NAMES_LEVELS) {\n          warn('Search depth limit for named destionations has been reached.');\n          return null;\n        }\n\n        var kids = kidsOrNames.get('Kids');\n        if (!isArray(kids)) {\n          return null;\n        }\n\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = (l + r) >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n\n          if (destinationId < limits[0]) {\n            r = m - 1;\n          } else if (destinationId > limits[1]) {\n            l = m + 1;\n          } else {\n            kidsOrNames = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n\n      // If we get here, then we have found the right entry. Now\n      // go through the named destinations in the Named dictionary\n      // until we find the exact destination we're looking for.\n      var names = kidsOrNames.get('Names');\n      if (isArray(names)) {\n        // Perform a binary search to reduce the lookup time.\n        l = 0;\n        r = names.length - 2;\n        while (l <= r) {\n          // Check only even indices (0, 2, 4, ...) because the\n          // odd indices contain the actual D array.\n          m = (l + r) & ~1;\n          if (destinationId < names[m]) {\n            r = m - 2;\n          } else if (destinationId > names[m]) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(names[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameTree;\n})();\n\n/**\n * \"A PDF file can refer to the contents of another file by using a File\n * Specification (PDF 1.1)\", see the spec (7.11) for more details.\n * NOTE: Only embedded files are supported (as part of the attachments support)\n * TODO: support the 'URL' file system (with caching if !/V), portable\n * collections attributes and related files (/RF)\n */\nvar FileSpec = (function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !isDict(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ?\n                         stringToPDFString(root.get('Desc')) :\n                         '';\n    if (root.has('RF')) {\n      warn('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      warn('Non-embedded file specifications are not supported');\n    }\n  }\n\n  function pickPlatformItem(dict) {\n    // Look for the filename in this order:\n    // UF, F, Unix, Mac, DOS\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    } else {\n      return null;\n    }\n  }\n\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = stringToPDFString(filename).\n          replace(/\\\\\\\\/g, '\\\\').\n          replace(/\\\\\\//g, '/').\n          replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && isStream(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          warn('Embedded file specification points to non-existing/invalid ' +\n            'content');\n        }\n      } else {\n        warn('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n})();\n\n/**\n * A helper for loading missing data in object graphs. It traverses the graph\n * depth first and queues up any objects that have missing data. Once it has\n * has traversed as many objects that are available it attempts to bundle the\n * missing data requests and then resume from the nodes that weren't ready.\n *\n * NOTE: It provides protection from circular references by keeping track of\n * of loaded references. However, you must be careful not to load any graphs\n * that have references to the catalog or other pages since that will cause the\n * entire PDF document object graph to be traversed.\n */\nvar ObjectLoader = (function() {\n  function mayHaveChildren(value) {\n    return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n  }\n\n  function addChildren(node, nodesToVisit) {\n    var value;\n    if (isDict(node) || isStream(node)) {\n      var map;\n      if (isDict(node)) {\n        map = node.map;\n      } else {\n        map = node.dict.map;\n      }\n      for (var key in map) {\n        value = map[key];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    } else if (isArray(node)) {\n      for (var i = 0, ii = node.length; i < ii; i++) {\n        value = node[i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n\n  function ObjectLoader(obj, keys, xref) {\n    this.obj = obj;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n  }\n\n  ObjectLoader.prototype = {\n    load: function ObjectLoader_load() {\n      var keys = this.keys;\n      this.capability = createPromiseCapability();\n      // Don't walk the graph if all the data is already loaded.\n      if (!(this.xref.stream instanceof ChunkedStream) ||\n          this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n\n      this.refSet = new RefSet();\n      // Setup the initial nodes to visit.\n      var nodesToVisit = [];\n      for (var i = 0; i < keys.length; i++) {\n        nodesToVisit.push(this.obj[keys[i]]);\n      }\n\n      this.walk(nodesToVisit);\n      return this.capability.promise;\n    },\n\n    walk: function ObjectLoader_walk(nodesToVisit) {\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      // DFS walk of the object graph.\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n\n        // Only references or chunked streams can cause missing data exceptions.\n        if (isRef(currentNode)) {\n          // Skip nodes that have already been visited.\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            var ref = currentNode;\n            this.refSet.put(ref);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (e) {\n            if (!(e instanceof MissingDataException)) {\n              throw e;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({ begin: e.begin, end: e.end });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0; i < baseStreams.length; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n\n        addChildren(currentNode, nodesToVisit);\n      }\n\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests,\n            function pendingRequestCallback() {\n          nodesToVisit = nodesToRevisit;\n          for (var i = 0; i < nodesToRevisit.length; i++) {\n            var node = nodesToRevisit[i];\n            // Remove any reference nodes from the currrent refset so they\n            // aren't skipped when we revist them.\n            if (isRef(node)) {\n              this.refSet.remove(node);\n            }\n          }\n          this.walk(nodesToVisit);\n        }.bind(this));\n        return;\n      }\n      // Everything is loaded.\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n\n  return ObjectLoader;\n})();\n\n\nvar ISOAdobeCharset = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar',\n  'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright',\n  'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero',\n  'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question',\n  'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\n  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n  'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase',\n  'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n  'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla',\n  'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine',\n  'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n  'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n  'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter',\n  'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior',\n  'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n  'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n  'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n  'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex',\n  'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute',\n  'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla',\n  'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n  'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis',\n  'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis',\n  'ugrave', 'yacute', 'ydieresis', 'zcaron'\n];\n\nvar ExpertCharset = [\n  '.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n  'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n  'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n  'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n  'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n  'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n  'colon', 'semicolon', 'commasuperior', 'threequartersemdash',\n  'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n  'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n  'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n  'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n  'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n  'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle',\n  'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall',\n  'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall',\n  'Cedillasmall', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall',\n  'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall',\n  'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n  'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n  'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n  'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n  'Ydieresissmall'\n];\n\nvar ExpertSubsetCharset = [\n  '.notdef', 'space', 'dollaroldstyle', 'dollarsuperior',\n  'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'comma', 'hyphen', 'period', 'fraction',\n  'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle',\n  'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted',\n  'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter',\n  'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior'\n];\n\n\nvar DEFAULT_ICON_SIZE = 22; // px\nvar SUPPORTED_TYPES = ['Link', 'Text', 'Widget'];\n\nvar Annotation = (function AnnotationClosure() {\n  // 12.5.5: Algorithm: Appearance streams\n  function getTransformMatrix(rect, bbox, matrix) {\n    var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n    var minX = bounds[0];\n    var minY = bounds[1];\n    var maxX = bounds[2];\n    var maxY = bounds[3];\n\n    if (minX === maxX || minY === maxY) {\n      // From real-life file, bbox was [0, 0, 0, 0]. In this case,\n      // just apply the transform for rect\n      return [1, 0, 0, 1, rect[0], rect[1]];\n    }\n\n    var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n    var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n    return [\n      xRatio,\n      0,\n      0,\n      yRatio,\n      rect[0] - minX * xRatio,\n      rect[1] - minY * yRatio\n    ];\n  }\n\n  function getDefaultAppearance(dict) {\n    var appearanceState = dict.get('AP');\n    if (!isDict(appearanceState)) {\n      return;\n    }\n\n    var appearance;\n    var appearances = appearanceState.get('N');\n    if (isDict(appearances)) {\n      var as = dict.get('AS');\n      if (as && appearances.has(as.name)) {\n        appearance = appearances.get(as.name);\n      }\n    } else {\n      appearance = appearances;\n    }\n    return appearance;\n  }\n\n  function Annotation(params) {\n    var dict = params.dict;\n    var data = this.data = {};\n\n    data.subtype = dict.get('Subtype').name;\n    var rect = dict.get('Rect') || [0, 0, 0, 0];\n    data.rect = Util.normalizeRect(rect);\n    data.annotationFlags = dict.get('F');\n\n    var color = dict.get('C');\n    if (!color) {\n      // The PDF spec does not mention how a missing color array is interpreted.\n      // Adobe Reader seems to default to black in this case.\n      data.color = [0, 0, 0];\n    } else if (isArray(color)) {\n      switch (color.length) {\n        case 0:\n          // Empty array denotes transparent border.\n          data.color = null;\n          break;\n        case 1:\n          // TODO: implement DeviceGray\n          break;\n        case 3:\n          data.color = color;\n          break;\n        case 4:\n          // TODO: implement DeviceCMYK\n          break;\n      }\n    }\n\n    // Some types of annotations have border style dict which has more\n    // info than the border array\n    if (dict.has('BS')) {\n      var borderStyle = dict.get('BS');\n      data.borderWidth = borderStyle.has('W') ? borderStyle.get('W') : 1;\n    } else {\n      var borderArray = dict.get('Border') || [0, 0, 1];\n      data.borderWidth = borderArray[2] || 0;\n\n      // TODO: implement proper support for annotations with line dash patterns.\n      var dashArray = borderArray[3];\n      if (data.borderWidth > 0 && dashArray) {\n        if (!isArray(dashArray)) {\n          // Ignore the border if dashArray is not actually an array,\n          // this is consistent with the behaviour in Adobe Reader.\n          data.borderWidth = 0;\n        } else {\n          var dashArrayLength = dashArray.length;\n          if (dashArrayLength > 0) {\n            // According to the PDF specification: the elements in a dashArray\n            // shall be numbers that are nonnegative and not all equal to zero.\n            var isInvalid = false;\n            var numPositive = 0;\n            for (var i = 0; i < dashArrayLength; i++) {\n              var validNumber = (+dashArray[i] >= 0);\n              if (!validNumber) {\n                isInvalid = true;\n                break;\n              } else if (dashArray[i] > 0) {\n                numPositive++;\n              }\n            }\n            if (isInvalid || numPositive === 0) {\n              data.borderWidth = 0;\n            }\n          }\n        }\n      }\n    }\n\n    this.appearance = getDefaultAppearance(dict);\n    data.hasAppearance = !!this.appearance;\n    data.id = params.ref.num;\n  }\n\n  Annotation.prototype = {\n\n    getData: function Annotation_getData() {\n      return this.data;\n    },\n\n    isInvisible: function Annotation_isInvisible() {\n      var data = this.data;\n      if (data && SUPPORTED_TYPES.indexOf(data.subtype) !== -1) {\n        return false;\n      } else {\n        return !!(data &&\n                  data.annotationFlags &&            // Default: not invisible\n                  data.annotationFlags & 0x1);       // Invisible\n      }\n    },\n\n    isViewable: function Annotation_isViewable() {\n      var data = this.data;\n      return !!(!this.isInvisible() &&\n                data &&\n                (!data.annotationFlags ||\n                 !(data.annotationFlags & 0x22)) &&  // Hidden or NoView\n                data.rect);                          // rectangle is necessary\n    },\n\n    isPrintable: function Annotation_isPrintable() {\n      var data = this.data;\n      return !!(!this.isInvisible() &&\n                data &&\n                data.annotationFlags &&              // Default: not printable\n                data.annotationFlags & 0x4 &&        // Print\n                !(data.annotationFlags & 0x2) &&     // Hidden\n                data.rect);                          // rectangle is necessary\n    },\n\n    loadResources: function Annotation_loadResources(keys) {\n      return new Promise(function (resolve, reject) {\n        this.appearance.dict.getAsync('Resources').then(function (resources) {\n          if (!resources) {\n            resolve();\n            return;\n          }\n          var objectLoader = new ObjectLoader(resources.map,\n                                              keys,\n                                              resources.xref);\n          objectLoader.load().then(function() {\n            resolve(resources);\n          }, reject);\n        }, reject);\n      }.bind(this));\n    },\n\n    getOperatorList: function Annotation_getOperatorList(evaluator) {\n\n      if (!this.appearance) {\n        return Promise.resolve(new OperatorList());\n      }\n\n      var data = this.data;\n\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources([\n        'ExtGState',\n        'ColorSpace',\n        'Pattern',\n        'Shading',\n        'XObject',\n        'Font'\n        // ProcSet\n        // Properties\n      ]);\n      var bbox = appearanceDict.get('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.get('Matrix') || [1, 0, 0, 1, 0 ,0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      var self = this;\n\n      return resourcesPromise.then(function(resources) {\n          var opList = new OperatorList();\n          opList.addOp(OPS.beginAnnotation, [data.rect, transform, matrix]);\n          return evaluator.getOperatorList(self.appearance, resources, opList).\n            then(function () {\n              opList.addOp(OPS.endAnnotation, []);\n              self.appearance.reset();\n              return opList;\n            });\n        });\n    }\n  };\n\n  Annotation.getConstructor =\n      function Annotation_getConstructor(subtype, fieldType) {\n\n    if (!subtype) {\n      return;\n    }\n\n    // TODO(mack): Implement FreeText annotations\n    if (subtype === 'Link') {\n      return LinkAnnotation;\n    } else if (subtype === 'Text') {\n      return TextAnnotation;\n    } else if (subtype === 'Widget') {\n      if (!fieldType) {\n        return;\n      }\n\n      if (fieldType === 'Tx') {\n        return TextWidgetAnnotation;\n      } else {\n        return WidgetAnnotation;\n      }\n    } else {\n      return Annotation;\n    }\n  };\n\n  Annotation.fromRef = function Annotation_fromRef(xref, ref) {\n\n    var dict = xref.fetchIfRef(ref);\n    if (!isDict(dict)) {\n      return;\n    }\n\n    var subtype = dict.get('Subtype');\n    subtype = isName(subtype) ? subtype.name : '';\n    if (!subtype) {\n      return;\n    }\n\n    var fieldType = Util.getInheritableProperty(dict, 'FT');\n    fieldType = isName(fieldType) ? fieldType.name : '';\n\n    var Constructor = Annotation.getConstructor(subtype, fieldType);\n    if (!Constructor) {\n      return;\n    }\n\n    var params = {\n      dict: dict,\n      ref: ref,\n    };\n\n    var annotation = new Constructor(params);\n\n    if (annotation.isViewable() || annotation.isPrintable()) {\n      return annotation;\n    } else {\n      if (SUPPORTED_TYPES.indexOf(subtype) === -1) {\n        warn('unimplemented annotation type: ' + subtype);\n      }\n    }\n  };\n\n  Annotation.appendToOperatorList = function Annotation_appendToOperatorList(\n      annotations, opList, pdfManager, partialEvaluator, intent) {\n\n    function reject(e) {\n      annotationsReadyCapability.reject(e);\n    }\n\n    var annotationsReadyCapability = createPromiseCapability();\n\n    var annotationPromises = [];\n    for (var i = 0, n = annotations.length; i < n; ++i) {\n      if (intent === 'display' && annotations[i].isViewable() ||\n          intent === 'print' && annotations[i].isPrintable()) {\n        annotationPromises.push(\n          annotations[i].getOperatorList(partialEvaluator));\n      }\n    }\n    Promise.all(annotationPromises).then(function(datas) {\n      opList.addOp(OPS.beginAnnotations, []);\n      for (var i = 0, n = datas.length; i < n; ++i) {\n        var annotOpList = datas[i];\n        opList.addOpList(annotOpList);\n      }\n      opList.addOp(OPS.endAnnotations, []);\n      annotationsReadyCapability.resolve();\n    }, reject);\n\n    return annotationsReadyCapability.promise;\n  };\n\n  return Annotation;\n})();\n\nvar WidgetAnnotation = (function WidgetAnnotationClosure() {\n\n  function WidgetAnnotation(params) {\n    Annotation.call(this, params);\n\n    var dict = params.dict;\n    var data = this.data;\n\n    data.fieldValue = stringToPDFString(\n      Util.getInheritableProperty(dict, 'V') || '');\n    data.alternativeText = stringToPDFString(dict.get('TU') || '');\n    data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = isName(fieldType) ? fieldType.name : '';\n    data.fieldFlags = Util.getInheritableProperty(dict, 'Ff') || 0;\n    this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n\n    // Building the full field name by collecting the field and\n    // its ancestors 'T' data and joining them using '.'.\n    var fieldName = [];\n    var namedItem = dict;\n    var ref = params.ref;\n    while (namedItem) {\n      var parent = namedItem.get('Parent');\n      var parentRef = namedItem.getRaw('Parent');\n      var name = namedItem.get('T');\n      if (name) {\n        fieldName.unshift(stringToPDFString(name));\n      } else if (parent && ref) {\n        // The field name is absent, that means more than one field\n        // with the same name may exist. Replacing the empty name\n        // with the '`' plus index in the parent's 'Kids' array.\n        // This is not in the PDF spec but necessary to id the\n        // the input controls.\n        var kids = parent.get('Kids');\n        var j, jj;\n        for (j = 0, jj = kids.length; j < jj; j++) {\n          var kidRef = kids[j];\n          if (kidRef.num === ref.num && kidRef.gen === ref.gen) {\n            break;\n          }\n        }\n        fieldName.unshift('`' + j);\n      }\n      namedItem = parent;\n      ref = parentRef;\n    }\n    data.fullName = fieldName.join('.');\n  }\n\n  var parent = Annotation.prototype;\n  Util.inherit(WidgetAnnotation, Annotation, {\n    isViewable: function WidgetAnnotation_isViewable() {\n      if (this.data.fieldType === 'Sig') {\n        warn('unimplemented annotation type: Widget signature');\n        return false;\n      }\n\n      return parent.isViewable.call(this);\n    }\n  });\n\n  return WidgetAnnotation;\n})();\n\nvar TextWidgetAnnotation = (function TextWidgetAnnotationClosure() {\n  function TextWidgetAnnotation(params) {\n    WidgetAnnotation.call(this, params);\n\n    this.data.textAlignment = Util.getInheritableProperty(params.dict, 'Q');\n    this.data.annotationType = AnnotationType.WIDGET;\n    this.data.hasHtml = !this.data.hasAppearance && !!this.data.fieldValue;\n  }\n\n  Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n    getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator) {\n      if (this.appearance) {\n        return Annotation.prototype.getOperatorList.call(this, evaluator);\n      }\n\n      var opList = new OperatorList();\n      var data = this.data;\n\n      // Even if there is an appearance stream, ignore it. This is the\n      // behaviour used by Adobe Reader.\n      if (!data.defaultAppearance) {\n        return Promise.resolve(opList);\n      }\n\n      var stream = new Stream(stringToBytes(data.defaultAppearance));\n      return evaluator.getOperatorList(stream, this.fieldResources, opList).\n        then(function () {\n          return opList;\n        });\n    }\n  });\n\n  return TextWidgetAnnotation;\n})();\n\nvar InteractiveAnnotation = (function InteractiveAnnotationClosure() {\n  function InteractiveAnnotation(params) {\n    Annotation.call(this, params);\n\n    this.data.hasHtml = true;\n  }\n\n  Util.inherit(InteractiveAnnotation, Annotation, { });\n\n  return InteractiveAnnotation;\n})();\n\nvar TextAnnotation = (function TextAnnotationClosure() {\n  function TextAnnotation(params) {\n    InteractiveAnnotation.call(this, params);\n\n    var dict = params.dict;\n    var data = this.data;\n\n    var content = dict.get('Contents');\n    var title = dict.get('T');\n    data.annotationType = AnnotationType.TEXT;\n    data.content = stringToPDFString(content || '');\n    data.title = stringToPDFString(title || '');\n\n    if (data.hasAppearance) {\n      data.name = 'NoIcon';\n    } else {\n      data.rect[1] = data.rect[3] - DEFAULT_ICON_SIZE;\n      data.rect[2] = data.rect[0] + DEFAULT_ICON_SIZE;\n      data.name = dict.has('Name') ? dict.get('Name').name : 'Note';\n    }\n\n    if (dict.has('C')) {\n      data.hasBgColor = true;\n    }\n  }\n\n  Util.inherit(TextAnnotation, InteractiveAnnotation, { });\n\n  return TextAnnotation;\n})();\n\nvar LinkAnnotation = (function LinkAnnotationClosure() {\n  function LinkAnnotation(params) {\n    InteractiveAnnotation.call(this, params);\n\n    var dict = params.dict;\n    var data = this.data;\n    data.annotationType = AnnotationType.LINK;\n\n    var action = dict.get('A');\n    if (action && isDict(action)) {\n      var linkType = action.get('S').name;\n      if (linkType === 'URI') {\n        var url = action.get('URI');\n        if (isName(url)) {\n          // Some bad PDFs do not put parentheses around relative URLs.\n          url = '/' + url.name;\n        } else if (url) {\n          url = addDefaultProtocolToUrl(url);\n        }\n        // TODO: pdf spec mentions urls can be relative to a Base\n        // entry in the dictionary.\n        if (!isValidUrl(url, false)) {\n          url = '';\n        }\n        data.url = url;\n      } else if (linkType === 'GoTo') {\n        data.dest = action.get('D');\n      } else if (linkType === 'GoToR') {\n        var urlDict = action.get('F');\n        if (isDict(urlDict)) {\n          // We assume that the 'url' is a Filspec dictionary\n          // and fetch the url without checking any further\n          url = urlDict.get('F') || '';\n        }\n\n        // TODO: pdf reference says that GoToR\n        // can also have 'NewWindow' attribute\n        if (!isValidUrl(url, false)) {\n          url = '';\n        }\n        data.url = url;\n        data.dest = action.get('D');\n      } else if (linkType === 'Named') {\n        data.action = action.get('N').name;\n      } else {\n        warn('unrecognized link type: ' + linkType);\n      }\n    } else if (dict.has('Dest')) {\n      // simple destination link\n      var dest = dict.get('Dest');\n      data.dest = isName(dest) ? dest.name : dest;\n    }\n  }\n\n  // Lets URLs beginning with 'www.' default to using the 'http://' protocol.\n  function addDefaultProtocolToUrl(url) {\n    if (url && url.indexOf('www.') === 0) {\n      return ('http://' + url);\n    }\n    return url;\n  }\n\n  Util.inherit(LinkAnnotation, InteractiveAnnotation, { });\n\n  return LinkAnnotation;\n})();\n\n\nvar PDFFunction = (function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n\n  return {\n    getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps,\n                                                       str) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      // 32 is a valid bps so shifting won't work\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\n      var strBytes = str.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n\n    getIR: function PDFFunction_getIR(xref, fn) {\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n\n      var types = [this.constructSampled,\n                   null,\n                   this.constructInterpolated,\n                   this.constructStiched,\n                   this.constructPostScript];\n\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        error('Unknown type of function');\n      }\n\n      return typeFn.call(this, fn, dict, xref);\n    },\n\n    fromIR: function PDFFunction_fromIR(IR) {\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR(IR);\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR(IR);\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR(IR);\n        //case CONSTRUCT_POSTSCRIPT:\n        default:\n          return this.constructPostScriptFromIR(IR);\n      }\n    },\n\n    parse: function PDFFunction_parse(xref, fn) {\n      var IR = this.getIR(xref, fn);\n      return this.fromIR(IR);\n    },\n\n    parseArray: function PDFFunction_parseArray(xref, fnObj) {\n      if (!isArray(fnObj)) {\n        // not an array -- parsing as regular function\n        return this.parse(xref, fnObj);\n      }\n\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        var obj = xref.fetchIfRef(fnObj[j]);\n        fnArray.push(PDFFunction.parse(xref, obj));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n\n    constructSampled: function PDFFunction_constructSampled(str, dict) {\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.get('Domain');\n      var range = dict.get('Range');\n\n      if (!domain || !range) {\n        error('No domain or range');\n      }\n\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        // No description how cubic spline interpolation works in PDF32000:2008\n        // As in poppler, ignoring order, linear interpolation may work as good\n        info('No support for cubic spline interpolation: ' + order);\n      }\n\n      var encode = dict.get('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n\n      var decode = dict.get('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n\n      var samples = this.getSampleArray(size, outputSize, bps, str);\n\n      return [\n        CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size,\n        outputSize, Math.pow(2, bps) - 1, range\n      ];\n    },\n\n    constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n      // See chapter 3, page 109 of the PDF reference\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + ((x - xmin) * ((ymax - ymin) / (xmax - xmin)));\n      }\n\n      return function constructSampledFromIRResult(src, srcOffset,\n                                                   dest, destOffset) {\n        // See chapter 3, page 110 of the PDF reference.\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        //var mask = IR[8];\n        var range = IR[9];\n\n        // Building the cube vertices: its part and sample index\n        // http://rjwagner49.com/Mathematics/Interpolation.pdf\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n\n        var k = n, pos = 1;\n        // Map x_i to y_j for 0 <= i < m using the sampled function.\n        for (i = 0; i < m; ++i) {\n          // x_i' = min(max(x_i, Domain_2i), Domain_2i+1)\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset +i], domain_2i),\n                            domain_2i_1);\n\n          // e_i = Interpolate(x_i', Domain_2i, Domain_2i+1,\n          //                   Encode_2i, Encode_2i+1)\n          var e = interpolate(xi, domain_2i, domain_2i_1,\n                              encode[i][0], encode[i][1]);\n\n          // e_i' = min(max(e_i, 0), Size_i - 1)\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n\n          // Adjusting the cube: N and vertex sample index\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1; // e1 = e0 + 1;\n          var n0 = e0 + 1 - e; // (e1 - e) / (e1 - e0);\n          var n1 = e - e0; // (e - e0) / (e1 - e0);\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k; // e1 * k\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n\n          k *= size_i;\n          pos <<= 1;\n        }\n\n        for (j = 0; j < n; ++j) {\n          // Sum all cube vertices' samples portions\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n\n          // r_j' = Interpolate(r_j, 0, 2^BitsPerSample - 1,\n          //                    Decode_2j, Decode_2j+1)\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\n          // y_j = min(max(r_j, range_2j), range_2j+1)\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]),\n                                          range[j][1]);\n        }\n      };\n    },\n\n    constructInterpolated: function PDFFunction_constructInterpolated(str,\n                                                                      dict) {\n      var c0 = dict.get('C0') || [0];\n      var c1 = dict.get('C1') || [1];\n      var n = dict.get('N');\n\n      if (!isArray(c0) || !isArray(c1)) {\n        error('Illegal dictionary for interpolated function');\n      }\n\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n\n    constructInterpolatedFromIR:\n      function PDFFunction_constructInterpolatedFromIR(IR) {\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n\n      var length = diff.length;\n\n      return function constructInterpolatedFromIRResult(src, srcOffset,\n                                                        dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + (x * diff[j]);\n        }\n      };\n    },\n\n    constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n      var domain = dict.get('Domain');\n\n      if (!domain) {\n        error('No domain');\n      }\n\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        error('Bad domain for stiched function');\n      }\n\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n      }\n\n      var bounds = dict.get('Bounds');\n      var encode = dict.get('Encode');\n\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n\n    constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(PDFFunction.fromIR(fnsIR[i]));\n      }\n\n      return function constructStichedFromIRResult(src, srcOffset,\n                                                   dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n\n        // clip to domain\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        // calulate which bound the value is in\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n\n        // encode value into domain of function\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n\n        tmpBuf[0] = rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\n        // call the appropriate function\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n\n    constructPostScript: function PDFFunction_constructPostScript(fn, dict,\n                                                                  xref) {\n      var domain = dict.get('Domain');\n      var range = dict.get('Range');\n\n      if (!domain) {\n        error('No domain.');\n      }\n\n      if (!range) {\n        error('No range.');\n      }\n\n      var lexer = new PostScriptLexer(fn);\n      var parser = new PostScriptParser(lexer);\n      var code = parser.parse();\n\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n\n    constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(\n                                          IR) {\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n\n      var compiled = (new PostScriptCompiler()).compile(code, domain, range);\n      if (compiled) {\n        // Compiled function consists of simple expressions such as addition,\n        // subtraction, Math.max, and also contains 'var' and 'return'\n        // statements. See the generation in the PostScriptCompiler below.\n        /*jshint -W054 */\n        return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n      }\n\n      info('Unable to compile PS function');\n\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      // Cache the values for a big speed up, the cache size is limited though\n      // since the number of possible values can be huge from a PS function.\n      var cache = {};\n      // The MAX_CACHE_SIZE is set to ~4x the maximum number of distinct values\n      // seen in our tests.\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n\n      return function constructPostScriptFromIRResult(src, srcOffset,\n                                                      dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 +1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n})();\n\nfunction isPDFFunction(v) {\n  var fnDict;\n  if (typeof v !== 'object') {\n    return false;\n  } else if (isDict(v)) {\n    fnDict = v;\n  } else if (isStream(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\n\nvar PostScriptStack = (function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] :\n                 Array.prototype.slice.call(initialStack, 0);\n  }\n\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    // rotate the last n stack elements p times\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i]; stack[i] = stack[j]; stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n})();\nvar PostScriptEvaluator = (function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          // Operator is really an operand and should be pushed to the stack.\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          // non standard ps operators\n          case 'jz': // jump if false\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j': // jump\n            a = stack.pop();\n            counter = a;\n            break;\n\n          // all ps operators in alphabetical order (excluding if/ifelse)\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            // noop\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push((a / b) | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if (isBool(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if (isBool(a) && isBool(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            error('Unknown operator ' + operator);\n            break;\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n})();\n\n// Most of the PDFs functions consist of simple operations such as:\n//   roll, exch, sub, cvr, pop, index, dup, mul, if, gt, add.\n//\n// We can compile most of such programs, and at the same moment, we can\n// optimize some expressions using basic math properties. Keeping track of\n// min/max values will allow us to avoid extra Math.min/Math.max calls.\nvar PostScriptCompiler = (function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function (arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(',\n                      arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function (variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function (literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function (operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function (definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function (max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function () {\n      return this.parts.join('');\n    }\n  };\n\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      // optimization: second operand is 0\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      // optimization: first operand is 0\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      // optimization: operands operand are literals\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2,\n                                  num1.min + num2.min, num1.max + num2.max);\n  }\n\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      // optimization: second operands is a literal...\n      if (num2.number === 0) {\n        return new AstLiteral(0); // and it's 0\n      } else if (num2.number === 1) {\n        return num1; // and it's 1\n      } else if (num1.type === 'literal') {\n        // ... and first operands is a literal too\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      // optimization: first operands is a literal...\n      if (num1.number === 0) {\n        return new AstLiteral(0); // and it's 0\n      } else if (num1.number === 1) {\n        return num2; // and it's 1\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max,\n                       num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max,\n                       num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      // optimization: second operands is a literal...\n      if (num2.number === 0) {\n        return num1; // ... and it's 0\n      } else if (num1.type === 'literal') {\n        // ... and first operands is a literal too\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' &&\n      num1.type === 'literal' && num1.number === 1 &&\n      num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      // optimization for case: 1 - (1 - x)\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2,\n                                  num1.min - num2.max, num1.max - num2.min);\n  }\n\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      // optimization: num1 min value is not less than required max\n      return new AstLiteral(max); // just returning max\n    } else if (num1.max <= max) {\n      // optimization: num1 max value is not greater than required max\n      return num1; // just returning an argument\n    }\n    return new AstMin(num1, max);\n  }\n\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j, min, max;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop(); ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || (n|0) !== n || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' &&\n                code[i + 3] === i + 7 && code[i + 4] === 'jz' &&\n                code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              // special case of the commands sequence for the min operation\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              // we don't have to save into intermediate variable a literal or\n              // variable.\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              // both roll operands must be numbers\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || (n|0) !== n || (j|0) !== j || stack.length < n) {\n              // ... and integers\n              return null;\n            }\n            j = ((j % n) + n) % n;\n            if (j === 0) {\n              break; // just skipping -- there are nothing to rotate\n            }\n            Array.prototype.push.apply(stack,\n                                       stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null; // unsupported operator\n        }\n      }\n\n      if (stack.length !== outputSize) {\n        return null;\n      }\n\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2], max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n\n  return PostScriptCompiler;\n})();\n\n\nvar ColorSpace = (function ColorSpaceClosure() {\n  // Constructor should define this.numComps, this.defaultColor, this.name\n  function ColorSpace() {\n    error('should not call ColorSpace constructor');\n  }\n\n  ColorSpace.prototype = {\n    /**\n     * Converts the color value to the RGB color. The color components are\n     * located in the src array starting from the srcOffset. Returns the array\n     * of the rgb components, each value ranging from [0,255].\n     */\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    /**\n     * Converts the color value to the RGB color, similar to the getRgb method.\n     * The result placed into the dest array starting from the destOffset.\n     */\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset,\n                                               dest, destOffset) {\n      error('Should not call ColorSpace.getRgbItem');\n    },\n    /**\n     * Converts the specified number of the color values to the RGB colors.\n     * The colors are located in the src array starting from the srcOffset.\n     * The result is placed into the dest array starting from the destOffset.\n     * The src array items shall be in [0,2^bits) range, the dest array items\n     * will be in [0,255] range. alpha01 indicates how many alpha components\n     * there are in the dest array; it will be either 0 (RGB array) or 1 (RGBA\n     * array).\n     */\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count,\n                                                   dest, destOffset, bits,\n                                                   alpha01) {\n      error('Should not call ColorSpace.getRgbBuffer');\n    },\n    /**\n     * Determines the number of bytes required to store the result of the\n     * conversion done by the getRgbBuffer method. As in getRgbBuffer,\n     * |alpha01| is either 0 (RGB output) or 1 (RGBA output).\n     */\n    getOutputLength: function ColorSpace_getOutputLength(inputLength,\n                                                         alpha01) {\n      error('Should not call ColorSpace.getOutputLength');\n    },\n    /**\n     * Returns true if source data will be equal the result/output data.\n     */\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    /**\n     * Fills in the RGB colors in the destination buffer.  alpha01 indicates\n     * how many alpha components there are in the dest array; it will be either\n     * 0 (RGB array) or 1 (RGBA array).\n     */\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth,\n                                         originalHeight, width, height,\n                                         actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors &&\n          this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        // Optimization: create a color map when there is just one component and\n        // we are converting more colors than the size of the color map. We\n        // don't build the map if the colorspace is gray or rgb since those\n        // methods are faster than building a map. This mainly offers big speed\n        // ups for indexed and alternate colorspaces.\n        //\n        // TODO it may be worth while to cache the color map. While running\n        // testing I never hit a cache so I will leave that out for now (perhaps\n        // we are reparsing colorspaces too much?).\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) :\n                                   new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc,\n                          /* alpha01 = */ 0);\n\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          // Fill in the RGB values directly into |dest|.\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          // Fill in the RGB values directly into |dest|.\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc,\n                            alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc,\n                            /* alpha01 = */ 0);\n        }\n      }\n\n      if (rgbBuf) {\n        if (needsResizing) {\n          PDFImage.resize(rgbBuf, bpc, 3, originalWidth, originalHeight, width,\n                          height, dest, alpha01);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    /**\n     * True if the colorspace has components in the default range of [0, 1].\n     * This should be true for all colorspaces except for lab color spaces\n     * which are [0,100], [-128, 127], [-128, 127].\n     */\n    usesZeroToOneRange: true\n  };\n\n  ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n    var IR = ColorSpace.parseToIR(cs, xref, res);\n    if (IR instanceof AlternateCS) {\n      return IR;\n    }\n    return ColorSpace.fromIR(IR);\n  };\n\n  ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n    var name = isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1].WhitePoint;\n        blackPoint = IR[1].BlackPoint;\n        gamma = IR[1].Gamma;\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1].WhitePoint;\n        blackPoint = IR[1].BlackPoint;\n        gamma = IR[1].Gamma;\n        var matrix = IR[1].Matrix;\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt),\n                                PDFFunction.fromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1].WhitePoint;\n        blackPoint = IR[1].BlackPoint;\n        var range = IR[1].Range;\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        error('Unknown name ' + name);\n    }\n    return null;\n  };\n\n  ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n    if (isName(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if (isDict(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n\n    cs = xref.fetchIfRef(cs);\n    var mode;\n\n    if (isName(cs)) {\n      mode = cs.name;\n      this.mode = mode;\n\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          error('unrecognized colorspace ' + mode);\n      }\n    } else if (isArray(cs)) {\n      mode = cs[0].name;\n      this.mode = mode;\n      var numComps, params;\n\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]).getAll();\n          return ['CalGrayCS', params];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]).getAll();\n          return ['CalRGBCS', params];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1];\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n          var hiVal = cs[2] + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if (isStream(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = cs[1];\n          numComps = 1;\n          if (isName(name)) {\n            numComps = 1;\n          } else if (isArray(name)) {\n            numComps = name.length;\n          }\n          var alt = ColorSpace.parseToIR(cs[2], xref, res);\n          var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = cs[1].getAll();\n          return ['LabCS', params];\n        default:\n          error('unimplemented color space object \"' + mode + '\"');\n      }\n    } else {\n      error('unrecognized color space object: \"' + cs + '\"');\n    }\n    return null;\n  };\n  /**\n   * Checks if a decode map matches the default decode map for a color space.\n   * This handles the general decode maps where there are two values per\n   * component. e.g. [0, 1, 0, 1, 0, 1] for a RGB color.\n   * This does not handle Lab, Indexed, or Pattern decode maps since they are\n   * slightly different.\n   * @param {Array} decode Decode map (usually from an image).\n   * @param {Number} n Number of components the color space has.\n   */\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!decode) {\n      return true;\n    }\n\n    if (n * 2 !== decode.length) {\n      warn('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  ColorSpace.singletons = {\n    get gray() {\n      return shadow(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return shadow(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return shadow(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n\n  return ColorSpace;\n})();\n\n/**\n * Alternate color space handles both Separation and DeviceN color spaces.  A\n * Separation color space is actually just a DeviceN with one color component.\n * Both color spaces use a tinting function to convert colors to a base color\n * space.\n */\nvar AlternateCS = (function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset,\n                                                dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count,\n                                                    dest, destOffset, bits,\n                                                    alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) &&\n                          alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      if (usesZeroToOneRange) {\n        for (i = 0; i < count; i++) {\n          for (j = 0; j < numComps; j++) {\n            scaled[j] = src[srcOffset++] * scale;\n          }\n          tintFn(scaled, 0, tinted, 0);\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        }\n      } else {\n        for (i = 0; i < count; i++) {\n          for (j = 0; j < numComps; j++) {\n            scaled[j] = src[srcOffset++] * scale;\n          }\n          tintFn(scaled, 0, tinted, 0);\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength,\n                                                          alpha01) {\n      return this.base.getOutputLength(inputLength *\n                                       this.base.numComps / this.numComps,\n                                       alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n\n  return AlternateCS;\n})();\n\nvar PatternCS = (function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n\n  return PatternCS;\n})();\n\nvar IndexedCS = (function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array([0]);\n    this.base = base;\n    this.highVal = highVal;\n\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    var lookupArray;\n\n    if (isStream(lookup)) {\n      lookupArray = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      lookupArray.set(bytes);\n    } else if (isString(lookup)) {\n      lookupArray = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        lookupArray[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      lookupArray = lookup;\n    } else {\n      error('Unrecognized lookup table: ' + lookup);\n    }\n    this.lookup = lookupArray;\n  }\n\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset,\n                                              dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbItem(this.lookup, start, dest, destOffset);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count,\n                                                  dest, destOffset, bits,\n                                                  alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps,\n                                       alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      // indexed color maps shouldn't be changed\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n})();\n\nvar DeviceGrayCS = (function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array([0]);\n  }\n\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset,\n                                                 dest, destOffset) {\n      var c = (src[srcOffset] * 255) | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count,\n                                                     dest, destOffset, bits,\n                                                     alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = (scale * src[j++]) | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength,\n                                                           alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n})();\n\nvar DeviceRgbCS = (function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array([0, 0, 0]);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset,\n                                                dest, destOffset) {\n      var r = (src[srcOffset] * 255) | 0;\n      var g = (src[srcOffset + 1] * 255) | 0;\n      var b = (src[srcOffset + 2] * 255) | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count,\n                                                    dest, destOffset, bits,\n                                                    alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = (scale * src[j++]) | 0;\n        dest[q++] = (scale * src[j++]) | 0;\n        dest[q++] = (scale * src[j++]) | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength,\n                                                          alpha01) {\n      return (inputLength * (3 + alpha01) / 3) | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n})();\n\nvar DeviceCmykCS = (function DeviceCmykCSClosure() {\n  // The coefficients below was found using numerical analysis: the method of\n  // steepest descent for the sum((f_i - color_value_i)^2) for r/g/b colors,\n  // where color_value is the tabular value from the table of sampled RGB colors\n  // from CMYK US Web Coated (SWOP) colorspace, and f_i is the corresponding\n  // CMYK color conversion using the estimation below:\n  //   f(A, B,.. N) = Acc+Bcm+Ccy+Dck+c+Fmm+Gmy+Hmk+Im+Jyy+Kyk+Ly+Mkk+Nk+255\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n\n    var r =\n      (c * (-4.387332384609988 * c + 54.48615194189176 * m +\n            18.82290502165302 * y + 212.25662451639585 * k +\n            -285.2331026137004) +\n       m * (1.7149763477362134 * m - 5.6096736904047315 * y +\n            -17.873870861415444 * k - 5.497006427196366) +\n       y * (-2.5217340131683033 * y - 21.248923337353073 * k +\n            17.5119270841813) +\n       k * (-21.86122147463605 * k - 189.48180835922747) + 255) | 0;\n    var g =\n      (c * (8.841041422036149 * c + 60.118027045597366 * m +\n            6.871425592049007 * y + 31.159100130055922 * k +\n            -79.2970844816548) +\n       m * (-15.310361306967817 * m + 17.575251261109482 * y +\n            131.35250912493976 * k - 190.9453302588951) +\n       y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) +\n       k * (-20.737325471181034 * k - 187.80453709719578) + 255) | 0;\n    var b =\n      (c * (0.8842522430003296 * c + 8.078677503112928 * m +\n            30.89978309703729 * y - 0.23883238689178934 * k +\n            -14.183576799673286) +\n       m * (10.49593273432072 * m + 63.02378494754052 * y +\n            50.606957656360734 * k - 112.23884253719248) +\n       y * (0.03296041114873217 * y + 115.60384449646641 * k +\n            -193.58209356861505) +\n       k * (-22.33816807309886 * k - 180.12613974708367) + 255) | 0;\n\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array([0, 0, 0, 1]);\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset,\n                                                 dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count,\n                                                     dest, destOffset, bits,\n                                                     alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength,\n                                                           alpha01) {\n      return (inputLength / 4 * (3 + alpha01)) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n\n  return DeviceCmykCS;\n})();\n\n//\n// CalGrayCS: Based on \"PDF Reference, Sixth Ed\", p.245\n//\nvar CalGrayCS = (function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array([0]);\n\n    if (!whitePoint) {\n      error('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n\n    // Translate arguments to spec variables.\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n\n    this.G = gamma;\n\n    // Validate variables as per spec.\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      error('Invalid WhitePoint components for ' + this.name +\n            ', no fallback available');\n    }\n\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB +\n           ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n\n    if (this.G < 1) {\n      info('Invalid Gamma: ' + this.G + ' for ' + this.name +\n           ', falling back to default');\n      this.G = 1;\n    }\n  }\n\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    // A represents a gray component of a calibrated gray space.\n    // A <---> AG in the spec\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n\n    // Computes L as per spec. ( = cs.YW * AG )\n    // Except if other than default BlackPoint values are used.\n    var L = cs.YW * AG;\n    // http://www.poynton.com/notes/colour_and_gamma/ColorFAQ.html, Ch 4.\n    // Convert values to rgb range [0, 255].\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset,\n                                              dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count,\n                                                  dest, destOffset, bits,\n                                                  alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n})();\n\n//\n// CalRGBCS: Based on \"PDF Reference, Sixth Ed\", p.247\n//\nvar CalRGBCS = (function CalRGBCSClosure() {\n\n  // See http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html for these\n  // matrices.\n  var BRADFORD_SCALE_MATRIX = new Float32Array([\n    0.8951, 0.2664, -0.1614,\n    -0.7502, 1.7135, 0.0367,\n    0.0389, -0.0685, 1.0296]);\n\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n    0.9869929, -0.1470543, 0.1599627,\n    0.4323053, 0.5183603, 0.0492912,\n    -0.0085287, 0.0400428, 0.9684867]);\n\n  // See http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html.\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n    3.2404542, -1.5371385, -0.4985314,\n    -0.9692660, 1.8760108, 0.0415560,\n    0.0556434, -0.2040259, 1.0572252]);\n\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n\n  var DECODE_L_CONSTANT = Math.pow(((8 + 16) / 116), 3) / 8.0;\n\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(3);\n\n    if (!whitePoint) {\n      error('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n    // Translate arguments to spec variables.\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n\n    // Validate variables as per spec.\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      error('Invalid WhitePoint components for ' + this.name +\n            ', no fallback available');\n    }\n\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB +\n           ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB +\n           '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 ||\n        this.MXB < 0 || this.MYB < 0 || this.MZB < 0 ||\n        this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      info('Invalid Matrix for ' + this.name + ' [' +\n           this.MXA + ', ' + this.MYA + ', ' + this.MZA +\n           this.MXB + ', ' + this.MYB + ', ' + this.MZB +\n           this.MXC + ', ' + this.MYC + ', ' + this.MZC +\n           '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n\n  function matrixProduct(a, b, result) {\n      result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n      result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n      result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n      result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n      result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n      result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n\n  function sRGBTransferFunction(color) {\n    // See http://en.wikipedia.org/wiki/SRGB.\n    if (color <= 0.0031308){\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n\n    if (L > 8.0) {\n      return Math.pow(((L + 16) / 116), 3);\n    }\n\n    return L * DECODE_L_CONSTANT;\n  }\n\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\n    // In case the blackPoint is already the default blackPoint then there is\n    // no need to do compensation.\n    if (sourceBlackPoint[0] === 0 &&\n        sourceBlackPoint[1] === 0 &&\n        sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n\n    // For the blackPoint calculation details, please see\n    // http://www.adobe.com/content/dam/Adobe/en/devnet/photoshop/sdk/\n    // AdobeBPC.pdf.\n    // The destination blackPoint is the default blackPoint [0, 0, 0].\n    var zeroDecodeL = decodeL(0);\n\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\n    // In case the whitePoint is already flat then there is no need to do\n    // normalization.\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    // A, B and C represent a red, green and blue components of a calibrated\n    // rgb space.\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\n    // A <---> AGR in the spec\n    // B <---> BGG in the spec\n    // C <---> CGB in the spec\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n\n    // Computes intermediate variables L, M, N as per spec.\n    // To decode X, Y, Z values map L, M, N directly to them.\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\n    // The following calculations are based on this document:\n    // http://www.adobe.com/content/dam/Adobe/en/devnet/photoshop/sdk/\n    // AdobeBPC.pdf.\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n\n    // Convert the values to rgb range [0, 255].\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n\n  CalRGBCS.prototype = {\n    getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset,\n                                             dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count,\n                                                 dest, destOffset, bits,\n                                                 alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return (inputLength * (3 + alpha01) / 3) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n})();\n\n//\n// LabCS: Based on \"PDF Reference, Sixth Ed\", p.250\n//\nvar LabCS = (function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array([0, 0, 0]);\n\n    if (!whitePoint) {\n      error('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n\n    // Translate args to spec variables\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n\n    // These are here just for completeness - the spec doesn't offer any\n    // formulas that use BlackPoint in Lab\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n\n    // Validate vars as per spec\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      error('Invalid WhitePoint components, no fallback available');\n    }\n\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      info('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n\n  // Function g(x) from spec\n  function fn_g(x) {\n    if (x >= 6 / 29) {\n      return x * x * x;\n    } else {\n      return (108 / 841) * (x - 4 / 29);\n    }\n  }\n\n  function decode(value, high1, low2, high2) {\n    return low2 + (value) * (high2 - low2) / (high1);\n  }\n\n  // If decoding is needed maxVal should be 2^bits per component - 1.\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    // XXX: Lab input is in the range of [0, 100], [amin, amax], [bmin, bmax]\n    // not the usual [0, 1]. If a command like setFillColor is used the src\n    // values will already be within the correct range. However, if we are\n    // converting an image we have to map the values to the correct range given\n    // above.\n    // Ls,as,bs <---> L*,a*,b* in the spec\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n\n    // Adjust limits of 'as' and 'bs'\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\n    // Computes intermediate variables X,Y,Z as per spec\n    var M = (Ls + 16) / 116;\n    var L = M + (as / 500);\n    var N = M - (bs / 200);\n\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n\n    var r, g, b;\n    // Using different conversions for D50 and D65 white points,\n    // per http://www.color.org/srgb.pdf\n    if (cs.ZW < 1) {\n      // Assuming D50 (X=0.9642, Y=1.00, Z=0.8249)\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      // Assuming D65 (X=0.9505, Y=1.00, Z=1.0888)\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    // clamp color values to [0,1] range then convert to [0,255] range.\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count,\n                                              dest, destOffset, bits,\n                                              alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return (inputLength * (3 + alpha01) / 3) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      // XXX: Decoding is handled with the lab conversion because of the strange\n      // ranges that are used.\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n})();\n\n\nvar ARCFourCipher = (function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i, j = 0, tmp, keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = (j + tmp + key[i % keyLength]) & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i, n = data.length, tmp, tmp2;\n      var a = this.a, b = this.b, s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = (a + 1) & 0xFF;\n        tmp = s[a];\n        b = (b + tmp) & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[(tmp + tmp2) & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\n  return ARCFourCipher;\n})();\n\nvar calculateMD5 = (function calculateMD5Closure() {\n  var r = new Uint8Array([\n    7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n    5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n    4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n    6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n\n  var k = new Int32Array([\n    -680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426,\n    -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162,\n    1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n    643717713, -373897302, -701558691, 38016083, -660478335, -405537848,\n    568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784,\n    1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556,\n    -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222,\n    -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n    -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606,\n    -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649,\n    -145523070, -1120210379, 718787259, -343485551]);\n\n  function hash(data, offset, length) {\n    var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n    // pre-processing\n    var paddedLength = (length + 72) & ~63; // data + 9 extra bytes\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = (length << 3) & 0xFF;\n    padded[i++] = (length >> 5) & 0xFF;\n    padded[i++] = (length >> 13) & 0xFF;\n    padded[i++] = (length >> 21) & 0xFF;\n    padded[i++] = (length >>> 29) & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = (padded[i] | (padded[i + 1] << 8) |\n               (padded[i + 2] << 16) | (padded[i + 3] << 24));\n      }\n      var a = h0, b = h1, c = h2, d = h3, f, g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = (b & c) | ((~b) & d);\n          g = j;\n        } else if (j < 32) {\n          f = (d & b) | ((~d) & c);\n          g = (5 * j + 1) & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = (3 * j + 5) & 15;\n        } else {\n          f = c ^ (b | (~d));\n          g = (7 * j) & 15;\n        }\n        var tmp = d, rotateArg = (a + f + k[j] + w[g]) | 0, rotate = r[j];\n        d = c;\n        c = b;\n        b = (b + ((rotateArg << rotate) | (rotateArg >>> (32 - rotate)))) | 0;\n        a = tmp;\n      }\n      h0 = (h0 + a) | 0;\n      h1 = (h1 + b) | 0;\n      h2 = (h2 + c) | 0;\n      h3 = (h3 + d) | 0;\n    }\n    return new Uint8Array([\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >>> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n    ]);\n  }\n\n  return hash;\n})();\nvar Word64 = (function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n     this.high ^= word.high;\n     this.low ^= word.low;\n    },\n\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = (this.high >>> (places - 32)) | 0;\n        this.high = 0;\n      } else {\n        this.low = (this.low >>> places) | (this.high << (32 - places));\n        this.high = (this.high >>> places) | 0;\n      }\n    },\n\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << (places - 32);\n        this.low = 0;\n      } else {\n        this.high = (this.high << places) | (this.low >>> (32 - places));\n        this.low = this.low << places;\n      }\n    },\n\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = (low >>> places) | (high << (32 - places));\n      this.high = (high >>> places) | (low << (32 - places));\n    },\n\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = (this.high >>> 24) & 0xFF;\n      bytes[offset + 1] = (this.high >> 16) & 0xFF;\n      bytes[offset + 2] = (this.high >> 8) & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = (this.low >>> 24) & 0xFF;\n      bytes[offset + 5] = (this.low >> 16) & 0xFF;\n      bytes[offset + 6] = (this.low >> 8) & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n})();\n\nvar calculateSHA256 = (function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return (x >>> n) | (x << 32 - n);\n  }\n\n  function ch(x, y, z) {\n    return (x & y) ^ (~x & z);\n  }\n\n  function maj(x, y, z) {\n    return (x & y) ^ (x & z) ^ (y & z);\n  }\n\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n           0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n           0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n           0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n           0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n           0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n           0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n           0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n           0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n           0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n           0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n           0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n           0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  function hash(data, offset, length) {\n    // initial hash values\n    var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n    // pre-processing\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = (length >>> 29) & 0xFF;\n    padded[i++] = (length >> 21) & 0xFF;\n    padded[i++] = (length >> 13) & 0xFF;\n    padded[i++] = (length >> 5) & 0xFF;\n    padded[i++] = (length << 3) & 0xFF;\n    var w = new Uint32Array(64);\n    // for each 512 bit block\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = (padded[i] << 24 | (padded[i + 1] << 16) |\n               (padded[i + 2] << 8) | (padded[i + 3]));\n        i += 4;\n      }\n\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] +\n               littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0, b = h1, c = h2, d = h3, e = h4,\n          f = h5, g = h6, h = h7, t1, t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = (d + t1) | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = (t1 + t2) | 0;\n      }\n      h0 = (h0 + a) | 0;\n      h1 = (h1 + b) | 0;\n      h2 = (h2 + c) | 0;\n      h3 = (h3 + d) | 0;\n      h4 = (h4 + e) | 0;\n      h5 = (h5 + f) | 0;\n      h6 = (h6 + g) | 0;\n      h7 = (h7 + h) | 0;\n    }\n    return new Uint8Array([\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, (h1) & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, (h6) & 0xFF,\n      (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n    ]);\n  }\n\n  return hash;\n})();\n\nvar calculateSHA512 = (function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n\n  var k = [\n    new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd),\n    new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc),\n    new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019),\n    new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118),\n    new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe),\n    new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2),\n    new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1),\n    new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694),\n    new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3),\n    new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65),\n    new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483),\n    new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5),\n    new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210),\n    new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4),\n    new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725),\n    new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70),\n    new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926),\n    new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df),\n    new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8),\n    new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b),\n    new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001),\n    new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30),\n    new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910),\n    new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8),\n    new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53),\n    new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8),\n    new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb),\n    new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3),\n    new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60),\n    new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec),\n    new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9),\n    new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b),\n    new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207),\n    new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178),\n    new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6),\n    new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b),\n    new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493),\n    new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c),\n    new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a),\n    new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    // initial hash values\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    }\n    else {\n      // SHA384 is exactly the same\n      // except with different starting values and a trimmed result\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n\n    // pre-processing\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = (length >>> 29) & 0xFF;\n    padded[i++] = (length >> 21) & 0xFF;\n    padded[i++] = (length >> 13) & 0xFF;\n    padded[i++] = (length >> 5) & 0xFF;\n    padded[i++] = (length << 3) & 0xFF;\n\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n    var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n    var g = new Word64(0, 0), h = new Word64(0, 0);\n    var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n\n    // for each 1024 bit block\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = (padded[i] << 24) | (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) | (padded[i + 3]);\n        w[j].low = (padded[i + 4]) << 24 | (padded[i + 5]) << 16 |\n                   (padded[i + 6]) << 8 | (padded[i + 7]);\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n\n      a.assign(h0); b.assign(h1); c.assign(h2); d.assign(h3);\n      e.assign(h4); f.assign(h5); g.assign(h6); h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result,0);\n      h1.copyTo(result,8);\n      h2.copyTo(result,16);\n      h3.copyTo(result,24);\n      h4.copyTo(result,32);\n      h5.copyTo(result,40);\n      h6.copyTo(result,48);\n      h7.copyTo(result,56);\n    }\n    else {\n      result = new Uint8Array(48);\n      h0.copyTo(result,0);\n      h1.copyTo(result,8);\n      h2.copyTo(result,16);\n      h3.copyTo(result,24);\n      h4.copyTo(result,32);\n      h5.copyTo(result,40);\n    }\n    return result;\n  }\n\n  return hash;\n})();\nvar calculateSHA384 = (function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n\n  return hash;\n})();\nvar NullCipher = (function NullCipherClosure() {\n  function NullCipher() {\n  }\n\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n\n  return NullCipher;\n})();\n\nvar AES128Cipher = (function AES128CipherClosure() {\n  var rcon = new Uint8Array([\n    0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n    0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n    0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n    0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n    0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n    0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n    0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n    0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n    0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n    0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n    0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n    0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n    0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n    0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n    0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n    0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n    0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n    0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n    0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n    0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n    0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n    0x74, 0xe8, 0xcb, 0x8d]);\n\n  var s = new Uint8Array([\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n    0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n    0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n    0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n    0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n    0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n    0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n    0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n    0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n    0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n    0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n    0xb0, 0x54, 0xbb, 0x16]);\n\n  var inv_s = new Uint8Array([\n    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n    0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n    0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n    0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n    0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n    0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n    0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n    0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n    0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n    0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n    0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n    0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n    0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n    0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n    0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n    0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n    0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = (i << 1) ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([\n    0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n    0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n    0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n    0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n    0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n    0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n    0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n    0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n    0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n    0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n    0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n    0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n    0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n    0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n    0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n    0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n    0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n    0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n    0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n    0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n    0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n    0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n    0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n    0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n    0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n    0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n    0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n    0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n    0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n    0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n    0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n    0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n    0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n    0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n    0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n    0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n    0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n    0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n    0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n    0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n    0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n    0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n    0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\n  function expandKey128(cipherKey) {\n    var b = 176, result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      // RotWord\n      var t1 = result[j - 3], t2 = result[j - 2],\n          t3 = result[j - 1], t4 = result[j - 4];\n      // SubWord\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      // Rcon\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = (t1 ^= result[j - 16]);\n        j++;\n        result[j] = (t2 ^= result[j - 16]);\n        j++;\n        result[j] = (t3 ^= result[j - 16]);\n        j++;\n        result[j] = (t4 ^= result[j - 16]);\n        j++;\n      }\n    }\n    return result;\n  }\n\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    // AddRoundKey\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      // InvShiftRows\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      // InvSubBytes\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      // AddRoundKey\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      // InvMixColumns\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]], s1 = mix[state[j + 1]],\n          s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n        t = (s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^\n          (s3 >>> 24) ^ (s3 << 8));\n        state[j] = (t >>> 24) & 0xFF;\n        state[j + 1] = (t >> 16) & 0xFF;\n        state[j + 2] = (t >> 8) & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    // InvShiftRows\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      // InvSubBytes\n      state[j] = inv_s[state[j]];\n      // AddRoundKey\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n\n  function encrypt128(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      // AddRoundKey\n      state[j] ^= key[j];\n    }\n\n    for (i = 1; i < 10; i++) {\n      //SubBytes\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      //ShiftRows\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      //MixColumns\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0], s1 = state[j + 1];\n        var s2 = state[j + 2], s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      //AddRoundKey\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n\n    //SubBytes\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    //ShiftRows\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    //AddRoundKey\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  function decryptBlock2(data, finalize) {\n    var i, j, ii, sourceLength = data.length,\n        buffer = this.buffer, bufferLength = this.bufferPosition,\n        result = [], iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      // buffer is full, decrypting\n      var plain = decrypt128(buffer, this.key);\n      // xor-ing the IV vector to get plain text\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    // saving incomplete buffer\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    // combining plain text blocks into one\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      // undo a padding that is described in RFC 2898\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            // Invalid padding, assume that the block has no padding.\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i, sourceLength = data.length;\n      var buffer = this.buffer, bufferLength = this.bufferPosition;\n      // waiting for IV values -- they are at the start of the stream\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        // need more data\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      // starting decryption\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i, j, ii, sourceLength = data.length,\n          buffer = this.buffer, bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n\n        // buffer is full, encrypting\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      // saving incomplete buffer\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      // combining plain text blocks into one\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n\n  return AES128Cipher;\n})();\n\nvar AES256Cipher = (function AES256CipherClosure() {\n  var rcon = new Uint8Array([\n    0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n    0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n    0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n    0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n    0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n    0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n    0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n    0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n    0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n    0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n    0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n    0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n    0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n    0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n    0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n    0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n    0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n    0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n    0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n    0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n    0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n    0x74, 0xe8, 0xcb, 0x8d]);\n\n  var s = new Uint8Array([\n    0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n    0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n    0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n    0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n    0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n    0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n    0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n    0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n    0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n    0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n    0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n    0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n    0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n    0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n    0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n    0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n    0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n    0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n    0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n    0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n    0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n    0xb0, 0x54, 0xbb, 0x16]);\n\n  var inv_s = new Uint8Array([\n    0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n    0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n    0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n    0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n    0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n    0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n    0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n    0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n    0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n    0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n    0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n    0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n    0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n    0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n    0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n    0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n    0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n    0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n    0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n    0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n    0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n    0x55, 0x21, 0x0c, 0x7d]);\n\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = (i << 1) ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([\n    0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n    0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n    0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n    0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n    0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n    0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n    0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n    0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n    0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n    0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n    0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n    0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n    0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n    0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n    0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n    0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n    0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n    0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n    0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n    0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n    0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n    0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n    0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n    0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n    0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n    0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n    0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n    0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n    0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n    0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n    0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n    0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n    0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n    0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n    0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n    0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n    0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n    0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n    0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n    0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n    0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n    0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n    0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\n  function expandKey256(cipherKey) {\n    var b = 240, result = new Uint8Array(b);\n    var r = 1;\n\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        // RotWord\n        var t1 = result[j - 3], t2 = result[j - 2],\n          t3 = result[j - 1], t4 = result[j - 4];\n        // SubWord\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        // Rcon\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n\n      for (var n = 0; n < 4; ++n) {\n        result[j] = (t1 ^= result[j - 32]);\n        j++;\n        result[j] = (t2 ^= result[j - 32]);\n        j++;\n        result[j] = (t3 ^= result[j - 32]);\n        j++;\n        result[j] = (t4 ^= result[j - 32]);\n        j++;\n      }\n    }\n    return result;\n  }\n\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    // AddRoundKey\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      // InvShiftRows\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      // InvSubBytes\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      // AddRoundKey\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      // InvMixColumns\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]], s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n        t = (s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^\n            (s3 >>> 24) ^ (s3 << 8));\n        state[j] = (t >>> 24) & 0xFF;\n        state[j + 1] = (t >> 16) & 0xFF;\n        state[j + 2] = (t >> 8) & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    // InvShiftRows\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      // InvSubBytes\n      state[j] = inv_s[state[j]];\n      // AddRoundKey\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n\n  function encrypt256(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      // AddRoundKey\n      state[j] ^= key[j];\n    }\n\n    for (i = 1; i < 14; i++) {\n      //SubBytes\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      //ShiftRows\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      //MixColumns\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0], s1 = state[j + 1];\n        var s2 = state[j + 2], s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      //AddRoundKey\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n\n    //SubBytes\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    //ShiftRows\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    //AddRoundKey\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n\n    return state;\n\n  }\n\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  function decryptBlock2(data, finalize) {\n    var i, j, ii, sourceLength = data.length,\n        buffer = this.buffer, bufferLength = this.bufferPosition,\n        result = [], iv = this.iv;\n\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      // buffer is full, decrypting\n      var plain = decrypt256(buffer, this.key);\n      // xor-ing the IV vector to get plain text\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    // saving incomplete buffer\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    // combining plain text blocks into one\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      // undo a padding that is described in RFC 2898\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            // Invalid padding, assume that the block has no padding.\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n\n  }\n\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i, sourceLength = data.length;\n      var buffer = this.buffer, bufferLength = this.bufferPosition;\n      // if not supplied an IV wait for IV values\n      // they are at the start of the stream\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 &&\n             i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          //need more data\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      // starting decryption\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i, j, ii, sourceLength = data.length,\n          buffer = this.buffer, bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n\n        // buffer is full, encrypting\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      // saving incomplete buffer\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      // combining plain text blocks into one\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n\n  return AES256Cipher;\n})();\n\nvar PDF17 = (function PDF17Closure() {\n\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function PDF17() {\n  }\n\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password,\n                                                          ownerValidationSalt,\n                                                          userBytes,\n                                                          ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password,\n                                                        userValidationSalt,\n                                                        userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes,\n                                            ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption,\n                                 false,\n                                 new Uint8Array(16));\n\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt,\n                                          userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      //key is the decryption key for the UE string\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption,\n                                 false,\n                                 new Uint8Array(16));\n    }\n  };\n  return PDF17;\n})();\n\nvar PDF20 = (function PDF20Closure() {\n\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n\n  function calculatePDF20Hash(password, input, userBytes) {\n    //This refers to Algorithm 2.B as defined in ISO 32000-2\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      //AES128 CBC NO PADDING with\n      //first 16 bytes of k as the key and the second 16 as the iv.\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      //Now we have to take the first 16 bytes of an unsigned\n      //big endian integer... and compute the remainder\n      //modulo 3.... That is a fairly large number and\n      //JavaScript isn't going to handle that well...\n      //So we're using a trick that allows us to perform\n      //modulo math byte by byte\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= (256 % 3);\n        remainder %= 3;\n        remainder += ((e[z] >>> 0) % 3);\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      }\n      else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      }\n      else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n\n  function PDF20() {\n  }\n\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password,\n                                                          ownerValidationSalt,\n                                                          userBytes,\n                                                          ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password,\n                                                        userValidationSalt,\n                                                        userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes,\n                                            ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption,\n                                 false,\n                                 new Uint8Array(16));\n\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt,\n                                          userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      //key is the decryption key for the UE string\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption,\n                                 false,\n                                 new Uint8Array(16));\n    }\n  };\n  return PDF20;\n})();\n\nvar CipherTransform = (function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.stringCipherConstructor = stringCipherConstructor;\n    this.streamCipherConstructor = streamCipherConstructor;\n  }\n\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.streamCipherConstructor();\n      return new DecryptStream(stream, length,\n        function cipherTransformDecryptStream(data, finalize) {\n          return cipher.decryptBlock(data, finalize);\n        }\n      );\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.stringCipherConstructor();\n      var data = stringToBytes(s);\n      data = cipher.decryptBlock(data, true);\n      return bytesToString(data);\n    }\n  };\n  return CipherTransform;\n})();\n\nvar CipherTransformFactory = (function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([\n    0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41,\n    0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08,\n    0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80,\n    0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n\n  function createEncryptionKey20(revision, password, ownerPassword,\n                                 ownerValidationSalt, ownerKeySalt, uBytes,\n                                 userPassword, userValidationSalt, userKeySalt,\n                                 ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n\n    if (pdfAlgorithm) {\n      if (pdfAlgorithm.checkUserPassword(password, userValidationSalt,\n                                         userPassword)) {\n        return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n      } else if (pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt,\n                                                 uBytes,\n                                                 ownerPassword)) {\n        return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes,\n                                        ownerEncryption);\n      }\n    }\n\n    return null;\n  }\n\n  function prepareKeyData(fileId, password, ownerPassword, userPassword,\n                          flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    // as now the padded password in the hashData[0..i]\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = (flags >> 8) & 0xFF;\n    hashData[i++] = (flags >> 16) & 0xFF;\n    hashData[i++] = (flags >>> 24) & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n), k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32), i = 0, j, n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes), k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n\n  var identityName = Name.get('Identity');\n\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!isName(filter) || filter.name !== 'Standard') {\n      error('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!isInt(algorithm) ||\n        (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 &&\n        algorithm !== 5)) {\n      error('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length') || 40;\n    if (!isInt(keyLength) ||\n        keyLength < 40 || (keyLength % 8) !== 0) {\n      error('invalid key length');\n    }\n\n    // prepare keys\n    var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n    var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    // meaningful when V is 4 or 5\n    var encryptMetadata = ((algorithm === 4 || algorithm === 5) &&\n                           dict.get('EncryptMetadata') !== false);\n    this.encryptMetadata = encryptMetadata;\n\n    var fileIdBytes = stringToBytes(fileId);\n    var passwordBytes;\n    if (password) {\n      passwordBytes = stringToBytes(password);\n    }\n\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes,\n                                     ownerPassword, userPassword, flags,\n                                     revision, keyLength, encryptMetadata);\n    }\n    else {\n      var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n      var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n      var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = stringToBytes(dict.get('OE'));\n      var userEncryption = stringToBytes(dict.get('UE'));\n      var perms = stringToBytes(dict.get('Perms'));\n      encryptionKey =\n        createEncryptionKey20(revision, passwordBytes,\n          ownerPassword, ownerValidationSalt,\n          ownerKeySalt, uBytes,\n          userPassword, userValidationSalt,\n          userKeySalt, ownerEncryption,\n          userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new PasswordException('No password given',\n                                  PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      // Attempting use the password as an owner password\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword,\n                                               revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword,\n                                     ownerPassword, userPassword, flags,\n                                     revision, keyLength, encryptMetadata);\n    }\n\n    if (!encryptionKey) {\n      throw new PasswordException('Incorrect Password',\n                                  PasswordResponses.INCORRECT_PASSWORD);\n    }\n\n    this.encryptionKey = encryptionKey;\n\n    if (algorithm >= 4) {\n      this.cf = dict.get('CF');\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.strf;\n    }\n  }\n\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9), i, n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = (num >> 8) & 0xFF;\n    key[i++] = (num >> 16) & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = (gen >> 8) & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if ('V2' === cfm.name) {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if ('AESV2' === cfm.name) {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if ('AESV3' === cfm.name) {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    error('Unknown crypto method');\n  }\n\n  CipherTransformFactory.prototype = {\n    createCipherTransform:\n      function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(\n          buildCipherConstructor(this.cf, this.stmf,\n                                 num, gen, this.encryptionKey),\n          buildCipherConstructor(this.cf, this.strf,\n                                 num, gen, this.encryptionKey));\n      }\n      // algorithms 1 and 2\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n\n  return CipherTransformFactory;\n})();\n\nvar PatternType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\n\nvar Pattern = (function PatternClosure() {\n  // Constructor should define this.getPattern\n  function Pattern() {\n    error('should not call Pattern constructor');\n  }\n\n  Pattern.prototype = {\n    // Input: current Canvas context\n    // Output: the appropriate fillStyle or strokeStyle\n    getPattern: function Pattern_getPattern(ctx) {\n      error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n\n  Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref,\n                                                       res) {\n\n    var dict = isStream(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n\n    try {\n      switch (type) {\n        case PatternType.AXIAL:\n        case PatternType.RADIAL:\n          // Both radial and axial shadings are handled by RadialAxial shading.\n          return new Shadings.RadialAxial(dict, matrix, xref, res);\n        case PatternType.FREE_FORM_MESH:\n        case PatternType.LATTICE_FORM_MESH:\n        case PatternType.COONS_PATCH_MESH:\n        case PatternType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res);\n        default:\n          throw new Error('Unknown PatternType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof MissingDataException) {\n        throw ex;\n      }\n      UnsupportedManager.notify(UNSUPPORTED_FEATURES.shadingPattern);\n      warn(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n})();\n\nvar Shadings = {};\n\n// A small number to offset the first/last color stops so we can insert ones to\n// support extend.  Number.MIN_VALUE appears to be too small and breaks the\n// extend. 1e-7 works in FF but chrome seems to use an even smaller sized number\n// internally so we have to go bigger.\nShadings.SMALL_NUMBER = 1e-2;\n\n// Radial and axial shading have very similar implementations\n// If needed, the implementations can be broken into two classes\nShadings.RadialAxial = (function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res) {\n    this.matrix = matrix;\n    this.coordsArr = dict.get('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = ColorSpace.parse(cs, xref, res);\n    this.cs = cs;\n\n    var t0 = 0.0, t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.get('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n\n    var extendStart = false, extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.get('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n\n    if (this.shadingType === PatternType.RADIAL &&\n       (!extendStart || !extendEnd)) {\n      // Radial gradient only currently works if either circle is fully within\n      // the other circle.\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance &&\n          r2 <= r1 + distance) {\n        warn('Unsupported radial gradient.');\n      }\n    }\n\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n\n    var fnObj = dict.get('Function');\n    var fn = PDFFunction.parseArray(xref, fnObj);\n\n    // 10 samples seems good enough for now, but probably won't work\n    // if there are sharp color changes. Ideally, we would implement\n    // the spec faithfully and add lossless optimizations.\n    var diff = t1 - t0;\n    var step = diff / 10;\n\n    var colorStops = this.colorStops = [];\n\n    // Protect against bad domains so we don't end up in an infinte loop below.\n    if (t0 >= t1 || step <= 0) {\n      // Acrobat doesn't seem to handle these cases so we'll ignore for\n      // now.\n      info('Bad shading domain.');\n      return;\n    }\n\n    var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n\n    if (!extendStart) {\n      // Insert a color stop at the front and offset the first real color stop\n      // so it doesn't conflict with the one we insert.\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      // Same idea as above in extendStart but for the end.\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n\n    this.colorStops = colorStops;\n  }\n\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === PatternType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === PatternType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        error('getPattern type unknown: ' + shadingType);\n      }\n\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = Util.applyTransform(p0, matrix);\n        p1 = Util.applyTransform(p1, matrix);\n      }\n\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n\n  return RadialAxial;\n})();\n\n// All mesh shading. For now, they will be presented as set of the triangles\n// to be drawn on the canvas and rgb color for each vertex.\nShadings.Mesh = (function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) :\n                                           this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return ((this.stream.getByte() << 24) |\n            (this.stream.getByte() << 16) | (this.stream.getByte() << 8) |\n            this.stream.getByte()) >>> 0;\n        }\n        buffer = (buffer << 24) | (this.stream.getByte() << 16) |\n          (this.stream.getByte() << 8) | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & ((1 << bufferLength) - 1);\n        return ((buffer << (8 - bufferLength)) |\n          ((nextByte & 0xFF) >> bufferLength)) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = (buffer << 8) | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & ((1 << bufferLength) - 1);\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) :\n        2.3283064365386963e-10; // 2 ^ -32\n      return [\n        xi * scale * (decode[1] - decode[0]) + decode[0],\n        yi * scale * (decode[3] - decode[2]) + decode[2]\n      ];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) :\n        2.3283064365386963e-10; // 2 ^ -32\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = []; // not maintaining cs since that will match ps\n    var verticesLeft = 0; // assuming we have all data to start a new triangle\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) { // ignoring flags if we started a triangle\n        assert(0 <= f && f <= 2, 'Unknown type4 flag');\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n\n      reader.align();\n    }\n\n    var psPacked = new Int32Array(ps);\n\n    mesh.figures.push({\n      type: 'triangles',\n      coords: psPacked,\n      colors: psPacked\n    });\n  }\n\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = []; // not maintaining cs since that will match ps\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n\n    var psPacked = new Int32Array(ps);\n\n    mesh.figures.push({\n      type: 'lattice',\n      coords: psPacked,\n      colors: psPacked,\n      verticesPerRow: verticesPerRow\n    });\n  }\n\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\n  var TRIANGLE_DENSITY = 20; // count of triangles per entire mesh bounds\n\n  var getB = (function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count, t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_,\n          3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  })();\n\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n\n    var coords = mesh.coords, colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0],\n                              coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1],\n                              coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0],\n                              coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1],\n                              coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY /\n                             (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT,\n               Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY /\n                             (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT,\n               Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3), cr = new Uint8Array(3);\n    var c0 = colors[ci[0]], c1 = colors[ci[1]],\n      c2 = colors[ci[2]], c3 = colors[ci[3]];\n    var bRow = getB(splitYBy), bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = ((c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy) | 0;\n      cl[1] = ((c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy) | 0;\n      cl[2] = ((c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy) | 0;\n\n      cr[0] = ((c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy) | 0;\n      cr[1] = ((c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy) | 0;\n      cr[2] = ((c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy) | 0;\n\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) &&\n            (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0, y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = ((cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy) | 0;\n        newColor[1] = ((cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy) | 0;\n        newColor[2] = ((cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy) | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n\n  function decodeType6Shading(mesh, reader) {\n    // A special case of Type 7. The p11, p12, p21, p22 automatically filled\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16); // p00, p10, ..., p30, p01, ..., p33\n    var cs = new Int32Array(4); // c00, c30, c03, c33\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      assert(0 <= f && f <= 3, 'Unknown type6 flag');\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = (f !== 0 ? 8 : 12); i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = (f !== 0 ? 2 : 4); i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3; ps[13] = pi + 4;  ps[14] = pi + 5;  ps[15] = pi + 6;\n          ps[ 8] = pi + 2; /* values for 5, 6, 9, 10 are    */ ps[11] = pi + 7;\n          ps[ 4] = pi + 1; /* calculated below              */ ps[ 7] = pi + 8;\n          ps[ 0] = pi;     ps[ 1] = pi + 11; ps[ 2] = pi + 10; ps[ 3] = pi + 9;\n          cs[2] = ci + 1; cs[3] = ci + 2;\n          cs[0] = ci;     cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12]; tmp2 = ps[13]; tmp3 = ps[14]; tmp4 = ps[15];\n          ps[12] = pi + 5; ps[13] = pi + 4;  ps[14] = pi + 3;  ps[15] = pi + 2;\n          ps[ 8] = pi + 6; /* values for 5, 6, 9, 10 are    */ ps[11] = pi + 1;\n          ps[ 4] = pi + 7; /* calculated below              */ ps[ 7] = pi;\n          ps[ 0] = tmp1;   ps[ 1] = tmp2;    ps[ 2] = tmp3;    ps[ 3] = tmp4;\n          tmp1 = cs[2]; tmp2 = cs[3];\n          cs[2] = ci + 1; cs[3] = ci;\n          cs[0] = tmp1;   cs[1] = tmp2;\n          break;\n        case 2:\n          ps[12] = ps[15]; ps[13] = pi + 7; ps[14] = pi + 6;   ps[15] = pi + 5;\n          ps[ 8] = ps[11]; /* values for 5, 6, 9, 10 are    */ ps[11] = pi + 4;\n          ps[ 4] = ps[7];  /* calculated below              */ ps[ 7] = pi + 3;\n          ps[ 0] = ps[3];  ps[ 1] = pi;     ps[ 2] = pi + 1;   ps[ 3] = pi + 2;\n          cs[2] = cs[3]; cs[3] = ci + 1;\n          cs[0] = cs[1]; cs[1] = ci;\n          break;\n        case 3:\n          ps[12] = ps[0];  ps[13] = ps[1];   ps[14] = ps[2];   ps[15] = ps[3];\n          ps[ 8] = pi;     /* values for 5, 6, 9, 10 are    */ ps[11] = pi + 7;\n          ps[ 4] = pi + 1; /* calculated below              */ ps[ 7] = pi + 6;\n          ps[ 0] = pi + 2; ps[ 1] = pi + 3;  ps[ 2] = pi + 4;  ps[ 3] = pi + 5;\n          cs[2] = cs[0]; cs[3] = cs[1];\n          cs[0] = ci;    cs[1] = ci + 1;\n          break;\n      }\n      // set p11, p12, p21, p22\n      ps[5] = coords.length;\n      coords.push([\n        (-4 * coords[ps[0]][0] - coords[ps[15]][0] +\n          6 * (coords[ps[4]][0] + coords[ps[1]][0]) -\n          2 * (coords[ps[12]][0] + coords[ps[3]][0]) +\n          3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n        (-4 * coords[ps[0]][1] - coords[ps[15]][1] +\n          6 * (coords[ps[4]][1] + coords[ps[1]][1]) -\n          2 * (coords[ps[12]][1] + coords[ps[3]][1]) +\n          3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n      ]);\n      ps[6] = coords.length;\n      coords.push([\n        (-4 * coords[ps[3]][0] - coords[ps[12]][0] +\n          6 * (coords[ps[2]][0] + coords[ps[7]][0]) -\n          2 * (coords[ps[0]][0] + coords[ps[15]][0]) +\n          3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n        (-4 * coords[ps[3]][1] - coords[ps[12]][1] +\n          6 * (coords[ps[2]][1] + coords[ps[7]][1]) -\n          2 * (coords[ps[0]][1] + coords[ps[15]][1]) +\n          3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n      ]);\n      ps[9] = coords.length;\n      coords.push([\n        (-4 * coords[ps[12]][0] - coords[ps[3]][0] +\n          6 * (coords[ps[8]][0] + coords[ps[13]][0]) -\n          2 * (coords[ps[0]][0] + coords[ps[15]][0]) +\n          3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n        (-4 * coords[ps[12]][1] - coords[ps[3]][1] +\n          6 * (coords[ps[8]][1] + coords[ps[13]][1]) -\n          2 * (coords[ps[0]][1] + coords[ps[15]][1]) +\n          3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n      ]);\n      ps[10] = coords.length;\n      coords.push([\n        (-4 * coords[ps[15]][0] - coords[ps[0]][0] +\n          6 * (coords[ps[11]][0] + coords[ps[14]][0]) -\n          2 * (coords[ps[12]][0] + coords[ps[3]][0]) +\n          3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n        (-4 * coords[ps[15]][1] - coords[ps[0]][1] +\n          6 * (coords[ps[11]][1] + coords[ps[14]][1]) -\n          2 * (coords[ps[12]][1] + coords[ps[3]][1]) +\n          3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n      ]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps), // making copies of ps and cs\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16); // p00, p10, ..., p30, p01, ..., p33\n    var cs = new Int32Array(4); // c00, c30, c03, c33\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      assert(0 <= f && f <= 3, 'Unknown type7 flag');\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = (f !== 0 ? 12 : 16); i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = (f !== 0 ? 2 : 4); i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3; ps[13] = pi + 4;  ps[14] = pi + 5;  ps[15] = pi + 6;\n          ps[ 8] = pi + 2; ps[ 9] = pi + 13; ps[10] = pi + 14; ps[11] = pi + 7;\n          ps[ 4] = pi + 1; ps[ 5] = pi + 12; ps[ 6] = pi + 15; ps[ 7] = pi + 8;\n          ps[ 0] = pi;     ps[ 1] = pi + 11; ps[ 2] = pi + 10; ps[ 3] = pi + 9;\n          cs[2] = ci + 1; cs[3] = ci + 2;\n          cs[0] = ci;     cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12]; tmp2 = ps[13]; tmp3 = ps[14]; tmp4 = ps[15];\n          ps[12] = pi + 5; ps[13] = pi + 4;  ps[14] = pi + 3;  ps[15] = pi + 2;\n          ps[ 8] = pi + 6; ps[ 9] = pi + 11; ps[10] = pi + 10; ps[11] = pi + 1;\n          ps[ 4] = pi + 7; ps[ 5] = pi + 8;  ps[ 6] = pi + 9;  ps[ 7] = pi;\n          ps[ 0] = tmp1;   ps[ 1] = tmp2;    ps[ 2] = tmp3;    ps[ 3] = tmp4;\n          tmp1 = cs[2]; tmp2 = cs[3];\n          cs[2] = ci + 1; cs[3] = ci;\n          cs[0] = tmp1;   cs[1] = tmp2;\n          break;\n        case 2:\n          ps[12] = ps[15]; ps[13] = pi + 7; ps[14] = pi + 6;  ps[15] = pi + 5;\n          ps[ 8] = ps[11]; ps[ 9] = pi + 8; ps[10] = pi + 11; ps[11] = pi + 4;\n          ps[ 4] = ps[7];  ps[ 5] = pi + 9; ps[ 6] = pi + 10; ps[ 7] = pi + 3;\n          ps[ 0] = ps[3];  ps[ 1] = pi;     ps[ 2] = pi + 1;  ps[ 3] = pi + 2;\n          cs[2] = cs[3]; cs[3] = ci + 1;\n          cs[0] = cs[1]; cs[1] = ci;\n          break;\n        case 3:\n          ps[12] = ps[0];  ps[13] = ps[1];   ps[14] = ps[2];   ps[15] = ps[3];\n          ps[ 8] = pi;     ps[ 9] = pi + 9;  ps[10] = pi + 8;  ps[11] = pi + 7;\n          ps[ 4] = pi + 1; ps[ 5] = pi + 10; ps[ 6] = pi + 11; ps[ 7] = pi + 6;\n          ps[ 0] = pi + 2; ps[ 1] = pi + 3;  ps[ 2] = pi + 4;  ps[ 3] = pi + 5;\n          cs[2] = cs[0]; cs[3] = cs[1];\n          cs[0] = ci;    cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps), // making copies of ps and cs\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0], minY = mesh.coords[0][1],\n      maxX = minX, maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0], y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n\n  function packData(mesh) {\n    var i, ii, j, jj;\n\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i], ps = figure.coords, cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n\n  function Mesh(stream, matrix, xref, res) {\n    assert(isStream(stream), 'Mesh data is not a stream');\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.get('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = ColorSpace.parse(cs, xref, res);\n    this.cs = cs;\n    this.background = dict.has('Background') ?\n      cs.getRgb(dict.get('Background'), 0) : null;\n\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.get('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case PatternType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case PatternType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case PatternType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case PatternType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        error('Unsupported mesh type.');\n        break;\n    }\n\n    if (patchMesh) {\n      // dirty bounds calculation for determining, how dense shall be triangles\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    // calculate bounds\n    updateBounds(this);\n\n    packData(this);\n  }\n\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures,\n        this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n\n  return Mesh;\n})();\n\nShadings.Dummy = (function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n})();\n\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.get('Matrix');\n  var bbox = dict.get('BBox');\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n\n  return [\n    'TilingPattern', args, operatorList, matrix, bbox, xstep, ystep,\n    paintType, tilingType\n  ];\n}\n\n\nvar PartialEvaluator = (function PartialEvaluatorClosure() {\n  function PartialEvaluator(pdfManager, xref, handler, pageIndex,\n                            uniquePrefix, idCounters, fontCache) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.uniquePrefix = uniquePrefix;\n    this.idCounters = idCounters;\n    this.fontCache = fontCache;\n  }\n\n  // Trying to minimize Date.now() usage and check every 100 time\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n\n  var deferred = Promise.resolve();\n\n  var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n\n  PartialEvaluator.prototype = {\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!isDict(resources)) {\n        return false;\n      }\n\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n\n      var nodes = [resources];\n      while (nodes.length) {\n        var key;\n        var node = nodes.shift();\n        // First check the current resources for blend modes.\n        var graphicStates = node.get('ExtGState');\n        if (isDict(graphicStates)) {\n          graphicStates = graphicStates.getAll();\n          for (key in graphicStates) {\n            var graphicState = graphicStates[key];\n            var bm = graphicState['BM'];\n            if (isName(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        // Descend into the XObjects to look for more resources and blend modes.\n        var xObjects = node.get('XObject');\n        if (!isDict(xObjects)) {\n          continue;\n        }\n        xObjects = xObjects.getAll();\n        for (key in xObjects) {\n          var xObject = xObjects[key];\n          if (!isStream(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              // stream has objId and is processed already\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          // Checking objId to detect an infinite loop.\n          if (isDict(xResources) &&\n              (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources,\n                                                                 xobj, smask,\n                                                                 operatorList,\n                                                                 initialState) {\n      var matrix = xobj.dict.get('Matrix');\n      var bbox = xobj.dict.get('BBox');\n      var group = xobj.dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n\n        var groupSubtype = group.get('S');\n        var colorSpace;\n        if (isName(groupSubtype) && groupSubtype.name === 'Transparency') {\n          groupOptions.isolated = (group.get('I') || false);\n          groupOptions.knockout = (group.get('K') || false);\n          colorSpace = (group.has('CS') ?\n            ColorSpace.parse(group.get('CS'), this.xref, resources) : null);\n        }\n\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n\n        operatorList.addOp(OPS.beginGroup, [groupOptions]);\n      }\n\n      operatorList.addOp(OPS.paintFormXObjectBegin, [matrix, bbox]);\n\n      return this.getOperatorList(xobj,\n        (xobj.dict.get('Resources') || resources), operatorList, initialState).\n        then(function () {\n          operatorList.addOp(OPS.paintFormXObjectEnd, []);\n\n          if (group) {\n            operatorList.addOp(OPS.endGroup, [groupOptions]);\n          }\n        });\n    },\n\n    buildPaintImageXObject:\n        function PartialEvaluator_buildPaintImageXObject(resources, image,\n                                                         inline, operatorList,\n                                                         cacheKey, imageCache) {\n      var self = this;\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n\n      if (!(w && isNum(w)) || !(h && isNum(h))) {\n        warn('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      if (PDFJS.maxImageSize !== -1 && w * h > PDFJS.maxImageSize) {\n        warn('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n\n      var imageMask = (dict.get('ImageMask', 'IM') || false);\n      var imgData, args;\n      if (imageMask) {\n        // This depends on a tmpCanvas being filled with the\n        // current fillStyle, such that processing the pixel\n        // data can't be done here. Instead of creating a\n        // complete PDFImage, only read the information needed\n        // for later.\n\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = (width + 7) >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.get('Decode', 'D');\n        var inverseDecode = (!!decode && decode[0] > 0);\n\n        imgData = PDFImage.createMask(imgArray, width, height,\n                                      image instanceof DecodeStream,\n                                      inverseDecode);\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n\n      var softMask = (dict.get('SMask', 'SM') || false);\n      var mask = (dict.get('Mask') || false);\n\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      // Inlining small images into the queue as RGB data\n      if (inline && !softMask && !mask && !(image instanceof JpegStream) &&\n          (w + h) < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new PDFImage(this.xref, resources, image,\n                                    inline, null, null);\n        // We force the use of RGBA_32BPP images here, because we can't handle\n        // any other kind.\n        imgData = imageObj.createImageData(/* forceRGBA = */ true);\n        operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n\n      // If there is no imageMask, create the PDFImage and a lot\n      // of image processing can be done here.\n      var uniquePrefix = (this.uniquePrefix || '');\n      var objId = 'img_' + uniquePrefix + (++this.idCounters.obj);\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n\n      if (!softMask && !mask && image instanceof JpegStream &&\n          image.isNativelySupported(this.xref, resources)) {\n        // These JPEGs don't need any more processing so we can just send it.\n        operatorList.addOp(OPS.paintJpegXObject, args);\n        this.handler.send('obj',\n          [objId, this.pageIndex, 'JpegStream', image.getIR()]);\n        return;\n      }\n\n      PDFImage.buildImage(self.handler, self.xref, resources, image, inline).\n        then(function(imageObj) {\n          var imgData = imageObj.createImageData(/* forceRGBA = */ false);\n          self.handler.send('obj', [objId, self.pageIndex, 'Image', imgData],\n            [imgData.data.buffer]);\n        }).then(undefined, function (reason) {\n          warn('Unable to decode image: ' + reason);\n          self.handler.send('obj', [objId, self.pageIndex, 'Image', null]);\n        });\n\n      operatorList.addOp(OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources,\n                                                       operatorList,\n                                                       stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      return this.buildFormXObject(resources, smaskContent, smaskOptions,\n                            operatorList, stateManager.state.clone());\n    },\n\n    handleTilingType:\n        function PartialEvaluator_handleTilingType(fn, args, resources,\n                                                   pattern, patternDict,\n                                                   operatorList) {\n      // Create an IR of the pattern code.\n      var tilingOpList = new OperatorList();\n      return this.getOperatorList(pattern,\n        (patternDict.get('Resources') || resources), tilingOpList).\n        then(function () {\n          // Add the dependencies to the parent operator list so they are\n          // resolved before sub operator list is executed synchronously.\n          operatorList.addDependencies(tilingOpList.dependencies);\n          operatorList.addOp(fn, getTilingPatternIR({\n            fnArray: tilingOpList.fnArray,\n            argsArray: tilingOpList.argsArray\n          }, patternDict, args));\n        });\n    },\n\n    handleSetFont:\n        function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef,\n                                                operatorList, state) {\n      // TODO(mack): Not needed?\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n\n      var self = this;\n      return this.loadFont(fontName, fontRef, this.xref, resources).then(\n          function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(self, resources, operatorList).then(\n            function () {\n          return translated;\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(self.handler);\n        return translated.loadedName;\n      });\n    },\n\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode &\n                              TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || PDFJS.disableFontFace)) {\n        var buildPath = function (fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            this.handler.send('commonobj', [\n              font.loadedName + '_path_' + fontChar,\n              'FontPath',\n              path\n            ]);\n          }\n        }.bind(this);\n\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          if (glyph === null) {\n            continue;\n          }\n          buildPath(glyph.fontChar);\n\n          // If the glyph has an accent we need to build a path for its\n          // fontChar too, otherwise CanvasGraphics_paintChar will fail.\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n\n      return glyphs;\n    },\n\n    setGState: function PartialEvaluator_setGState(resources, gState,\n                                                   operatorList, xref,\n                                                   stateManager) {\n      // This array holds the converted/processed state data.\n      var gStateObj = [];\n      var gStateMap = gState.map;\n      var self = this;\n      var promise = Promise.resolve();\n      for (var key in gStateMap) {\n        var value = gStateMap[key];\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return self.handleSetFont(resources, null, value[0],\n                                        operatorList, stateManager.state).\n                then(function (loadedName) {\n                  operatorList.addDependency(loadedName);\n                  gStateObj.push([key, [loadedName, value[1]]]);\n                });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, value]);\n            break;\n          case 'SMask':\n            if (isName(value) && value.name === 'None') {\n              gStateObj.push([key, false]);\n              break;\n            }\n            var dict = xref.fetchIfRef(value);\n            if (isDict(dict)) {\n              promise = promise.then(function () {\n                return self.handleSMask(dict, resources, operatorList,\n                                        stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              warn('Unsupported SMask type');\n            }\n\n            break;\n          // Only generate info log messages for the following since\n          // they are unlikely to have a big impact on the rendering.\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            // TODO implement these operators.\n            info('graphic state operator ' + key);\n            break;\n          default:\n            info('Unknown graphic state operator ' + key);\n            break;\n        }\n      }\n      return promise.then(function () {\n        if (gStateObj.length >= 0) {\n          operatorList.addOp(OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n\n    loadFont: function PartialEvaluator_loadFont(fontName, font, xref,\n                                                 resources) {\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error',\n          new ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef;\n      if (font) { // Loading by ref.\n        assert(isRef(font));\n        fontRef = font;\n      } else { // Loading by name.\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          warn('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        warn('fontRef not available');\n        return errorFont();\n      }\n\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n\n      font = xref.fetchIfRef(fontRef);\n      if (!isDict(font)) {\n        return errorFont();\n      }\n\n      // We are holding font.translated references just for fontRef that are not\n      // dictionaries (Dict). See explanation below.\n      if (font.translated) {\n        return font.translated;\n      }\n\n      var fontCapability = createPromiseCapability();\n\n      var preEvaluatedFont = this.preEvaluateFont(font, xref);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontID = fontRef.num + '_' + fontRef.gen;\n      if (isDict(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        }\n\n        if (!fontAliases[hash]) {\n          fontAliases[hash] = {\n            fontID: Font.getFontID()\n          };\n        }\n\n        fontAliases[hash].aliasRef = fontRef;\n        fontID = fontAliases[hash].fontID;\n      }\n\n      // Workaround for bad PDF generators that don't reference fonts\n      // properly, i.e. by not using an object identifier.\n      // Check if the fontRef is a Dict (as opposed to a standard object),\n      // in which case we don't cache the font and instead reference it by\n      // fontName in font.loadedName below.\n      var fontRefIsDict = isDict(fontRef);\n      if (!fontRefIsDict) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      }\n\n      // Keep track of each font we translated so the caller can\n      // load them asynchronously before calling display on a page.\n      font.loadedName = 'g_font_' + (fontRefIsDict ?\n        fontName.replace(/\\W/g, '') : fontID);\n\n      font.translated = fontCapability.promise;\n\n      // TODO move promises into translate font\n      var translatedPromise;\n      try {\n        translatedPromise = Promise.resolve(\n          this.translateFont(preEvaluatedFont, xref));\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n\n        fontCapability.resolve(new TranslatedFont(font.loadedName,\n          translatedFont, font));\n      }, function (reason) {\n        // TODO fontCapability.reject?\n        UnsupportedManager.notify(UNSUPPORTED_FEATURES.font);\n\n        try {\n          // error, but it's still nice to have font type reported\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = getFontType(preEvaluatedFont.type,\n                                     subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) { }\n\n        fontCapability.resolve(new TranslatedFont(font.loadedName,\n          new ErrorFont(reason instanceof Error ? reason.message : reason),\n          font));\n      });\n      return fontCapability.promise;\n    },\n\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 ||\n          operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n        operatorList.addOp(OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args,\n          cs, patterns, resources, xref) {\n      // compile tiling patterns\n      var patternName = args[args.length - 1];\n      // SCN/scn applies patterns along with normal colors\n      var pattern;\n      if (isName(patternName) &&\n          (pattern = patterns.get(patternName.name))) {\n        var dict = (isStream(pattern) ? pattern.dict : pattern);\n        var typeNum = dict.get('PatternType');\n\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern,\n                                       dict, operatorList);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.get('Matrix');\n          pattern = Pattern.parseShading(shading, matrix, xref, resources);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        } else {\n          return Promise.reject('Unknown PatternType: ' + typeNum);\n        }\n      }\n      // TODO shall we fail here?\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n\n    getOperatorList: function PartialEvaluator_getOperatorList(stream,\n                                                               resources,\n                                                               operatorList,\n                                                               initialState) {\n\n      var self = this;\n      var xref = this.xref;\n      var imageCache = {};\n\n      assert(operatorList);\n\n      resources = (resources || Dict.empty);\n      var xobjs = (resources.get('XObject') || Dict.empty);\n      var patterns = (resources.get('Pattern') || Dict.empty);\n      var stateManager = new StateManager(initialState || new EvalState());\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n\n      return new Promise(function next(resolve, reject) {\n        timeSlotManager.reset();\n        var stop, operation = {}, i, ii, cs;\n        while (!(stop = timeSlotManager.check())) {\n          // The arguments parsed by read() are used beyond this loop, so we\n          // cannot reuse the same array on each iteration. Therefore we pass\n          // in |null| as the initial value (see the comment on\n          // EvaluatorPreprocessor_read() for why).\n          operation.args = null;\n          if (!(preprocessor.read(operation))) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n\n          switch (fn | 0) {\n            case OPS.paintXObject:\n              if (args[0].code) {\n                break;\n              }\n              // eagerly compile XForm objects\n              var name = args[0].name;\n              if (imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n\n              var xobj = xobjs.get(name);\n              if (xobj) {\n                assert(isStream(xobj), 'XObject should be a stream');\n\n                var type = xobj.dict.get('Subtype');\n                assert(isName(type),\n                  'XObject should have a Name subtype');\n\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  return self.buildFormXObject(resources, xobj, null,\n                                               operatorList,\n                                               stateManager.state.clone()).\n                    then(function () {\n                      stateManager.restore();\n                      next(resolve, reject);\n                    }, reject);\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false,\n                    operatorList, name, imageCache);\n                  args = null;\n                  continue;\n                } else if (type.name === 'PS') {\n                  // PostScript XObjects are unused when viewing documents.\n                  // See section 4.7.1 of Adobe's PDF reference.\n                  info('Ignored XObject subtype PS');\n                  continue;\n                } else {\n                  error('Unhandled XObject subtype ' + type.name);\n                }\n              }\n              break;\n            case OPS.setFont:\n              var fontSize = args[1];\n              // eagerly collect all fonts\n              return self.handleSetFont(resources, args, null,\n                                        operatorList, stateManager.state).\n                then(function (loadedName) {\n                  operatorList.addDependency(loadedName);\n                  operatorList.addOp(OPS.setFont, [loadedName, fontSize]);\n                  next(resolve, reject);\n                }, reject);\n            case OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true,\n                operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if (isString(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs,\n                    self.handleText(arrItem, stateManager.state));\n                } else if (isNum(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = OPS.showText;\n              break;\n            case OPS.nextLineShowText:\n              operatorList.addOp(OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = OPS.showText;\n              break;\n            case OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(OPS.nextLine);\n              operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = OPS.showText;\n              break;\n            case OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n\n            case OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace =\n                ColorSpace.parse(args[0], xref, resources);\n              continue;\n            case OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace =\n                ColorSpace.parse(args[0], xref, resources);\n              continue;\n            case OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = OPS.setFillRGBColor;\n              break;\n            case OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = OPS.setStrokeRGBColor;\n              break;\n            case OPS.setFillGray:\n              stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n              args = ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = OPS.setFillRGBColor;\n              break;\n            case OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n              args = ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = OPS.setStrokeRGBColor;\n              break;\n            case OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n              args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = OPS.setFillRGBColor;\n              break;\n            case OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n              args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = OPS.setStrokeRGBColor;\n              break;\n            case OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n              args = ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n              args = ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                return self.handleColorN(operatorList, OPS.setFillColorN,\n                  args, cs, patterns, resources, xref).then(function() {\n                    next(resolve, reject);\n                  }, reject);\n              }\n              args = cs.getRgb(args, 0);\n              fn = OPS.setFillRGBColor;\n              break;\n            case OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                return self.handleColorN(operatorList, OPS.setStrokeColorN,\n                  args, cs, patterns, resources, xref).then(function() {\n                    next(resolve, reject);\n                  }, reject);\n              }\n              args = cs.getRgb(args, 0);\n              fn = OPS.setStrokeRGBColor;\n              break;\n\n            case OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                error('No shading resource found');\n              }\n\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                error('No shading object found');\n              }\n\n              var shadingFill = Pattern.parseShading(shading, null, xref,\n                resources);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = OPS.shadingFill;\n              break;\n            case OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n\n              if (!isDict(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n\n              var gState = extGState.get(dictName.name);\n              return self.setGState(resources, gState, operatorList, xref,\n                stateManager).then(function() {\n                  next(resolve, reject);\n                }, reject);\n            case OPS.moveTo:\n            case OPS.lineTo:\n            case OPS.curveTo:\n            case OPS.curveTo2:\n            case OPS.curveTo3:\n            case OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          deferred.then(function () {\n            next(resolve, reject);\n          });\n          return;\n        }\n        // Some PDFs don't close all restores inside object/form.\n        // Closing those for them.\n        for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(OPS.restore, []);\n        }\n        resolve();\n      });\n    },\n\n    getTextContent: function PartialEvaluator_getTextContent(stream, resources,\n                                                             stateManager) {\n\n      stateManager = (stateManager || new StateManager(new TextState()));\n\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var bidiTexts = textContent.items;\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n\n      var self = this;\n      var xref = this.xref;\n\n      resources = (xref.fetchIfRef(resources) || Dict.empty);\n\n      // The xobj is parsed iff it's needed, e.g. if there is a `DO` cmd.\n      var xobjs = null;\n      var xobjsCache = {};\n\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\n      var textState;\n\n      function newTextChunk() {\n        var font = textState.font;\n        if (!(font.loadedName in textContent.styles)) {\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        return {\n          // |str| is initially an array which we push individual chars to, and\n          // then runBidi() overwrites it with the final string.\n          str: [],\n          dir: null,\n          width: 0,\n          height: 0,\n          transform: null,\n          fontName: font.loadedName\n        };\n      }\n\n      function runBidi(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = PDFJS.bidi(str, -1, textState.font.vertical);\n        textChunk.str = bidiResult.str;\n        textChunk.dir = bidiResult.dir;\n        return textChunk;\n      }\n\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, xref, resources).\n          then(function (translated) {\n            textState.font = translated.font;\n            textState.fontMatrix = translated.font.fontMatrix ||\n              FONT_IDENTITY_MATRIX;\n          });\n      }\n\n      function buildTextGeometry(chars, textChunk) {\n        var font = textState.font;\n        textChunk = textChunk || newTextChunk();\n        if (!textChunk.transform) {\n          // 9.4.4 Text Space Details\n          var tsm = [textState.fontSize * textState.textHScale, 0,\n                     0, textState.fontSize,\n                     0, textState.textRise];\n          var trm = textChunk.transform = Util.transform(textState.ctm,\n                                    Util.transform(textState.textMatrix, tsm));\n          if (!font.vertical) {\n            textChunk.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          } else {\n            textChunk.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          }\n        }\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        var defaultVMetrics = font.defaultVMetrics;\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          if (!glyph) { // Previous glyph was a space.\n            width += textState.wordSpacing * textState.textHScale;\n            continue;\n          }\n          var vMetricX = null;\n          var vMetricY = null;\n          var glyphWidth = null;\n          if (font.vertical) {\n            if (glyph.vmetric) {\n              glyphWidth = glyph.vmetric[0];\n              vMetricX = glyph.vmetric[1];\n              vMetricY = glyph.vmetric[2];\n            } else {\n              glyphWidth = glyph.width;\n              vMetricX = glyph.width * 0.5;\n              vMetricY = defaultVMetrics[2];\n            }\n          } else {\n            glyphWidth = glyph.width;\n          }\n\n          var glyphUnicode = glyph.unicode;\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = reverseIfRtl(glyphUnicode);\n\n          // The following will calculate the x and y of the individual glyphs.\n          // if (font.vertical) {\n          //   tsm[4] -= vMetricX * Math.abs(textState.fontSize) *\n          //             textState.fontMatrix[0];\n          //   tsm[5] -= vMetricY * textState.fontSize *\n          //             textState.fontMatrix[0];\n          // }\n          // var trm = Util.transform(textState.textMatrix, tsm);\n          // var pt = Util.applyTransform([trm[4], trm[5]], textState.ctm);\n          // var x = pt[0];\n          // var y = pt[1];\n\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + textState.charSpacing) *\n                 textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + textState.charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n\n          textChunk.str.push(glyphUnicode);\n        }\n\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        if (!font.vertical) {\n          textChunk.width += width * scaleCtmX * scaleLineX;\n        } else {\n          textChunk.height += Math.abs(height * scaleCtmX * scaleLineX);\n        }\n        return textChunk;\n      }\n\n      var timeSlotManager = new TimeSlotManager();\n\n      return new Promise(function next(resolve, reject) {\n        timeSlotManager.reset();\n        var stop, operation = {}, args = [];\n        while (!(stop = timeSlotManager.check())) {\n          // The arguments parsed by read() are not used beyond this loop, so\n          // we can reuse the same array on every iteration, thus avoiding\n          // unnecessary allocations.\n          args.length = 0;\n          operation.args = args;\n          if (!(preprocessor.read(operation))) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n\n          switch (fn | 0) {\n            case OPS.setFont:\n              textState.fontSize = args[1];\n              return handleSetFont(args[0].name).then(function() {\n                next(resolve, reject);\n              }, reject);\n            case OPS.setTextRise:\n              textState.textRise = args[0];\n              break;\n            case OPS.setHScale:\n              textState.textHScale = args[0] / 100;\n              break;\n            case OPS.setLeading:\n              textState.leading = args[0];\n              break;\n            case OPS.moveText:\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case OPS.setLeadingMoveText:\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case OPS.nextLine:\n              textState.carriageReturn();\n              break;\n            case OPS.setTextMatrix:\n              textState.setTextMatrix(args[0], args[1], args[2], args[3],\n                args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3],\n                args[4], args[5]);\n              break;\n            case OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case OPS.beginText:\n              textState.textMatrix = IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = IDENTITY_MATRIX.slice();\n              break;\n            case OPS.showSpacedText:\n              var items = args[0];\n              var textChunk = newTextChunk();\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextGeometry(items[j], textChunk);\n                } else {\n                  var val = items[j] / 1000;\n                  if (!textState.font.vertical) {\n                    offset = -val * textState.fontSize * textState.textHScale *\n                      textState.textMatrix[0];\n                    textState.translateTextMatrix(offset, 0);\n                    textChunk.width += offset;\n                  } else {\n                    offset = -val * textState.fontSize *\n                      textState.textMatrix[3];\n                    textState.translateTextMatrix(0, offset);\n                    textChunk.height += offset;\n                  }\n                  if (items[j] < 0 && textState.font.spaceWidth > 0) {\n                    var fakeSpaces = -items[j] / textState.font.spaceWidth;\n                    if (fakeSpaces > MULTI_SPACE_FACTOR) {\n                      fakeSpaces = Math.round(fakeSpaces);\n                      while (fakeSpaces--) {\n                        textChunk.str.push(' ');\n                      }\n                    } else if (fakeSpaces > SPACE_FACTOR) {\n                      textChunk.str.push(' ');\n                    }\n                  }\n                }\n              }\n              bidiTexts.push(runBidi(textChunk));\n              break;\n            case OPS.showText:\n              bidiTexts.push(runBidi(buildTextGeometry(args[0])));\n              break;\n            case OPS.nextLineShowText:\n              textState.carriageReturn();\n              bidiTexts.push(runBidi(buildTextGeometry(args[0])));\n              break;\n            case OPS.nextLineSetSpacingShowText:\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              bidiTexts.push(runBidi(buildTextGeometry(args[2])));\n              break;\n            case OPS.paintXObject:\n              if (args[0].code) {\n                break;\n              }\n\n              if (!xobjs) {\n                xobjs = (resources.get('XObject') || Dict.empty);\n              }\n\n              var name = args[0].name;\n              if (xobjsCache.key === name) {\n                if (xobjsCache.texts) {\n                  Util.appendToArray(bidiTexts, xobjsCache.texts.items);\n                  Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n                }\n                break;\n              }\n\n              var xobj = xobjs.get(name);\n              if (!xobj) {\n                break;\n              }\n              assert(isStream(xobj), 'XObject should be a stream');\n\n              var type = xobj.dict.get('Subtype');\n              assert(isName(type),\n                'XObject should have a Name subtype');\n\n              if ('Form' !== type.name) {\n                xobjsCache.key = name;\n                xobjsCache.texts = null;\n                break;\n              }\n\n              stateManager.save();\n              var matrix = xobj.dict.get('Matrix');\n              if (isArray(matrix) && matrix.length === 6) {\n                stateManager.transform(matrix);\n              }\n\n              return self.getTextContent(xobj,\n                xobj.dict.get('Resources') || resources, stateManager).\n                then(function (formTextContent) {\n                  Util.appendToArray(bidiTexts, formTextContent.items);\n                  Util.extendObj(textContent.styles, formTextContent.styles);\n                  stateManager.restore();\n\n                  xobjsCache.key = name;\n                  xobjsCache.texts = formTextContent;\n\n                  next(resolve, reject);\n                }, reject);\n            case OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n\n              if (!isDict(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n\n              var gsStateMap = extGState.get(dictName.name);\n              var gsStateFont = null;\n              for (var key in gsStateMap) {\n                if (key === 'Font') {\n                  assert(!gsStateFont);\n                  gsStateFont = gsStateMap[key];\n                }\n              }\n              if (gsStateFont) {\n                textState.fontSize = gsStateFont[1];\n                return handleSetFont(gsStateFont[0]).then(function() {\n                  next(resolve, reject);\n                }, reject);\n              }\n              break;\n          } // switch\n        } // while\n        if (stop) {\n          deferred.then(function () {\n            next(resolve, reject);\n          });\n          return;\n        }\n        resolve(textContent);\n      });\n    },\n\n    extractDataStructures: function\n      partialEvaluatorExtractDataStructures(dict, baseDict,\n                                            xref, properties) {\n      // 9.10.2\n      var toUnicode = (dict.get('ToUnicode') || baseDict.get('ToUnicode'));\n      if (toUnicode) {\n        properties.toUnicode = this.readToUnicode(toUnicode);\n      }\n      if (properties.composite) {\n        // CIDSystemInfo helps to match CID to glyphs\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if (isDict(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if (isStream(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n\n      // Based on 9.6.6 of the spec the encoding can come from multiple places\n      // and depends on the font type. The base encoding and differences are\n      // read here, but the encoding that is actually used is chosen during\n      // glyph mapping in the font.\n      // TODO: Loading the built in encoding in the font would allow the\n      // differences to be merged in here not require us to hold on to it.\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if (isDict(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (isName(baseEncodingName) ?\n                              baseEncodingName.name : null);\n          // Load the differences between the base and original\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = diffEncoding[j];\n              if (isNum(data)) {\n                index = data;\n              } else {\n                differences[index++] = data.name;\n              }\n            }\n          }\n        } else if (isName(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          error('Encoding is not a Name nor a Dict');\n        }\n        // According to table 114 if the encoding is a named encoding it must be\n        // one of these predefined encodings.\n        if ((baseEncodingName !== 'MacRomanEncoding' &&\n             baseEncodingName !== 'MacExpertEncoding' &&\n             baseEncodingName !== 'WinAnsiEncoding')) {\n          baseEncodingName = null;\n        }\n      }\n\n      if (baseEncodingName) {\n        properties.defaultEncoding = Encodings[baseEncodingName].slice();\n      } else {\n        encoding = (properties.type === 'TrueType' ?\n                    Encodings.WinAnsiEncoding : Encodings.StandardEncoding);\n        // The Symbolic attribute can be misused for regular fonts\n        // Heuristic: we have to check if the font is a standard one also\n        if (!!(properties.flags & FontFlags.Symbolic)) {\n          encoding = Encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = Encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = Encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.dict = dict;\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmap, cmapObj = toUnicode;\n      if (isName(cmapObj)) {\n        cmap = CMapFactory.create(cmapObj,\n          { url: PDFJS.cMapUrl, packed: PDFJS.cMapPacked }, null).getMap();\n        return new ToUnicodeMap(cmap);\n      } else if (isStream(cmapObj)) {\n        cmap = CMapFactory.create(cmapObj,\n          { url: PDFJS.cMapUrl, packed: PDFJS.cMapPacked }, null).getMap();\n        // Convert UTF-16BE\n        // NOTE: cmap can be a sparse array, so use forEach instead of for(;;)\n        // to iterate over all keys.\n        cmap.forEach(function(token, i) {\n          var str = [];\n          for (var k = 0; k < token.length; k += 2) {\n            var w1 = (token.charCodeAt(k) << 8) | token.charCodeAt(k + 1);\n            if ((w1 & 0xF800) !== 0xD800) { // w1 < 0xD800 || w1 > 0xDFFF\n              str.push(w1);\n              continue;\n            }\n            k += 2;\n            var w2 = (token.charCodeAt(k) << 8) | token.charCodeAt(k + 1);\n            str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n          }\n          cmap[i] = String.fromCharCode.apply(String, str);\n        });\n        return new ToUnicodeMap(cmap);\n      }\n      return null;\n    },\n\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      // Extract the encoding from the CIDToGIDMap\n      var glyphsData = cidToGidStream.getBytes();\n\n      // Set encoding 0 to later verify the font has an encoding\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = (glyphsData[j++] << 8) | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n\n    extractWidths: function PartialEvaluator_extractWidths(dict, xref,\n                                                           descriptor,\n                                                           properties) {\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.get('DW') || 1000;\n\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = widths[i++];\n            code = xref.fetchIfRef(widths[i]);\n            if (isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = code[j];\n              }\n            } else {\n              var width = widths[++i];\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n\n        if (properties.vertical) {\n          var vmetrics = (dict.get('DW2') || [880, -1000]);\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = vmetrics[i++];\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [code[j++], code[j++], code[j]];\n                }\n              } else {\n                var vmetric = [vmetrics[++i], vmetrics[++i], vmetrics[++i]];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = widths[i];\n          }\n          defaultWidth = (parseFloat(descriptor.get('MissingWidth')) || 0);\n        } else {\n          // Trying get the BaseFont metrics (see comment above).\n          var baseFontName = dict.get('BaseFont');\n          if (isName(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths,\n                                                     properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n\n      // Heuristic: detection of monospace font by checking all non-zero widths\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= FontFlags.FixedPitch;\n      }\n\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      // Simulating descriptor flags attribute\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return (fontNameWoStyle in serifFonts) ||\n              (fontNameWoStyle.search(/serif/gi) !== -1);\n    },\n\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var lookupName = (stdFontMap[name] || name);\n\n      if (!(lookupName in Metrics)) {\n        // Use default fonts for looking up font metrics if the passed\n        // font is not a base font\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n\n      if (isNum(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths;\n      }\n\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n\n    buildCharCodeToWidth:\n        function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName,\n                                                        properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences &&\n            widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      assert(isName(type), 'invalid font Subtype');\n\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        // If font is a composite\n        //  - get the descendant font\n        //  - set the type according to the descendant font\n        //  - get the FontDescriptor from the descendant font\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          error('Descendant fonts are not specified');\n        }\n        dict = (isArray(df) ? xref.fetchIfRef(df[0]) : df);\n\n        type = dict.get('Subtype');\n        assert(isName(type), 'invalid font Subtype');\n        composite = true;\n      }\n\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if (isName(encoding)) {\n          hash.update(encoding.name);\n        } else if (isRef(encoding)) {\n          hash.update(encoding.num + '_' + encoding.gen);\n        }\n\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if (isStream(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ?\n            new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) :\n            new Uint8Array(stream.bytes.buffer,\n                           stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n\n        } else if (isName(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont,\n                                                           xref) {\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = (composite ? 0xFFFF : 0xFF);\n      var properties;\n\n      if (!descriptor) {\n        if (type === 'Type3') {\n          // FontDescriptor is only required for Type3 fonts when the document\n          // is a tagged pdf. Create a barbebones one to get by.\n          descriptor = new Dict(null);\n          descriptor.set('FontName', Name.get(type));\n        } else {\n          // Before PDF 1.5 if the font was one of the base 14 fonts, having a\n          // FontDescriptor was not required.\n          // This case is here for compatibility.\n          var baseFontName = dict.get('BaseFont');\n          if (!isName(baseFontName)) {\n            error('Base font is not specified');\n          }\n\n          // Using base font name as a font name.\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n\n          // Simulating descriptor flags attribute\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags =\n            (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) |\n            (metrics.monospace ? FontFlags.FixedPitch : 0) |\n            (symbolsFonts[fontNameWoStyle] ? FontFlags.Symbolic :\n                                             FontFlags.Nonsymbolic);\n\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          this.extractDataStructures(dict, dict, xref, properties);\n          properties.widths = this.buildCharCodeToWidth(metrics.widths,\n                                                        properties);\n          return new Font(baseFontName, null, properties);\n        }\n      }\n\n      // According to the spec if 'FontDescriptor' is declared, 'FirstChar',\n      // 'LastChar' and 'Widths' should exist too, but some PDF encoders seem\n      // to ignore this rule when a variant of a standart font is used.\n      // TODO Fill the width array depending on which of the base font this is\n      // a variant.\n      var firstChar = (dict.get('FirstChar') || 0);\n      var lastChar = (dict.get('LastChar') || maxCharIndex);\n\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      // Some bad PDFs have a string as the font name.\n      if (isString(fontName)) {\n        fontName = Name.get(fontName);\n      }\n      if (isString(baseFont)) {\n        baseFont = Name.get(baseFont);\n      }\n\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          info('The FontDescriptor\\'s FontName is \"' + fontNameStr +\n               '\" but should be the same as the Font\\'s BaseFont \"' +\n               baseFontStr + '\"');\n          // Workaround for cases where e.g. fontNameStr = 'Arial' and\n          // baseFontStr = 'Arial,Bold' (needed when no font file is embedded).\n          if (fontNameStr && baseFontStr &&\n              baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = (fontName || baseFont);\n\n      assert(isName(fontName), 'invalid font name');\n\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n        }\n      }\n\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: (dict.get('FontMatrix') || FONT_IDENTITY_MATRIX),\n        firstChar: firstChar || 0,\n        lastChar: (lastChar || maxCharIndex),\n        bbox: descriptor.get('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        coded: false\n      };\n\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if (isName(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        properties.cMap = CMapFactory.create(cidEncoding,\n          { url: PDFJS.cMapUrl, packed: PDFJS.cMapPacked }, null);\n        properties.vertical = properties.cMap.vertical;\n      }\n      this.extractDataStructures(dict, baseDict, xref, properties);\n      this.extractWidths(dict, xref, descriptor, properties);\n\n      if (type === 'Type3') {\n        properties.isType3Font = true;\n      }\n\n      return new Font(fontName.name, fontFile, properties);\n    }\n  };\n\n  return PartialEvaluator;\n})();\n\nvar TranslatedFont = (function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function (handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [\n        this.loadedName,\n        'Font',\n        fontData\n      ]);\n      this.sent = true;\n    },\n    loadType3Data: function (evaluator, resources, parentOperatorList) {\n      assert(this.font.isType3Font);\n\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs').getAll();\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = Object.keys(charProcs);\n      var charProcOperatorList = {};\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n          var glyphStream = charProcs[key];\n          var operatorList = new OperatorList();\n          return evaluator.getOperatorList(glyphStream, fontResources,\n                                           operatorList).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n\n            // Add the dependencies to the parent operator list so they are\n            // resolved before sub operator list is executed synchronously.\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }, function (reason) {\n            warn('Type3 font resource \\\"' + key + '\\\" is not available');\n            var operatorList = new OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        }.bind(this, charProcKeys[i]));\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n})();\n\nvar OperatorList = (function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5; // close to chunk size\n\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray, argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case OPS.paintInlineImageXObject:\n        case OPS.paintInlineImageXObjectGroup:\n        case OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0]; // first param in imgData\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    this.dependencies = {};\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n  }\n\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n\n    addOp: function(fn, args) {\n      this.fnArray.push(fn);\n      this.argsArray.push(args);\n      if (this.messageHandler) {\n        if (this.fnArray.length >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT &&\n                   (fn === OPS.restore || fn === OPS.endText)) {\n          // heuristic to flush on boundary of restore or endText\n          this.flush();\n        }\n      }\n    },\n\n    addDependency: function(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(OPS.dependency, [dependency]);\n    },\n\n    addDependencies: function(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n\n    addOpList: function(opList) {\n      Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n\n    getIR: function() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n\n    flush: function(lastChunk) {\n      if (this.intent !== 'oplist') {\n        new QueueOptimizer().optimize(this);\n      }\n      var transfers = getTransfers(this);\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: this.length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = {};\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n    }\n  };\n\n  return OperatorList;\n})();\n\nvar StateManager = (function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function () {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function () {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function (args) {\n      this.state.ctm = Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n})();\n\nvar TextState = (function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(IDENTITY_MATRIX);\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.textMatrix = IDENTITY_MATRIX.slice();\n    this.textLineMatrix = IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a; m[1] = b; m[2] = c; m[3] = d; m[4] = e; m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a; m[1] = b; m[2] = c; m[3] = d; m[4] = e; m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      // 9.4.4 Text Space Details\n      var tsm = [this.fontSize * this.textHScale, 0,\n                0, this.fontSize,\n                0, this.textRise];\n      return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n})();\n\nvar EvalState = (function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.fillColorSpace = ColorSpace.singletons.gray;\n    this.strokeColorSpace = ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n  };\n  return EvalState;\n})();\n\nvar EvaluatorPreprocessor = (function EvaluatorPreprocessorClosure() {\n  // Specifies properties for each command\n  //\n  // If variableArgs === true: [0, `numArgs`] expected\n  // If variableArgs === false: exactly `numArgs` expected\n  var OP_MAP = {\n    // Graphic state\n    w: { id: OPS.setLineWidth, numArgs: 1, variableArgs: false },\n    J: { id: OPS.setLineCap, numArgs: 1, variableArgs: false },\n    j: { id: OPS.setLineJoin, numArgs: 1, variableArgs: false },\n    M: { id: OPS.setMiterLimit, numArgs: 1, variableArgs: false },\n    d: { id: OPS.setDash, numArgs: 2, variableArgs: false },\n    ri: { id: OPS.setRenderingIntent, numArgs: 1, variableArgs: false },\n    i: { id: OPS.setFlatness, numArgs: 1, variableArgs: false },\n    gs: { id: OPS.setGState, numArgs: 1, variableArgs: false },\n    q: { id: OPS.save, numArgs: 0, variableArgs: false },\n    Q: { id: OPS.restore, numArgs: 0, variableArgs: false },\n    cm: { id: OPS.transform, numArgs: 6, variableArgs: false },\n\n    // Path\n    m: { id: OPS.moveTo, numArgs: 2, variableArgs: false },\n    l: { id: OPS.lineTo, numArgs: 2, variableArgs: false },\n    c: { id: OPS.curveTo, numArgs: 6, variableArgs: false },\n    v: { id: OPS.curveTo2, numArgs: 4, variableArgs: false },\n    y: { id: OPS.curveTo3, numArgs: 4, variableArgs: false },\n    h: { id: OPS.closePath, numArgs: 0, variableArgs: false },\n    re: { id: OPS.rectangle, numArgs: 4, variableArgs: false },\n    S: { id: OPS.stroke, numArgs: 0, variableArgs: false },\n    s: { id: OPS.closeStroke, numArgs: 0, variableArgs: false },\n    f: { id: OPS.fill, numArgs: 0, variableArgs: false },\n    F: { id: OPS.fill, numArgs: 0, variableArgs: false },\n    'f*': { id: OPS.eoFill, numArgs: 0, variableArgs: false },\n    B: { id: OPS.fillStroke, numArgs: 0, variableArgs: false },\n    'B*': { id: OPS.eoFillStroke, numArgs: 0, variableArgs: false },\n    b: { id: OPS.closeFillStroke, numArgs: 0, variableArgs: false },\n    'b*': { id: OPS.closeEOFillStroke, numArgs: 0, variableArgs: false },\n    n: { id: OPS.endPath, numArgs: 0, variableArgs: false },\n\n    // Clipping\n    W: { id: OPS.clip, numArgs: 0, variableArgs: false },\n    'W*': { id: OPS.eoClip, numArgs: 0, variableArgs: false },\n\n    // Text\n    BT: { id: OPS.beginText, numArgs: 0, variableArgs: false },\n    ET: { id: OPS.endText, numArgs: 0, variableArgs: false },\n    Tc: { id: OPS.setCharSpacing, numArgs: 1, variableArgs: false },\n    Tw: { id: OPS.setWordSpacing, numArgs: 1, variableArgs: false },\n    Tz: { id: OPS.setHScale, numArgs: 1, variableArgs: false },\n    TL: { id: OPS.setLeading, numArgs: 1, variableArgs: false },\n    Tf: { id: OPS.setFont, numArgs: 2, variableArgs: false },\n    Tr: { id: OPS.setTextRenderingMode, numArgs: 1, variableArgs: false },\n    Ts: { id: OPS.setTextRise, numArgs: 1, variableArgs: false },\n    Td: { id: OPS.moveText, numArgs: 2, variableArgs: false },\n    TD: { id: OPS.setLeadingMoveText, numArgs: 2, variableArgs: false },\n    Tm: { id: OPS.setTextMatrix, numArgs: 6, variableArgs: false },\n    'T*': { id: OPS.nextLine, numArgs: 0, variableArgs: false },\n    Tj: { id: OPS.showText, numArgs: 1, variableArgs: false },\n    TJ: { id: OPS.showSpacedText, numArgs: 1, variableArgs: false },\n    '\\'': { id: OPS.nextLineShowText, numArgs: 1, variableArgs: false },\n    '\"': { id: OPS.nextLineSetSpacingShowText, numArgs: 3,\n           variableArgs: false },\n\n    // Type3 fonts\n    d0: { id: OPS.setCharWidth, numArgs: 2, variableArgs: false },\n    d1: { id: OPS.setCharWidthAndBounds, numArgs: 6, variableArgs: false },\n\n    // Color\n    CS: { id: OPS.setStrokeColorSpace, numArgs: 1, variableArgs: false },\n    cs: { id: OPS.setFillColorSpace, numArgs: 1, variableArgs: false },\n    SC: { id: OPS.setStrokeColor, numArgs: 4, variableArgs: true },\n    SCN: { id: OPS.setStrokeColorN, numArgs: 33, variableArgs: true },\n    sc: { id: OPS.setFillColor, numArgs: 4, variableArgs: true },\n    scn: { id: OPS.setFillColorN, numArgs: 33, variableArgs: true },\n    G: { id: OPS.setStrokeGray, numArgs: 1, variableArgs: false },\n    g: { id: OPS.setFillGray, numArgs: 1, variableArgs: false },\n    RG: { id: OPS.setStrokeRGBColor, numArgs: 3, variableArgs: false },\n    rg: { id: OPS.setFillRGBColor, numArgs: 3, variableArgs: false },\n    K: { id: OPS.setStrokeCMYKColor, numArgs: 4, variableArgs: false },\n    k: { id: OPS.setFillCMYKColor, numArgs: 4, variableArgs: false },\n\n    // Shading\n    sh: { id: OPS.shadingFill, numArgs: 1, variableArgs: false },\n\n    // Images\n    BI: { id: OPS.beginInlineImage, numArgs: 0, variableArgs: false },\n    ID: { id: OPS.beginImageData, numArgs: 0, variableArgs: false },\n    EI: { id: OPS.endInlineImage, numArgs: 1, variableArgs: false },\n\n    // XObjects\n    Do: { id: OPS.paintXObject, numArgs: 1, variableArgs: false },\n    MP: { id: OPS.markPoint, numArgs: 1, variableArgs: false },\n    DP: { id: OPS.markPointProps, numArgs: 2, variableArgs: false },\n    BMC: { id: OPS.beginMarkedContent, numArgs: 1, variableArgs: false },\n    BDC: { id: OPS.beginMarkedContentProps, numArgs: 2,\n           variableArgs: false },\n    EMC: { id: OPS.endMarkedContent, numArgs: 0, variableArgs: false },\n\n    // Compatibility\n    BX: { id: OPS.beginCompat, numArgs: 0, variableArgs: false },\n    EX: { id: OPS.endCompat, numArgs: 0, variableArgs: false },\n\n    // (reserved partial commands for the lexer)\n    BM: null,\n    BD: null,\n    'true': null,\n    fa: null,\n    fal: null,\n    fals: null,\n    'false': null,\n    nu: null,\n    nul: null,\n    'null': null\n  };\n\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    // TODO(mduan): pass array of knownCommands rather than OP_MAP\n    // dictionary\n    this.parser = new Parser(new Lexer(stream, OP_MAP), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n\n    // |operation| is an object with two fields:\n    //\n    // - |fn| is an out param.\n    //\n    // - |args| is an inout param. On entry, it should have one of two values.\n    //\n    //   - An empty array. This indicates that the caller is providing the\n    //     array in which the args will be stored in. The caller should use\n    //     this value if it can reuse a single array for each call to read().\n    //\n    //   - |null|. This indicates that the caller needs this function to create\n    //     the array in which any args are stored in. If there are zero args,\n    //     this function will leave |operation.args| as |null| (thus avoiding\n    //     allocations that would occur if we used an empty array to represent\n    //     zero arguments). Otherwise, it will replace |null| with a new array\n    //     containing the arguments. The caller should use this value if it\n    //     cannot reuse an array for each call to read().\n    //\n    // These two modes are present because this function is very hot and so\n    // avoiding allocations where possible is worthwhile.\n    //\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if (isCmd(obj)) {\n          var cmd = obj.cmd;\n          // Check that the command is valid\n          var opSpec = OP_MAP[cmd];\n          if (!opSpec) {\n            warn('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n\n          if (!opSpec.variableArgs) {\n            // Postscript commands can be nested, e.g. /F2 /GS2 gs 5.711 Tf\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (!args) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n\n            if (argsLength < numArgs) {\n              // If we receive too few args, it's not possible to possible\n              // to execute the command, so skip the command\n              info('Command ' + fn + ': because expected ' +\n                   numArgs + ' args, but received ' + argsLength +\n                   ' args; skipping');\n              args = null;\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            info('Command ' + fn + ': expected [0,' + numArgs +\n                 '] args, but received ' + argsLength + ' args');\n          }\n\n          // TODO figure out how to type-check vararg functions\n          this.preprocessCommand(fn, args);\n\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        } else {\n          if (isEOF(obj)) {\n            return false; // no more commands\n          }\n          // argument\n          if (obj !== null) {\n            if (!args) {\n              args = [];\n            }\n            args.push((obj instanceof Dict ? obj.getAll() : obj));\n            assert(args.length <= 33, 'Too many arguments');\n          }\n        }\n      }\n    },\n\n    preprocessCommand:\n        function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case OPS.save:\n          this.stateManager.save();\n          break;\n        case OPS.restore:\n          this.stateManager.restore();\n          break;\n        case OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n})();\n\nvar QueueOptimizer = (function QueueOptimizerClosure() {\n  function addState(parentState, pattern, fn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = (state[item] || (state[item] = []));\n    }\n    state[pattern[pattern.length - 1]] = fn;\n  }\n\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray,\n                                          argsArray) {\n    // Handles special case of mainly LaTeX documents which use image masks to\n    // draw lines with the current fill style.\n    // 'count' groups of (save, transform, paintImageMaskXObject, restore)+\n    // have been found at iFirstSave.\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 &&\n          (!imageMask.data.length ||\n           (imageMask.data.length === 1 && imageMask.data[0] === 0))) {\n        fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n\n  var InitialState = [];\n\n  // This replaces (save, transform, paintInlineImageXObject, restore)+\n  // sequences with one |paintInlineImageXObjectGroup| operation.\n  addState(InitialState,\n    [OPS.save, OPS.transform, OPS.paintInlineImageXObject, OPS.restore],\n    function foundInlineImageGroup(context) {\n      var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n      var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n      var MAX_WIDTH = 1000;\n      var IMAGE_PADDING = 1;\n\n      var fnArray = context.fnArray, argsArray = context.argsArray;\n      var curr = context.iCurr;\n      var iFirstSave = curr - 3;\n      var iFirstTransform = curr - 2;\n      var iFirstPIIXO = curr - 1;\n\n      // Look for the quartets.\n      var i = iFirstSave + 4;\n      var ii = fnArray.length;\n      while (i + 3 < ii) {\n        if (fnArray[i] !== OPS.save ||\n            fnArray[i + 1] !== OPS.transform ||\n            fnArray[i + 2] !== OPS.paintInlineImageXObject ||\n            fnArray[i + 3] !== OPS.restore) {\n          break;    // ops don't match\n        }\n        i += 4;\n      }\n\n      // At this point, i is the index of the first op past the last valid\n      // quartet.\n      var count = Math.min((i - iFirstSave) / 4,\n                           MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n      if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n        return i;\n      }\n\n      // assuming that heights of those image is too small (~1 pixel)\n      // packing as much as possible by lines\n      var maxX = 0;\n      var map = [], maxLineHeight = 0;\n      var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n      var q;\n      for (q = 0; q < count; q++) {\n        var transform = argsArray[iFirstTransform + (q << 2)];\n        var img = argsArray[iFirstPIIXO + (q << 2)][0];\n        if (currentX + img.width > MAX_WIDTH) {\n          // starting new line\n          maxX = Math.max(maxX, currentX);\n          currentY += maxLineHeight + 2 * IMAGE_PADDING;\n          currentX = 0;\n          maxLineHeight = 0;\n        }\n        map.push({\n          transform: transform,\n          x: currentX, y: currentY,\n          w: img.width, h: img.height\n        });\n        currentX += img.width + 2 * IMAGE_PADDING;\n        maxLineHeight = Math.max(maxLineHeight, img.height);\n      }\n      var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n      var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n      var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n      var imgRowSize = imgWidth << 2;\n      for (q = 0; q < count; q++) {\n        var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n        // Copy image by lines and extends pixels into padding.\n        var rowSize = map[q].w << 2;\n        var dataOffset = 0;\n        var offset = (map[q].x + map[q].y * imgWidth) << 2;\n        imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n        for (var k = 0, kk = map[q].h; k < kk; k++) {\n          imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n          dataOffset += rowSize;\n          offset += imgRowSize;\n        }\n        imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n        while (offset >= 0) {\n          data[offset - 4] = data[offset];\n          data[offset - 3] = data[offset + 1];\n          data[offset - 2] = data[offset + 2];\n          data[offset - 1] = data[offset + 3];\n          data[offset + rowSize] = data[offset + rowSize - 4];\n          data[offset + rowSize + 1] = data[offset + rowSize - 3];\n          data[offset + rowSize + 2] = data[offset + rowSize - 2];\n          data[offset + rowSize + 3] = data[offset + rowSize - 1];\n          offset -= imgRowSize;\n        }\n      }\n\n      // Replace queue items.\n      fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4,\n        [{ width: imgWidth, height: imgHeight, kind: ImageKind.RGBA_32BPP,\n           data: imgData }, map]);\n\n      return iFirstSave + 1;\n    });\n\n  // This replaces (save, transform, paintImageMaskXObject, restore)+\n  // sequences with one |paintImageMaskXObjectGroup| or one\n  // |paintImageMaskXObjectRepeat| operation.\n  addState(InitialState,\n    [OPS.save, OPS.transform, OPS.paintImageMaskXObject, OPS.restore],\n    function foundImageMaskGroup(context) {\n      var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n      var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n      var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\n      var fnArray = context.fnArray, argsArray = context.argsArray;\n      var curr = context.iCurr;\n      var iFirstSave = curr - 3;\n      var iFirstTransform = curr - 2;\n      var iFirstPIMXO = curr - 1;\n\n      // Look for the quartets.\n      var i = iFirstSave + 4;\n      var ii = fnArray.length;\n      while (i + 3 < ii) {\n        if (fnArray[i] !== OPS.save ||\n            fnArray[i + 1] !== OPS.transform ||\n            fnArray[i + 2] !== OPS.paintImageMaskXObject ||\n            fnArray[i + 3] !== OPS.restore) {\n          break;    // ops don't match\n        }\n        i += 4;\n      }\n\n      // At this point, i is the index of the first op past the last valid\n      // quartet.\n      var count = (i - iFirstSave) / 4;\n      count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray,\n                                             argsArray);\n      if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n        return i;\n      }\n\n      var q;\n      var isSameImage = false;\n      var iTransform, transformArgs;\n      var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n      if (argsArray[iFirstTransform][1] === 0 &&\n          argsArray[iFirstTransform][2] === 0) {\n        isSameImage = true;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        iTransform = iFirstTransform + 4;\n        var iPIMXO = iFirstPIMXO + 4;\n        for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n          transformArgs = argsArray[iTransform];\n          if (argsArray[iPIMXO][0] !== firstPIMXOArg0 ||\n              transformArgs[0] !== firstTransformArg0 ||\n              transformArgs[1] !== 0 ||\n              transformArgs[2] !== 0 ||\n              transformArgs[3] !== firstTransformArg3) {\n            if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n              isSameImage = false;\n            } else {\n              count = q;\n            }\n            break; // different image or transform\n          }\n        }\n      }\n\n      if (isSameImage) {\n        count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n        var positions = new Float32Array(count * 2);\n        iTransform = iFirstTransform;\n        for (q = 0; q < count; q++, iTransform += 4) {\n          transformArgs = argsArray[iTransform];\n          positions[(q << 1)] = transformArgs[4];\n          positions[(q << 1) + 1] = transformArgs[5];\n        }\n\n        // Replace queue items.\n        fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n        argsArray.splice(iFirstSave, count * 4,\n          [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n      } else {\n        count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n        var images = [];\n        for (q = 0; q < count; q++) {\n          transformArgs = argsArray[iFirstTransform + (q << 2)];\n          var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n          images.push({ data: maskParams.data, width: maskParams.width,\n                        height: maskParams.height,\n                        transform: transformArgs });\n        }\n\n        // Replace queue items.\n        fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n        argsArray.splice(iFirstSave, count * 4, [images]);\n      }\n\n      return iFirstSave + 1;\n    });\n\n  // This replaces (save, transform, paintImageXObject, restore)+ sequences\n  // with one paintImageXObjectRepeat operation, if the |transform| and\n  // |paintImageXObjectRepeat| ops are appropriate.\n  addState(InitialState,\n    [OPS.save, OPS.transform, OPS.paintImageXObject, OPS.restore],\n    function (context) {\n      var MIN_IMAGES_IN_BLOCK = 3;\n      var MAX_IMAGES_IN_BLOCK = 1000;\n\n      var fnArray = context.fnArray, argsArray = context.argsArray;\n      var curr = context.iCurr;\n      var iFirstSave = curr - 3;\n      var iFirstTransform = curr - 2;\n      var iFirstPIXO = curr - 1;\n      var iFirstRestore = curr;\n\n      if (argsArray[iFirstTransform][1] !== 0 ||\n          argsArray[iFirstTransform][2] !== 0) {\n        return iFirstRestore + 1;   // transform has the wrong form\n      }\n\n      // Look for the quartets.\n      var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      var i = iFirstSave + 4;\n      var ii = fnArray.length;\n      while (i + 3 < ii) {\n        if (fnArray[i] !== OPS.save ||\n            fnArray[i + 1] !== OPS.transform ||\n            fnArray[i + 2] !== OPS.paintImageXObject ||\n            fnArray[i + 3] !== OPS.restore) {\n          break;    // ops don't match\n        }\n        if (argsArray[i + 1][0] !== firstTransformArg0 ||\n            argsArray[i + 1][1] !== 0 ||\n            argsArray[i + 1][2] !== 0 ||\n            argsArray[i + 1][3] !== firstTransformArg3) {\n          break;    // transforms don't match\n        }\n        if (argsArray[i + 2][0] !== firstPIXOArg0) {\n          break;    // images don't match\n        }\n        i += 4;\n      }\n\n      // At this point, i is the index of the first op past the last valid\n      // quartet.\n      var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n      if (count < MIN_IMAGES_IN_BLOCK) {\n        return i;\n      }\n\n      // Extract the (x,y) positions from all of the matching transforms.\n      var positions = new Float32Array(count * 2);\n      var iTransform = iFirstTransform;\n      for (var q = 0; q < count; q++, iTransform += 4) {\n        var transformArgs = argsArray[iTransform];\n        positions[(q << 1)] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n\n      // Replace queue items.\n      var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3,\n                  positions];\n      fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, args);\n\n      return iFirstSave + 1;\n    });\n\n  // This replaces (beginText, setFont, setTextMatrix, showText, endText)+\n  // sequences with (beginText, setFont, (setTextMatrix, showText)+, endText)+\n  // sequences, if the font for each one is the same.\n  addState(InitialState,\n    [OPS.beginText, OPS.setFont, OPS.setTextMatrix, OPS.showText, OPS.endText],\n    function (context) {\n      var MIN_CHARS_IN_BLOCK = 3;\n      var MAX_CHARS_IN_BLOCK = 1000;\n\n      var fnArray = context.fnArray, argsArray = context.argsArray;\n      var curr = context.iCurr;\n      var iFirstBeginText = curr - 4;\n      var iFirstSetFont = curr - 3;\n      var iFirstSetTextMatrix = curr - 2;\n      var iFirstShowText = curr - 1;\n      var iFirstEndText = curr;\n\n      // Look for the quintets.\n      var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n      var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n      var i = iFirstBeginText + 5;\n      var ii = fnArray.length;\n      while (i + 4 < ii) {\n        if (fnArray[i] !== OPS.beginText ||\n            fnArray[i + 1] !== OPS.setFont ||\n            fnArray[i + 2] !== OPS.setTextMatrix ||\n            fnArray[i + 3] !== OPS.showText ||\n            fnArray[i + 4] !== OPS.endText) {\n          break;    // ops don't match\n        }\n        if (argsArray[i + 1][0] !== firstSetFontArg0 ||\n            argsArray[i + 1][1] !== firstSetFontArg1) {\n          break;    // fonts don't match\n        }\n        i += 5;\n      }\n\n      // At this point, i is the index of the first op past the last valid\n      // quintet.\n      var count = Math.min(((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n      if (count < MIN_CHARS_IN_BLOCK) {\n        return i;\n      }\n\n      // If the preceding quintet is (<something>, setFont, setTextMatrix,\n      // showText, endText), include that as well. (E.g. <something> might be\n      // |dependency|.)\n      var iFirst = iFirstBeginText;\n      if (iFirstBeginText >= 4 &&\n          fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] &&\n          fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] &&\n          fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] &&\n          fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] &&\n          argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 &&\n          argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n        count++;\n        iFirst -= 5;\n      }\n\n      // Remove (endText, beginText, setFont) trios.\n      var iEndText = iFirst + 4;\n      for (var q = 1; q < count; q++) {\n        fnArray.splice(iEndText, 3);\n        argsArray.splice(iEndText, 3);\n        iEndText += 2;\n      }\n\n      return iEndText + 1;\n    });\n\n  function QueueOptimizer() {}\n\n  QueueOptimizer.prototype = {\n    optimize: function QueueOptimizer_optimize(queue) {\n      var fnArray = queue.fnArray, argsArray = queue.argsArray;\n      var context = {\n        iCurr: 0,\n        fnArray: fnArray,\n        argsArray: argsArray\n      };\n      var state;\n      var i = 0, ii = fnArray.length;\n      while (i < ii) {\n        state = (state || InitialState)[fnArray[i]];\n        if (typeof state === 'function') { // we found some handler\n          context.iCurr = i;\n          // state() returns the index of the first non-matching op (if we\n          // didn't match) or the first op past the modified ops (if we did\n          // match and replace).\n          i = state(context);\n          state = undefined;    // reset the state machine\n          ii = context.fnArray.length;\n        } else {\n          i++;\n        }\n      }\n    }\n  };\n  return QueueOptimizer;\n})();\n\n\nvar BUILT_IN_CMAPS = [\n// << Start unicode maps.\n'Adobe-GB1-UCS2',\n'Adobe-CNS1-UCS2',\n'Adobe-Japan1-UCS2',\n'Adobe-Korea1-UCS2',\n// >> End unicode maps.\n'78-EUC-H',\n'78-EUC-V',\n'78-H',\n'78-RKSJ-H',\n'78-RKSJ-V',\n'78-V',\n'78ms-RKSJ-H',\n'78ms-RKSJ-V',\n'83pv-RKSJ-H',\n'90ms-RKSJ-H',\n'90ms-RKSJ-V',\n'90msp-RKSJ-H',\n'90msp-RKSJ-V',\n'90pv-RKSJ-H',\n'90pv-RKSJ-V',\n'Add-H',\n'Add-RKSJ-H',\n'Add-RKSJ-V',\n'Add-V',\n'Adobe-CNS1-0',\n'Adobe-CNS1-1',\n'Adobe-CNS1-2',\n'Adobe-CNS1-3',\n'Adobe-CNS1-4',\n'Adobe-CNS1-5',\n'Adobe-CNS1-6',\n'Adobe-GB1-0',\n'Adobe-GB1-1',\n'Adobe-GB1-2',\n'Adobe-GB1-3',\n'Adobe-GB1-4',\n'Adobe-GB1-5',\n'Adobe-Japan1-0',\n'Adobe-Japan1-1',\n'Adobe-Japan1-2',\n'Adobe-Japan1-3',\n'Adobe-Japan1-4',\n'Adobe-Japan1-5',\n'Adobe-Japan1-6',\n'Adobe-Korea1-0',\n'Adobe-Korea1-1',\n'Adobe-Korea1-2',\n'B5-H',\n'B5-V',\n'B5pc-H',\n'B5pc-V',\n'CNS-EUC-H',\n'CNS-EUC-V',\n'CNS1-H',\n'CNS1-V',\n'CNS2-H',\n'CNS2-V',\n'ETHK-B5-H',\n'ETHK-B5-V',\n'ETen-B5-H',\n'ETen-B5-V',\n'ETenms-B5-H',\n'ETenms-B5-V',\n'EUC-H',\n'EUC-V',\n'Ext-H',\n'Ext-RKSJ-H',\n'Ext-RKSJ-V',\n'Ext-V',\n'GB-EUC-H',\n'GB-EUC-V',\n'GB-H',\n'GB-V',\n'GBK-EUC-H',\n'GBK-EUC-V',\n'GBK2K-H',\n'GBK2K-V',\n'GBKp-EUC-H',\n'GBKp-EUC-V',\n'GBT-EUC-H',\n'GBT-EUC-V',\n'GBT-H',\n'GBT-V',\n'GBTpc-EUC-H',\n'GBTpc-EUC-V',\n'GBpc-EUC-H',\n'GBpc-EUC-V',\n'H',\n'HKdla-B5-H',\n'HKdla-B5-V',\n'HKdlb-B5-H',\n'HKdlb-B5-V',\n'HKgccs-B5-H',\n'HKgccs-B5-V',\n'HKm314-B5-H',\n'HKm314-B5-V',\n'HKm471-B5-H',\n'HKm471-B5-V',\n'HKscs-B5-H',\n'HKscs-B5-V',\n'Hankaku',\n'Hiragana',\n'KSC-EUC-H',\n'KSC-EUC-V',\n'KSC-H',\n'KSC-Johab-H',\n'KSC-Johab-V',\n'KSC-V',\n'KSCms-UHC-H',\n'KSCms-UHC-HW-H',\n'KSCms-UHC-HW-V',\n'KSCms-UHC-V',\n'KSCpc-EUC-H',\n'KSCpc-EUC-V',\n'Katakana',\n'NWP-H',\n'NWP-V',\n'RKSJ-H',\n'RKSJ-V',\n'Roman',\n'UniCNS-UCS2-H',\n'UniCNS-UCS2-V',\n'UniCNS-UTF16-H',\n'UniCNS-UTF16-V',\n'UniCNS-UTF32-H',\n'UniCNS-UTF32-V',\n'UniCNS-UTF8-H',\n'UniCNS-UTF8-V',\n'UniGB-UCS2-H',\n'UniGB-UCS2-V',\n'UniGB-UTF16-H',\n'UniGB-UTF16-V',\n'UniGB-UTF32-H',\n'UniGB-UTF32-V',\n'UniGB-UTF8-H',\n'UniGB-UTF8-V',\n'UniJIS-UCS2-H',\n'UniJIS-UCS2-HW-H',\n'UniJIS-UCS2-HW-V',\n'UniJIS-UCS2-V',\n'UniJIS-UTF16-H',\n'UniJIS-UTF16-V',\n'UniJIS-UTF32-H',\n'UniJIS-UTF32-V',\n'UniJIS-UTF8-H',\n'UniJIS-UTF8-V',\n'UniJIS2004-UTF16-H',\n'UniJIS2004-UTF16-V',\n'UniJIS2004-UTF32-H',\n'UniJIS2004-UTF32-V',\n'UniJIS2004-UTF8-H',\n'UniJIS2004-UTF8-V',\n'UniJISPro-UCS2-HW-V',\n'UniJISPro-UCS2-V',\n'UniJISPro-UTF8-V',\n'UniJISX0213-UTF32-H',\n'UniJISX0213-UTF32-V',\n'UniJISX02132004-UTF32-H',\n'UniJISX02132004-UTF32-V',\n'UniKS-UCS2-H',\n'UniKS-UCS2-V',\n'UniKS-UTF16-H',\n'UniKS-UTF16-V',\n'UniKS-UTF32-H',\n'UniKS-UTF32-V',\n'UniKS-UTF8-H',\n'UniKS-UTF8-V',\n'V',\n'WP-Symbol'];\n\n// CMap, not to be confused with TrueType's cmap.\nvar CMap = (function CMapClosure() {\n  function CMap(builtInCMap) {\n    // Codespace ranges are stored as follows:\n    // [[1BytePairs], [2BytePairs], [3BytePairs], [4BytePairs]]\n    // where nBytePairs are ranges e.g. [low1, high1, low2, high2, ...]\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    // Map entries have one of two forms.\n    // - cid chars are 16-bit unsigned integers, stored as integers.\n    // - bf chars are variable-length byte sequences, stored as strings, with\n    //   one byte per character.\n    this._map = [];\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n\n    mapCidRange: function(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n\n    mapBfRange: function(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        // Only the last byte has to be incremented.\n        dstLow = dstLow.substr(0, lastByte) +\n                 String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n\n    mapBfRangeToArray: function(low, high, array) {\n      var i = 0, ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n\n    // This is used for both bf and cid chars.\n    mapOne: function(src, dst) {\n      this._map[src] = dst;\n    },\n\n    lookup: function(code) {\n      return this._map[code];\n    },\n\n    contains: function(code) {\n      return this._map[code] !== undefined;\n    },\n\n    forEach: function(callback) {\n      // Most maps have fewer than 65536 entries, and for those we use normal\n      // array iteration. But really sparse tables are possible -- e.g. with\n      // indices in the *billions*. For such tables we use for..in, which isn't\n      // ideal because it stringifies the indices for all present elements, but\n      // it does avoid iterating over every undefined entry.\n      var map = this._map;\n      var length = map.length;\n      var i;\n      if (length <= 0x10000) {\n        for (i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (i in this._map) {\n          callback(i, map[i]);\n        }\n      }\n    },\n\n    charCodeOf: function(value) {\n      return this._map.indexOf(value);\n    },\n\n    getMap: function() {\n      return this._map;\n    },\n\n    readCharCode: function(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      // 9.7.6.2 CMap Mapping\n      // The code length is at most 4.\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = ((c << 8) | str.charCodeAt(offset + n)) >>> 0;\n        // Check each codespace range to see if it falls within.\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    }\n  };\n  return CMap;\n})();\n\n// A special case of CMap, where the _map array implicitly has a length of\n// 65535 and each element is equal to its index.\nvar IdentityCMap = (function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  Util.inherit(IdentityCMap, CMap, {});\n\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n\n    mapCidRange: function(low, high, dstLow) {\n      error('should not call mapCidRange');\n    },\n\n    mapBfRange: function(low, high, dstLow) {\n      error('should not call mapBfRange');\n    },\n\n    mapBfRangeToArray: function(low, high, array) {\n      error('should not call mapBfRangeToArray');\n    },\n\n    mapOne: function(src, dst) {\n      error('should not call mapCidOne');\n    },\n\n    lookup: function(code) {\n      return (isInt(code) && code <= 0xffff) ? code : undefined;\n    },\n\n    contains: function(code) {\n      return isInt(code) && code <= 0xffff;\n    },\n\n    forEach: function(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n\n    charCodeOf: function(value) {\n      return (isInt(value) && value <= 0xffff) ? value : -1;\n    },\n\n    getMap: function() {\n      // Sometimes identity maps must be instantiated, but it's rare.\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode\n  };\n\n  return IdentityCMap;\n})();\n\nvar BinaryCMapReader = (function BinaryCMapReaderClosure() {\n  function fetchBinaryData(url) {\n    var nonBinaryRequest = PDFJS.disableWorker;\n    var request = new XMLHttpRequest();\n    request.open('GET', url, false);\n    if (!nonBinaryRequest) {\n      try {\n        request.responseType = 'arraybuffer';\n        nonBinaryRequest = request.responseType !== 'arraybuffer';\n      } catch (e) {\n        nonBinaryRequest = true;\n      }\n    }\n    if (nonBinaryRequest && request.overrideMimeType) {\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    }\n    request.send(null);\n    if (nonBinaryRequest ? !request.responseText : !request.response) {\n      error('Unable to get binary cMap at: ' + url);\n    }\n    if (nonBinaryRequest) {\n      var data = Array.prototype.map.call(request.responseText, function (ch) {\n        return ch.charCodeAt(0) & 255;\n      });\n      return new Uint8Array(data);\n    }\n    return new Uint8Array(request.response);\n  }\n\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = (n << 8) | a[i];\n    }\n    return n >>> 0;\n  }\n\n  function hexToStr(a, size) {\n    // This code is hot. Special-case some common values to avoid creating an\n    // object with subarray().\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19; // ceil(MAX_NUM_SIZE * 7 / 8)\n\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n\n  BinaryCMapStream.prototype = {\n    readByte: function () {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function () {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          error('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = (n << 7) | (b & 0x7F);\n      } while (!last);\n      return n;\n    },\n    readSigned: function () {\n      var n = this.readNumber();\n      return (n & 1) ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function (num, size) {\n      num.set(this.buffer.subarray(this.pos,\n        this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function (num, size) {\n      var last;\n      var stack = this.tmpBuf, sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          error('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size, buffer = 0, bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = (stack[--sp] << bufferSize) | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function (num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = ((c & 1) << 8) | num[i];\n        num[i] = (c >> 1) ^ sign;\n      }\n    },\n    readString: function () {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n\n  function processBinaryCMap(url, cMap, extend) {\n    var data = fetchBinaryData(url);\n    var stream = new BinaryCMapStream(data);\n\n    var header = stream.readByte();\n    cMap.vertical = !!(header & 1);\n\n    var useCMap = null;\n    var start = new Uint8Array(MAX_NUM_SIZE);\n    var end = new Uint8Array(MAX_NUM_SIZE);\n    var char = new Uint8Array(MAX_NUM_SIZE);\n    var charCode = new Uint8Array(MAX_NUM_SIZE);\n    var tmp = new Uint8Array(MAX_NUM_SIZE);\n    var code;\n\n    var b;\n    while ((b = stream.readByte()) >= 0) {\n      var type = b >> 5;\n      if (type === 7) { // metadata, e.g. comment or usecmap\n        switch (b & 0x1F) {\n          case 0:\n            stream.readString(); // skipping comment\n            break;\n          case 1:\n            useCMap = stream.readString();\n            break;\n        }\n        continue;\n      }\n      var sequence = !!(b & 0x10);\n      var dataSize = b & 15;\n\n      assert(dataSize + 1 <= MAX_NUM_SIZE);\n\n      var ucs2DataSize = 1;\n      var subitemsCount = stream.readNumber();\n      var i;\n      switch (type) {\n        case 0: // codespacerange\n          stream.readHex(start, dataSize);\n          stream.readHexNumber(end, dataSize);\n          addHex(end, start, dataSize);\n          cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize),\n                                 hexToInt(end, dataSize));\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(end, dataSize);\n            stream.readHexNumber(start, dataSize);\n            addHex(start, end, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize),\n                                   hexToInt(end, dataSize));\n          }\n          break;\n        case 1: // notdefrange\n          stream.readHex(start, dataSize);\n          stream.readHexNumber(end, dataSize);\n          addHex(end, start, dataSize);\n          code = stream.readNumber();\n          // undefined range, skipping\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(end, dataSize);\n            stream.readHexNumber(start, dataSize);\n            addHex(start, end, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            // nop\n          }\n          break;\n        case 2: // cidchar\n          stream.readHex(char, dataSize);\n          code = stream.readNumber();\n          cMap.mapOne(hexToInt(char, dataSize), code);\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(char, dataSize);\n            if (!sequence) {\n              stream.readHexNumber(tmp, dataSize);\n              addHex(char, tmp, dataSize);\n            }\n            code = stream.readSigned() + (code + 1);\n            cMap.mapOne(hexToInt(char, dataSize), code);\n          }\n          break;\n        case 3: // cidrange\n          stream.readHex(start, dataSize);\n          stream.readHexNumber(end, dataSize);\n          addHex(end, start, dataSize);\n          code = stream.readNumber();\n          cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize),\n                           code);\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(end, dataSize);\n            if (!sequence) {\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n            } else {\n              start.set(end);\n            }\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize),\n                             code);\n          }\n          break;\n        case 4: // bfchar\n          stream.readHex(char, ucs2DataSize);\n          stream.readHex(charCode, dataSize);\n          cMap.mapOne(hexToInt(char, ucs2DataSize),\n                      hexToStr(charCode, dataSize));\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(char, ucs2DataSize);\n            if (!sequence) {\n              stream.readHexNumber(tmp, ucs2DataSize);\n              addHex(char, tmp, ucs2DataSize);\n            }\n            incHex(charCode, dataSize);\n            stream.readHexSigned(tmp, dataSize);\n            addHex(charCode, tmp, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize),\n                        hexToStr(charCode, dataSize));\n          }\n          break;\n        case 5: // bfrange\n          stream.readHex(start, ucs2DataSize);\n          stream.readHexNumber(end, ucs2DataSize);\n          addHex(end, start, ucs2DataSize);\n          stream.readHex(charCode, dataSize);\n          cMap.mapBfRange(hexToInt(start, ucs2DataSize),\n                          hexToInt(end, ucs2DataSize),\n                          hexToStr(charCode, dataSize));\n          for (i = 1; i < subitemsCount; i++) {\n            incHex(end, ucs2DataSize);\n            if (!sequence) {\n              stream.readHexNumber(start, ucs2DataSize);\n              addHex(start, end, ucs2DataSize);\n            } else {\n              start.set(end);\n            }\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize),\n                            hexToInt(end, ucs2DataSize),\n                            hexToStr(charCode, dataSize));\n          }\n          break;\n        default:\n          error('Unknown type: ' + type);\n          break;\n      }\n    }\n\n    if (useCMap) {\n      extend(useCMap);\n    }\n    return cMap;\n  }\n\n  function BinaryCMapReader() {}\n\n  BinaryCMapReader.prototype = {\n    read: processBinaryCMap\n  };\n\n  return BinaryCMapReader;\n})();\n\nvar CMapFactory = (function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = (a << 8) | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n\n  function expectString(obj) {\n    if (!isString(obj)) {\n      error('Malformed CMap: expected string.');\n    }\n  }\n\n  function expectInt(obj) {\n    if (!isInt(obj)) {\n      error('Malformed CMap: expected int.');\n    }\n  }\n\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      }\n      if (isCmd(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      // TODO are /dstName used?\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      }\n      if (isCmd(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (isInt(obj) || isString(obj)) {\n        var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if (isCmd(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!isCmd(obj, ']') && !isEOF(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    error('Invalid bf range.');\n  }\n\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      }\n      if (isCmd(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      }\n      if (isCmd(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      }\n      if (isCmd(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!isString(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!isString(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    error('Invalid codespace range.');\n  }\n\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (isInt(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n\n  function parseCMap(cMap, lexer, builtInCMapParams, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n        break;\n      } else if (isName(obj)) {\n        if (obj.name === 'WMode') {\n          parseWMode(cMap, lexer);\n        }\n        previous = obj;\n      } else if (isCmd(obj)) {\n        switch (obj.cmd) {\n          case 'endcmap':\n            break objLoop;\n          case 'usecmap':\n            if (isName(previous)) {\n              embededUseCMap = previous.name;\n            }\n            break;\n          case 'begincodespacerange':\n            parseCodespaceRange(cMap, lexer);\n            break;\n          case 'beginbfchar':\n            parseBfChar(cMap, lexer);\n            break;\n          case 'begincidchar':\n            parseCidChar(cMap, lexer);\n            break;\n          case 'beginbfrange':\n            parseBfRange(cMap, lexer);\n            break;\n          case 'begincidrange':\n            parseCidRange(cMap, lexer);\n            break;\n        }\n      }\n    }\n\n    if (!useCMap && embededUseCMap) {\n      // Load the usecmap definition from the file only if there wasn't one\n      // specified.\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      extendCMap(cMap, builtInCMapParams, useCMap);\n    }\n  }\n\n  function extendCMap(cMap, builtInCMapParams, useCMap) {\n    cMap.useCMap = createBuiltInCMap(useCMap, builtInCMapParams);\n    // If there aren't any code space ranges defined clone all the parent ones\n    // into this cMap.\n    if (cMap.numCodespaceRanges === 0) {\n      var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n      for (var i = 0; i < useCodespaceRanges.length; i++) {\n        cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n      }\n      cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n    }\n    // Merge the map into the current one, making sure not to override\n    // any previously defined entries.\n    cMap.useCMap.forEach(function(key, value) {\n      if (!cMap.contains(key)) {\n        cMap.mapOne(key, cMap.useCMap.lookup(key));\n      }\n    });\n  }\n\n  function parseBinaryCMap(name, builtInCMapParams) {\n    var url = builtInCMapParams.url + name + '.bcmap';\n    var cMap = new CMap(true);\n    new BinaryCMapReader().read(url, cMap, function (useCMap) {\n      extendCMap(cMap, builtInCMapParams, useCMap);\n    });\n    return cMap;\n  }\n\n  function createBuiltInCMap(name, builtInCMapParams) {\n    if (name === 'Identity-H') {\n      return new IdentityCMap(false, 2);\n    } else if (name === 'Identity-V') {\n      return new IdentityCMap(true, 2);\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      error('Unknown cMap name: ' + name);\n    }\n    assert(builtInCMapParams, 'built-in cMap parameters are not provided');\n\n    if (builtInCMapParams.packed) {\n      return parseBinaryCMap(name, builtInCMapParams);\n    }\n\n    var request = new XMLHttpRequest();\n    var url = builtInCMapParams.url + name;\n    request.open('GET', url, false);\n    request.send(null);\n    if (!request.responseText) {\n      error('Unable to get cMap at: ' + url);\n    }\n    var cMap = new CMap(true);\n    var lexer = new Lexer(new StringStream(request.responseText));\n    parseCMap(cMap, lexer, builtInCMapParams, null);\n    return cMap;\n  }\n\n  return {\n    create: function (encoding, builtInCMapParams, useCMap) {\n      if (isName(encoding)) {\n        return createBuiltInCMap(encoding.name, builtInCMapParams);\n      } else if (isStream(encoding)) {\n        var cMap = new CMap();\n        var lexer = new Lexer(encoding);\n        try {\n          parseCMap(cMap, lexer, builtInCMapParams, useCMap);\n        } catch (e) {\n          warn('Invalid CMap data. ' + e);\n        }\n        return cMap;\n      }\n      error('Encoding required.');\n    }\n  };\n})();\n\n\n// Unicode Private Use Area\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\n// PDF Glyph Space Units are one Thousandth of a TextSpace Unit\n// except for Type 3 fonts\nvar PDF_GLYPH_SPACE_UNITS = 1000;\n\n// Hinting is currently disabled due to unknown problems on windows\n// in tracemonkey and various other pdfs with type1 fonts.\nvar HINTING_ENABLED = false;\n\n// Accented charactars are not displayed properly on windows, using this flag\n// to control analysis of seac charstrings.\nvar SEAC_ANALYSIS_ENABLED = false;\n\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\n\nvar Encodings = {\n  ExpertEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle',\n    'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n    'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n    'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n    'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n    'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior',\n    'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior',\n    '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '',\n    'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n    'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n    'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n    'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n    'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n    'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall',\n    '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall',\n    'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '',\n    'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall',\n    'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n    'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior',\n    'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior',\n    'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior',\n    'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior',\n    'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n    'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n    'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n    'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n    'Ydieresissmall'],\n  MacExpertEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle',\n    'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall',\n    'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n    'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle',\n    'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle',\n    'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle',\n    'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '',\n    'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter',\n    'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n    'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff',\n    'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior',\n    'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall',\n    'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall',\n    'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall',\n    'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah',\n    'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '',\n    'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall',\n    'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall',\n    'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall',\n    'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall',\n    'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '',\n    'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior',\n    'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior',\n    'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior',\n    'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '',\n    'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior',\n    'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall',\n    'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '',\n    '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '',\n    'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior',\n    'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior',\n    'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior',\n    'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior',\n    '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall',\n    'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior',\n    'periodsuperior', 'Dotaccentsmall', 'Ringsmall'],\n  MacRomanEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus',\n    'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three',\n    'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon',\n    'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F',\n    'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\n    'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g',\n    'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n    'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis',\n    'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde',\n    'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute',\n    'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave',\n    'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling',\n    'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright',\n    'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity',\n    'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff',\n    'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine',\n    'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot',\n    'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft',\n    'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE',\n    'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft',\n    'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl',\n    'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand',\n    'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple',\n    'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex',\n    'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron'],\n  StandardEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus',\n    'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three',\n    'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon',\n    'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F',\n    'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\n    'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f',\n    'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\n    'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown',\n    'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n    'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n    'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl',\n    'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase',\n    'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n    'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex',\n    'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla',\n    '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '',\n    '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae',\n    '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'],\n  WinAnsiEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus',\n    'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three',\n    'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon',\n    'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F',\n    'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\n    'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g',\n    'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n    'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase',\n    'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron',\n    'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft',\n    'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash',\n    'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet',\n    'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling',\n    'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright',\n    'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered',\n    'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute',\n    'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior',\n    'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters',\n    'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis',\n    'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis',\n    'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve',\n    'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash',\n    'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn',\n    'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis',\n    'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis',\n    'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve',\n    'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash',\n    'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn',\n    'ydieresis'],\n  SymbolSetEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent',\n    'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus',\n    'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four',\n    'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi',\n    'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa',\n    'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau',\n    'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft',\n    'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex',\n    'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota',\n    'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho',\n    'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta',\n    'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal',\n    'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade',\n    'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree',\n    'plusminus', 'second', 'greaterequal', 'multiply', 'proportional',\n    'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence',\n    'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn',\n    'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply',\n    'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset',\n    'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element',\n    'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif',\n    'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot',\n    'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup',\n    'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans',\n    'copyrightsans', 'trademarksans', 'summation', 'parenlefttp',\n    'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex',\n    'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex',\n    '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt',\n    'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp',\n    'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid',\n    'bracerightbt'],\n  ZapfDingbatsEncoding: ['', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117',\n    'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19',\n    'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7',\n    'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36',\n    'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46',\n    'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56',\n    'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66',\n    'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75',\n    'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97',\n    'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205',\n    'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103',\n    'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120',\n    'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129',\n    'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138',\n    'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147',\n    'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156',\n    'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165',\n    'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173',\n    'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180',\n    'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185',\n    'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191']\n};\n\n/**\n * Hold a map of decoded fonts and of the standard fourteen Type1\n * fonts and their acronyms.\n */\nvar stdFontMap = {\n  'ArialNarrow': 'Helvetica',\n  'ArialNarrow-Bold': 'Helvetica-Bold',\n  'ArialNarrow-BoldItalic': 'Helvetica-BoldOblique',\n  'ArialNarrow-Italic': 'Helvetica-Oblique',\n  'ArialBlack': 'Helvetica',\n  'ArialBlack-Bold': 'Helvetica-Bold',\n  'ArialBlack-BoldItalic': 'Helvetica-BoldOblique',\n  'ArialBlack-Italic': 'Helvetica-Oblique',\n  'Arial': 'Helvetica',\n  'Arial-Bold': 'Helvetica-Bold',\n  'Arial-BoldItalic': 'Helvetica-BoldOblique',\n  'Arial-Italic': 'Helvetica-Oblique',\n  'Arial-BoldItalicMT': 'Helvetica-BoldOblique',\n  'Arial-BoldMT': 'Helvetica-Bold',\n  'Arial-ItalicMT': 'Helvetica-Oblique',\n  'ArialMT': 'Helvetica',\n  'Courier-Bold': 'Courier-Bold',\n  'Courier-BoldItalic': 'Courier-BoldOblique',\n  'Courier-Italic': 'Courier-Oblique',\n  'CourierNew': 'Courier',\n  'CourierNew-Bold': 'Courier-Bold',\n  'CourierNew-BoldItalic': 'Courier-BoldOblique',\n  'CourierNew-Italic': 'Courier-Oblique',\n  'CourierNewPS-BoldItalicMT': 'Courier-BoldOblique',\n  'CourierNewPS-BoldMT': 'Courier-Bold',\n  'CourierNewPS-ItalicMT': 'Courier-Oblique',\n  'CourierNewPSMT': 'Courier',\n  'Helvetica': 'Helvetica',\n  'Helvetica-Bold': 'Helvetica-Bold',\n  'Helvetica-BoldItalic': 'Helvetica-BoldOblique',\n  'Helvetica-BoldOblique': 'Helvetica-BoldOblique',\n  'Helvetica-Italic': 'Helvetica-Oblique',\n  'Helvetica-Oblique':'Helvetica-Oblique',\n  'Symbol-Bold': 'Symbol',\n  'Symbol-BoldItalic': 'Symbol',\n  'Symbol-Italic': 'Symbol',\n  'TimesNewRoman': 'Times-Roman',\n  'TimesNewRoman-Bold': 'Times-Bold',\n  'TimesNewRoman-BoldItalic': 'Times-BoldItalic',\n  'TimesNewRoman-Italic': 'Times-Italic',\n  'TimesNewRomanPS': 'Times-Roman',\n  'TimesNewRomanPS-Bold': 'Times-Bold',\n  'TimesNewRomanPS-BoldItalic': 'Times-BoldItalic',\n  'TimesNewRomanPS-BoldItalicMT': 'Times-BoldItalic',\n  'TimesNewRomanPS-BoldMT': 'Times-Bold',\n  'TimesNewRomanPS-Italic': 'Times-Italic',\n  'TimesNewRomanPS-ItalicMT': 'Times-Italic',\n  'TimesNewRomanPSMT': 'Times-Roman',\n  'TimesNewRomanPSMT-Bold': 'Times-Bold',\n  'TimesNewRomanPSMT-BoldItalic': 'Times-BoldItalic',\n  'TimesNewRomanPSMT-Italic': 'Times-Italic'\n};\n\n/**\n * Holds the map of the non-standard fonts that might be included as a standard\n * fonts without glyph data.\n */\nvar nonStdFontMap = {\n  'CenturyGothic': 'Helvetica',\n  'CenturyGothic-Bold': 'Helvetica-Bold',\n  'CenturyGothic-BoldItalic': 'Helvetica-BoldOblique',\n  'CenturyGothic-Italic': 'Helvetica-Oblique',\n  'ComicSansMS': 'Comic Sans MS',\n  'ComicSansMS-Bold': 'Comic Sans MS-Bold',\n  'ComicSansMS-BoldItalic': 'Comic Sans MS-BoldItalic',\n  'ComicSansMS-Italic': 'Comic Sans MS-Italic',\n  'LucidaConsole': 'Courier',\n  'LucidaConsole-Bold': 'Courier-Bold',\n  'LucidaConsole-BoldItalic': 'Courier-BoldOblique',\n  'LucidaConsole-Italic': 'Courier-Oblique',\n  'MS-Gothic': 'MS Gothic',\n  'MS-Gothic-Bold': 'MS Gothic-Bold',\n  'MS-Gothic-BoldItalic': 'MS Gothic-BoldItalic',\n  'MS-Gothic-Italic': 'MS Gothic-Italic',\n  'MS-Mincho': 'MS Mincho',\n  'MS-Mincho-Bold': 'MS Mincho-Bold',\n  'MS-Mincho-BoldItalic': 'MS Mincho-BoldItalic',\n  'MS-Mincho-Italic': 'MS Mincho-Italic',\n  'MS-PGothic': 'MS PGothic',\n  'MS-PGothic-Bold': 'MS PGothic-Bold',\n  'MS-PGothic-BoldItalic': 'MS PGothic-BoldItalic',\n  'MS-PGothic-Italic': 'MS PGothic-Italic',\n  'MS-PMincho': 'MS PMincho',\n  'MS-PMincho-Bold': 'MS PMincho-Bold',\n  'MS-PMincho-BoldItalic': 'MS PMincho-BoldItalic',\n  'MS-PMincho-Italic': 'MS PMincho-Italic',\n  'Wingdings': 'ZapfDingbats'\n};\n\nvar serifFonts = {\n  'Adobe Jenson': true, 'Adobe Text': true, 'Albertus': true,\n  'Aldus': true, 'Alexandria': true, 'Algerian': true,\n  'American Typewriter': true, 'Antiqua': true, 'Apex': true,\n  'Arno': true, 'Aster': true, 'Aurora': true,\n  'Baskerville': true, 'Bell': true, 'Bembo': true,\n  'Bembo Schoolbook': true, 'Benguiat': true, 'Berkeley Old Style': true,\n  'Bernhard Modern': true, 'Berthold City': true, 'Bodoni': true,\n  'Bauer Bodoni': true, 'Book Antiqua': true, 'Bookman': true,\n  'Bordeaux Roman': true, 'Californian FB': true, 'Calisto': true,\n  'Calvert': true, 'Capitals': true, 'Cambria': true,\n  'Cartier': true, 'Caslon': true, 'Catull': true,\n  'Centaur': true, 'Century Old Style': true, 'Century Schoolbook': true,\n  'Chaparral': true, 'Charis SIL': true, 'Cheltenham': true,\n  'Cholla Slab': true, 'Clarendon': true, 'Clearface': true,\n  'Cochin': true, 'Colonna': true, 'Computer Modern': true,\n  'Concrete Roman': true, 'Constantia': true, 'Cooper Black': true,\n  'Corona': true, 'Ecotype': true, 'Egyptienne': true,\n  'Elephant': true, 'Excelsior': true, 'Fairfield': true,\n  'FF Scala': true, 'Folkard': true, 'Footlight': true,\n  'FreeSerif': true, 'Friz Quadrata': true, 'Garamond': true,\n  'Gentium': true, 'Georgia': true, 'Gloucester': true,\n  'Goudy Old Style': true, 'Goudy Schoolbook': true, 'Goudy Pro Font': true,\n  'Granjon': true, 'Guardian Egyptian': true, 'Heather': true,\n  'Hercules': true, 'High Tower Text': true, 'Hiroshige': true,\n  'Hoefler Text': true, 'Humana Serif': true, 'Imprint': true,\n  'Ionic No. 5': true, 'Janson': true, 'Joanna': true,\n  'Korinna': true, 'Lexicon': true, 'Liberation Serif': true,\n  'Linux Libertine': true, 'Literaturnaya': true, 'Lucida': true,\n  'Lucida Bright': true, 'Melior': true, 'Memphis': true,\n  'Miller': true, 'Minion': true, 'Modern': true,\n  'Mona Lisa': true, 'Mrs Eaves': true, 'MS Serif': true,\n  'Museo Slab': true, 'New York': true, 'Nimbus Roman': true,\n  'NPS Rawlinson Roadway': true, 'Palatino': true, 'Perpetua': true,\n  'Plantin': true, 'Plantin Schoolbook': true, 'Playbill': true,\n  'Poor Richard': true, 'Rawlinson Roadway': true, 'Renault': true,\n  'Requiem': true, 'Rockwell': true, 'Roman': true,\n  'Rotis Serif': true, 'Sabon': true, 'Scala': true,\n  'Seagull': true, 'Sistina': true, 'Souvenir': true,\n  'STIX': true, 'Stone Informal': true, 'Stone Serif': true,\n  'Sylfaen': true, 'Times': true, 'Trajan': true,\n  'Trinité': true, 'Trump Mediaeval': true, 'Utopia': true,\n  'Vale Type': true, 'Bitstream Vera': true, 'Vera Serif': true,\n  'Versailles': true, 'Wanted': true, 'Weiss': true,\n  'Wide Latin': true, 'Windsor': true, 'XITS': true\n};\n\nvar symbolsFonts = {\n  'Dingbats': true, 'Symbol': true, 'ZapfDingbats': true\n};\n\n// Glyph map for well-known standard fonts. Sometimes Ghostscript uses CID fonts\n// but does not embed the CID to GID mapping. The mapping is incomplete for all\n// glyphs, but common for some set of the standard fonts.\nvar GlyphMapForStandardFonts = {\n  '2': 10, '3': 32, '4': 33, '5': 34, '6': 35, '7': 36, '8': 37, '9': 38,\n  '10': 39, '11': 40, '12': 41, '13': 42, '14': 43, '15': 44, '16': 45,\n  '17': 46, '18': 47, '19': 48, '20': 49, '21': 50, '22': 51, '23': 52,\n  '24': 53, '25': 54, '26': 55, '27': 56, '28': 57, '29': 58, '30': 894,\n  '31': 60, '32': 61, '33': 62, '34': 63, '35': 64, '36': 65, '37': 66,\n  '38': 67, '39': 68, '40': 69, '41': 70, '42': 71, '43': 72, '44': 73,\n  '45': 74, '46': 75, '47': 76, '48': 77, '49': 78, '50': 79, '51': 80,\n  '52': 81, '53': 82, '54': 83, '55': 84, '56': 85, '57': 86, '58': 87,\n  '59': 88, '60': 89, '61': 90, '62': 91, '63': 92, '64': 93, '65': 94,\n  '66': 95, '67': 96, '68': 97, '69': 98, '70': 99, '71': 100, '72': 101,\n  '73': 102, '74': 103, '75': 104, '76': 105, '77': 106, '78': 107, '79': 108,\n  '80': 109, '81': 110, '82': 111, '83': 112, '84': 113, '85': 114, '86': 115,\n  '87': 116, '88': 117, '89': 118, '90': 119, '91': 120, '92': 121, '93': 122,\n  '94': 123, '95': 124, '96': 125, '97': 126, '98': 196, '99': 197, '100': 199,\n  '101': 201, '102': 209, '103': 214, '104': 220, '105': 225, '106': 224,\n  '107': 226, '108': 228, '109': 227, '110': 229, '111': 231, '112': 233,\n  '113': 232, '114': 234, '115': 235, '116': 237, '117': 236, '118': 238,\n  '119': 239, '120': 241, '121': 243, '122': 242, '123': 244, '124': 246,\n  '125': 245, '126': 250, '127': 249, '128': 251, '129': 252, '130': 8224,\n  '131': 176, '132': 162, '133': 163, '134': 167, '135': 8226, '136': 182,\n  '137': 223, '138': 174, '139': 169, '140': 8482, '141': 180, '142': 168,\n  '143': 8800, '144': 198, '145': 216, '146': 8734, '147': 177, '148': 8804,\n  '149': 8805, '150': 165, '151': 181, '152': 8706, '153': 8721, '154': 8719,\n  '156': 8747, '157': 170, '158': 186, '159': 8486, '160': 230, '161': 248,\n  '162': 191, '163': 161, '164': 172, '165': 8730, '166': 402, '167': 8776,\n  '168': 8710, '169': 171, '170': 187, '171': 8230, '210': 218, '223': 711,\n  '224': 321, '225': 322, '227': 353, '229': 382, '234': 253, '252': 263,\n  '253': 268, '254': 269, '258': 258, '260': 260, '261': 261, '265': 280,\n  '266': 281, '268': 283, '269': 313, '275': 323, '276': 324, '278': 328,\n  '284': 345, '285': 346, '286': 347, '292': 367, '295': 377, '296': 378,\n  '298': 380, '305': 963,\n  '306': 964, '307': 966, '308': 8215, '309': 8252, '310': 8319, '311': 8359,\n  '312': 8592, '313': 8593, '337': 9552, '493': 1039, '494': 1040, '705': 1524,\n  '706': 8362, '710': 64288, '711': 64298, '759': 1617, '761': 1776,\n  '763': 1778, '775': 1652, '777': 1764, '778': 1780, '779': 1781, '780': 1782,\n  '782': 771, '783': 64726, '786': 8363, '788': 8532, '790': 768, '791': 769,\n  '792': 768, '795': 803, '797': 64336, '798': 64337, '799': 64342,\n  '800': 64343, '801': 64344, '802': 64345, '803': 64362, '804': 64363,\n  '805': 64364, '2424': 7821, '2425': 7822, '2426': 7823, '2427': 7824,\n  '2428': 7825, '2429': 7826, '2430': 7827, '2433': 7682, '2678': 8045,\n  '2679': 8046, '2830': 1552, '2838': 686, '2840': 751, '2842': 753,\n  '2843': 754, '2844': 755, '2846': 757, '2856': 767, '2857': 848, '2858': 849,\n  '2862': 853, '2863': 854, '2864': 855, '2865': 861, '2866': 862, '2906': 7460,\n  '2908': 7462, '2909': 7463, '2910': 7464, '2912': 7466, '2913': 7467,\n  '2914': 7468, '2916': 7470, '2917': 7471, '2918': 7472, '2920': 7474,\n  '2921': 7475, '2922': 7476, '2924': 7478, '2925': 7479, '2926': 7480,\n  '2928': 7482, '2929': 7483, '2930': 7484, '2932': 7486, '2933': 7487,\n  '2934': 7488, '2936': 7490, '2937': 7491, '2938': 7492, '2940': 7494,\n  '2941': 7495, '2942': 7496, '2944': 7498, '2946': 7500, '2948': 7502,\n  '2950': 7504, '2951': 7505, '2952': 7506, '2954': 7508, '2955': 7509,\n  '2956': 7510, '2958': 7512, '2959': 7513, '2960': 7514, '2962': 7516,\n  '2963': 7517, '2964': 7518, '2966': 7520, '2967': 7521, '2968': 7522,\n  '2970': 7524, '2971': 7525, '2972': 7526, '2974': 7528, '2975': 7529,\n  '2976': 7530, '2978': 1537, '2979': 1538, '2980': 1539, '2982': 1549,\n  '2983': 1551, '2984': 1552, '2986': 1554, '2987': 1555, '2988': 1556,\n  '2990': 1623, '2991': 1624, '2995': 1775, '2999': 1791, '3002': 64290,\n  '3003': 64291, '3004': 64292, '3006': 64294, '3007': 64295, '3008': 64296,\n  '3011': 1900, '3014': 8223, '3015': 8244, '3017': 7532, '3018': 7533,\n  '3019': 7534, '3075': 7590, '3076': 7591, '3079': 7594, '3080': 7595,\n  '3083': 7598, '3084': 7599, '3087': 7602, '3088': 7603, '3091': 7606,\n  '3092': 7607, '3095': 7610, '3096': 7611, '3099': 7614, '3100': 7615,\n  '3103': 7618, '3104': 7619, '3107': 8337, '3108': 8338, '3116': 1884,\n  '3119': 1885, '3120': 1885, '3123': 1886, '3124': 1886, '3127': 1887,\n  '3128': 1887, '3131': 1888, '3132': 1888, '3135': 1889, '3136': 1889,\n  '3139': 1890, '3140': 1890, '3143': 1891, '3144': 1891, '3147': 1892,\n  '3148': 1892, '3153': 580, '3154': 581, '3157': 584, '3158': 585, '3161': 588,\n  '3162': 589, '3165': 891, '3166': 892, '3169': 1274, '3170': 1275,\n  '3173': 1278, '3174': 1279, '3181': 7622, '3182': 7623, '3282': 11799,\n  '3316': 578, '3379': 42785, '3393': 1159, '3416': 8377\n};\n\n// Some characters, e.g. copyrightserif, are mapped to the private use area and\n// might not be displayed using standard fonts. Mapping/hacking well-known chars\n// to the similar equivalents in the normal characters range.\nvar SpecialPUASymbols = {\n  '63721': 0x00A9, // copyrightsans (0xF8E9) => copyright\n  '63193': 0x00A9, // copyrightserif (0xF6D9) => copyright\n  '63720': 0x00AE, // registersans (0xF8E8) => registered\n  '63194': 0x00AE, // registerserif (0xF6DA) => registered\n  '63722': 0x2122, // trademarksans (0xF8EA) => trademark\n  '63195': 0x2122, // trademarkserif (0xF6DB) => trademark\n  '63729': 0x23A7, // bracelefttp (0xF8F1)\n  '63730': 0x23A8, // braceleftmid (0xF8F2)\n  '63731': 0x23A9, // braceleftbt (0xF8F3)\n  '63740': 0x23AB, // bracerighttp (0xF8FC)\n  '63741': 0x23AC, // bracerightmid (0xF8FD)\n  '63742': 0x23AD, // bracerightbt (0xF8FE)\n  '63726': 0x23A1, // bracketlefttp (0xF8EE)\n  '63727': 0x23A2, // bracketleftex (0xF8EF)\n  '63728': 0x23A3, // bracketleftbt (0xF8F0)\n  '63737': 0x23A4, // bracketrighttp (0xF8F9)\n  '63738': 0x23A5, // bracketrightex (0xF8FA)\n  '63739': 0x23A6, // bracketrightbt (0xF8FB)\n  '63723': 0x239B, // parenlefttp (0xF8EB)\n  '63724': 0x239C, // parenleftex (0xF8EC)\n  '63725': 0x239D, // parenleftbt (0xF8ED)\n  '63734': 0x239E, // parenrighttp (0xF8F6)\n  '63735': 0x239F, // parenrightex (0xF8F7)\n  '63736': 0x23A0, // parenrightbt (0xF8F8)\n};\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) { // Specials unicode block.\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return (SpecialPUASymbols[code] || code);\n  }\n  return code;\n}\n\nvar UnicodeRanges = [\n  { 'begin': 0x0000, 'end': 0x007F }, // Basic Latin\n  { 'begin': 0x0080, 'end': 0x00FF }, // Latin-1 Supplement\n  { 'begin': 0x0100, 'end': 0x017F }, // Latin Extended-A\n  { 'begin': 0x0180, 'end': 0x024F }, // Latin Extended-B\n  { 'begin': 0x0250, 'end': 0x02AF }, // IPA Extensions\n  { 'begin': 0x02B0, 'end': 0x02FF }, // Spacing Modifier Letters\n  { 'begin': 0x0300, 'end': 0x036F }, // Combining Diacritical Marks\n  { 'begin': 0x0370, 'end': 0x03FF }, // Greek and Coptic\n  { 'begin': 0x2C80, 'end': 0x2CFF }, // Coptic\n  { 'begin': 0x0400, 'end': 0x04FF }, // Cyrillic\n  { 'begin': 0x0530, 'end': 0x058F }, // Armenian\n  { 'begin': 0x0590, 'end': 0x05FF }, // Hebrew\n  { 'begin': 0xA500, 'end': 0xA63F }, // Vai\n  { 'begin': 0x0600, 'end': 0x06FF }, // Arabic\n  { 'begin': 0x07C0, 'end': 0x07FF }, // NKo\n  { 'begin': 0x0900, 'end': 0x097F }, // Devanagari\n  { 'begin': 0x0980, 'end': 0x09FF }, // Bengali\n  { 'begin': 0x0A00, 'end': 0x0A7F }, // Gurmukhi\n  { 'begin': 0x0A80, 'end': 0x0AFF }, // Gujarati\n  { 'begin': 0x0B00, 'end': 0x0B7F }, // Oriya\n  { 'begin': 0x0B80, 'end': 0x0BFF }, // Tamil\n  { 'begin': 0x0C00, 'end': 0x0C7F }, // Telugu\n  { 'begin': 0x0C80, 'end': 0x0CFF }, // Kannada\n  { 'begin': 0x0D00, 'end': 0x0D7F }, // Malayalam\n  { 'begin': 0x0E00, 'end': 0x0E7F }, // Thai\n  { 'begin': 0x0E80, 'end': 0x0EFF }, // Lao\n  { 'begin': 0x10A0, 'end': 0x10FF }, // Georgian\n  { 'begin': 0x1B00, 'end': 0x1B7F }, // Balinese\n  { 'begin': 0x1100, 'end': 0x11FF }, // Hangul Jamo\n  { 'begin': 0x1E00, 'end': 0x1EFF }, // Latin Extended Additional\n  { 'begin': 0x1F00, 'end': 0x1FFF }, // Greek Extended\n  { 'begin': 0x2000, 'end': 0x206F }, // General Punctuation\n  { 'begin': 0x2070, 'end': 0x209F }, // Superscripts And Subscripts\n  { 'begin': 0x20A0, 'end': 0x20CF }, // Currency Symbol\n  { 'begin': 0x20D0, 'end': 0x20FF }, // Combining Diacritical Marks For Symbols\n  { 'begin': 0x2100, 'end': 0x214F }, // Letterlike Symbols\n  { 'begin': 0x2150, 'end': 0x218F }, // Number Forms\n  { 'begin': 0x2190, 'end': 0x21FF }, // Arrows\n  { 'begin': 0x2200, 'end': 0x22FF }, // Mathematical Operators\n  { 'begin': 0x2300, 'end': 0x23FF }, // Miscellaneous Technical\n  { 'begin': 0x2400, 'end': 0x243F }, // Control Pictures\n  { 'begin': 0x2440, 'end': 0x245F }, // Optical Character Recognition\n  { 'begin': 0x2460, 'end': 0x24FF }, // Enclosed Alphanumerics\n  { 'begin': 0x2500, 'end': 0x257F }, // Box Drawing\n  { 'begin': 0x2580, 'end': 0x259F }, // Block Elements\n  { 'begin': 0x25A0, 'end': 0x25FF }, // Geometric Shapes\n  { 'begin': 0x2600, 'end': 0x26FF }, // Miscellaneous Symbols\n  { 'begin': 0x2700, 'end': 0x27BF }, // Dingbats\n  { 'begin': 0x3000, 'end': 0x303F }, // CJK Symbols And Punctuation\n  { 'begin': 0x3040, 'end': 0x309F }, // Hiragana\n  { 'begin': 0x30A0, 'end': 0x30FF }, // Katakana\n  { 'begin': 0x3100, 'end': 0x312F }, // Bopomofo\n  { 'begin': 0x3130, 'end': 0x318F }, // Hangul Compatibility Jamo\n  { 'begin': 0xA840, 'end': 0xA87F }, // Phags-pa\n  { 'begin': 0x3200, 'end': 0x32FF }, // Enclosed CJK Letters And Months\n  { 'begin': 0x3300, 'end': 0x33FF }, // CJK Compatibility\n  { 'begin': 0xAC00, 'end': 0xD7AF }, // Hangul Syllables\n  { 'begin': 0xD800, 'end': 0xDFFF }, // Non-Plane 0 *\n  { 'begin': 0x10900, 'end': 0x1091F }, // Phoenicia\n  { 'begin': 0x4E00, 'end': 0x9FFF }, // CJK Unified Ideographs\n  { 'begin': 0xE000, 'end': 0xF8FF }, // Private Use Area (plane 0)\n  { 'begin': 0x31C0, 'end': 0x31EF }, // CJK Strokes\n  { 'begin': 0xFB00, 'end': 0xFB4F }, // Alphabetic Presentation Forms\n  { 'begin': 0xFB50, 'end': 0xFDFF }, // Arabic Presentation Forms-A\n  { 'begin': 0xFE20, 'end': 0xFE2F }, // Combining Half Marks\n  { 'begin': 0xFE10, 'end': 0xFE1F }, // Vertical Forms\n  { 'begin': 0xFE50, 'end': 0xFE6F }, // Small Form Variants\n  { 'begin': 0xFE70, 'end': 0xFEFF }, // Arabic Presentation Forms-B\n  { 'begin': 0xFF00, 'end': 0xFFEF }, // Halfwidth And Fullwidth Forms\n  { 'begin': 0xFFF0, 'end': 0xFFFF }, // Specials\n  { 'begin': 0x0F00, 'end': 0x0FFF }, // Tibetan\n  { 'begin': 0x0700, 'end': 0x074F }, // Syriac\n  { 'begin': 0x0780, 'end': 0x07BF }, // Thaana\n  { 'begin': 0x0D80, 'end': 0x0DFF }, // Sinhala\n  { 'begin': 0x1000, 'end': 0x109F }, // Myanmar\n  { 'begin': 0x1200, 'end': 0x137F }, // Ethiopic\n  { 'begin': 0x13A0, 'end': 0x13FF }, // Cherokee\n  { 'begin': 0x1400, 'end': 0x167F }, // Unified Canadian Aboriginal Syllabics\n  { 'begin': 0x1680, 'end': 0x169F }, // Ogham\n  { 'begin': 0x16A0, 'end': 0x16FF }, // Runic\n  { 'begin': 0x1780, 'end': 0x17FF }, // Khmer\n  { 'begin': 0x1800, 'end': 0x18AF }, // Mongolian\n  { 'begin': 0x2800, 'end': 0x28FF }, // Braille Patterns\n  { 'begin': 0xA000, 'end': 0xA48F }, // Yi Syllables\n  { 'begin': 0x1700, 'end': 0x171F }, // Tagalog\n  { 'begin': 0x10300, 'end': 0x1032F }, // Old Italic\n  { 'begin': 0x10330, 'end': 0x1034F }, // Gothic\n  { 'begin': 0x10400, 'end': 0x1044F }, // Deseret\n  { 'begin': 0x1D000, 'end': 0x1D0FF }, // Byzantine Musical Symbols\n  { 'begin': 0x1D400, 'end': 0x1D7FF }, // Mathematical Alphanumeric Symbols\n  { 'begin': 0xFF000, 'end': 0xFFFFD }, // Private Use (plane 15)\n  { 'begin': 0xFE00, 'end': 0xFE0F }, // Variation Selectors\n  { 'begin': 0xE0000, 'end': 0xE007F }, // Tags\n  { 'begin': 0x1900, 'end': 0x194F }, // Limbu\n  { 'begin': 0x1950, 'end': 0x197F }, // Tai Le\n  { 'begin': 0x1980, 'end': 0x19DF }, // New Tai Lue\n  { 'begin': 0x1A00, 'end': 0x1A1F }, // Buginese\n  { 'begin': 0x2C00, 'end': 0x2C5F }, // Glagolitic\n  { 'begin': 0x2D30, 'end': 0x2D7F }, // Tifinagh\n  { 'begin': 0x4DC0, 'end': 0x4DFF }, // Yijing Hexagram Symbols\n  { 'begin': 0xA800, 'end': 0xA82F }, // Syloti Nagri\n  { 'begin': 0x10000, 'end': 0x1007F }, // Linear B Syllabary\n  { 'begin': 0x10140, 'end': 0x1018F }, // Ancient Greek Numbers\n  { 'begin': 0x10380, 'end': 0x1039F }, // Ugaritic\n  { 'begin': 0x103A0, 'end': 0x103DF }, // Old Persian\n  { 'begin': 0x10450, 'end': 0x1047F }, // Shavian\n  { 'begin': 0x10480, 'end': 0x104AF }, // Osmanya\n  { 'begin': 0x10800, 'end': 0x1083F }, // Cypriot Syllabary\n  { 'begin': 0x10A00, 'end': 0x10A5F }, // Kharoshthi\n  { 'begin': 0x1D300, 'end': 0x1D35F }, // Tai Xuan Jing Symbols\n  { 'begin': 0x12000, 'end': 0x123FF }, // Cuneiform\n  { 'begin': 0x1D360, 'end': 0x1D37F }, // Counting Rod Numerals\n  { 'begin': 0x1B80, 'end': 0x1BBF }, // Sundanese\n  { 'begin': 0x1C00, 'end': 0x1C4F }, // Lepcha\n  { 'begin': 0x1C50, 'end': 0x1C7F }, // Ol Chiki\n  { 'begin': 0xA880, 'end': 0xA8DF }, // Saurashtra\n  { 'begin': 0xA900, 'end': 0xA92F }, // Kayah Li\n  { 'begin': 0xA930, 'end': 0xA95F }, // Rejang\n  { 'begin': 0xAA00, 'end': 0xAA5F }, // Cham\n  { 'begin': 0x10190, 'end': 0x101CF }, // Ancient Symbols\n  { 'begin': 0x101D0, 'end': 0x101FF }, // Phaistos Disc\n  { 'begin': 0x102A0, 'end': 0x102DF }, // Carian\n  { 'begin': 0x1F030, 'end': 0x1F09F }  // Domino Tiles\n];\n\nvar MacStandardGlyphOrdering = [\n  '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl',\n  'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft',\n  'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n  'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n  'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft',\n  'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b',\n  'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\n  'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright',\n  'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde',\n  'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis',\n  'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n  'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve',\n  'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex',\n  'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet',\n  'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute',\n  'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal',\n  'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi',\n  'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash',\n  'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin',\n  'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis',\n  'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash',\n  'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright',\n  'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency',\n  'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered',\n  'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex',\n  'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex',\n  'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute',\n  'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron',\n  'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron',\n  'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar',\n  'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply',\n  'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter',\n  'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla',\n  'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\n\n// The normalization table is obtained by filtering the Unicode characters\n// database with <compat> entries.\nvar NormalizedUnicodes = {\n  '\\u00A8': '\\u0020\\u0308',\n  '\\u00AF': '\\u0020\\u0304',\n  '\\u00B4': '\\u0020\\u0301',\n  '\\u00B5': '\\u03BC',\n  '\\u00B8': '\\u0020\\u0327',\n  '\\u0132': '\\u0049\\u004A',\n  '\\u0133': '\\u0069\\u006A',\n  '\\u013F': '\\u004C\\u00B7',\n  '\\u0140': '\\u006C\\u00B7',\n  '\\u0149': '\\u02BC\\u006E',\n  '\\u017F': '\\u0073',\n  '\\u01C4': '\\u0044\\u017D',\n  '\\u01C5': '\\u0044\\u017E',\n  '\\u01C6': '\\u0064\\u017E',\n  '\\u01C7': '\\u004C\\u004A',\n  '\\u01C8': '\\u004C\\u006A',\n  '\\u01C9': '\\u006C\\u006A',\n  '\\u01CA': '\\u004E\\u004A',\n  '\\u01CB': '\\u004E\\u006A',\n  '\\u01CC': '\\u006E\\u006A',\n  '\\u01F1': '\\u0044\\u005A',\n  '\\u01F2': '\\u0044\\u007A',\n  '\\u01F3': '\\u0064\\u007A',\n  '\\u02D8': '\\u0020\\u0306',\n  '\\u02D9': '\\u0020\\u0307',\n  '\\u02DA': '\\u0020\\u030A',\n  '\\u02DB': '\\u0020\\u0328',\n  '\\u02DC': '\\u0020\\u0303',\n  '\\u02DD': '\\u0020\\u030B',\n  '\\u037A': '\\u0020\\u0345',\n  '\\u0384': '\\u0020\\u0301',\n  '\\u03D0': '\\u03B2',\n  '\\u03D1': '\\u03B8',\n  '\\u03D2': '\\u03A5',\n  '\\u03D5': '\\u03C6',\n  '\\u03D6': '\\u03C0',\n  '\\u03F0': '\\u03BA',\n  '\\u03F1': '\\u03C1',\n  '\\u03F2': '\\u03C2',\n  '\\u03F4': '\\u0398',\n  '\\u03F5': '\\u03B5',\n  '\\u03F9': '\\u03A3',\n  '\\u0587': '\\u0565\\u0582',\n  '\\u0675': '\\u0627\\u0674',\n  '\\u0676': '\\u0648\\u0674',\n  '\\u0677': '\\u06C7\\u0674',\n  '\\u0678': '\\u064A\\u0674',\n  '\\u0E33': '\\u0E4D\\u0E32',\n  '\\u0EB3': '\\u0ECD\\u0EB2',\n  '\\u0EDC': '\\u0EAB\\u0E99',\n  '\\u0EDD': '\\u0EAB\\u0EA1',\n  '\\u0F77': '\\u0FB2\\u0F81',\n  '\\u0F79': '\\u0FB3\\u0F81',\n  '\\u1E9A': '\\u0061\\u02BE',\n  '\\u1FBD': '\\u0020\\u0313',\n  '\\u1FBF': '\\u0020\\u0313',\n  '\\u1FC0': '\\u0020\\u0342',\n  '\\u1FFE': '\\u0020\\u0314',\n  '\\u2002': '\\u0020',\n  '\\u2003': '\\u0020',\n  '\\u2004': '\\u0020',\n  '\\u2005': '\\u0020',\n  '\\u2006': '\\u0020',\n  '\\u2008': '\\u0020',\n  '\\u2009': '\\u0020',\n  '\\u200A': '\\u0020',\n  '\\u2017': '\\u0020\\u0333',\n  '\\u2024': '\\u002E',\n  '\\u2025': '\\u002E\\u002E',\n  '\\u2026': '\\u002E\\u002E\\u002E',\n  '\\u2033': '\\u2032\\u2032',\n  '\\u2034': '\\u2032\\u2032\\u2032',\n  '\\u2036': '\\u2035\\u2035',\n  '\\u2037': '\\u2035\\u2035\\u2035',\n  '\\u203C': '\\u0021\\u0021',\n  '\\u203E': '\\u0020\\u0305',\n  '\\u2047': '\\u003F\\u003F',\n  '\\u2048': '\\u003F\\u0021',\n  '\\u2049': '\\u0021\\u003F',\n  '\\u2057': '\\u2032\\u2032\\u2032\\u2032',\n  '\\u205F': '\\u0020',\n  '\\u20A8': '\\u0052\\u0073',\n  '\\u2100': '\\u0061\\u002F\\u0063',\n  '\\u2101': '\\u0061\\u002F\\u0073',\n  '\\u2103': '\\u00B0\\u0043',\n  '\\u2105': '\\u0063\\u002F\\u006F',\n  '\\u2106': '\\u0063\\u002F\\u0075',\n  '\\u2107': '\\u0190',\n  '\\u2109': '\\u00B0\\u0046',\n  '\\u2116': '\\u004E\\u006F',\n  '\\u2121': '\\u0054\\u0045\\u004C',\n  '\\u2135': '\\u05D0',\n  '\\u2136': '\\u05D1',\n  '\\u2137': '\\u05D2',\n  '\\u2138': '\\u05D3',\n  '\\u213B': '\\u0046\\u0041\\u0058',\n  '\\u2160': '\\u0049',\n  '\\u2161': '\\u0049\\u0049',\n  '\\u2162': '\\u0049\\u0049\\u0049',\n  '\\u2163': '\\u0049\\u0056',\n  '\\u2164': '\\u0056',\n  '\\u2165': '\\u0056\\u0049',\n  '\\u2166': '\\u0056\\u0049\\u0049',\n  '\\u2167': '\\u0056\\u0049\\u0049\\u0049',\n  '\\u2168': '\\u0049\\u0058',\n  '\\u2169': '\\u0058',\n  '\\u216A': '\\u0058\\u0049',\n  '\\u216B': '\\u0058\\u0049\\u0049',\n  '\\u216C': '\\u004C',\n  '\\u216D': '\\u0043',\n  '\\u216E': '\\u0044',\n  '\\u216F': '\\u004D',\n  '\\u2170': '\\u0069',\n  '\\u2171': '\\u0069\\u0069',\n  '\\u2172': '\\u0069\\u0069\\u0069',\n  '\\u2173': '\\u0069\\u0076',\n  '\\u2174': '\\u0076',\n  '\\u2175': '\\u0076\\u0069',\n  '\\u2176': '\\u0076\\u0069\\u0069',\n  '\\u2177': '\\u0076\\u0069\\u0069\\u0069',\n  '\\u2178': '\\u0069\\u0078',\n  '\\u2179': '\\u0078',\n  '\\u217A': '\\u0078\\u0069',\n  '\\u217B': '\\u0078\\u0069\\u0069',\n  '\\u217C': '\\u006C',\n  '\\u217D': '\\u0063',\n  '\\u217E': '\\u0064',\n  '\\u217F': '\\u006D',\n  '\\u222C': '\\u222B\\u222B',\n  '\\u222D': '\\u222B\\u222B\\u222B',\n  '\\u222F': '\\u222E\\u222E',\n  '\\u2230': '\\u222E\\u222E\\u222E',\n  '\\u2474': '\\u0028\\u0031\\u0029',\n  '\\u2475': '\\u0028\\u0032\\u0029',\n  '\\u2476': '\\u0028\\u0033\\u0029',\n  '\\u2477': '\\u0028\\u0034\\u0029',\n  '\\u2478': '\\u0028\\u0035\\u0029',\n  '\\u2479': '\\u0028\\u0036\\u0029',\n  '\\u247A': '\\u0028\\u0037\\u0029',\n  '\\u247B': '\\u0028\\u0038\\u0029',\n  '\\u247C': '\\u0028\\u0039\\u0029',\n  '\\u247D': '\\u0028\\u0031\\u0030\\u0029',\n  '\\u247E': '\\u0028\\u0031\\u0031\\u0029',\n  '\\u247F': '\\u0028\\u0031\\u0032\\u0029',\n  '\\u2480': '\\u0028\\u0031\\u0033\\u0029',\n  '\\u2481': '\\u0028\\u0031\\u0034\\u0029',\n  '\\u2482': '\\u0028\\u0031\\u0035\\u0029',\n  '\\u2483': '\\u0028\\u0031\\u0036\\u0029',\n  '\\u2484': '\\u0028\\u0031\\u0037\\u0029',\n  '\\u2485': '\\u0028\\u0031\\u0038\\u0029',\n  '\\u2486': '\\u0028\\u0031\\u0039\\u0029',\n  '\\u2487': '\\u0028\\u0032\\u0030\\u0029',\n  '\\u2488': '\\u0031\\u002E',\n  '\\u2489': '\\u0032\\u002E',\n  '\\u248A': '\\u0033\\u002E',\n  '\\u248B': '\\u0034\\u002E',\n  '\\u248C': '\\u0035\\u002E',\n  '\\u248D': '\\u0036\\u002E',\n  '\\u248E': '\\u0037\\u002E',\n  '\\u248F': '\\u0038\\u002E',\n  '\\u2490': '\\u0039\\u002E',\n  '\\u2491': '\\u0031\\u0030\\u002E',\n  '\\u2492': '\\u0031\\u0031\\u002E',\n  '\\u2493': '\\u0031\\u0032\\u002E',\n  '\\u2494': '\\u0031\\u0033\\u002E',\n  '\\u2495': '\\u0031\\u0034\\u002E',\n  '\\u2496': '\\u0031\\u0035\\u002E',\n  '\\u2497': '\\u0031\\u0036\\u002E',\n  '\\u2498': '\\u0031\\u0037\\u002E',\n  '\\u2499': '\\u0031\\u0038\\u002E',\n  '\\u249A': '\\u0031\\u0039\\u002E',\n  '\\u249B': '\\u0032\\u0030\\u002E',\n  '\\u249C': '\\u0028\\u0061\\u0029',\n  '\\u249D': '\\u0028\\u0062\\u0029',\n  '\\u249E': '\\u0028\\u0063\\u0029',\n  '\\u249F': '\\u0028\\u0064\\u0029',\n  '\\u24A0': '\\u0028\\u0065\\u0029',\n  '\\u24A1': '\\u0028\\u0066\\u0029',\n  '\\u24A2': '\\u0028\\u0067\\u0029',\n  '\\u24A3': '\\u0028\\u0068\\u0029',\n  '\\u24A4': '\\u0028\\u0069\\u0029',\n  '\\u24A5': '\\u0028\\u006A\\u0029',\n  '\\u24A6': '\\u0028\\u006B\\u0029',\n  '\\u24A7': '\\u0028\\u006C\\u0029',\n  '\\u24A8': '\\u0028\\u006D\\u0029',\n  '\\u24A9': '\\u0028\\u006E\\u0029',\n  '\\u24AA': '\\u0028\\u006F\\u0029',\n  '\\u24AB': '\\u0028\\u0070\\u0029',\n  '\\u24AC': '\\u0028\\u0071\\u0029',\n  '\\u24AD': '\\u0028\\u0072\\u0029',\n  '\\u24AE': '\\u0028\\u0073\\u0029',\n  '\\u24AF': '\\u0028\\u0074\\u0029',\n  '\\u24B0': '\\u0028\\u0075\\u0029',\n  '\\u24B1': '\\u0028\\u0076\\u0029',\n  '\\u24B2': '\\u0028\\u0077\\u0029',\n  '\\u24B3': '\\u0028\\u0078\\u0029',\n  '\\u24B4': '\\u0028\\u0079\\u0029',\n  '\\u24B5': '\\u0028\\u007A\\u0029',\n  '\\u2A0C': '\\u222B\\u222B\\u222B\\u222B',\n  '\\u2A74': '\\u003A\\u003A\\u003D',\n  '\\u2A75': '\\u003D\\u003D',\n  '\\u2A76': '\\u003D\\u003D\\u003D',\n  '\\u2E9F': '\\u6BCD',\n  '\\u2EF3': '\\u9F9F',\n  '\\u2F00': '\\u4E00',\n  '\\u2F01': '\\u4E28',\n  '\\u2F02': '\\u4E36',\n  '\\u2F03': '\\u4E3F',\n  '\\u2F04': '\\u4E59',\n  '\\u2F05': '\\u4E85',\n  '\\u2F06': '\\u4E8C',\n  '\\u2F07': '\\u4EA0',\n  '\\u2F08': '\\u4EBA',\n  '\\u2F09': '\\u513F',\n  '\\u2F0A': '\\u5165',\n  '\\u2F0B': '\\u516B',\n  '\\u2F0C': '\\u5182',\n  '\\u2F0D': '\\u5196',\n  '\\u2F0E': '\\u51AB',\n  '\\u2F0F': '\\u51E0',\n  '\\u2F10': '\\u51F5',\n  '\\u2F11': '\\u5200',\n  '\\u2F12': '\\u529B',\n  '\\u2F13': '\\u52F9',\n  '\\u2F14': '\\u5315',\n  '\\u2F15': '\\u531A',\n  '\\u2F16': '\\u5338',\n  '\\u2F17': '\\u5341',\n  '\\u2F18': '\\u535C',\n  '\\u2F19': '\\u5369',\n  '\\u2F1A': '\\u5382',\n  '\\u2F1B': '\\u53B6',\n  '\\u2F1C': '\\u53C8',\n  '\\u2F1D': '\\u53E3',\n  '\\u2F1E': '\\u56D7',\n  '\\u2F1F': '\\u571F',\n  '\\u2F20': '\\u58EB',\n  '\\u2F21': '\\u5902',\n  '\\u2F22': '\\u590A',\n  '\\u2F23': '\\u5915',\n  '\\u2F24': '\\u5927',\n  '\\u2F25': '\\u5973',\n  '\\u2F26': '\\u5B50',\n  '\\u2F27': '\\u5B80',\n  '\\u2F28': '\\u5BF8',\n  '\\u2F29': '\\u5C0F',\n  '\\u2F2A': '\\u5C22',\n  '\\u2F2B': '\\u5C38',\n  '\\u2F2C': '\\u5C6E',\n  '\\u2F2D': '\\u5C71',\n  '\\u2F2E': '\\u5DDB',\n  '\\u2F2F': '\\u5DE5',\n  '\\u2F30': '\\u5DF1',\n  '\\u2F31': '\\u5DFE',\n  '\\u2F32': '\\u5E72',\n  '\\u2F33': '\\u5E7A',\n  '\\u2F34': '\\u5E7F',\n  '\\u2F35': '\\u5EF4',\n  '\\u2F36': '\\u5EFE',\n  '\\u2F37': '\\u5F0B',\n  '\\u2F38': '\\u5F13',\n  '\\u2F39': '\\u5F50',\n  '\\u2F3A': '\\u5F61',\n  '\\u2F3B': '\\u5F73',\n  '\\u2F3C': '\\u5FC3',\n  '\\u2F3D': '\\u6208',\n  '\\u2F3E': '\\u6236',\n  '\\u2F3F': '\\u624B',\n  '\\u2F40': '\\u652F',\n  '\\u2F41': '\\u6534',\n  '\\u2F42': '\\u6587',\n  '\\u2F43': '\\u6597',\n  '\\u2F44': '\\u65A4',\n  '\\u2F45': '\\u65B9',\n  '\\u2F46': '\\u65E0',\n  '\\u2F47': '\\u65E5',\n  '\\u2F48': '\\u66F0',\n  '\\u2F49': '\\u6708',\n  '\\u2F4A': '\\u6728',\n  '\\u2F4B': '\\u6B20',\n  '\\u2F4C': '\\u6B62',\n  '\\u2F4D': '\\u6B79',\n  '\\u2F4E': '\\u6BB3',\n  '\\u2F4F': '\\u6BCB',\n  '\\u2F50': '\\u6BD4',\n  '\\u2F51': '\\u6BDB',\n  '\\u2F52': '\\u6C0F',\n  '\\u2F53': '\\u6C14',\n  '\\u2F54': '\\u6C34',\n  '\\u2F55': '\\u706B',\n  '\\u2F56': '\\u722A',\n  '\\u2F57': '\\u7236',\n  '\\u2F58': '\\u723B',\n  '\\u2F59': '\\u723F',\n  '\\u2F5A': '\\u7247',\n  '\\u2F5B': '\\u7259',\n  '\\u2F5C': '\\u725B',\n  '\\u2F5D': '\\u72AC',\n  '\\u2F5E': '\\u7384',\n  '\\u2F5F': '\\u7389',\n  '\\u2F60': '\\u74DC',\n  '\\u2F61': '\\u74E6',\n  '\\u2F62': '\\u7518',\n  '\\u2F63': '\\u751F',\n  '\\u2F64': '\\u7528',\n  '\\u2F65': '\\u7530',\n  '\\u2F66': '\\u758B',\n  '\\u2F67': '\\u7592',\n  '\\u2F68': '\\u7676',\n  '\\u2F69': '\\u767D',\n  '\\u2F6A': '\\u76AE',\n  '\\u2F6B': '\\u76BF',\n  '\\u2F6C': '\\u76EE',\n  '\\u2F6D': '\\u77DB',\n  '\\u2F6E': '\\u77E2',\n  '\\u2F6F': '\\u77F3',\n  '\\u2F70': '\\u793A',\n  '\\u2F71': '\\u79B8',\n  '\\u2F72': '\\u79BE',\n  '\\u2F73': '\\u7A74',\n  '\\u2F74': '\\u7ACB',\n  '\\u2F75': '\\u7AF9',\n  '\\u2F76': '\\u7C73',\n  '\\u2F77': '\\u7CF8',\n  '\\u2F78': '\\u7F36',\n  '\\u2F79': '\\u7F51',\n  '\\u2F7A': '\\u7F8A',\n  '\\u2F7B': '\\u7FBD',\n  '\\u2F7C': '\\u8001',\n  '\\u2F7D': '\\u800C',\n  '\\u2F7E': '\\u8012',\n  '\\u2F7F': '\\u8033',\n  '\\u2F80': '\\u807F',\n  '\\u2F81': '\\u8089',\n  '\\u2F82': '\\u81E3',\n  '\\u2F83': '\\u81EA',\n  '\\u2F84': '\\u81F3',\n  '\\u2F85': '\\u81FC',\n  '\\u2F86': '\\u820C',\n  '\\u2F87': '\\u821B',\n  '\\u2F88': '\\u821F',\n  '\\u2F89': '\\u826E',\n  '\\u2F8A': '\\u8272',\n  '\\u2F8B': '\\u8278',\n  '\\u2F8C': '\\u864D',\n  '\\u2F8D': '\\u866B',\n  '\\u2F8E': '\\u8840',\n  '\\u2F8F': '\\u884C',\n  '\\u2F90': '\\u8863',\n  '\\u2F91': '\\u897E',\n  '\\u2F92': '\\u898B',\n  '\\u2F93': '\\u89D2',\n  '\\u2F94': '\\u8A00',\n  '\\u2F95': '\\u8C37',\n  '\\u2F96': '\\u8C46',\n  '\\u2F97': '\\u8C55',\n  '\\u2F98': '\\u8C78',\n  '\\u2F99': '\\u8C9D',\n  '\\u2F9A': '\\u8D64',\n  '\\u2F9B': '\\u8D70',\n  '\\u2F9C': '\\u8DB3',\n  '\\u2F9D': '\\u8EAB',\n  '\\u2F9E': '\\u8ECA',\n  '\\u2F9F': '\\u8F9B',\n  '\\u2FA0': '\\u8FB0',\n  '\\u2FA1': '\\u8FB5',\n  '\\u2FA2': '\\u9091',\n  '\\u2FA3': '\\u9149',\n  '\\u2FA4': '\\u91C6',\n  '\\u2FA5': '\\u91CC',\n  '\\u2FA6': '\\u91D1',\n  '\\u2FA7': '\\u9577',\n  '\\u2FA8': '\\u9580',\n  '\\u2FA9': '\\u961C',\n  '\\u2FAA': '\\u96B6',\n  '\\u2FAB': '\\u96B9',\n  '\\u2FAC': '\\u96E8',\n  '\\u2FAD': '\\u9751',\n  '\\u2FAE': '\\u975E',\n  '\\u2FAF': '\\u9762',\n  '\\u2FB0': '\\u9769',\n  '\\u2FB1': '\\u97CB',\n  '\\u2FB2': '\\u97ED',\n  '\\u2FB3': '\\u97F3',\n  '\\u2FB4': '\\u9801',\n  '\\u2FB5': '\\u98A8',\n  '\\u2FB6': '\\u98DB',\n  '\\u2FB7': '\\u98DF',\n  '\\u2FB8': '\\u9996',\n  '\\u2FB9': '\\u9999',\n  '\\u2FBA': '\\u99AC',\n  '\\u2FBB': '\\u9AA8',\n  '\\u2FBC': '\\u9AD8',\n  '\\u2FBD': '\\u9ADF',\n  '\\u2FBE': '\\u9B25',\n  '\\u2FBF': '\\u9B2F',\n  '\\u2FC0': '\\u9B32',\n  '\\u2FC1': '\\u9B3C',\n  '\\u2FC2': '\\u9B5A',\n  '\\u2FC3': '\\u9CE5',\n  '\\u2FC4': '\\u9E75',\n  '\\u2FC5': '\\u9E7F',\n  '\\u2FC6': '\\u9EA5',\n  '\\u2FC7': '\\u9EBB',\n  '\\u2FC8': '\\u9EC3',\n  '\\u2FC9': '\\u9ECD',\n  '\\u2FCA': '\\u9ED1',\n  '\\u2FCB': '\\u9EF9',\n  '\\u2FCC': '\\u9EFD',\n  '\\u2FCD': '\\u9F0E',\n  '\\u2FCE': '\\u9F13',\n  '\\u2FCF': '\\u9F20',\n  '\\u2FD0': '\\u9F3B',\n  '\\u2FD1': '\\u9F4A',\n  '\\u2FD2': '\\u9F52',\n  '\\u2FD3': '\\u9F8D',\n  '\\u2FD4': '\\u9F9C',\n  '\\u2FD5': '\\u9FA0',\n  '\\u3036': '\\u3012',\n  '\\u3038': '\\u5341',\n  '\\u3039': '\\u5344',\n  '\\u303A': '\\u5345',\n  '\\u309B': '\\u0020\\u3099',\n  '\\u309C': '\\u0020\\u309A',\n  '\\u3131': '\\u1100',\n  '\\u3132': '\\u1101',\n  '\\u3133': '\\u11AA',\n  '\\u3134': '\\u1102',\n  '\\u3135': '\\u11AC',\n  '\\u3136': '\\u11AD',\n  '\\u3137': '\\u1103',\n  '\\u3138': '\\u1104',\n  '\\u3139': '\\u1105',\n  '\\u313A': '\\u11B0',\n  '\\u313B': '\\u11B1',\n  '\\u313C': '\\u11B2',\n  '\\u313D': '\\u11B3',\n  '\\u313E': '\\u11B4',\n  '\\u313F': '\\u11B5',\n  '\\u3140': '\\u111A',\n  '\\u3141': '\\u1106',\n  '\\u3142': '\\u1107',\n  '\\u3143': '\\u1108',\n  '\\u3144': '\\u1121',\n  '\\u3145': '\\u1109',\n  '\\u3146': '\\u110A',\n  '\\u3147': '\\u110B',\n  '\\u3148': '\\u110C',\n  '\\u3149': '\\u110D',\n  '\\u314A': '\\u110E',\n  '\\u314B': '\\u110F',\n  '\\u314C': '\\u1110',\n  '\\u314D': '\\u1111',\n  '\\u314E': '\\u1112',\n  '\\u314F': '\\u1161',\n  '\\u3150': '\\u1162',\n  '\\u3151': '\\u1163',\n  '\\u3152': '\\u1164',\n  '\\u3153': '\\u1165',\n  '\\u3154': '\\u1166',\n  '\\u3155': '\\u1167',\n  '\\u3156': '\\u1168',\n  '\\u3157': '\\u1169',\n  '\\u3158': '\\u116A',\n  '\\u3159': '\\u116B',\n  '\\u315A': '\\u116C',\n  '\\u315B': '\\u116D',\n  '\\u315C': '\\u116E',\n  '\\u315D': '\\u116F',\n  '\\u315E': '\\u1170',\n  '\\u315F': '\\u1171',\n  '\\u3160': '\\u1172',\n  '\\u3161': '\\u1173',\n  '\\u3162': '\\u1174',\n  '\\u3163': '\\u1175',\n  '\\u3164': '\\u1160',\n  '\\u3165': '\\u1114',\n  '\\u3166': '\\u1115',\n  '\\u3167': '\\u11C7',\n  '\\u3168': '\\u11C8',\n  '\\u3169': '\\u11CC',\n  '\\u316A': '\\u11CE',\n  '\\u316B': '\\u11D3',\n  '\\u316C': '\\u11D7',\n  '\\u316D': '\\u11D9',\n  '\\u316E': '\\u111C',\n  '\\u316F': '\\u11DD',\n  '\\u3170': '\\u11DF',\n  '\\u3171': '\\u111D',\n  '\\u3172': '\\u111E',\n  '\\u3173': '\\u1120',\n  '\\u3174': '\\u1122',\n  '\\u3175': '\\u1123',\n  '\\u3176': '\\u1127',\n  '\\u3177': '\\u1129',\n  '\\u3178': '\\u112B',\n  '\\u3179': '\\u112C',\n  '\\u317A': '\\u112D',\n  '\\u317B': '\\u112E',\n  '\\u317C': '\\u112F',\n  '\\u317D': '\\u1132',\n  '\\u317E': '\\u1136',\n  '\\u317F': '\\u1140',\n  '\\u3180': '\\u1147',\n  '\\u3181': '\\u114C',\n  '\\u3182': '\\u11F1',\n  '\\u3183': '\\u11F2',\n  '\\u3184': '\\u1157',\n  '\\u3185': '\\u1158',\n  '\\u3186': '\\u1159',\n  '\\u3187': '\\u1184',\n  '\\u3188': '\\u1185',\n  '\\u3189': '\\u1188',\n  '\\u318A': '\\u1191',\n  '\\u318B': '\\u1192',\n  '\\u318C': '\\u1194',\n  '\\u318D': '\\u119E',\n  '\\u318E': '\\u11A1',\n  '\\u3200': '\\u0028\\u1100\\u0029',\n  '\\u3201': '\\u0028\\u1102\\u0029',\n  '\\u3202': '\\u0028\\u1103\\u0029',\n  '\\u3203': '\\u0028\\u1105\\u0029',\n  '\\u3204': '\\u0028\\u1106\\u0029',\n  '\\u3205': '\\u0028\\u1107\\u0029',\n  '\\u3206': '\\u0028\\u1109\\u0029',\n  '\\u3207': '\\u0028\\u110B\\u0029',\n  '\\u3208': '\\u0028\\u110C\\u0029',\n  '\\u3209': '\\u0028\\u110E\\u0029',\n  '\\u320A': '\\u0028\\u110F\\u0029',\n  '\\u320B': '\\u0028\\u1110\\u0029',\n  '\\u320C': '\\u0028\\u1111\\u0029',\n  '\\u320D': '\\u0028\\u1112\\u0029',\n  '\\u320E': '\\u0028\\u1100\\u1161\\u0029',\n  '\\u320F': '\\u0028\\u1102\\u1161\\u0029',\n  '\\u3210': '\\u0028\\u1103\\u1161\\u0029',\n  '\\u3211': '\\u0028\\u1105\\u1161\\u0029',\n  '\\u3212': '\\u0028\\u1106\\u1161\\u0029',\n  '\\u3213': '\\u0028\\u1107\\u1161\\u0029',\n  '\\u3214': '\\u0028\\u1109\\u1161\\u0029',\n  '\\u3215': '\\u0028\\u110B\\u1161\\u0029',\n  '\\u3216': '\\u0028\\u110C\\u1161\\u0029',\n  '\\u3217': '\\u0028\\u110E\\u1161\\u0029',\n  '\\u3218': '\\u0028\\u110F\\u1161\\u0029',\n  '\\u3219': '\\u0028\\u1110\\u1161\\u0029',\n  '\\u321A': '\\u0028\\u1111\\u1161\\u0029',\n  '\\u321B': '\\u0028\\u1112\\u1161\\u0029',\n  '\\u321C': '\\u0028\\u110C\\u116E\\u0029',\n  '\\u321D': '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029',\n  '\\u321E': '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029',\n  '\\u3220': '\\u0028\\u4E00\\u0029',\n  '\\u3221': '\\u0028\\u4E8C\\u0029',\n  '\\u3222': '\\u0028\\u4E09\\u0029',\n  '\\u3223': '\\u0028\\u56DB\\u0029',\n  '\\u3224': '\\u0028\\u4E94\\u0029',\n  '\\u3225': '\\u0028\\u516D\\u0029',\n  '\\u3226': '\\u0028\\u4E03\\u0029',\n  '\\u3227': '\\u0028\\u516B\\u0029',\n  '\\u3228': '\\u0028\\u4E5D\\u0029',\n  '\\u3229': '\\u0028\\u5341\\u0029',\n  '\\u322A': '\\u0028\\u6708\\u0029',\n  '\\u322B': '\\u0028\\u706B\\u0029',\n  '\\u322C': '\\u0028\\u6C34\\u0029',\n  '\\u322D': '\\u0028\\u6728\\u0029',\n  '\\u322E': '\\u0028\\u91D1\\u0029',\n  '\\u322F': '\\u0028\\u571F\\u0029',\n  '\\u3230': '\\u0028\\u65E5\\u0029',\n  '\\u3231': '\\u0028\\u682A\\u0029',\n  '\\u3232': '\\u0028\\u6709\\u0029',\n  '\\u3233': '\\u0028\\u793E\\u0029',\n  '\\u3234': '\\u0028\\u540D\\u0029',\n  '\\u3235': '\\u0028\\u7279\\u0029',\n  '\\u3236': '\\u0028\\u8CA1\\u0029',\n  '\\u3237': '\\u0028\\u795D\\u0029',\n  '\\u3238': '\\u0028\\u52B4\\u0029',\n  '\\u3239': '\\u0028\\u4EE3\\u0029',\n  '\\u323A': '\\u0028\\u547C\\u0029',\n  '\\u323B': '\\u0028\\u5B66\\u0029',\n  '\\u323C': '\\u0028\\u76E3\\u0029',\n  '\\u323D': '\\u0028\\u4F01\\u0029',\n  '\\u323E': '\\u0028\\u8CC7\\u0029',\n  '\\u323F': '\\u0028\\u5354\\u0029',\n  '\\u3240': '\\u0028\\u796D\\u0029',\n  '\\u3241': '\\u0028\\u4F11\\u0029',\n  '\\u3242': '\\u0028\\u81EA\\u0029',\n  '\\u3243': '\\u0028\\u81F3\\u0029',\n  '\\u32C0': '\\u0031\\u6708',\n  '\\u32C1': '\\u0032\\u6708',\n  '\\u32C2': '\\u0033\\u6708',\n  '\\u32C3': '\\u0034\\u6708',\n  '\\u32C4': '\\u0035\\u6708',\n  '\\u32C5': '\\u0036\\u6708',\n  '\\u32C6': '\\u0037\\u6708',\n  '\\u32C7': '\\u0038\\u6708',\n  '\\u32C8': '\\u0039\\u6708',\n  '\\u32C9': '\\u0031\\u0030\\u6708',\n  '\\u32CA': '\\u0031\\u0031\\u6708',\n  '\\u32CB': '\\u0031\\u0032\\u6708',\n  '\\u3358': '\\u0030\\u70B9',\n  '\\u3359': '\\u0031\\u70B9',\n  '\\u335A': '\\u0032\\u70B9',\n  '\\u335B': '\\u0033\\u70B9',\n  '\\u335C': '\\u0034\\u70B9',\n  '\\u335D': '\\u0035\\u70B9',\n  '\\u335E': '\\u0036\\u70B9',\n  '\\u335F': '\\u0037\\u70B9',\n  '\\u3360': '\\u0038\\u70B9',\n  '\\u3361': '\\u0039\\u70B9',\n  '\\u3362': '\\u0031\\u0030\\u70B9',\n  '\\u3363': '\\u0031\\u0031\\u70B9',\n  '\\u3364': '\\u0031\\u0032\\u70B9',\n  '\\u3365': '\\u0031\\u0033\\u70B9',\n  '\\u3366': '\\u0031\\u0034\\u70B9',\n  '\\u3367': '\\u0031\\u0035\\u70B9',\n  '\\u3368': '\\u0031\\u0036\\u70B9',\n  '\\u3369': '\\u0031\\u0037\\u70B9',\n  '\\u336A': '\\u0031\\u0038\\u70B9',\n  '\\u336B': '\\u0031\\u0039\\u70B9',\n  '\\u336C': '\\u0032\\u0030\\u70B9',\n  '\\u336D': '\\u0032\\u0031\\u70B9',\n  '\\u336E': '\\u0032\\u0032\\u70B9',\n  '\\u336F': '\\u0032\\u0033\\u70B9',\n  '\\u3370': '\\u0032\\u0034\\u70B9',\n  '\\u33E0': '\\u0031\\u65E5',\n  '\\u33E1': '\\u0032\\u65E5',\n  '\\u33E2': '\\u0033\\u65E5',\n  '\\u33E3': '\\u0034\\u65E5',\n  '\\u33E4': '\\u0035\\u65E5',\n  '\\u33E5': '\\u0036\\u65E5',\n  '\\u33E6': '\\u0037\\u65E5',\n  '\\u33E7': '\\u0038\\u65E5',\n  '\\u33E8': '\\u0039\\u65E5',\n  '\\u33E9': '\\u0031\\u0030\\u65E5',\n  '\\u33EA': '\\u0031\\u0031\\u65E5',\n  '\\u33EB': '\\u0031\\u0032\\u65E5',\n  '\\u33EC': '\\u0031\\u0033\\u65E5',\n  '\\u33ED': '\\u0031\\u0034\\u65E5',\n  '\\u33EE': '\\u0031\\u0035\\u65E5',\n  '\\u33EF': '\\u0031\\u0036\\u65E5',\n  '\\u33F0': '\\u0031\\u0037\\u65E5',\n  '\\u33F1': '\\u0031\\u0038\\u65E5',\n  '\\u33F2': '\\u0031\\u0039\\u65E5',\n  '\\u33F3': '\\u0032\\u0030\\u65E5',\n  '\\u33F4': '\\u0032\\u0031\\u65E5',\n  '\\u33F5': '\\u0032\\u0032\\u65E5',\n  '\\u33F6': '\\u0032\\u0033\\u65E5',\n  '\\u33F7': '\\u0032\\u0034\\u65E5',\n  '\\u33F8': '\\u0032\\u0035\\u65E5',\n  '\\u33F9': '\\u0032\\u0036\\u65E5',\n  '\\u33FA': '\\u0032\\u0037\\u65E5',\n  '\\u33FB': '\\u0032\\u0038\\u65E5',\n  '\\u33FC': '\\u0032\\u0039\\u65E5',\n  '\\u33FD': '\\u0033\\u0030\\u65E5',\n  '\\u33FE': '\\u0033\\u0031\\u65E5',\n  '\\uFB00': '\\u0066\\u0066',\n  '\\uFB01': '\\u0066\\u0069',\n  '\\uFB02': '\\u0066\\u006C',\n  '\\uFB03': '\\u0066\\u0066\\u0069',\n  '\\uFB04': '\\u0066\\u0066\\u006C',\n  '\\uFB05': '\\u017F\\u0074',\n  '\\uFB06': '\\u0073\\u0074',\n  '\\uFB13': '\\u0574\\u0576',\n  '\\uFB14': '\\u0574\\u0565',\n  '\\uFB15': '\\u0574\\u056B',\n  '\\uFB16': '\\u057E\\u0576',\n  '\\uFB17': '\\u0574\\u056D',\n  '\\uFB4F': '\\u05D0\\u05DC',\n  '\\uFB50': '\\u0671',\n  '\\uFB51': '\\u0671',\n  '\\uFB52': '\\u067B',\n  '\\uFB53': '\\u067B',\n  '\\uFB54': '\\u067B',\n  '\\uFB55': '\\u067B',\n  '\\uFB56': '\\u067E',\n  '\\uFB57': '\\u067E',\n  '\\uFB58': '\\u067E',\n  '\\uFB59': '\\u067E',\n  '\\uFB5A': '\\u0680',\n  '\\uFB5B': '\\u0680',\n  '\\uFB5C': '\\u0680',\n  '\\uFB5D': '\\u0680',\n  '\\uFB5E': '\\u067A',\n  '\\uFB5F': '\\u067A',\n  '\\uFB60': '\\u067A',\n  '\\uFB61': '\\u067A',\n  '\\uFB62': '\\u067F',\n  '\\uFB63': '\\u067F',\n  '\\uFB64': '\\u067F',\n  '\\uFB65': '\\u067F',\n  '\\uFB66': '\\u0679',\n  '\\uFB67': '\\u0679',\n  '\\uFB68': '\\u0679',\n  '\\uFB69': '\\u0679',\n  '\\uFB6A': '\\u06A4',\n  '\\uFB6B': '\\u06A4',\n  '\\uFB6C': '\\u06A4',\n  '\\uFB6D': '\\u06A4',\n  '\\uFB6E': '\\u06A6',\n  '\\uFB6F': '\\u06A6',\n  '\\uFB70': '\\u06A6',\n  '\\uFB71': '\\u06A6',\n  '\\uFB72': '\\u0684',\n  '\\uFB73': '\\u0684',\n  '\\uFB74': '\\u0684',\n  '\\uFB75': '\\u0684',\n  '\\uFB76': '\\u0683',\n  '\\uFB77': '\\u0683',\n  '\\uFB78': '\\u0683',\n  '\\uFB79': '\\u0683',\n  '\\uFB7A': '\\u0686',\n  '\\uFB7B': '\\u0686',\n  '\\uFB7C': '\\u0686',\n  '\\uFB7D': '\\u0686',\n  '\\uFB7E': '\\u0687',\n  '\\uFB7F': '\\u0687',\n  '\\uFB80': '\\u0687',\n  '\\uFB81': '\\u0687',\n  '\\uFB82': '\\u068D',\n  '\\uFB83': '\\u068D',\n  '\\uFB84': '\\u068C',\n  '\\uFB85': '\\u068C',\n  '\\uFB86': '\\u068E',\n  '\\uFB87': '\\u068E',\n  '\\uFB88': '\\u0688',\n  '\\uFB89': '\\u0688',\n  '\\uFB8A': '\\u0698',\n  '\\uFB8B': '\\u0698',\n  '\\uFB8C': '\\u0691',\n  '\\uFB8D': '\\u0691',\n  '\\uFB8E': '\\u06A9',\n  '\\uFB8F': '\\u06A9',\n  '\\uFB90': '\\u06A9',\n  '\\uFB91': '\\u06A9',\n  '\\uFB92': '\\u06AF',\n  '\\uFB93': '\\u06AF',\n  '\\uFB94': '\\u06AF',\n  '\\uFB95': '\\u06AF',\n  '\\uFB96': '\\u06B3',\n  '\\uFB97': '\\u06B3',\n  '\\uFB98': '\\u06B3',\n  '\\uFB99': '\\u06B3',\n  '\\uFB9A': '\\u06B1',\n  '\\uFB9B': '\\u06B1',\n  '\\uFB9C': '\\u06B1',\n  '\\uFB9D': '\\u06B1',\n  '\\uFB9E': '\\u06BA',\n  '\\uFB9F': '\\u06BA',\n  '\\uFBA0': '\\u06BB',\n  '\\uFBA1': '\\u06BB',\n  '\\uFBA2': '\\u06BB',\n  '\\uFBA3': '\\u06BB',\n  '\\uFBA4': '\\u06C0',\n  '\\uFBA5': '\\u06C0',\n  '\\uFBA6': '\\u06C1',\n  '\\uFBA7': '\\u06C1',\n  '\\uFBA8': '\\u06C1',\n  '\\uFBA9': '\\u06C1',\n  '\\uFBAA': '\\u06BE',\n  '\\uFBAB': '\\u06BE',\n  '\\uFBAC': '\\u06BE',\n  '\\uFBAD': '\\u06BE',\n  '\\uFBAE': '\\u06D2',\n  '\\uFBAF': '\\u06D2',\n  '\\uFBB0': '\\u06D3',\n  '\\uFBB1': '\\u06D3',\n  '\\uFBD3': '\\u06AD',\n  '\\uFBD4': '\\u06AD',\n  '\\uFBD5': '\\u06AD',\n  '\\uFBD6': '\\u06AD',\n  '\\uFBD7': '\\u06C7',\n  '\\uFBD8': '\\u06C7',\n  '\\uFBD9': '\\u06C6',\n  '\\uFBDA': '\\u06C6',\n  '\\uFBDB': '\\u06C8',\n  '\\uFBDC': '\\u06C8',\n  '\\uFBDD': '\\u0677',\n  '\\uFBDE': '\\u06CB',\n  '\\uFBDF': '\\u06CB',\n  '\\uFBE0': '\\u06C5',\n  '\\uFBE1': '\\u06C5',\n  '\\uFBE2': '\\u06C9',\n  '\\uFBE3': '\\u06C9',\n  '\\uFBE4': '\\u06D0',\n  '\\uFBE5': '\\u06D0',\n  '\\uFBE6': '\\u06D0',\n  '\\uFBE7': '\\u06D0',\n  '\\uFBE8': '\\u0649',\n  '\\uFBE9': '\\u0649',\n  '\\uFBEA': '\\u0626\\u0627',\n  '\\uFBEB': '\\u0626\\u0627',\n  '\\uFBEC': '\\u0626\\u06D5',\n  '\\uFBED': '\\u0626\\u06D5',\n  '\\uFBEE': '\\u0626\\u0648',\n  '\\uFBEF': '\\u0626\\u0648',\n  '\\uFBF0': '\\u0626\\u06C7',\n  '\\uFBF1': '\\u0626\\u06C7',\n  '\\uFBF2': '\\u0626\\u06C6',\n  '\\uFBF3': '\\u0626\\u06C6',\n  '\\uFBF4': '\\u0626\\u06C8',\n  '\\uFBF5': '\\u0626\\u06C8',\n  '\\uFBF6': '\\u0626\\u06D0',\n  '\\uFBF7': '\\u0626\\u06D0',\n  '\\uFBF8': '\\u0626\\u06D0',\n  '\\uFBF9': '\\u0626\\u0649',\n  '\\uFBFA': '\\u0626\\u0649',\n  '\\uFBFB': '\\u0626\\u0649',\n  '\\uFBFC': '\\u06CC',\n  '\\uFBFD': '\\u06CC',\n  '\\uFBFE': '\\u06CC',\n  '\\uFBFF': '\\u06CC',\n  '\\uFC00': '\\u0626\\u062C',\n  '\\uFC01': '\\u0626\\u062D',\n  '\\uFC02': '\\u0626\\u0645',\n  '\\uFC03': '\\u0626\\u0649',\n  '\\uFC04': '\\u0626\\u064A',\n  '\\uFC05': '\\u0628\\u062C',\n  '\\uFC06': '\\u0628\\u062D',\n  '\\uFC07': '\\u0628\\u062E',\n  '\\uFC08': '\\u0628\\u0645',\n  '\\uFC09': '\\u0628\\u0649',\n  '\\uFC0A': '\\u0628\\u064A',\n  '\\uFC0B': '\\u062A\\u062C',\n  '\\uFC0C': '\\u062A\\u062D',\n  '\\uFC0D': '\\u062A\\u062E',\n  '\\uFC0E': '\\u062A\\u0645',\n  '\\uFC0F': '\\u062A\\u0649',\n  '\\uFC10': '\\u062A\\u064A',\n  '\\uFC11': '\\u062B\\u062C',\n  '\\uFC12': '\\u062B\\u0645',\n  '\\uFC13': '\\u062B\\u0649',\n  '\\uFC14': '\\u062B\\u064A',\n  '\\uFC15': '\\u062C\\u062D',\n  '\\uFC16': '\\u062C\\u0645',\n  '\\uFC17': '\\u062D\\u062C',\n  '\\uFC18': '\\u062D\\u0645',\n  '\\uFC19': '\\u062E\\u062C',\n  '\\uFC1A': '\\u062E\\u062D',\n  '\\uFC1B': '\\u062E\\u0645',\n  '\\uFC1C': '\\u0633\\u062C',\n  '\\uFC1D': '\\u0633\\u062D',\n  '\\uFC1E': '\\u0633\\u062E',\n  '\\uFC1F': '\\u0633\\u0645',\n  '\\uFC20': '\\u0635\\u062D',\n  '\\uFC21': '\\u0635\\u0645',\n  '\\uFC22': '\\u0636\\u062C',\n  '\\uFC23': '\\u0636\\u062D',\n  '\\uFC24': '\\u0636\\u062E',\n  '\\uFC25': '\\u0636\\u0645',\n  '\\uFC26': '\\u0637\\u062D',\n  '\\uFC27': '\\u0637\\u0645',\n  '\\uFC28': '\\u0638\\u0645',\n  '\\uFC29': '\\u0639\\u062C',\n  '\\uFC2A': '\\u0639\\u0645',\n  '\\uFC2B': '\\u063A\\u062C',\n  '\\uFC2C': '\\u063A\\u0645',\n  '\\uFC2D': '\\u0641\\u062C',\n  '\\uFC2E': '\\u0641\\u062D',\n  '\\uFC2F': '\\u0641\\u062E',\n  '\\uFC30': '\\u0641\\u0645',\n  '\\uFC31': '\\u0641\\u0649',\n  '\\uFC32': '\\u0641\\u064A',\n  '\\uFC33': '\\u0642\\u062D',\n  '\\uFC34': '\\u0642\\u0645',\n  '\\uFC35': '\\u0642\\u0649',\n  '\\uFC36': '\\u0642\\u064A',\n  '\\uFC37': '\\u0643\\u0627',\n  '\\uFC38': '\\u0643\\u062C',\n  '\\uFC39': '\\u0643\\u062D',\n  '\\uFC3A': '\\u0643\\u062E',\n  '\\uFC3B': '\\u0643\\u0644',\n  '\\uFC3C': '\\u0643\\u0645',\n  '\\uFC3D': '\\u0643\\u0649',\n  '\\uFC3E': '\\u0643\\u064A',\n  '\\uFC3F': '\\u0644\\u062C',\n  '\\uFC40': '\\u0644\\u062D',\n  '\\uFC41': '\\u0644\\u062E',\n  '\\uFC42': '\\u0644\\u0645',\n  '\\uFC43': '\\u0644\\u0649',\n  '\\uFC44': '\\u0644\\u064A',\n  '\\uFC45': '\\u0645\\u062C',\n  '\\uFC46': '\\u0645\\u062D',\n  '\\uFC47': '\\u0645\\u062E',\n  '\\uFC48': '\\u0645\\u0645',\n  '\\uFC49': '\\u0645\\u0649',\n  '\\uFC4A': '\\u0645\\u064A',\n  '\\uFC4B': '\\u0646\\u062C',\n  '\\uFC4C': '\\u0646\\u062D',\n  '\\uFC4D': '\\u0646\\u062E',\n  '\\uFC4E': '\\u0646\\u0645',\n  '\\uFC4F': '\\u0646\\u0649',\n  '\\uFC50': '\\u0646\\u064A',\n  '\\uFC51': '\\u0647\\u062C',\n  '\\uFC52': '\\u0647\\u0645',\n  '\\uFC53': '\\u0647\\u0649',\n  '\\uFC54': '\\u0647\\u064A',\n  '\\uFC55': '\\u064A\\u062C',\n  '\\uFC56': '\\u064A\\u062D',\n  '\\uFC57': '\\u064A\\u062E',\n  '\\uFC58': '\\u064A\\u0645',\n  '\\uFC59': '\\u064A\\u0649',\n  '\\uFC5A': '\\u064A\\u064A',\n  '\\uFC5B': '\\u0630\\u0670',\n  '\\uFC5C': '\\u0631\\u0670',\n  '\\uFC5D': '\\u0649\\u0670',\n  '\\uFC5E': '\\u0020\\u064C\\u0651',\n  '\\uFC5F': '\\u0020\\u064D\\u0651',\n  '\\uFC60': '\\u0020\\u064E\\u0651',\n  '\\uFC61': '\\u0020\\u064F\\u0651',\n  '\\uFC62': '\\u0020\\u0650\\u0651',\n  '\\uFC63': '\\u0020\\u0651\\u0670',\n  '\\uFC64': '\\u0626\\u0631',\n  '\\uFC65': '\\u0626\\u0632',\n  '\\uFC66': '\\u0626\\u0645',\n  '\\uFC67': '\\u0626\\u0646',\n  '\\uFC68': '\\u0626\\u0649',\n  '\\uFC69': '\\u0626\\u064A',\n  '\\uFC6A': '\\u0628\\u0631',\n  '\\uFC6B': '\\u0628\\u0632',\n  '\\uFC6C': '\\u0628\\u0645',\n  '\\uFC6D': '\\u0628\\u0646',\n  '\\uFC6E': '\\u0628\\u0649',\n  '\\uFC6F': '\\u0628\\u064A',\n  '\\uFC70': '\\u062A\\u0631',\n  '\\uFC71': '\\u062A\\u0632',\n  '\\uFC72': '\\u062A\\u0645',\n  '\\uFC73': '\\u062A\\u0646',\n  '\\uFC74': '\\u062A\\u0649',\n  '\\uFC75': '\\u062A\\u064A',\n  '\\uFC76': '\\u062B\\u0631',\n  '\\uFC77': '\\u062B\\u0632',\n  '\\uFC78': '\\u062B\\u0645',\n  '\\uFC79': '\\u062B\\u0646',\n  '\\uFC7A': '\\u062B\\u0649',\n  '\\uFC7B': '\\u062B\\u064A',\n  '\\uFC7C': '\\u0641\\u0649',\n  '\\uFC7D': '\\u0641\\u064A',\n  '\\uFC7E': '\\u0642\\u0649',\n  '\\uFC7F': '\\u0642\\u064A',\n  '\\uFC80': '\\u0643\\u0627',\n  '\\uFC81': '\\u0643\\u0644',\n  '\\uFC82': '\\u0643\\u0645',\n  '\\uFC83': '\\u0643\\u0649',\n  '\\uFC84': '\\u0643\\u064A',\n  '\\uFC85': '\\u0644\\u0645',\n  '\\uFC86': '\\u0644\\u0649',\n  '\\uFC87': '\\u0644\\u064A',\n  '\\uFC88': '\\u0645\\u0627',\n  '\\uFC89': '\\u0645\\u0645',\n  '\\uFC8A': '\\u0646\\u0631',\n  '\\uFC8B': '\\u0646\\u0632',\n  '\\uFC8C': '\\u0646\\u0645',\n  '\\uFC8D': '\\u0646\\u0646',\n  '\\uFC8E': '\\u0646\\u0649',\n  '\\uFC8F': '\\u0646\\u064A',\n  '\\uFC90': '\\u0649\\u0670',\n  '\\uFC91': '\\u064A\\u0631',\n  '\\uFC92': '\\u064A\\u0632',\n  '\\uFC93': '\\u064A\\u0645',\n  '\\uFC94': '\\u064A\\u0646',\n  '\\uFC95': '\\u064A\\u0649',\n  '\\uFC96': '\\u064A\\u064A',\n  '\\uFC97': '\\u0626\\u062C',\n  '\\uFC98': '\\u0626\\u062D',\n  '\\uFC99': '\\u0626\\u062E',\n  '\\uFC9A': '\\u0626\\u0645',\n  '\\uFC9B': '\\u0626\\u0647',\n  '\\uFC9C': '\\u0628\\u062C',\n  '\\uFC9D': '\\u0628\\u062D',\n  '\\uFC9E': '\\u0628\\u062E',\n  '\\uFC9F': '\\u0628\\u0645',\n  '\\uFCA0': '\\u0628\\u0647',\n  '\\uFCA1': '\\u062A\\u062C',\n  '\\uFCA2': '\\u062A\\u062D',\n  '\\uFCA3': '\\u062A\\u062E',\n  '\\uFCA4': '\\u062A\\u0645',\n  '\\uFCA5': '\\u062A\\u0647',\n  '\\uFCA6': '\\u062B\\u0645',\n  '\\uFCA7': '\\u062C\\u062D',\n  '\\uFCA8': '\\u062C\\u0645',\n  '\\uFCA9': '\\u062D\\u062C',\n  '\\uFCAA': '\\u062D\\u0645',\n  '\\uFCAB': '\\u062E\\u062C',\n  '\\uFCAC': '\\u062E\\u0645',\n  '\\uFCAD': '\\u0633\\u062C',\n  '\\uFCAE': '\\u0633\\u062D',\n  '\\uFCAF': '\\u0633\\u062E',\n  '\\uFCB0': '\\u0633\\u0645',\n  '\\uFCB1': '\\u0635\\u062D',\n  '\\uFCB2': '\\u0635\\u062E',\n  '\\uFCB3': '\\u0635\\u0645',\n  '\\uFCB4': '\\u0636\\u062C',\n  '\\uFCB5': '\\u0636\\u062D',\n  '\\uFCB6': '\\u0636\\u062E',\n  '\\uFCB7': '\\u0636\\u0645',\n  '\\uFCB8': '\\u0637\\u062D',\n  '\\uFCB9': '\\u0638\\u0645',\n  '\\uFCBA': '\\u0639\\u062C',\n  '\\uFCBB': '\\u0639\\u0645',\n  '\\uFCBC': '\\u063A\\u062C',\n  '\\uFCBD': '\\u063A\\u0645',\n  '\\uFCBE': '\\u0641\\u062C',\n  '\\uFCBF': '\\u0641\\u062D',\n  '\\uFCC0': '\\u0641\\u062E',\n  '\\uFCC1': '\\u0641\\u0645',\n  '\\uFCC2': '\\u0642\\u062D',\n  '\\uFCC3': '\\u0642\\u0645',\n  '\\uFCC4': '\\u0643\\u062C',\n  '\\uFCC5': '\\u0643\\u062D',\n  '\\uFCC6': '\\u0643\\u062E',\n  '\\uFCC7': '\\u0643\\u0644',\n  '\\uFCC8': '\\u0643\\u0645',\n  '\\uFCC9': '\\u0644\\u062C',\n  '\\uFCCA': '\\u0644\\u062D',\n  '\\uFCCB': '\\u0644\\u062E',\n  '\\uFCCC': '\\u0644\\u0645',\n  '\\uFCCD': '\\u0644\\u0647',\n  '\\uFCCE': '\\u0645\\u062C',\n  '\\uFCCF': '\\u0645\\u062D',\n  '\\uFCD0': '\\u0645\\u062E',\n  '\\uFCD1': '\\u0645\\u0645',\n  '\\uFCD2': '\\u0646\\u062C',\n  '\\uFCD3': '\\u0646\\u062D',\n  '\\uFCD4': '\\u0646\\u062E',\n  '\\uFCD5': '\\u0646\\u0645',\n  '\\uFCD6': '\\u0646\\u0647',\n  '\\uFCD7': '\\u0647\\u062C',\n  '\\uFCD8': '\\u0647\\u0645',\n  '\\uFCD9': '\\u0647\\u0670',\n  '\\uFCDA': '\\u064A\\u062C',\n  '\\uFCDB': '\\u064A\\u062D',\n  '\\uFCDC': '\\u064A\\u062E',\n  '\\uFCDD': '\\u064A\\u0645',\n  '\\uFCDE': '\\u064A\\u0647',\n  '\\uFCDF': '\\u0626\\u0645',\n  '\\uFCE0': '\\u0626\\u0647',\n  '\\uFCE1': '\\u0628\\u0645',\n  '\\uFCE2': '\\u0628\\u0647',\n  '\\uFCE3': '\\u062A\\u0645',\n  '\\uFCE4': '\\u062A\\u0647',\n  '\\uFCE5': '\\u062B\\u0645',\n  '\\uFCE6': '\\u062B\\u0647',\n  '\\uFCE7': '\\u0633\\u0645',\n  '\\uFCE8': '\\u0633\\u0647',\n  '\\uFCE9': '\\u0634\\u0645',\n  '\\uFCEA': '\\u0634\\u0647',\n  '\\uFCEB': '\\u0643\\u0644',\n  '\\uFCEC': '\\u0643\\u0645',\n  '\\uFCED': '\\u0644\\u0645',\n  '\\uFCEE': '\\u0646\\u0645',\n  '\\uFCEF': '\\u0646\\u0647',\n  '\\uFCF0': '\\u064A\\u0645',\n  '\\uFCF1': '\\u064A\\u0647',\n  '\\uFCF2': '\\u0640\\u064E\\u0651',\n  '\\uFCF3': '\\u0640\\u064F\\u0651',\n  '\\uFCF4': '\\u0640\\u0650\\u0651',\n  '\\uFCF5': '\\u0637\\u0649',\n  '\\uFCF6': '\\u0637\\u064A',\n  '\\uFCF7': '\\u0639\\u0649',\n  '\\uFCF8': '\\u0639\\u064A',\n  '\\uFCF9': '\\u063A\\u0649',\n  '\\uFCFA': '\\u063A\\u064A',\n  '\\uFCFB': '\\u0633\\u0649',\n  '\\uFCFC': '\\u0633\\u064A',\n  '\\uFCFD': '\\u0634\\u0649',\n  '\\uFCFE': '\\u0634\\u064A',\n  '\\uFCFF': '\\u062D\\u0649',\n  '\\uFD00': '\\u062D\\u064A',\n  '\\uFD01': '\\u062C\\u0649',\n  '\\uFD02': '\\u062C\\u064A',\n  '\\uFD03': '\\u062E\\u0649',\n  '\\uFD04': '\\u062E\\u064A',\n  '\\uFD05': '\\u0635\\u0649',\n  '\\uFD06': '\\u0635\\u064A',\n  '\\uFD07': '\\u0636\\u0649',\n  '\\uFD08': '\\u0636\\u064A',\n  '\\uFD09': '\\u0634\\u062C',\n  '\\uFD0A': '\\u0634\\u062D',\n  '\\uFD0B': '\\u0634\\u062E',\n  '\\uFD0C': '\\u0634\\u0645',\n  '\\uFD0D': '\\u0634\\u0631',\n  '\\uFD0E': '\\u0633\\u0631',\n  '\\uFD0F': '\\u0635\\u0631',\n  '\\uFD10': '\\u0636\\u0631',\n  '\\uFD11': '\\u0637\\u0649',\n  '\\uFD12': '\\u0637\\u064A',\n  '\\uFD13': '\\u0639\\u0649',\n  '\\uFD14': '\\u0639\\u064A',\n  '\\uFD15': '\\u063A\\u0649',\n  '\\uFD16': '\\u063A\\u064A',\n  '\\uFD17': '\\u0633\\u0649',\n  '\\uFD18': '\\u0633\\u064A',\n  '\\uFD19': '\\u0634\\u0649',\n  '\\uFD1A': '\\u0634\\u064A',\n  '\\uFD1B': '\\u062D\\u0649',\n  '\\uFD1C': '\\u062D\\u064A',\n  '\\uFD1D': '\\u062C\\u0649',\n  '\\uFD1E': '\\u062C\\u064A',\n  '\\uFD1F': '\\u062E\\u0649',\n  '\\uFD20': '\\u062E\\u064A',\n  '\\uFD21': '\\u0635\\u0649',\n  '\\uFD22': '\\u0635\\u064A',\n  '\\uFD23': '\\u0636\\u0649',\n  '\\uFD24': '\\u0636\\u064A',\n  '\\uFD25': '\\u0634\\u062C',\n  '\\uFD26': '\\u0634\\u062D',\n  '\\uFD27': '\\u0634\\u062E',\n  '\\uFD28': '\\u0634\\u0645',\n  '\\uFD29': '\\u0634\\u0631',\n  '\\uFD2A': '\\u0633\\u0631',\n  '\\uFD2B': '\\u0635\\u0631',\n  '\\uFD2C': '\\u0636\\u0631',\n  '\\uFD2D': '\\u0634\\u062C',\n  '\\uFD2E': '\\u0634\\u062D',\n  '\\uFD2F': '\\u0634\\u062E',\n  '\\uFD30': '\\u0634\\u0645',\n  '\\uFD31': '\\u0633\\u0647',\n  '\\uFD32': '\\u0634\\u0647',\n  '\\uFD33': '\\u0637\\u0645',\n  '\\uFD34': '\\u0633\\u062C',\n  '\\uFD35': '\\u0633\\u062D',\n  '\\uFD36': '\\u0633\\u062E',\n  '\\uFD37': '\\u0634\\u062C',\n  '\\uFD38': '\\u0634\\u062D',\n  '\\uFD39': '\\u0634\\u062E',\n  '\\uFD3A': '\\u0637\\u0645',\n  '\\uFD3B': '\\u0638\\u0645',\n  '\\uFD3C': '\\u0627\\u064B',\n  '\\uFD3D': '\\u0627\\u064B',\n  '\\uFD50': '\\u062A\\u062C\\u0645',\n  '\\uFD51': '\\u062A\\u062D\\u062C',\n  '\\uFD52': '\\u062A\\u062D\\u062C',\n  '\\uFD53': '\\u062A\\u062D\\u0645',\n  '\\uFD54': '\\u062A\\u062E\\u0645',\n  '\\uFD55': '\\u062A\\u0645\\u062C',\n  '\\uFD56': '\\u062A\\u0645\\u062D',\n  '\\uFD57': '\\u062A\\u0645\\u062E',\n  '\\uFD58': '\\u062C\\u0645\\u062D',\n  '\\uFD59': '\\u062C\\u0645\\u062D',\n  '\\uFD5A': '\\u062D\\u0645\\u064A',\n  '\\uFD5B': '\\u062D\\u0645\\u0649',\n  '\\uFD5C': '\\u0633\\u062D\\u062C',\n  '\\uFD5D': '\\u0633\\u062C\\u062D',\n  '\\uFD5E': '\\u0633\\u062C\\u0649',\n  '\\uFD5F': '\\u0633\\u0645\\u062D',\n  '\\uFD60': '\\u0633\\u0645\\u062D',\n  '\\uFD61': '\\u0633\\u0645\\u062C',\n  '\\uFD62': '\\u0633\\u0645\\u0645',\n  '\\uFD63': '\\u0633\\u0645\\u0645',\n  '\\uFD64': '\\u0635\\u062D\\u062D',\n  '\\uFD65': '\\u0635\\u062D\\u062D',\n  '\\uFD66': '\\u0635\\u0645\\u0645',\n  '\\uFD67': '\\u0634\\u062D\\u0645',\n  '\\uFD68': '\\u0634\\u062D\\u0645',\n  '\\uFD69': '\\u0634\\u062C\\u064A',\n  '\\uFD6A': '\\u0634\\u0645\\u062E',\n  '\\uFD6B': '\\u0634\\u0645\\u062E',\n  '\\uFD6C': '\\u0634\\u0645\\u0645',\n  '\\uFD6D': '\\u0634\\u0645\\u0645',\n  '\\uFD6E': '\\u0636\\u062D\\u0649',\n  '\\uFD6F': '\\u0636\\u062E\\u0645',\n  '\\uFD70': '\\u0636\\u062E\\u0645',\n  '\\uFD71': '\\u0637\\u0645\\u062D',\n  '\\uFD72': '\\u0637\\u0645\\u062D',\n  '\\uFD73': '\\u0637\\u0645\\u0645',\n  '\\uFD74': '\\u0637\\u0645\\u064A',\n  '\\uFD75': '\\u0639\\u062C\\u0645',\n  '\\uFD76': '\\u0639\\u0645\\u0645',\n  '\\uFD77': '\\u0639\\u0645\\u0645',\n  '\\uFD78': '\\u0639\\u0645\\u0649',\n  '\\uFD79': '\\u063A\\u0645\\u0645',\n  '\\uFD7A': '\\u063A\\u0645\\u064A',\n  '\\uFD7B': '\\u063A\\u0645\\u0649',\n  '\\uFD7C': '\\u0641\\u062E\\u0645',\n  '\\uFD7D': '\\u0641\\u062E\\u0645',\n  '\\uFD7E': '\\u0642\\u0645\\u062D',\n  '\\uFD7F': '\\u0642\\u0645\\u0645',\n  '\\uFD80': '\\u0644\\u062D\\u0645',\n  '\\uFD81': '\\u0644\\u062D\\u064A',\n  '\\uFD82': '\\u0644\\u062D\\u0649',\n  '\\uFD83': '\\u0644\\u062C\\u062C',\n  '\\uFD84': '\\u0644\\u062C\\u062C',\n  '\\uFD85': '\\u0644\\u062E\\u0645',\n  '\\uFD86': '\\u0644\\u062E\\u0645',\n  '\\uFD87': '\\u0644\\u0645\\u062D',\n  '\\uFD88': '\\u0644\\u0645\\u062D',\n  '\\uFD89': '\\u0645\\u062D\\u062C',\n  '\\uFD8A': '\\u0645\\u062D\\u0645',\n  '\\uFD8B': '\\u0645\\u062D\\u064A',\n  '\\uFD8C': '\\u0645\\u062C\\u062D',\n  '\\uFD8D': '\\u0645\\u062C\\u0645',\n  '\\uFD8E': '\\u0645\\u062E\\u062C',\n  '\\uFD8F': '\\u0645\\u062E\\u0645',\n  '\\uFD92': '\\u0645\\u062C\\u062E',\n  '\\uFD93': '\\u0647\\u0645\\u062C',\n  '\\uFD94': '\\u0647\\u0645\\u0645',\n  '\\uFD95': '\\u0646\\u062D\\u0645',\n  '\\uFD96': '\\u0646\\u062D\\u0649',\n  '\\uFD97': '\\u0646\\u062C\\u0645',\n  '\\uFD98': '\\u0646\\u062C\\u0645',\n  '\\uFD99': '\\u0646\\u062C\\u0649',\n  '\\uFD9A': '\\u0646\\u0645\\u064A',\n  '\\uFD9B': '\\u0646\\u0645\\u0649',\n  '\\uFD9C': '\\u064A\\u0645\\u0645',\n  '\\uFD9D': '\\u064A\\u0645\\u0645',\n  '\\uFD9E': '\\u0628\\u062E\\u064A',\n  '\\uFD9F': '\\u062A\\u062C\\u064A',\n  '\\uFDA0': '\\u062A\\u062C\\u0649',\n  '\\uFDA1': '\\u062A\\u062E\\u064A',\n  '\\uFDA2': '\\u062A\\u062E\\u0649',\n  '\\uFDA3': '\\u062A\\u0645\\u064A',\n  '\\uFDA4': '\\u062A\\u0645\\u0649',\n  '\\uFDA5': '\\u062C\\u0645\\u064A',\n  '\\uFDA6': '\\u062C\\u062D\\u0649',\n  '\\uFDA7': '\\u062C\\u0645\\u0649',\n  '\\uFDA8': '\\u0633\\u062E\\u0649',\n  '\\uFDA9': '\\u0635\\u062D\\u064A',\n  '\\uFDAA': '\\u0634\\u062D\\u064A',\n  '\\uFDAB': '\\u0636\\u062D\\u064A',\n  '\\uFDAC': '\\u0644\\u062C\\u064A',\n  '\\uFDAD': '\\u0644\\u0645\\u064A',\n  '\\uFDAE': '\\u064A\\u062D\\u064A',\n  '\\uFDAF': '\\u064A\\u062C\\u064A',\n  '\\uFDB0': '\\u064A\\u0645\\u064A',\n  '\\uFDB1': '\\u0645\\u0645\\u064A',\n  '\\uFDB2': '\\u0642\\u0645\\u064A',\n  '\\uFDB3': '\\u0646\\u062D\\u064A',\n  '\\uFDB4': '\\u0642\\u0645\\u062D',\n  '\\uFDB5': '\\u0644\\u062D\\u0645',\n  '\\uFDB6': '\\u0639\\u0645\\u064A',\n  '\\uFDB7': '\\u0643\\u0645\\u064A',\n  '\\uFDB8': '\\u0646\\u062C\\u062D',\n  '\\uFDB9': '\\u0645\\u062E\\u064A',\n  '\\uFDBA': '\\u0644\\u062C\\u0645',\n  '\\uFDBB': '\\u0643\\u0645\\u0645',\n  '\\uFDBC': '\\u0644\\u062C\\u0645',\n  '\\uFDBD': '\\u0646\\u062C\\u062D',\n  '\\uFDBE': '\\u062C\\u062D\\u064A',\n  '\\uFDBF': '\\u062D\\u062C\\u064A',\n  '\\uFDC0': '\\u0645\\u062C\\u064A',\n  '\\uFDC1': '\\u0641\\u0645\\u064A',\n  '\\uFDC2': '\\u0628\\u062D\\u064A',\n  '\\uFDC3': '\\u0643\\u0645\\u0645',\n  '\\uFDC4': '\\u0639\\u062C\\u0645',\n  '\\uFDC5': '\\u0635\\u0645\\u0645',\n  '\\uFDC6': '\\u0633\\u062E\\u064A',\n  '\\uFDC7': '\\u0646\\u062C\\u064A',\n  '\\uFE49': '\\u203E',\n  '\\uFE4A': '\\u203E',\n  '\\uFE4B': '\\u203E',\n  '\\uFE4C': '\\u203E',\n  '\\uFE4D': '\\u005F',\n  '\\uFE4E': '\\u005F',\n  '\\uFE4F': '\\u005F',\n  '\\uFE80': '\\u0621',\n  '\\uFE81': '\\u0622',\n  '\\uFE82': '\\u0622',\n  '\\uFE83': '\\u0623',\n  '\\uFE84': '\\u0623',\n  '\\uFE85': '\\u0624',\n  '\\uFE86': '\\u0624',\n  '\\uFE87': '\\u0625',\n  '\\uFE88': '\\u0625',\n  '\\uFE89': '\\u0626',\n  '\\uFE8A': '\\u0626',\n  '\\uFE8B': '\\u0626',\n  '\\uFE8C': '\\u0626',\n  '\\uFE8D': '\\u0627',\n  '\\uFE8E': '\\u0627',\n  '\\uFE8F': '\\u0628',\n  '\\uFE90': '\\u0628',\n  '\\uFE91': '\\u0628',\n  '\\uFE92': '\\u0628',\n  '\\uFE93': '\\u0629',\n  '\\uFE94': '\\u0629',\n  '\\uFE95': '\\u062A',\n  '\\uFE96': '\\u062A',\n  '\\uFE97': '\\u062A',\n  '\\uFE98': '\\u062A',\n  '\\uFE99': '\\u062B',\n  '\\uFE9A': '\\u062B',\n  '\\uFE9B': '\\u062B',\n  '\\uFE9C': '\\u062B',\n  '\\uFE9D': '\\u062C',\n  '\\uFE9E': '\\u062C',\n  '\\uFE9F': '\\u062C',\n  '\\uFEA0': '\\u062C',\n  '\\uFEA1': '\\u062D',\n  '\\uFEA2': '\\u062D',\n  '\\uFEA3': '\\u062D',\n  '\\uFEA4': '\\u062D',\n  '\\uFEA5': '\\u062E',\n  '\\uFEA6': '\\u062E',\n  '\\uFEA7': '\\u062E',\n  '\\uFEA8': '\\u062E',\n  '\\uFEA9': '\\u062F',\n  '\\uFEAA': '\\u062F',\n  '\\uFEAB': '\\u0630',\n  '\\uFEAC': '\\u0630',\n  '\\uFEAD': '\\u0631',\n  '\\uFEAE': '\\u0631',\n  '\\uFEAF': '\\u0632',\n  '\\uFEB0': '\\u0632',\n  '\\uFEB1': '\\u0633',\n  '\\uFEB2': '\\u0633',\n  '\\uFEB3': '\\u0633',\n  '\\uFEB4': '\\u0633',\n  '\\uFEB5': '\\u0634',\n  '\\uFEB6': '\\u0634',\n  '\\uFEB7': '\\u0634',\n  '\\uFEB8': '\\u0634',\n  '\\uFEB9': '\\u0635',\n  '\\uFEBA': '\\u0635',\n  '\\uFEBB': '\\u0635',\n  '\\uFEBC': '\\u0635',\n  '\\uFEBD': '\\u0636',\n  '\\uFEBE': '\\u0636',\n  '\\uFEBF': '\\u0636',\n  '\\uFEC0': '\\u0636',\n  '\\uFEC1': '\\u0637',\n  '\\uFEC2': '\\u0637',\n  '\\uFEC3': '\\u0637',\n  '\\uFEC4': '\\u0637',\n  '\\uFEC5': '\\u0638',\n  '\\uFEC6': '\\u0638',\n  '\\uFEC7': '\\u0638',\n  '\\uFEC8': '\\u0638',\n  '\\uFEC9': '\\u0639',\n  '\\uFECA': '\\u0639',\n  '\\uFECB': '\\u0639',\n  '\\uFECC': '\\u0639',\n  '\\uFECD': '\\u063A',\n  '\\uFECE': '\\u063A',\n  '\\uFECF': '\\u063A',\n  '\\uFED0': '\\u063A',\n  '\\uFED1': '\\u0641',\n  '\\uFED2': '\\u0641',\n  '\\uFED3': '\\u0641',\n  '\\uFED4': '\\u0641',\n  '\\uFED5': '\\u0642',\n  '\\uFED6': '\\u0642',\n  '\\uFED7': '\\u0642',\n  '\\uFED8': '\\u0642',\n  '\\uFED9': '\\u0643',\n  '\\uFEDA': '\\u0643',\n  '\\uFEDB': '\\u0643',\n  '\\uFEDC': '\\u0643',\n  '\\uFEDD': '\\u0644',\n  '\\uFEDE': '\\u0644',\n  '\\uFEDF': '\\u0644',\n  '\\uFEE0': '\\u0644',\n  '\\uFEE1': '\\u0645',\n  '\\uFEE2': '\\u0645',\n  '\\uFEE3': '\\u0645',\n  '\\uFEE4': '\\u0645',\n  '\\uFEE5': '\\u0646',\n  '\\uFEE6': '\\u0646',\n  '\\uFEE7': '\\u0646',\n  '\\uFEE8': '\\u0646',\n  '\\uFEE9': '\\u0647',\n  '\\uFEEA': '\\u0647',\n  '\\uFEEB': '\\u0647',\n  '\\uFEEC': '\\u0647',\n  '\\uFEED': '\\u0648',\n  '\\uFEEE': '\\u0648',\n  '\\uFEEF': '\\u0649',\n  '\\uFEF0': '\\u0649',\n  '\\uFEF1': '\\u064A',\n  '\\uFEF2': '\\u064A',\n  '\\uFEF3': '\\u064A',\n  '\\uFEF4': '\\u064A',\n  '\\uFEF5': '\\u0644\\u0622',\n  '\\uFEF6': '\\u0644\\u0622',\n  '\\uFEF7': '\\u0644\\u0623',\n  '\\uFEF8': '\\u0644\\u0623',\n  '\\uFEF9': '\\u0644\\u0625',\n  '\\uFEFA': '\\u0644\\u0625',\n  '\\uFEFB': '\\u0644\\u0627',\n  '\\uFEFC': '\\u0644\\u0627'\n};\n\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  //reverse an arabic ligature\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\n\nfunction adjustWidths(properties) {\n  if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  // adjusting width to fontMatrix scale\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\n\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C :\n        FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return FontType.OPENTYPE;\n    case 'TrueType':\n      return FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return FontType.MMTYPE1;\n    case 'Type0':\n      return FontType.TYPE0;\n    default:\n      return FontType.UNKNOWN;\n  }\n}\n\nvar Glyph = (function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n  }\n\n  Glyph.prototype.matchesForCache =\n      function(fontChar, unicode, accent, width, vmetric, operatorListId) {\n    return this.fontChar === fontChar &&\n           this.unicode === unicode &&\n           this.accent === accent &&\n           this.width === width &&\n           this.vmetric === vmetric &&\n           this.operatorListId === operatorListId;\n  };\n\n  return Glyph;\n})();\n\nvar ToUnicodeMap = (function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    // The elements of this._map can be integers or strings, depending on how\n    // |cmap| was created.\n    this._map = cmap;\n  }\n\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n\n    forEach: function(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n\n    has: function(i) {\n      return this._map[i] !== undefined;\n    },\n\n    get: function(i) {\n      return this._map[i];\n    },\n\n    charCodeOf: function(v) {\n      return this._map.indexOf(v);\n    }\n  };\n\n  return ToUnicodeMap;\n})();\n\nvar IdentityToUnicodeMap = (function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      error('should not access .length');\n    },\n\n    forEach: function (callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n\n    has: function (i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n\n    get: function (i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n\n    charCodeOf: function (v) {\n      error('should not call .charCodeOf');\n    }\n  };\n\n  return IdentityToUnicodeMap;\n})();\n\nvar OpenTypeFileBuilder = (function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = (num >> 8) & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n\n  function writeInt32(dest, offset, num) {\n    dest[offset] = (num >> 24) & 0xFF;\n    dest[offset + 1] = (num >> 16) & 0xFF;\n    dest[offset + 2] = (num >> 8) & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      // treating everything else as array\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n\n  OpenTypeFileBuilder.getSearchParams =\n      function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1, log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n\n      // Tables needs to be written by ascendant alphabetic order\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n\n      var i, j, jj, table, tableName;\n      // layout the tables data\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = ((table.length + 3) & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n\n      var file = new Uint8Array(offset);\n      // write the table data first (mostly for checksum)\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n\n      // sfnt version (4 bytes)\n      if (sfnt === 'true') {\n        // Windows hates the Mac TrueType sfnt version number\n        sfnt = string32(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n\n      // numTables (2 bytes)\n      writeInt16(file, 4, numTables);\n\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\n      // searchRange (2 bytes)\n      writeInt16(file, 6, searchParams.range);\n      // entrySelector (2 bytes)\n      writeInt16(file, 8, searchParams.entry);\n      // rangeShift (2 bytes)\n      writeInt16(file, 10, searchParams.rangeShift);\n\n      offset = OTF_HEADER_SIZE;\n      // writing table entries\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\n        // checksum\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (file[j] << 24) + (file[j + 1] << 16) +\n                     (file[j + 2] << 8) + file[j + 3];\n          checksum = (checksum + quad) | 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n\n        // offset\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        // length\n        writeInt32(file, offset + 12, tables[tableName].length);\n\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n\n  return OpenTypeFileBuilder;\n})();\n\n/**\n * 'Font' is the class the outside world should use, it encapsulate all the font\n * decoding logics whatever type it is (assuming the font type is supported).\n *\n * For example to read a Type1 font and to attach it to the document:\n *   var type1Font = new Font(\"MyFontName\", binaryFile, propertiesObject);\n *   type1Font.bind();\n */\nvar Font = (function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode, glyphName, fontChar;\n\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n\n    this.glyphCache = {};\n\n    var names = name.split('+');\n    names = names.length > 1 ? names[1] : names[0];\n    names = names.split(/[-,_]/g)[0];\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n\n    this.fallbackName = (this.isMonospace ? 'monospace' :\n                         (this.isSerifFont ? 'serif' : 'sans-serif'));\n\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n\n    this.toUnicode = properties.toUnicode = this.buildToUnicode(properties);\n\n    this.toFontChar = [];\n\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = (this.differences[charCode] ||\n                                     properties.defaultEncoding[charCode]);\n      }\n      this.fontType = FontType.TYPE3;\n      return;\n    }\n\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n\n    if (!file || file.isEmpty) {\n      if (file) {\n        // Some bad PDF generators will include empty font files,\n        // attempting to recover by assuming that no file exists.\n        warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n\n      this.missingFile = true;\n      // The file data is not specified. Trying to fix the font name\n      // to be used with the canvas.font.\n      var fontName = name.replace(/[,_]/g, '-');\n      var isStandardFont = !!stdFontMap[fontName] ||\n        !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\n      this.bold = (fontName.search(/bold/gi) !== -1);\n      this.italic = ((fontName.search(/oblique/gi) !== -1) ||\n                     (fontName.search(/italic/gi) !== -1));\n\n      // Use 'name' instead of 'fontName' here because the original\n      // name ArialBlack for example will be replaced by Helvetica.\n      this.black = (name.search(/Black/g) !== -1);\n\n      // if at least one width is present, remeasure all chars when exists\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' &&\n          properties.cidEncoding.indexOf('Identity-') === 0) {\n        // Standard fonts might be embedded as CID font without glyph mapping.\n        // Building one based on GlyphMapForStandardFonts.\n        var map = [];\n        for (var code in GlyphMapForStandardFonts) {\n          map[+code] = GlyphMapForStandardFonts[code];\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function(charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        var symbols = Encodings.SymbolSetEncoding;\n        for (charCode in symbols) {\n          fontChar = GlyphsUnicode[symbols[charCode]];\n          if (!fontChar) {\n            continue;\n          }\n          this.toFontChar[charCode] = fontChar;\n        }\n        for (charCode in properties.differences) {\n          fontChar = GlyphsUnicode[properties.differences[charCode]];\n          if (!fontChar) {\n            continue;\n          }\n          this.toFontChar[charCode] = fontChar;\n        }\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          warn('Wingdings font without embedded font file, ' +\n               'falling back to the ZapfDingbats encoding.');\n        }\n        var dingbats = Encodings.ZapfDingbatsEncoding;\n        for (charCode in dingbats) {\n          fontChar = DingbatsGlyphsUnicode[dingbats[charCode]];\n          if (!fontChar) {\n            continue;\n          }\n          this.toFontChar[charCode] = fontChar;\n        }\n        for (charCode in properties.differences) {\n          fontChar = DingbatsGlyphsUnicode[properties.differences[charCode]];\n          if (!fontChar) {\n            continue;\n          }\n          this.toFontChar[charCode] = fontChar;\n        }\n      } else if (isStandardFont) {\n        this.toFontChar = [];\n        for (charCode in properties.defaultEncoding) {\n          glyphName = (properties.differences[charCode] ||\n                       properties.defaultEncoding[charCode]);\n          this.toFontChar[charCode] = GlyphsUnicode[glyphName];\n        }\n      } else {\n        var unicodeCharCode, notCidFont = (type.indexOf('CIDFontType') === -1);\n        this.toUnicode.forEach(function(charCode, unicodeCharCode) {\n          if (notCidFont) {\n            glyphName = (properties.differences[charCode] ||\n                         properties.defaultEncoding[charCode]);\n            unicodeCharCode = (GlyphsUnicode[glyphName] || unicodeCharCode);\n          }\n          this.toFontChar[charCode] = unicodeCharCode;\n        }.bind(this));\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n      return;\n    }\n\n    // Some fonts might use wrong font types for Type1C or CIDFontType0C\n    if (subtype === 'Type1C' && (type !== 'Type1' && type !== 'MMType1')) {\n      // Some TrueType fonts by mistake claim Type1C\n      if (isTrueTypeFile(file)) {\n        subtype = 'TrueType';\n      } else {\n        type = 'Type1';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (subtype === 'OpenType') {\n      type = 'OpenType';\n    }\n\n    var data;\n    switch (type) {\n      case 'MMType1':\n        info('MMType1 font (' + name + '), falling back to Type1.');\n        /* falls through */\n      case 'Type1':\n      case 'CIDFontType0':\n        this.mimetype = 'font/opentype';\n\n        var cff = (subtype === 'Type1C' || subtype === 'CIDFontType0C') ?\n          new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\n        adjustWidths(properties);\n\n        // Wrap the CFF data inside an OTF font file\n        data = this.convert(name, cff, properties);\n        break;\n\n      case 'OpenType':\n      case 'TrueType':\n      case 'CIDFontType2':\n        this.mimetype = 'font/opentype';\n\n        // Repair the TrueType file. It is can be damaged in the point of\n        // view of the sanitizer\n        data = this.checkAndRepair(name, file, properties);\n        if (this.isOpenType) {\n          type = 'OpenType';\n        }\n        break;\n\n      default:\n        error('Font ' + type + ' is not supported');\n        break;\n    }\n\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n\n    // Transfer some properties again that could change during font conversion\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n\n    this.loading = true;\n  }\n\n  Font.getFontID = (function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  })();\n\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  function string16(value) {\n    return String.fromCharCode((value >> 8) & 0xff, value & 0xff);\n  }\n\n  function safeString16(value) {\n    // clamp value to the 16-bit int range\n    value = (value > 0x7FFF ? 0x7FFF : (value < -0x8000 ? -0x8000 : value));\n    return String.fromCharCode((value >> 8) & 0xff, value & 0xff);\n  }\n\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return readUint32(header, 0) === 0x00010000;\n  }\n\n  /**\n   * Rebuilds the char code to glyph ID map by trying to replace the char codes\n   * with their unicode value. It also moves char codes that are in known\n   * problematic locations.\n   * @return {Object} Two properties:\n   * 'toFontChar' - maps original char codes(the value that will be read\n   * from commands such as show text) to the char codes that will be used in the\n   * font that we build\n   * 'charCodeToGlyphId' - maps the new font char codes to glyph ids\n   */\n  function adjustMapping(charCodeToGlyphId, properties) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode =\n      properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      var fontCharCode = originalCharCode;\n      // First try to map the value to a unicode position if a non identity map\n      // was created.\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        var unicode = toUnicode.get(fontCharCode);\n        // TODO: Try to map ligatures to the correct spot.\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      // Try to move control characters, special characters and already mapped\n      // characters to the private use area since they will not be drawn by\n      // canvas if left in their current position. Also, move characters if the\n      // font was symbolic and there is only an identity unicode map since the\n      // characters probably aren't in the correct position (fixes an issue\n      // with firefox and thuluthfont).\n      if ((usedFontCharCodes[fontCharCode] !== undefined ||\n           fontCharCode <= 0x1f || // Control chars\n           fontCharCode === 0x7F || // Control char\n           fontCharCode === 0xAD || // Soft hyphen\n           fontCharCode === 0xA0 || // Non breaking space\n           (fontCharCode >= 0x80 && fontCharCode <= 0x9F) || // Control chars\n           // Prevent drawing characters in the specials unicode block.\n           (fontCharCode >= 0xFFF0 && fontCharCode <= 0xFFFF) ||\n           (isSymbolic && isIdentityUnicode)) &&\n          nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) { // Room left.\n        // Loop to try and find a free spot in the private use area.\n        do {\n          fontCharCode = nextAvailableFontCharCode++;\n\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n\n        } while (usedFontCharCodes[fontCharCode] !== undefined &&\n                 nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n      }\n\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n\n  function getRanges(glyphs) {\n    // Array.sort() sorts by characters, not numerically, so convert to an\n    // array of characters.\n    var codes = [];\n    for (var charCode in glyphs) {\n      codes.push({ fontCharCode: charCode | 0, glyphId: glyphs[charCode] });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n\n    // Split the sorted codes into ranges.\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length; ) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n\n    return ranges;\n  }\n\n  function createCmapTable(glyphs) {\n    var ranges = getRanges(glyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + // version\n               string16(numTables) +  // numTables\n               '\\x00\\x03' + // platformID\n               '\\x00\\x01' + // encodingID\n               string32(4 + numTables * 8); // start of the table record\n\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) { break; }\n    }\n    var bmpLength = i + 1;\n\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\n    // Fill up the 4 parallel arrays describing the segments.\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += (end - start + 1);\n\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n\n        idDeltas += string16((startCode - start) & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n\n    var format314 = '\\x00\\x00' + // language\n                    string16(2 * segCount) +\n                    string16(searchParams.range) +\n                    string16(searchParams.entry) +\n                    string16(searchParams.rangeShift) +\n                    endCount + '\\x00\\x00' + startCount +\n                    idDeltas + idRangeOffsets + glyphsIds;\n\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + // platformID\n              '\\x00\\x0A' + // encodingID\n              string32(4 + numTables * 8 +\n                       4 + format314.length); // start of the table record\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += string32(start) + // startCharCode\n                           string32(end) + // endCharCode\n                           string32(code); // startGlyphID\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += string32(start) + // startCharCode\n                       string32(range[1]) + // endCharCode\n                       string32(code); // startGlyphID\n      }\n      header31012 = '\\x00\\x0C' + // format\n                    '\\x00\\x00' + // reserved\n                    string32(format31012.length + 16) + // length\n                    '\\x00\\x00\\x00\\x00' + // language\n                    string32(format31012.length / 12); // nGroups\n    }\n\n    return cmap + '\\x00\\x04' + // format\n                  string16(format314.length + 4) + // length\n                  format314 + header31012 + format31012;\n  }\n\n  function validateOS2Table(os2) {\n    var stream = new Stream(os2.data);\n    var version = stream.getUint16();\n    // TODO verify all OS/2 tables fields, but currently we validate only those\n    // that give us issues\n    stream.getBytes(60); // skipping type, misc sizes, panose, unicode ranges\n    var selection = stream.getUint16();\n    if (version < 4 && (selection & 0x0300)) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6); // skipping sTypoAscender/Descender/LineGap\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) { // makes font unreadable by windows\n      return false;\n    }\n\n    // OS/2 appears to be valid, resetting some fields\n    os2.data[8] = os2.data[9] = 0; // IE rejects fonts if fsType != 0\n    return true;\n  }\n\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n\n        var position = getUnicodeRangeFor(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          error('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      // TODO\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = (override.unitsPerEm ||\n                      1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0]);\n\n    // if the font units differ to the PDF glyph space units\n    // then scale up the values\n    var scale = (properties.ascentScaled ? 1.0 :\n                 unitsPerEm / PDF_GLYPH_SPACE_UNITS);\n\n    var typoAscent = (override.ascent ||\n                      Math.round(scale * (properties.ascent || bbox[3])));\n    var typoDescent = (override.descent ||\n                       Math.round(scale * (properties.descent || bbox[1])));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent; // fixing incorrect descent\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n\n    return '\\x00\\x03' + // version\n           '\\x02\\x24' + // xAvgCharWidth\n           '\\x01\\xF4' + // usWeightClass\n           '\\x00\\x05' + // usWidthClass\n           '\\x00\\x00' + // fstype (0 to let the font loads via font-face on IE)\n           '\\x02\\x8A' + // ySubscriptXSize\n           '\\x02\\xBB' + // ySubscriptYSize\n           '\\x00\\x00' + // ySubscriptXOffset\n           '\\x00\\x8C' + // ySubscriptYOffset\n           '\\x02\\x8A' + // ySuperScriptXSize\n           '\\x02\\xBB' + // ySuperScriptYSize\n           '\\x00\\x00' + // ySuperScriptXOffset\n           '\\x01\\xDF' + // ySuperScriptYOffset\n           '\\x00\\x31' + // yStrikeOutSize\n           '\\x01\\x02' + // yStrikeOutPosition\n           '\\x00\\x00' + // sFamilyClass\n           '\\x00\\x00\\x06' +\n           String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) +\n           '\\x00\\x00\\x00\\x00\\x00\\x00' + // Panose\n           string32(ulUnicodeRange1) + // ulUnicodeRange1 (Bits 0-31)\n           string32(ulUnicodeRange2) + // ulUnicodeRange2 (Bits 32-63)\n           string32(ulUnicodeRange3) + // ulUnicodeRange3 (Bits 64-95)\n           string32(ulUnicodeRange4) + // ulUnicodeRange4 (Bits 96-127)\n           '\\x2A\\x32\\x31\\x2A' + // achVendID\n           string16(properties.italicAngle ? 1 : 0) + // fsSelection\n           string16(firstCharIndex ||\n                    properties.firstChar) + // usFirstCharIndex\n           string16(lastCharIndex || properties.lastChar) +  // usLastCharIndex\n           string16(typoAscent) + // sTypoAscender\n           string16(typoDescent) + // sTypoDescender\n           '\\x00\\x64' + // sTypoLineGap (7%-10% of the unitsPerEM value)\n           string16(winAscent) + // usWinAscent\n           string16(winDescent) + // usWinDescent\n           '\\x00\\x00\\x00\\x00' + // ulCodePageRange1 (Bits 0-31)\n           '\\x00\\x00\\x00\\x00' + // ulCodePageRange2 (Bits 32-63)\n           string16(properties.xHeight) + // sxHeight\n           string16(properties.capHeight) + // sCapHeight\n           string16(0) + // usDefaultChar\n           string16(firstCharIndex || properties.firstChar) + // usBreakChar\n           '\\x00\\x03';  // usMaxContext\n  }\n\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * (Math.pow(2, 16)));\n    return ('\\x00\\x03\\x00\\x00' + // Version number\n            string32(angle) + // italicAngle\n            '\\x00\\x00' + // underlinePosition\n            '\\x00\\x00' + // underlineThickness\n            string32(properties.fixedPitch) + // isFixedPitch\n            '\\x00\\x00\\x00\\x00' + // minMemType42\n            '\\x00\\x00\\x00\\x00' + // maxMemType42\n            '\\x00\\x00\\x00\\x00' + // minMemType1\n            '\\x00\\x00\\x00\\x00');  // maxMemType1\n  }\n\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []]; // no strings and unicode strings\n    }\n\n    var strings = [\n      proto[0][0] || 'Original licence',  // 0.Copyright\n      proto[0][1] || name,                // 1.Font family\n      proto[0][2] || 'Unknown',           // 2.Font subfamily (font weight)\n      proto[0][3] || 'uniqueID',          // 3.Unique ID\n      proto[0][4] || name,                // 4.Full font name\n      proto[0][5] || 'Version 0.11',      // 5.Version\n      proto[0][6] || '',                  // 6.Postscript name\n      proto[0][7] || 'Unknown',           // 7.Trademark\n      proto[0][8] || 'Unknown',           // 8.Manufacturer\n      proto[0][9] || 'Unknown'            // 9.Designer\n    ];\n\n    // Mac want 1-byte per character strings while Windows want\n    // 2-bytes per character, so duplicate the names table\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable =\n      '\\x00\\x00' +                           // format\n      string16(namesRecordCount) +           // Number of names Record\n      string16(namesRecordCount * 12 + 6);   // Storage\n\n    // Build the name records field\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord =\n          platforms[i] + // platform ID\n          encodings[i] + // encoding ID\n          languages[i] + // language ID\n          string16(j) + // name ID\n          string16(str.length) +\n          string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = FontRendererFactory.create(this);\n      return shadow(this, 'renderer', renderer);\n    },\n\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = bytesToString(file.getBytes(4));\n\n        var checksum = file.getInt32();\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n\n        // Read the table associated data\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n\n        if (tag === 'head') {\n          // clearing checksum adjustment\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20; //Set font optimized for cleartype flag\n        }\n\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: bytesToString(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n\n      /**\n       * Read the appropriate subtable from the cmap according to 9.6.6.4 from\n       * PDF spec\n       */\n      function readCmapTable(cmap, font, isSymbolicFont) {\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n\n        var version = font.getUint16();\n        var numTables = font.getUint16();\n\n        var potentialTable;\n        var canBreak = false;\n        // There's an order of preference in terms of which cmap subtable to\n        // use:\n        // - non-symbolic fonts the preference is a 3,1 table then a 1,0 table\n        // - symbolic fonts the preference is a 3,0 table then a 1,0 table\n        // The following takes advantage of the fact that the tables are sorted\n        // to work.\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n            // Continue the loop since there still may be a higher priority\n            // table.\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n            // Continue the loop since there still may be a higher priority\n            // table.\n          } else if (platformId === 3 && encodingId === 1 &&\n                     (!isSymbolicFont || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n\n        if (!potentialTable) {\n          warn('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n\n        font.pos = start + potentialTable.offset;\n        var format = font.getUint16();\n        var length = font.getUint16();\n        var language = font.getUint16();\n\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n\n        // TODO(mack): refactor this cmap subtable reading logic out\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          // re-creating the table in format 4 since the encoding\n          // might be changed\n          var segCount = (font.getUint16() >> 1);\n          font.getBytes(6); // skipping range fields\n          var segIndex, segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex +\n                                    segment.end - segment.start + 1);\n          }\n\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n\n              glyphId = (offsetIndex < 0 ?\n                         j : offsets[offsetIndex + j - start]);\n              glyphId = (glyphId + delta) & 0xFFFF;\n              if (glyphId === 0) {\n                continue;\n              }\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          // Format 6 is a 2-bytes dense mapping, which means the font data\n          // lives glue together even if they are pretty far in the unicode\n          // table. (This looks weird, so I can have missed something), this\n          // works on Linux but seems to fails on Mac so let's rewrite the\n          // cmap table to a 3-1-4 style\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          error('cmap table has unsupported format: ' + format);\n        }\n\n        // removing duplicate entries\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n\n        if (numOfMetrics > numGlyphs) {\n          info('The numOfMetrics (' + numOfMetrics + ') should not be ' +\n               'greater than the numGlyphs (' + numGlyphs + ')');\n          // Reduce numOfMetrics if it is greater than numGlyphs\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings -\n          ((metrics.length - numOfMetrics * 4) >> 1);\n\n        if (numMissing > 0) {\n          // For each missing glyph, we set both the width and lsb to 0 (zero).\n          // Since we need to add two properties for each glyph, this explains\n          // the use of |numMissing * 2| when initializing the typed array.\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart,\n                             hintsValid) {\n        if (sourceEnd - sourceStart <= 12) {\n          // glyph with data less than 12 is invalid one\n          return 0;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = (glyf[0] << 8) | glyf[1];\n        if (contoursCount & 0x8000) {\n          // complex glyph, writing as is\n          dest.set(glyf, destStart);\n          return glyf.length;\n        }\n\n        var i, j = 10, flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = (glyf[j] << 8) | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        // skipping instructions\n        var instructionsStart = j;\n        var instructionsLength = (glyf[j] << 8) | glyf[j + 1];\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        // validating flags\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            // reserved flags must be zero, cleaning up\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = ((flag & 2) ? 1 : (flag & 16) ? 0 : 2) +\n                         ((flag & 4) ? 1 : (flag & 32) ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        // glyph without coordinates will be rejected\n        if (coordinatesLength === 0) {\n          return 0;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          // not enough data for coordinates\n          return 0;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength),\n                   destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = (glyphDataLength + 3) & ~3;\n          }\n          return glyphDataLength;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          // truncating and aligning to 4 bytes the long glyph data\n          glyphDataLength = (glyphDataLength + 3) & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          return glyphDataLength;\n        }\n        // glyph data is fine\n        dest.set(glyf, destStart);\n        return glyf.length;\n      }\n\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n\n        // Validate version:\n        // Should always be 0x00010000\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          info('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          info('Attempting to fix invalid indexToLocFormat in head table: ' +\n               indexToLocFormat);\n\n          // The value of indexToLocFormat should be 0 if the loca table\n          // consists of short offsets, and should be 1 if the loca table\n          // consists of long offsets.\n          //\n          // The number of entries in the loca table should be numGlyphs + 1.\n          //\n          // Using this information, we can work backwards to deduce if the\n          // size of each offset in the loca table, and thus figure out the\n          // appropriate value for indexToLocFormat.\n\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            // 0x0000 indicates the loca table consists of short offsets\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            // 0x0001 indicates the loca table consists of long offsets\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs,\n                                      isGlyphLocationsLong, hintsValid,\n                                      dupFirstEntry) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return (data[offset] << 24) | (data[offset + 1] << 16) |\n                   (data[offset + 2] << 8) | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = (value >>> 24) & 0xFF;\n            data[offset + 1] = (value >> 16) & 0xFF;\n            data[offset + 2] = (value >> 8) & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return (data[offset] << 9) | (data[offset + 1] << 1);\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = (value >> 9) & 0xFF;\n            data[offset + 1] = (value >> 1) & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        // is loca.data too short or long?\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        // removing the invalid glyphs\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphData = {};\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength &&\n              ((oldGlyfDataLength + 3) & ~3) === endOffset) {\n            // Aspose breaks fonts by aligning the glyphs to the qword, but not\n            // the glyf table size, which makes last glyph out of range.\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            // glyph end offset points outside glyf data, rejecting the glyph\n            itemEncode(locaData, j, writeOffset);\n            startOffset = endOffset;\n            continue;\n          }\n\n          if (startOffset === endOffset) {\n            missingGlyphData[i] = true;\n          }\n\n          var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset,\n                                        newGlyfData, writeOffset, hintsValid);\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n\n        if (writeOffset === 0) {\n          // glyf table cannot be empty -- redoing the glyf and loca tables\n          // to have single glyph with one point\n          var simpleGlyph = new Uint8Array(\n            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n          return missingGlyphData;\n        }\n\n        if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize,\n                     writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return missingGlyphData;\n      }\n\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n\n        var length = post.length, end = start + length;\n        var version = font.getInt32();\n        // skip rest to the tables\n        font.getBytes(28);\n\n        var glyphNames;\n        var valid = true;\n        var i;\n\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            warn('Unknown/unsupported post table version ' + version);\n            valid = false;\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n\n        var names = [[], []];\n        var length = nameTable.length, end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          // unsupported name table format or table \"too\" small\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n\n        for (i = 0; i < numRecords &&\n                        font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          // using only Macintosh and Windows platform/encoding names\n          if ((r.platform === 1 && r.encoding === 0 && r.language === 0) ||\n              (r.platform === 3 && r.encoding === 1 && r.language === 0x409)) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue; // outside of name table, ignoring\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            // unicode\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n\n      var TTOpsStackDeltas = [\n        0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5,\n        -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1,\n        1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1,\n        0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2,\n        0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1,\n        -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1,\n        -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1,\n        -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n        // 0xC0-DF == -1 and 0xE0-FF == -2\n\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions =\n          ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false, ifLevel = 0, inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          // The TrueType instruction set docs can be found at\n          // https://developer.apple.com/fonts/TTRefMan/RM05/Chap5.html\n          if (op === 0x40) { // NPUSHB - pushes n bytes\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) { // NPUSHW - pushes n words\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push((b << 8) | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) { // PUSHB - pushes bytes\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) { // PUSHW - pushes words\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push((b << 8) | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) { // CALL\n            if (!inFDEF && !inELSE) {\n              // collecting inforamtion about which functions are used\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined &&\n                         functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({data: data, i: i, stackTop: stack.length - 1});\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  warn('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) { // FDEF\n            if (inFDEF || inELSE) {\n              warn('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            // collecting inforamtion about which functions are defined\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {data: data, i: i};\n          } else if (op === 0x2D) { // ENDF - end of function\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                warn('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] =\n                stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) { // IDEF - instruction definition\n            if (inFDEF || inELSE) {\n              warn('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            // recording it as a function to track ENDF\n            lastDeff = i;\n          } else if (op === 0x58) { // IF\n            ++ifLevel;\n          } else if (op === 0x1B) { // ELSE\n            inELSE = ifLevel;\n          } else if (op === 0x59) { // EIF\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) { // JMPR\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              // only jumping forward to prevent infinite loop\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          // Adjusting stack not extactly, but just enough to get function id\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] :\n              op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (n === n) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN); // pushing any number into stack\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          warn('TT: complementing a missing function tail');\n          // new function definition started, but not finished\n          // complete function by [CLEAR, ENDF]\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          warn('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            warn('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            warn('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          // concatenating the content items\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = (newLength + 3) & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n\n      function sanitizeTTPrograms(fpgm, prep, cvt) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && (cvt.length & 1)) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n\n      // The following steps modify the original font data, making copy\n      font = new Stream(new Uint8Array(font.getBytes()));\n\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp',\n        'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n\n      var tables = { 'OS/2': null, cmap: null, head: null, hhea: null,\n                     hmtx: null, maxp: null, name: null, post: null };\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue; // skipping table if it's not a required or optional table\n        }\n        if (table.length === 0) {\n          continue; // skipping empty tables\n        }\n        tables[table.tag] = table;\n      }\n\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        // OpenType font\n        if (header.version === 'OTTO' ||\n            !tables.head || !tables.hhea || !tables.maxp || !tables.post) {\n          // no major tables: throwing everything at CFFFont\n          cffFile = new Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n\n          return this.convert(name, cff, properties);\n        }\n\n        delete tables.glyf;\n        delete tables.loca;\n        delete tables.fpgm;\n        delete tables.prep;\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables.glyf || !tables.loca) {\n          error('Required \"glyf\" or \"loca\" tables are not found');\n        }\n        this.isOpenType = false;\n      }\n\n      if (!tables.maxp) {\n        error('Required \"maxp\" table is not found');\n      }\n\n      font.pos = (font.start || 0) + tables.maxp.offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      if (version >= 0x00010000 && tables.maxp.length >= 22) {\n        // maxZones can be invalid\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) { // reset to 2 if font has invalid maxZones\n          tables.maxp.data[14] = 0;\n          tables.maxp.data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n      }\n\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode &&\n          properties.toUnicode.get(0) > '\\u0000') {\n        // oracle's defect (see 3427), duplicating first entry\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables.maxp.data[4] = numGlyphs >> 8;\n        tables.maxp.data[5] = numGlyphs & 255;\n      }\n\n      var hintsValid = sanitizeTTPrograms(tables.fpgm, tables.prep,\n                                          tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables.fpgm;\n        delete tables.prep;\n        delete tables['cvt '];\n      }\n\n      // Ensure the hmtx table contains the advance width and\n      // sidebearings information for numGlyphs in the maxp table\n      sanitizeMetrics(font, tables.hhea, tables.hmtx, numGlyphs);\n\n      if (!tables.head) {\n        error('Required \"head\" table is not found');\n      }\n\n      sanitizeHead(tables.head, numGlyphs, isTrueType ? tables.loca.length : 0);\n\n      var missingGlyphs = {};\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables.head.data[50],\n                                         tables.head.data[51]);\n        missingGlyphs = sanitizeGlyphLocations(tables.loca, tables.glyf,\n                                               numGlyphs, isGlyphLocationsLong,\n                                               hintsValid, dupFirstEntry);\n      }\n\n      if (!tables.hhea) {\n        error('Required \"hhea\" table is not found');\n      }\n\n      // Sanitizer reduces the glyph advanceWidth to the maxAdvanceWidth\n      // Sometimes it's 0. That needs to be fixed\n      if (tables.hhea.data[10] === 0 && tables.hhea.data[11] === 0) {\n        tables.hhea.data[10] = 0xFF;\n        tables.hhea.data[11] = 0xFF;\n      }\n\n      // The 'post' table has glyphs names.\n      if (tables.post) {\n        var valid = readPostScriptTable(tables.post, properties, numGlyphs);\n        if (!valid) {\n          tables.post = null;\n        }\n      }\n\n      var charCodeToGlyphId = [], charCode, toUnicode = properties.toUnicode;\n\n      function hasGlyph(glyphId, charCode) {\n        if (!missingGlyphs[glyphId]) {\n          return true;\n        }\n        if (charCode >= 0 && toUnicode.has(charCode)) {\n          return true;\n        }\n        return false;\n      }\n\n      if (properties.type === 'CIDFontType2') {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\n        properties.cMap.forEach(function(charCode, cid) {\n          assert(cid <= 0xffff, 'Max size of CID is 65,535');\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = charCode;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n\n          if (glyphId >= 0 && glyphId < numGlyphs &&\n              hasGlyph(glyphId, charCode)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        // Most of the following logic in this code branch is based on the\n        // 9.6.6.4 of the PDF spec.\n        var cmapTable = readCmapTable(tables.cmap, font, this.isSymbolicFont);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        var hasEncoding = properties.differences.length ||\n                          !!properties.baseEncodingName;\n\n        // The spec seems to imply that if the font is symbolic the encoding\n        // should be ignored, this doesn't appear to work for 'preistabelle.pdf'\n        // where the the font is symbolic and it has an encoding.\n        if (hasEncoding &&\n            (cmapPlatformId === 3 && cmapEncodingId === 1 ||\n             cmapPlatformId === 1 && cmapEncodingId === 0) ||\n            (cmapPlatformId === -1 && cmapEncodingId === -1 && // Temporary hack\n             !!Encodings[properties.baseEncodingName])) {      // Temporary hack\n          // When no preferred cmap table was found and |baseEncodingName| is\n          // one of the predefined encodings, we seem to obtain a better\n          // |charCodeToGlyphId| map from the code below (fixes bug 1057544).\n          // TODO: Note that this is a hack which should be removed as soon as\n          //       we have proper support for more exotic cmap tables.\n\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' ||\n              properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = Encodings[properties.baseEncodingName];\n          }\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding &&\n                       baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = Encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = GlyphsUnicode[glyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              // TODO: the encoding needs to be updated with mac os table.\n              unicodeOrCharCode = Encodings.MacRomanEncoding.indexOf(glyphName);\n            }\n\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode === unicodeOrCharCode &&\n                  hasGlyph(cmapMappings[i].glyphId, unicodeOrCharCode)) {\n                charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n                found = true;\n                break;\n              }\n            }\n            if (!found && properties.glyphNames) {\n              // Try to map using the post table. There are currently no known\n              // pdfs that this fixes.\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId > 0 && hasGlyph(glyphId, -1)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          // Default Unicode semantics, use the charcodes as is.\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] =\n              cmapMappings[i].glyphId;\n          }\n        } else {\n          // For (3, 0) cmap tables:\n          // The charcode key being stored in charCodeToGlyphId is the lower\n          // byte of the two-byte charcodes of the cmap table since according to\n          // the spec: 'each byte from the string shall be prepended with the\n          // high byte of the range [of charcodes in the cmap table], to form\n          // a two-byte character, which shall be used to select the\n          // associated glyph description from the subtable'.\n          //\n          // For (1, 0) cmap tables:\n          // 'single bytes from the string shall be used to look up the\n          // associated glyph descriptions from the subtable'. This means\n          // charcodes in the cmap will be single bytes, so no-op since\n          // glyph.charCode & 0xFF === glyph.charCode\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode & 0xFF;\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n\n      if (charCodeToGlyphId.length === 0) {\n        // defines at least one glyph\n        charCodeToGlyphId[0] = 0;\n      }\n\n      // Converting glyphs and ids into font's cmap table\n      var newMapping = adjustMapping(charCodeToGlyphId, properties);\n      this.toFontChar = newMapping.toFontChar;\n      tables.cmap = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId)\n      };\n\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        // extract some more font properties from the OpenType head and\n        // hhea tables; yMin and descent value are always negative\n        var override = {\n          unitsPerEm: int16(tables.head.data[18], tables.head.data[19]),\n          yMax: int16(tables.head.data[42], tables.head.data[43]),\n          yMin: int16(tables.head.data[38], tables.head.data[39]) - 0x10000,\n          ascent: int16(tables.hhea.data[4], tables.hhea.data[5]),\n          descent: int16(tables.hhea.data[6], tables.hhea.data[7]) - 0x10000\n        };\n\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId,\n                               override)\n        };\n      }\n\n      // Rewrite the 'post' table if needed\n      if (!tables.post) {\n        tables.post = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n\n      if (!isTrueType) {\n        try {\n          // Trying to repair CFF file\n          cffFile = new Stream(tables['CFF '].data);\n          var parser = new CFFParser(cffFile, properties);\n          cff = parser.parse();\n          var compiler = new CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          warn('Failed to compile font ' + properties.loadedName);\n        }\n      }\n\n      // Re-creating 'name' table\n      if (!tables.name) {\n        tables.name = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        // ... using existing 'name' table as prototype\n        var namePrototype = readNameTable(tables.name);\n        tables.name.data = createNameTable(name, namePrototype);\n      }\n\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n\n    convert: function Font_convert(fontName, font, properties) {\n      // TODO: Check the charstring widths to determine this.\n      properties.fixedPitch = false;\n\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties);\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] =\n            glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = Encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = Encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            // There's no point in mapping it if the char code was never mapped\n            // to begin with.\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            // Find a fontCharCode that maps to the base and accent glyphs.\n            // If one doesn't exists, create it.\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId,\n                                                  baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId,\n                                                    accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n\n      var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      // PostScript Font Program\n      builder.addTable('CFF ', font.data);\n      // OS/2 and Windows Specific metrics\n      builder.addTable('OS/2', createOS2Table(properties,\n                                              newMapping.charCodeToGlyphId));\n      // Character to glyphs mapping\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId));\n      // Font header\n      builder.addTable('head',\n            '\\x00\\x01\\x00\\x00' + // Version number\n            '\\x00\\x00\\x10\\x00' + // fontRevision\n            '\\x00\\x00\\x00\\x00' + // checksumAdjustement\n            '\\x5F\\x0F\\x3C\\xF5' + // magicNumber\n            '\\x00\\x00' + // Flags\n            safeString16(unitsPerEm) + // unitsPerEM\n            '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + // creation date\n            '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + // modifification date\n            '\\x00\\x00' + // xMin\n            safeString16(properties.descent) + // yMin\n            '\\x0F\\xFF' + // xMax\n            safeString16(properties.ascent) + // yMax\n            string16(properties.italicAngle ? 2 : 0) + // macStyle\n            '\\x00\\x11' + // lowestRecPPEM\n            '\\x00\\x00' + // fontDirectionHint\n            '\\x00\\x00' + // indexToLocFormat\n            '\\x00\\x00');  // glyphDataFormat\n\n      // Horizontal header\n      builder.addTable('hhea',\n            '\\x00\\x01\\x00\\x00' + // Version number\n            safeString16(properties.ascent) + // Typographic Ascent\n            safeString16(properties.descent) + // Typographic Descent\n            '\\x00\\x00' + // Line Gap\n            '\\xFF\\xFF' + // advanceWidthMax\n            '\\x00\\x00' + // minLeftSidebearing\n            '\\x00\\x00' + // minRightSidebearing\n            '\\x00\\x00' + // xMaxExtent\n            safeString16(properties.capHeight) + // caretSlopeRise\n            safeString16(Math.tan(properties.italicAngle) *\n                         properties.xHeight) + // caretSlopeRun\n            '\\x00\\x00' + // caretOffset\n            '\\x00\\x00' + // -reserved-\n            '\\x00\\x00' + // -reserved-\n            '\\x00\\x00' + // -reserved-\n            '\\x00\\x00' + // -reserved-\n            '\\x00\\x00' + // metricDataFormat\n            string16(numGlyphs)); // Number of HMetrics\n\n      // Horizontal metrics\n      builder.addTable('hmtx', (function fontFieldsHmtx() {\n          var charstrings = font.charstrings;\n          var cffWidths = font.cff ? font.cff.widths : null;\n          var hmtx = '\\x00\\x00\\x00\\x00'; // Fake .notdef\n          for (var i = 1, ii = numGlyphs; i < ii; i++) {\n            var width = 0;\n            if (charstrings) {\n              var charstring = charstrings[i - 1];\n              width = 'width' in charstring ? charstring.width : 0;\n            } else if (cffWidths) {\n              width = Math.ceil(cffWidths[i] || 0);\n            }\n            hmtx += string16(width) + string16(0);\n          }\n          return hmtx;\n        })());\n\n      // Maximum profile\n      builder.addTable('maxp',\n            '\\x00\\x00\\x50\\x00' + // Version number\n            string16(numGlyphs)); // Num of glyphs\n\n      // Naming tables\n      builder.addTable('name', createNameTable(fontName));\n\n      // PostScript informations\n      builder.addTable('post', createPostTable(properties));\n\n      return builder.toArray();\n    },\n\n    /**\n     * Builds a char code to unicode map based on section 9.10 of the spec.\n     * @param {Object} properties Font properties object.\n     * @return {Object} A ToUnicodeMap object.\n     */\n    buildToUnicode: function Font_buildToUnicode(properties) {\n      // Section 9.10.2 Mapping Character Codes to Unicode Values\n      if (properties.toUnicode && properties.toUnicode.length !== 0) {\n        return properties.toUnicode;\n      }\n      // According to the spec if the font is a simple font we should only map\n      // to unicode if the base encoding is MacRoman, MacExpert, or WinAnsi or\n      // the differences array only contains adobe standard or symbol set names,\n      // in pratice it seems better to always try to create a toUnicode\n      // map based of the default encoding.\n      var toUnicode, charcode;\n      if (!properties.composite /* is simple font */) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        // Merge in the differences array.\n        var differences = properties.differences;\n        for (charcode in differences) {\n          encoding[charcode] = differences[charcode];\n        }\n        for (charcode in encoding) {\n          // a) Map the character code to a character name.\n          var glyphName = encoding[charcode];\n          // b) Look up the character name in the Adobe Glyph List (see the\n          //    Bibliography) to obtain the corresponding Unicode value.\n          if (glyphName === '') {\n            continue;\n          } else if (GlyphsUnicode[glyphName] === undefined) {\n            // (undocumented) c) Few heuristics to recognize unknown glyphs\n            // NOTE: Adobe Reader does not do this step, but OSX Preview does\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G': // Gxx glyph\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g': // g00xx glyph\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C': // Cddd glyph\n              case 'c': // cddd glyph\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n            }\n            if (code) {\n              // If |baseEncodingName| is one the predefined encodings,\n              // and |code| equals |charcode|, using the glyph defined in the\n              // baseEncoding seems to yield a better |toUnicode| mapping\n              // (fixes issue 5070).\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = Encodings[baseEncodingName];\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] =\n                    String.fromCharCode(GlyphsUnicode[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(GlyphsUnicode[glyphName]);\n        }\n        return new ToUnicodeMap(toUnicode);\n      }\n      // If the font is a composite font that uses one of the predefined CMaps\n      // listed in Table 118 (except Identity–H and Identity–V) or whose\n      // descendant CIDFont uses the Adobe-GB1, Adobe-CNS1, Adobe-Japan1, or\n      // Adobe-Korea1 character collection:\n      if (properties.composite && (\n           (properties.cMap.builtInCMap &&\n            !(properties.cMap instanceof IdentityCMap)) ||\n           (properties.cidSystemInfo.registry === 'Adobe' &&\n             (properties.cidSystemInfo.ordering === 'GB1' ||\n              properties.cidSystemInfo.ordering === 'CNS1' ||\n              properties.cidSystemInfo.ordering === 'Japan1' ||\n              properties.cidSystemInfo.ordering === 'Korea1')))) {\n        // Then:\n        // a) Map the character code to a character identifier (CID) according\n        // to the font’s CMap.\n        // b) Obtain the registry and ordering of the character collection used\n        // by the font’s CMap (for example, Adobe and Japan1) from its\n        // CIDSystemInfo dictionary.\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        // c) Construct a second CMap name by concatenating the registry and\n        // ordering obtained in step (b) in the format registry–ordering–UCS2\n        // (for example, Adobe–Japan1–UCS2).\n        var ucs2CMapName = new Name(registry + '-' + ordering + '-UCS2');\n        // d) Obtain the CMap with the name constructed in step (c) (available\n        // from the ASN Web site; see the Bibliography).\n        var ucs2CMap = CMapFactory.create(ucs2CMapName,\n          { url: PDFJS.cMapUrl, packed: PDFJS.cMapPacked }, null);\n        var cMap = properties.cMap;\n        toUnicode = [];\n        cMap.forEach(function(charcode, cid) {\n          assert(cid <= 0xffff, 'Max size of CID is 65,535');\n          // e) Map the CID obtained in step (a) according to the CMap obtained\n          // in step (d), producing a Unicode value.\n          var ucs2 = ucs2CMap.lookup(cid);\n          if (ucs2) {\n            toUnicode[charcode] =\n              String.fromCharCode((ucs2.charCodeAt(0) << 8) +\n                                  ucs2.charCodeAt(1));\n          }\n        });\n        return new ToUnicodeMap(toUnicode);\n      }\n\n      // The viewer's choice, just use an identity map.\n      return new IdentityToUnicodeMap(properties.firstChar,\n                                      properties.lastChar);\n    },\n\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n\n      // trying to estimate space character width\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        // if possible, getting width by glyph name\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphUnicode = GlyphsUnicode[glyphName];\n        // finding the charcode via unicodeToCID map\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        // ... via toUnicode map\n        if (!charcode && 'toUnicode' in this) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        // setting it to unicode if negative or undefined\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        // trying to get width via charcode\n        width = this.widths[charcode];\n        if (width) {\n          break; // the non-zero width found\n        }\n      }\n      width = width || this.defaultWidth;\n      // Do not shadow the property here. See discussion:\n      // https://github.com/mozilla/pdf.js/pull/2127#discussion_r1662280\n      this._shadowWidth = width;\n      return width;\n    },\n\n    charToGlyph: function Font_charToGlyph(charcode) {\n      var fontCharCode, width, operatorListId;\n\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = isNum(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n\n      // First try the toFontChar map, if it's not there then try falling\n      // back to the char code.\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n      }\n\n      if (this.isType3Font) {\n        // Font char code in this case is actually a glyph name.\n        operatorListId = fontCharCode;\n      }\n\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n\n      var fontChar = String.fromCharCode(fontCharCode);\n\n      var glyph = this.glyphCache[charcode];\n      if (!glyph ||\n          !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric,\n                                 operatorListId)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric,\n                          operatorListId);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n\n      // if we translated this string before, just grab it from the cache\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n\n      // lazily create the translation cache\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0, ii;\n\n      if (this.cMap) {\n        // composite fonts have multi-byte strings convert the string from\n        // single-byte to multi-byte\n        var c = {};\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          glyph = this.charToGlyph(charcode);\n          glyphs.push(glyph);\n          // placing null after each word break charcode (ASCII SPACE)\n          // Ignore occurences of 0x20 in multiple-byte codes.\n          if (length === 1 && chars.charCodeAt(i - 1) === 0x20) {\n            glyphs.push(null);\n          }\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode);\n          glyphs.push(glyph);\n          if (charcode === 0x20) {\n            glyphs.push(null);\n          }\n        }\n      }\n\n      // Enter the translated string into the cache\n      return (charsCache[charsCacheKey] = glyphs);\n    }\n  };\n\n  return Font;\n})();\n\nvar ErrorFont = (function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return {error: this.error};\n    }\n  };\n\n  return ErrorFont;\n})();\n\n/**\n * Shared logic for building a char code to glyph id mapping for Type1 and\n * simple CFF fonts. See section 9.6.6.2 of the spec.\n * @param {Object} properties Font properties object.\n * @param {Object} builtInEncoding The encoding contained within the actual font\n * data.\n * @param {Array} Array of glyph names where the index is the glyph ID.\n * @returns {Object} A char code to glyph ID map.\n */\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n\n  if (properties.baseEncodingName) {\n    // If a valid base encoding name was used, the mapping is initialized with\n    // that.\n    baseEncoding = Encodings[properties.baseEncodingName];\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0; // notdef\n      }\n    }\n  } else if (!!(properties.flags & FontFlags.Symbolic)) {\n    // For a symbolic font the encoding should be the fonts built-in\n    // encoding.\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    // For non-symbolic fonts that don't have a base encoding the standard\n    // encoding should be used.\n    baseEncoding = Encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0; // notdef\n      }\n    }\n  }\n\n  // Lastly, merge in the differences.\n  var differences = properties.differences;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0; // notdef\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\n\n/*\n * CharStrings are encoded following the the CharString Encoding sequence\n * describe in Chapter 6 of the \"Adobe Type1 Font Format\" specification.\n * The value in a byte indicates a command, a number, or subsequent bytes\n * that are to be interpreted in a special way.\n *\n * CharString Number Encoding:\n *  A CharString byte containing the values from 32 through 255 inclusive\n *  indicate an integer. These values are decoded in four ranges.\n *\n * 1. A CharString byte containing a value, v, between 32 and 246 inclusive,\n * indicate the integer v - 139. Thus, the integer values from -107 through\n * 107 inclusive may be encoded in single byte.\n *\n * 2. A CharString byte containing a value, v, between 247 and 250 inclusive,\n * indicates an integer involving the next byte, w, according to the formula:\n * [(v - 247) x 256] + w + 108\n *\n * 3. A CharString byte containing a value, v, between 251 and 254 inclusive,\n * indicates an integer involving the next byte, w, according to the formula:\n * -[(v - 251) * 256] - w - 108\n *\n * 4. A CharString containing the value 255 indicates that the next 4 bytes\n * are a two complement signed integer. The first of these bytes contains the\n * highest order bits, the second byte contains the next higher order bits\n * and the fourth byte contain the lowest order bits.\n *\n *\n * CharString Command Encoding:\n *  CharStrings commands are encoded in 1 or 2 bytes.\n *\n *  Single byte commands are encoded in 1 byte that contains a value between\n *  0 and 31 inclusive.\n *  If a command byte contains the value 12, then the value in the next byte\n *  indicates a command. This \"escape\" mechanism allows many extra commands\n * to be encoded and this encoding technique helps to minimize the length of\n * the charStrings.\n */\nvar Type1CharString = (function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop' : [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1: // hstem\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3: // vstem\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4: // vmoveto\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                // Add the dx for flex and but also swap the values so they are\n                // the right order.\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5: // rlineto\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6: // hlineto\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7: // vlineto\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8: // rrcurveto\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9: // closepath\n              // closepath is a Type1 command that does not take argument and is\n              // useless in Type2 and it can simply be ignored.\n              this.stack = [];\n              break;\n            case 10: // callsubr\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              error = this.convert(subrs[subrNumber], subrs);\n              break;\n            case 11: // return\n              return error;\n            case 13: // hsbw\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              // To convert to type2 we have to move the width value to the\n              // first part of the charstring and then use hmoveto with lsb.\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14: // endchar\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21: // rmoveto\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22: // hmoveto\n              if (this.flexing) {\n                // Add the dy for flex.\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30: // vhcurveto\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31: // hvcurveto\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0: // dotsection\n              // dotsection is a Type1 command to specify some hinting feature\n              // for dots that do not take a parameter and it can safely be\n              // ignored for Type2.\n              this.stack = [];\n              break;\n            case (12 << 8) + 1: // vstem3\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              // [vh]stem3 are Type1 only and Type2 supports [vh]stem with\n              // multiple parameters, so instead of returning [vh]stem3 take a\n              // shortcut and return [vhstem] instead.\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2: // hstem3\n              if (!HINTING_ENABLED) {\n                 this.stack = [];\n                break;\n              }\n              // See vstem3.\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6: // seac\n              // seac is like type 2's special endchar but it doesn't use the\n              // first argument asb, so remove it.\n              if (SEAC_ANALYSIS_ENABLED) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7: // sbw\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              // To convert to type2 we have to move the width value to the\n              // first part of the charstring and then use rmoveto with\n              // (dx, dy). The height argument will not be used for vmtx and\n              // vhea tables reconstruction -- ignoring it.\n              var wy = this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12: // div\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16: // callothersubr\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(\n                  flexArgs[2] + flexArgs[0], // bcp1x + rpx\n                  flexArgs[3] + flexArgs[1], // bcp1y + rpy\n                  flexArgs[4], // bcp2x\n                  flexArgs[5], // bcp2y\n                  flexArgs[6], // p2x\n                  flexArgs[7], // p2y\n                  flexArgs[8], // bcp3x\n                  flexArgs[9], // bcp3y\n                  flexArgs[10], // bcp4x\n                  flexArgs[11], // bcp4y\n                  flexArgs[12], // p3x\n                  flexArgs[13], // p3y\n                  flexArgs[14] // flexDepth\n                  // 15 = finalx unused by flex\n                  // 16 = finaly unused by flex\n                );\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17: // pop\n              // Ignore this since it is only used with othersubr.\n              break;\n            case (12 << 8) + 33: // setcurrentpoint\n              // Ignore for now.\n              this.stack = [];\n              break;\n            default:\n              warn('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = ((value - 247) * 256) + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 |\n                  (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n\n    executeCommand: function(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (value === (value | 0)) { // int\n          this.output.push(28, (value >> 8) & 0xff, value & 0xff);\n        } else { // fixed point\n          value = (65536 * value) | 0;\n          this.output.push(255,\n                           (value >> 24) & 0xFF,\n                           (value >> 16) & 0xFF,\n                           (value >> 8) & 0xFF,\n                           value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n\n  return Type1CharString;\n})();\n\n/*\n * Type1Parser encapsulate the needed code for parsing a Type1 font\n * program. Some of its logic depends on the Type2 charstrings\n * structure.\n * Note: this doesn't really parse the font since that would require evaluation\n * of PostScript, but it is possible in most cases to extract what we need\n * without a full parse.\n */\nvar Type1Parser = (function Type1ParserClosure() {\n  /*\n   * Decrypt a Sequence of Ciphertext Bytes to Produce the Original Sequence\n   * of Plaintext Bytes. The function took a key as a parameter which can be\n   * for decrypting the eexec block of for decoding charStrings.\n   */\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || // '0'-'9'\n           code >= 65 && code <= 70 || // 'A'-'F'\n           code >= 97 && code <= 102;  // 'a'-'f'\n  }\n\n  function decrypt(data, key, discardNumber) {\n    var r = key | 0, c1 = 52845, c2 = 22719;\n    var count = data.length;\n    var decrypted = new Uint8Array(count);\n    for (var i = 0; i < count; i++) {\n      var value = data[i];\n      decrypted[i] = value ^ (r >> 8);\n      r = ((value + r) * c1 + c2) & ((1 << 16) - 1);\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber);\n  }\n\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0, c1 = 52845, c2 = 22719;\n    var count = data.length, maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ (r >> 8);\n        r = ((value + r) * c1 + c2) & ((1 << 16) - 1);\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n\n  function isSpecial(c) {\n    return c === 0x2F || // '/'\n           c === 0x5B || c === 0x5D || // '[', ']'\n           c === 0x7B || c === 0x7D || // '{', '}'\n           c === 0x28 || c === 0x29; // '(', ')'\n  }\n\n  function Type1Parser(stream, encrypted) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) &&\n                       isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) :\n                          decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.stream = stream;\n    this.nextChar();\n  }\n\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken(); // read '[' or '{' (arrays can start with either)\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n\n    readInt: function Type1Parser_readInt() {\n      // Use '| 0' to prevent setting a double into length such as the double\n      // does not flow into the loop variable.\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n\n      // Use 1 and 0 since that's what type2 charstrings use.\n      return token === 'true' ? 1 : 0;\n    },\n\n    nextChar : function Type1_nextChar() {\n      return (this.currentChar = this.stream.getByte());\n    },\n\n    getToken: function Type1Parser_getToken() {\n      // Eat whitespace and comments.\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) { // '%'\n          comment = true;\n        } else if (!Lexer.isSpace(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !Lexer.isSpace(ch) && !isSpecial(ch));\n      return token;\n    },\n\n    /*\n     * Returns an object containing a Subrs array and a CharStrings\n     * array extracted from and eexec encrypted block of data\n     */\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n\n      var subrs = [], charstrings = [];\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: {\n          'privateData': {\n            'lenIV': 4\n          }\n        }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            // The number immediately following CharStrings must be greater or\n            // equal to the number of CharStrings.\n            this.getToken();\n            this.getToken(); // read in 'dict'\n            this.getToken(); // read in 'dup'\n            this.getToken(); // read in 'begin'\n            while(true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken(); // read in 'RD' or '-|'\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n              // Skip past the required space and binary data.\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken(); // read in 'ND' or '|-'\n              if (token === 'noaccess') {\n                this.getToken(); // read in 'def'\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            var num = this.readInt();\n            this.getToken(); // read in 'array'\n            while ((token = this.getToken()) === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken(); // read in 'RD' or '-|'\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n              // Skip past the required space and binary data.\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken(); // read in 'NP' or '|'\n              if (token === 'noaccess') {\n                this.getToken(); // read in 'put'\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            // *Blue* values may contain invalid data: disables reading of\n            // those values when hinting is disabled.\n            if (blueArray.length > 0 && (blueArray.length % 2) === 0 &&\n                HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] =\n              this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs);\n        var output = charString.output;\n        if (error) {\n          // It seems when FreeType encounters an error while evaluating a glyph\n          // that it completely ignores the glyph so we'll mimic that behaviour\n          // here and put an endchar to make the validator happy.\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n\n      return program;\n    },\n\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              // encoding name is specified\n              encoding = Encodings[encodingArg];\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken(); // read in 'array'\n\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                // skipping till first dup or def (e.g. ignoring for statement)\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return; // invalid header\n                  }\n                }\n                if (token === 'def') {\n                  break; // read all array data\n                }\n                var index = this.readInt();\n                this.getToken(); // read in '/'\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken(); // read the in 'put'\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            // adjusting ascent/descent\n            properties.ascent = fontBBox[3];\n            properties.descent = fontBBox[1];\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n\n  return Type1Parser;\n})();\n\n/**\n * The CFF class takes a Type1 file and wrap it into a\n * 'Compact Font Format' which itself embed Type2 charstrings.\n */\nvar CFFStandardStrings = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n  'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus',\n  'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four',\n  'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n  'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\n  'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum',\n  'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\n  'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\n  'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase',\n  'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown',\n  'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent',\n  'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash',\n  'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae',\n  'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior',\n  'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn',\n  'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters',\n  'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior',\n  'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring',\n  'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave',\n  'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute',\n  'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute',\n  'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron',\n  'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde',\n  'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute',\n  'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex',\n  'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex',\n  'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall',\n  'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall',\n  'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle',\n  'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n  'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior',\n  'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior',\n  'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior',\n  'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall',\n  'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall',\n  'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall',\n  'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n  'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah',\n  'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall',\n  'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n  'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior',\n  'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth',\n  'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n  'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior',\n  'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior',\n  'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior',\n  'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n  'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n  'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall',\n  'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n  'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n  'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall',\n  'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall',\n  'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n  'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall',\n  'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003',\n  'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'\n];\n\n// Type1Font is also a CIDFontType0.\nvar Type1Font = function Type1Font(name, file, properties) {\n  // Some bad generators embed pfb file as is, we have to strip 6-byte headers.\n  // Also, length1 and length2 might be off by 6 bytes as well.\n  // http://www.math.ubc.ca/~cass/piscript/type1.pdf\n  var PFB_HEADER_SIZE = 6;\n  var headerBlockLength = properties.length1;\n  var eexecBlockLength = properties.length2;\n  var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n  var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n  if (pfbHeaderPresent) {\n    file.skip(PFB_HEADER_SIZE);\n    headerBlockLength = (pfbHeader[5] << 24) | (pfbHeader[4] << 16) |\n                        (pfbHeader[3] << 8) | pfbHeader[2];\n  }\n\n  // Get the data block containing glyphs and subrs informations\n  var headerBlock = new Stream(file.getBytes(headerBlockLength));\n  var headerBlockParser = new Type1Parser(headerBlock);\n  headerBlockParser.extractFontHeader(properties);\n\n  if (pfbHeaderPresent) {\n    pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n    eexecBlockLength = (pfbHeader[5] << 24) | (pfbHeader[4] << 16) |\n                       (pfbHeader[3] << 8) | pfbHeader[2];\n  }\n\n  // Decrypt the data blocks and retrieve it's content\n  var eexecBlock = new Stream(file.getBytes(eexecBlockLength));\n  var eexecBlockParser = new Type1Parser(eexecBlock, true);\n  var data = eexecBlockParser.extractFontProgram();\n  for (var info in data.properties) {\n    properties[info] = data.properties[info];\n  }\n\n  var charstrings = data.charstrings;\n  var type2Charstrings = this.getType2Charstrings(charstrings);\n  var subrs = this.getType2Subrs(data.subrs);\n\n  this.charstrings = charstrings;\n  this.data = this.wrap(name, type2Charstrings, this.charstrings,\n                        subrs, properties);\n  this.seacs = this.getSeacs(data.charstrings);\n};\n\nType1Font.prototype = {\n  get numGlyphs() {\n    return this.charstrings.length + 1;\n  },\n\n  getCharset: function Type1Font_getCharset() {\n    var charset = ['.notdef'];\n    var charstrings = this.charstrings;\n    for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n      charset.push(charstrings[glyphId].glyphName);\n    }\n    return charset;\n  },\n\n  getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n    var charstrings = this.charstrings;\n    var glyphNames = ['.notdef'], glyphId;\n    for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n      glyphNames.push(charstrings[glyphId].glyphName);\n    }\n    var encoding = properties.builtInEncoding;\n    if (encoding) {\n      var builtInEncoding = {};\n      for (var charCode in encoding) {\n        glyphId = glyphNames.indexOf(encoding[charCode]);\n        if (glyphId >= 0) {\n          builtInEncoding[charCode] = glyphId;\n        }\n      }\n    }\n\n    return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n  },\n\n  getSeacs: function Type1Font_getSeacs(charstrings) {\n    var i, ii;\n    var seacMap = [];\n    for (i = 0, ii = charstrings.length; i < ii; i++) {\n      var charstring = charstrings[i];\n      if (charstring.seac) {\n        // Offset by 1 for .notdef\n        seacMap[i + 1] = charstring.seac;\n      }\n    }\n    return seacMap;\n  },\n\n  getType2Charstrings: function Type1Font_getType2Charstrings(\n                                  type1Charstrings) {\n    var type2Charstrings = [];\n    for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n      type2Charstrings.push(type1Charstrings[i].charstring);\n    }\n    return type2Charstrings;\n  },\n\n  getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n    var bias = 0;\n    var count = type1Subrs.length;\n    if (count < 1133) {\n      bias = 107;\n    } else if (count < 33769) {\n      bias = 1131;\n    } else {\n      bias = 32768;\n    }\n\n    // Add a bunch of empty subrs to deal with the Type2 bias\n    var type2Subrs = [];\n    var i;\n    for (i = 0; i < bias; i++) {\n      type2Subrs.push([0x0B]);\n    }\n\n    for (i = 0; i < count; i++) {\n      type2Subrs.push(type1Subrs[i]);\n    }\n\n    return type2Subrs;\n  },\n\n  wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n    var cff = new CFF();\n    cff.header = new CFFHeader(1, 0, 4, 4);\n\n    cff.names = [name];\n\n    var topDict = new CFFTopDict();\n    // CFF strings IDs 0...390 are predefined names, so refering\n    // to entries in our own String INDEX starts at SID 391.\n    topDict.setByName('version', 391);\n    topDict.setByName('Notice', 392);\n    topDict.setByName('FullName', 393);\n    topDict.setByName('FamilyName', 394);\n    topDict.setByName('Weight', 395);\n    topDict.setByName('Encoding', null); // placeholder\n    topDict.setByName('FontMatrix', properties.fontMatrix);\n    topDict.setByName('FontBBox', properties.bbox);\n    topDict.setByName('charset', null); // placeholder\n    topDict.setByName('CharStrings', null); // placeholder\n    topDict.setByName('Private', null); // placeholder\n    cff.topDict = topDict;\n\n    var strings = new CFFStrings();\n    strings.add('Version 0.11'); // Version\n    strings.add('See original notice'); // Notice\n    strings.add(name); // FullName\n    strings.add(name); // FamilyName\n    strings.add('Medium'); // Weight\n    cff.strings = strings;\n\n    cff.globalSubrIndex = new CFFIndex();\n\n    var count = glyphs.length;\n    var charsetArray = [0];\n    var i, ii;\n    for (i = 0; i < count; i++) {\n      var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n      // TODO: Insert the string and correctly map it.  Previously it was\n      // thought mapping names that aren't in the standard strings to .notdef\n      // was fine, however in issue818 when mapping them all to .notdef the\n      // adieresis glyph no longer worked.\n      if (index === -1) {\n        index = 0;\n      }\n      charsetArray.push((index >> 8) & 0xff, index & 0xff);\n    }\n    cff.charset = new CFFCharset(false, 0, [], charsetArray);\n\n    var charStringsIndex = new CFFIndex();\n    charStringsIndex.add([0x8B, 0x0E]); // .notdef\n    for (i = 0; i < count; i++) {\n      charStringsIndex.add(glyphs[i]);\n    }\n    cff.charStrings = charStringsIndex;\n\n    var privateDict = new CFFPrivateDict();\n    privateDict.setByName('Subrs', null); // placeholder\n    var fields = [\n      'BlueValues',\n      'OtherBlues',\n      'FamilyBlues',\n      'FamilyOtherBlues',\n      'StemSnapH',\n      'StemSnapV',\n      'BlueShift',\n      'BlueFuzz',\n      'BlueScale',\n      'LanguageGroup',\n      'ExpansionFactor',\n      'ForceBold',\n      'StdHW',\n      'StdVW'\n    ];\n    for (i = 0, ii = fields.length; i < ii; i++) {\n      var field = fields[i];\n      if (!properties.privateData.hasOwnProperty(field)) {\n        continue;\n      }\n      var value = properties.privateData[field];\n      if (isArray(value)) {\n        // All of the private dictionary array data in CFF must be stored as\n        // \"delta-encoded\" numbers.\n        for (var j = value.length - 1; j > 0; j--) {\n          value[j] -= value[j - 1]; // ... difference from previous value\n        }\n      }\n      privateDict.setByName(field, value);\n    }\n    cff.topDict.privateDict = privateDict;\n\n    var subrIndex = new CFFIndex();\n    for (i = 0, ii = subrs.length; i < ii; i++) {\n      subrIndex.add(subrs[i]);\n    }\n    privateDict.subrsIndex = subrIndex;\n\n    var compiler = new CFFCompiler(cff);\n    return compiler.compile();\n  }\n};\n\nvar CFFFont = (function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n\n    var parser = new CFFParser(file, properties);\n    this.cff = parser.parse();\n    var compiler = new CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      warn('Failed to compile font ' + properties.loadedName);\n      // There may have just been an issue with the compiler, set the data\n      // anyway and hope the font loaded.\n      this.data = file;\n    }\n  }\n\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          // If the font is actually a CID font then we should use the charset\n          // to map CIDs to GIDs.\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          // If it is NOT actually a CID font then CIDs should be mapped\n          // directly to GIDs.\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n\n  return CFFFont;\n})();\n\nvar CFFParser = (function CFFParserClosure() {\n  var CharstringValidationData = [\n    null,\n    { id: 'hstem', min: 2, stackClearing: true, stem: true },\n    null,\n    { id: 'vstem', min: 2, stackClearing: true, stem: true },\n    { id: 'vmoveto', min: 1, stackClearing: true },\n    { id: 'rlineto', min: 2, resetStack: true },\n    { id: 'hlineto', min: 1, resetStack: true },\n    { id: 'vlineto', min: 1, resetStack: true },\n    { id: 'rrcurveto', min: 6, resetStack: true },\n    null,\n    { id: 'callsubr', min: 1, undefStack: true },\n    { id: 'return', min: 0, undefStack: true },\n    null, // 12\n    null,\n    { id: 'endchar', min: 0, stackClearing: true },\n    null,\n    null,\n    null,\n    { id: 'hstemhm', min: 2, stackClearing: true, stem: true },\n    { id: 'hintmask', min: 0, stackClearing: true },\n    { id: 'cntrmask', min: 0, stackClearing: true },\n    { id: 'rmoveto', min: 2, stackClearing: true },\n    { id: 'hmoveto', min: 1, stackClearing: true },\n    { id: 'vstemhm', min: 2, stackClearing: true, stem: true },\n    { id: 'rcurveline', min: 8, resetStack: true },\n    { id: 'rlinecurve', min: 8, resetStack: true },\n    { id: 'vvcurveto', min: 4, resetStack: true },\n    { id: 'hhcurveto', min: 4, resetStack: true },\n    null, // shortint\n    { id: 'callgsubr', min: 1, undefStack: true },\n    { id: 'vhcurveto', min: 4, resetStack: true },\n    { id: 'hvcurveto', min: 4, resetStack: true }\n  ];\n  var CharstringValidationData12 = [\n    null,\n    null,\n    null,\n    { id: 'and', min: 2, stackDelta: -1 },\n    { id: 'or', min: 2, stackDelta: -1 },\n    { id: 'not', min: 1, stackDelta: 0 },\n    null,\n    null,\n    null,\n    { id: 'abs', min: 1, stackDelta: 0 },\n    { id: 'add', min: 2, stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n        stack[index - 2] = stack[index - 2] + stack[index - 1];\n      }\n    },\n    { id: 'sub', min: 2, stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n        stack[index - 2] = stack[index - 2] - stack[index - 1];\n      }\n    },\n    { id: 'div', min: 2, stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n        stack[index - 2] = stack[index - 2] / stack[index - 1];\n      }\n    },\n    null,\n    { id: 'neg', min: 1, stackDelta: 0,\n      stackFn: function stack_div(stack, index) {\n        stack[index - 1] = -stack[index - 1];\n      }\n    },\n    { id: 'eq', min: 2, stackDelta: -1 },\n    null,\n    null,\n    { id: 'drop', min: 1, stackDelta: -1 },\n    null,\n    { id: 'put', min: 2, stackDelta: -2 },\n    { id: 'get', min: 1, stackDelta: 0 },\n    { id: 'ifelse', min: 4, stackDelta: -3 },\n    { id: 'random', min: 0, stackDelta: 1 },\n    { id: 'mul', min: 2, stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n        stack[index - 2] = stack[index - 2] * stack[index - 1];\n      }\n    },\n    null,\n    { id: 'sqrt', min: 1, stackDelta: 0 },\n    { id: 'dup', min: 1, stackDelta: 1 },\n    { id: 'exch', min: 2, stackDelta: 0 },\n    { id: 'index', min: 2, stackDelta: 0 },\n    { id: 'roll', min: 3, stackDelta: -2 },\n    null,\n    null,\n    null,\n    { id: 'hflex', min: 7, resetStack: true },\n    { id: 'flex', min: 13, resetStack: true },\n    { id: 'hflex1', min: 9, resetStack: true },\n    { id: 'flex1', min: 11, resetStack: true }\n  ];\n\n  function CFFParser(file, properties) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n\n      // The first five sections must be in order, all the others are reached\n      // via offsets contained in one of the below.\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n\n      this.parsePrivateDict(cff.topDict);\n\n      cff.isCIDFont = topDict.hasName('ROS');\n\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringsAndSeacs = this.parseCharStrings(charStringOffset);\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        // adjusting ascent/descent\n        properties.ascent = fontBBox[3];\n        properties.descent = fontBBox[1];\n        properties.ascentScaled = true;\n      }\n\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw),\n                                         cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        // cid fonts don't have an encoding\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'),\n                                     cff.charStrings.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'),\n                                             cff.charStrings.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'),\n                                     cff.charStrings.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'),\n                                      properties,\n                                      cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n\n      // Prevent an infinite loop, by checking that the offset is within the\n      // bounds of the bytes array. Necessary in empty, or invalid, font files.\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        error('Invalid CFF header');\n      } else if (offset !== 0) {\n        info('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return { obj: header, endPos: hdrSize };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand(pos);\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = ((value << 24) | (dict[pos++] << 16)) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = (value << 8) | dict[pos++];\n          value = (value << 8) | dict[pos++];\n          value = (value << 8) | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return ((value - 247) * 256) + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        } else {\n          error('255 is not a valid DICT command');\n        }\n        return -1;\n      }\n\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8',\n            '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n\n      var operands = [];\n      var entries = [];\n\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = (b << 8) | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = (bytes[pos++] << 8) | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        // add 1 for offset to determine size of last object\n        var startPos = pos + ((count + 1) * offsetSize) - 1;\n\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {obj: cffIndex, endPos: end};\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        // OTS doesn't allow names to be over 127 characters.\n        var length = Math.min(name.length, 127);\n        var data = [];\n        // OTS also only permits certain characters in the name.\n        for (var j = 0; j < length; ++j) {\n          var c = name[j];\n          if (j === 0 && c === 0) {\n            data[j] = c;\n            continue;\n          }\n          if ((c < 33 || c > 126) || c === 91 /* [ */ || c === 93 /* ] */ ||\n              c === 40 /* ( */ || c === 41 /* ) */ || c === 123 /* { */ ||\n              c === 125 /* } */ || c === 60 /* < */ || c === 62 /* > */ ||\n              c === 47 /* / */ || c === 37 /* % */ || c === 35 /* # */) {\n            data[j] = 95;\n            continue;\n          }\n          data[j] = c;\n        }\n        names.push(bytesToString(data));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add(bytesToString(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharStrings: function CFFParser_parseCharStrings(charStringOffset) {\n      var charStrings = this.parseIndex(charStringOffset).obj;\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n\n        var stackSize = 0;\n        var stack = [];\n        var undefStack = true;\n        var hints = 0;\n        var valid = true;\n        var data = charstring;\n        var length = data.length;\n        var firstStackClearing = true;\n        for (var j = 0; j < length;) {\n          var value = data[j++];\n          var validationCommand = null;\n          if (value === 12) {\n            var q = data[j++];\n            if (q === 0) {\n              // The CFF specification state that the 'dotsection' command\n              // (12, 0) is deprecated and treated as a no-op, but all Type2\n              // charstrings processors should support them. Unfortunately\n              // the font sanitizer don't. As a workaround the sequence (12, 0)\n              // is replaced by a useless (0, hmoveto).\n              data[j - 2] = 139;\n              data[j - 1] = 22;\n              stackSize = 0;\n            } else {\n              validationCommand = CharstringValidationData12[q];\n            }\n          } else if (value === 28) { // number (16 bit)\n            stack[stackSize] = ((data[j] << 24) | (data[j + 1] << 16)) >> 16;\n            j += 2;\n            stackSize++;\n          } else if (value === 14) {\n            if (stackSize >= 4) {\n              stackSize -= 4;\n              if (SEAC_ANALYSIS_ENABLED) {\n                seacs[i] = stack.slice(stackSize, stackSize + 4);\n                valid = false;\n              }\n            }\n            validationCommand = CharstringValidationData[value];\n          } else if (value >= 32 && value <= 246) {  // number\n            stack[stackSize] = value - 139;\n            stackSize++;\n          } else if (value >= 247 && value <= 254) {  // number (+1 bytes)\n            stack[stackSize] = (value < 251 ?\n                                ((value - 247) << 8) + data[j] + 108 :\n                                -((value - 251) << 8) - data[j] - 108);\n            j++;\n            stackSize++;\n          } else if (value === 255) {  // number (32 bit)\n            stack[stackSize] = ((data[j] << 24) | (data[j + 1] << 16) |\n                                (data[j + 2] << 8) | data[j + 3]) / 65536;\n            j += 4;\n            stackSize++;\n          } else if (value === 19 || value === 20) {\n            hints += stackSize >> 1;\n            j += (hints + 7) >> 3; // skipping right amount of hints flag data\n            stackSize %= 2;\n            validationCommand = CharstringValidationData[value];\n          } else {\n            validationCommand = CharstringValidationData[value];\n          }\n          if (validationCommand) {\n            if (validationCommand.stem) {\n              hints += stackSize >> 1;\n            }\n            if ('min' in validationCommand) {\n              if (!undefStack && stackSize < validationCommand.min) {\n                warn('Not enough parameters for ' + validationCommand.id +\n                     '; actual: ' + stackSize +\n                     ', expected: ' + validationCommand.min);\n                valid = false;\n                break;\n              }\n            }\n            if (firstStackClearing && validationCommand.stackClearing) {\n              firstStackClearing = false;\n              // the optional character width can be found before the first\n              // stack-clearing command arguments\n              stackSize -= validationCommand.min;\n              if (stackSize >= 2 && validationCommand.stem) {\n                // there are even amount of arguments for stem commands\n                stackSize %= 2;\n              } else if (stackSize > 1) {\n                warn('Found too many parameters for stack-clearing command');\n              }\n              if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n                widths[i] = stack[stackSize - 1];\n              }\n            }\n            if ('stackDelta' in validationCommand) {\n              if ('stackFn' in validationCommand) {\n                validationCommand.stackFn(stack, stackSize);\n              }\n              stackSize += validationCommand.stackDelta;\n            } else if (validationCommand.stackClearing) {\n              stackSize = 0;\n            } else if (validationCommand.resetStack) {\n              stackSize = 0;\n              undefStack = false;\n            } else if (validationCommand.undefStack) {\n              stackSize = 0;\n              undefStack = true;\n              firstStackClearing = false;\n            }\n          }\n        }\n        if (!valid) {\n          // resetting invalid charstring to single 'endchar'\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return { charStrings: charStrings, seacs: seacs, widths: widths };\n    },\n    emptyPrivateDictionary:\n      function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [],\n                                        parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      // no private dict, do nothing\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      // make sure the params are formatted correctly\n      if (!isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      // remove empty dicts or ones that refer to invalid location\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict,\n                                        parentDict.strings);\n      parentDict.privateDict = privateDict;\n\n      // Parse the Subrs index also since it's relative to the private dict.\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      // Validate the offset.\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE,\n                              ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT,\n                              ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET,\n                              ExpertSubsetCharset);\n      }\n\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n\n      // subtract 1 for the .notdef glyph\n      length -= 1;\n\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = (bytes[pos++] << 8) | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = (bytes[pos++] << 8) | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = (bytes[pos++] << 8) | bytes[pos++];\n            count = (bytes[pos++] << 8) | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          error('Unknown charset format');\n      }\n      // Raw won't be needed if we actually compile the charset.\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos,\n                                                    properties,\n                                                    strings,\n                                                    charset) {\n      var encoding = {};\n      var bytes = this.bytes;\n      var predefined = false;\n      var hasSupplement = false;\n      var format, i, ii;\n      var raw = null;\n\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? Encodings.ExpertEncoding :\n                                 Encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n\n          default:\n            error('Unknow encoding format: ' + format + ' in CFF');\n            break;\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          // The font sanitizer does not support CFF encoding with a\n          // supplement, since the encoding is not really used to map\n          // between gid to glyph, let's overwrite what is declared in\n          // the top dictionary to let the sanitizer think the font use\n          // StandardEncoding, that's a lie but that's ok.\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n          hasSupplement = true;\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [];\n      var i;\n\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          break;\n        case 3:\n          var rangesCount = (bytes[pos++] << 8) | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = (bytes[pos++] << 8) | bytes[pos++];\n            var fdIndex = bytes[pos++];\n            var next = (bytes[pos] << 8) | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          // Advance past the sentinel(next).\n          pos += 2;\n          break;\n        default:\n          error('Unknown fdselect format ' + format);\n          break;\n      }\n      var end = pos;\n      return new CFFFDSelect(fdSelect, bytes.subarray(start, end));\n    }\n  };\n  return CFFParser;\n})();\n\n// Compact Font Format\nvar CFF = (function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n\n    // The following could really be per font, but since we only have one font\n    // store them here.\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n\n    this.isCIDFont = false;\n  }\n  return CFF;\n})();\n\nvar CFFHeader = (function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n})();\n\nvar CFFStrings = (function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n})();\n\nvar CFFIndex = (function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n})();\n\nvar CFFDict = (function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = {};\n  }\n  CFFDict.prototype = {\n    // value should always be an array\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      // ignore empty values\n      if (value.length === 0) {\n        return true;\n      }\n      var type = this.types[key];\n      // remove the array wrapping these types of values\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        error('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        error('Invalid dictionary name \"' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n})();\n\nvar CFFTopDict = (function CFFTopDictClosure() {\n  var layout = [\n    [[12, 30], 'ROS', ['sid', 'sid', 'num'], null],\n    [[12, 20], 'SyntheticBase', 'num', null],\n    [0, 'version', 'sid', null],\n    [1, 'Notice', 'sid', null],\n    [[12, 0], 'Copyright', 'sid', null],\n    [2, 'FullName', 'sid', null],\n    [3, 'FamilyName', 'sid', null],\n    [4, 'Weight', 'sid', null],\n    [[12, 1], 'isFixedPitch', 'num', 0],\n    [[12, 2], 'ItalicAngle', 'num', 0],\n    [[12, 3], 'UnderlinePosition', 'num', -100],\n    [[12, 4], 'UnderlineThickness', 'num', 50],\n    [[12, 5], 'PaintType', 'num', 0],\n    [[12, 6], 'CharstringType', 'num', 2],\n    [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'],\n                            [0.001, 0, 0, 0.001, 0, 0]],\n    [13, 'UniqueID', 'num', null],\n    [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]],\n    [[12, 8], 'StrokeWidth', 'num', 0],\n    [14, 'XUID', 'array', null],\n    [15, 'charset', 'offset', 0],\n    [16, 'Encoding', 'offset', 0],\n    [17, 'CharStrings', 'offset', 0],\n    [18, 'Private', ['offset', 'offset'], null],\n    [[12, 21], 'PostScript', 'sid', null],\n    [[12, 22], 'BaseFontName', 'sid', null],\n    [[12, 23], 'BaseFontBlend', 'delta', null],\n    [[12, 31], 'CIDFontVersion', 'num', 0],\n    [[12, 32], 'CIDFontRevision', 'num', 0],\n    [[12, 33], 'CIDFontType', 'num', 0],\n    [[12, 34], 'CIDCount', 'num', 8720],\n    [[12, 35], 'UIDBase', 'num', null],\n    // XXX: CID Fonts on DirectWrite 6.1 only seem to work if FDSelect comes\n    // before FDArray.\n    [[12, 37], 'FDSelect', 'offset', null],\n    [[12, 36], 'FDArray', 'offset', null],\n    [[12, 38], 'FontName', 'sid', null]\n  ];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n})();\n\nvar CFFPrivateDict = (function CFFPrivateDictClosure() {\n  var layout = [\n    [6, 'BlueValues', 'delta', null],\n    [7, 'OtherBlues', 'delta', null],\n    [8, 'FamilyBlues', 'delta', null],\n    [9, 'FamilyOtherBlues', 'delta', null],\n    [[12, 9], 'BlueScale', 'num', 0.039625],\n    [[12, 10], 'BlueShift', 'num', 7],\n    [[12, 11], 'BlueFuzz', 'num', 1],\n    [10, 'StdHW', 'num', null],\n    [11, 'StdVW', 'num', null],\n    [[12, 12], 'StemSnapH', 'delta', null],\n    [[12, 13], 'StemSnapV', 'delta', null],\n    [[12, 14], 'ForceBold', 'num', 0],\n    [[12, 17], 'LanguageGroup', 'num', 0],\n    [[12, 18], 'ExpansionFactor', 'num', 0.06],\n    [[12, 19], 'initialRandomSeed', 'num', 0],\n    [20, 'defaultWidthX', 'num', 0],\n    [21, 'nominalWidthX', 'num', 0],\n    [19, 'Subrs', 'offset', null]\n  ];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n})();\n\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = (function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n})();\n\nvar CFFEncoding = (function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n})();\n\nvar CFFFDSelect = (function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  return CFFFDSelect;\n})();\n\n// Helper class to keep track of where an offset is within the data and helps\n// filling in that offset once it's known.\nvar CFFOffsetTracker = (function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = {};\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        error('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key,\n                                                                 values,\n                                                                 output) {\n      if (!(key in this.offsets)) {\n        error('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        // It's easy to screw up offsets so perform this sanity check.\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 ||\n            data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          error('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = (value >> 24) & 0xFF;\n        data[offset2] = (value >> 16) & 0xFF;\n        data[offset3] = (value >> 8) & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n})();\n\n// Takes a CFF and converts it to the binary representation.\nvar CFFCompiler = (function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n\n      // Compile the five entries that must be in order.\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n\n      if (cff.isCIDFont) {\n        // The spec is unclear on how font matrices should relate to each other\n        // when there is one in the main top dict and the sub top dicts.\n        // Windows handles this differently than linux and osx so we have to\n        // normalize to work on all.\n        // Rules based off of some mailing list discussions:\n        // - If main font has a matrix and subfont doesn't, use the main matrix.\n        // - If no main font matrix and there is a subfont matrix, use the\n        //   subfont matrix.\n        // - If both have matrices, concat together.\n        // - If neither have matrices, use default.\n        // To make this work on all platforms we move the top matrix into each\n        // sub top dict and concat if necessary.\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n\n      var compiled = this.compileTopDicts([cff.topDict],\n                                          output.length,\n                                          cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n\n      // Now start on the other entries that have no specfic order.\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format],\n                                          output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format],\n                                          output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n\n      if (cff.isCIDFont) {\n        // For some reason FDSelect must be in front of FDArray on windows. OSX\n        // and linux don't seem to care.\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        // It is unclear if the sub font dictionary can have CID related\n        // dictionary keys, but the sanitizer doesn't like them so remove them.\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\n      // If the font data ends with INDEX whose object data is zero-length,\n      // the sanitizer will bail out. Add a dummy byte to avoid that.\n      output.add([0]);\n\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) { // isInt\n        return this.encodeInteger(value);\n      } else {\n        return this.encodeFloat(value);\n      }\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n\n      // rounding inaccurate doubles\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = [value - 108];\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, (value >> 8) & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d,\n                (value >> 24) & 0xFF,\n                (value >> 16) & 0xFF,\n                (value >> 8) & 0xFF,\n                 value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [\n        header.major,\n        header.minor,\n        header.hdrSize,\n        header.offSize\n      ];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        nameIndex.add(stringToBytes(names[i]));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts,\n                                                          length,\n                                                          removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts,\n                                                                  trackers,\n                                                                  output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        assert(fontDict.privateDict && fontDict.hasName('Private'),\n               'There must be an private dictionary.');\n        var privateDict = fontDict.privateDict;\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          // The private dictionary was empty, set the output length to zero to\n          // ensure the offset length isn't out of bounds in the eyes of the\n          // sanitizer.\n          outputLength = 0;\n        }\n\n        trackers[i].setEntryLocation('Private',\n                                     [privateDictData.length, outputLength],\n                                     output);\n        output.add(privateDictData);\n\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length],\n                                              output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      // The dictionary keys must be in a certain order.\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!isArray(types)) {\n          types = [types];\n        }\n        if (!isArray(values)) {\n          values = [values];\n        }\n\n        // Remove any empty dict values.\n        if (values.length === 0) {\n          continue;\n        }\n\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              // For offsets we just insert a 32bit integer so we don't have to\n              // deal with figuring out the length of the offset when it gets\n              // replaced later on by the compiler.\n              var name = dict.keyToNameMap[key];\n              // Some offsets have the offset and the length, so just record the\n              // position of the first one.\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              error('Unknown data type of ' + type);\n              break;\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add(stringToBytes(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      // First 2 bytes contains the number of objects contained into this index\n      var count = objects.length;\n\n      // If there is no object, just create an index. This technically\n      // should just be [0, 0] but OTS has an issue with that.\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n\n      var data = [(count >> 8) & 0xFF, count & 0xff];\n\n      var lastOffset = 1, i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n\n      // Next byte contains the offset size use to reference object in the file\n      data.push(offsetSize);\n\n      // Add another offset after this one because we need a new offset\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push((relativeOffset >> 8) & 0xFF,\n                     relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push((relativeOffset >> 16) & 0xFF,\n                    (relativeOffset >> 8) & 0xFF,\n                     relativeOffset & 0xFF);\n        } else {\n          data.push((relativeOffset >>> 24) & 0xFF,\n                    (relativeOffset >> 16) & 0xFF,\n                    (relativeOffset >> 8) & 0xFF,\n                     relativeOffset & 0xFF);\n        }\n\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n\n      for (i = 0; i < count; i++) {\n        // Notify the tracker where the object will be offset in the data.\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n})();\n\n// Workaround for seac on Windows.\n(function checkSeacSupport() {\n  if (/Windows/.test(navigator.userAgent)) {\n    SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n\n// Workaround for Private Use Area characters in Chrome on Windows\n// http://code.google.com/p/chromium/issues/detail?id=122465\n// https://github.com/mozilla/pdf.js/issues/1689\n(function checkChromeWindows() {\n  if (/Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\n\n\nvar FontRendererFactory = (function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return (data[offset] << 24) | (data[offset + 1] << 16) |\n           (data[offset + 2] << 8) | data[offset + 3];\n  }\n\n  function getUshort(data, offset) {\n    return (data[offset] << 8) | data[offset + 1];\n  }\n\n  function parseCmap(data, start, end) {\n    var offset = (getUshort(data, start + 2) === 1 ?\n                  getLong(data, start + 8) : getLong(data, start + 16));\n    var format = getUshort(data, start + offset);\n    var length, ranges, p, i;\n    if (format === 4) {\n      length = getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = {end: getUshort(data, p)};\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      length = getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    error('not supported cmap: ' + format);\n  }\n\n  function parseCff(data, start, end) {\n    var properties = {};\n    var parser = new CFFParser(new Stream(data, start, end - start),\n                               properties);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: (cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex &&\n              cff.topDict.privateDict.subrsIndex.objects),\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return (data[offset] << 24) | (data[offset + 1] << 16) |\n               (data[offset + 2] << 8) | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return (data[offset] << 9) | (data[offset + 1] << 1);\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0);\n    var l = 0, r = ranges.length - 1;\n    while (l < r) {\n      var c = (l + r + 1) >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      return (ranges[l].idDelta + (ranges[l].ids ?\n        ranges[l].ids[code - ranges[l].start] : code)) & 0xFFFF;\n    }\n    return 0;\n  }\n\n  function compileGlyf(code, js, font) {\n    function moveTo(x, y) {\n      js.push('c.moveTo(' + x + ',' + y + ');');\n    }\n    function lineTo(x, y) {\n      js.push('c.lineTo(' + x + ',' + y + ');');\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      js.push('c.quadraticCurveTo(' + xa + ',' + ya + ',' +\n                                   x + ',' + y + ');');\n    }\n\n    var i = 0;\n    var numberOfContours = ((code[i] << 24) | (code[i + 1] << 16)) >> 16;\n    var flags;\n    var x = 0, y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      // composite glyph\n      do {\n        flags = (code[i] << 8) | code[i + 1];\n        var glyphIndex = (code[i + 2] << 8) | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if ((flags & 0x01)) {\n          arg1 = ((code[i] << 24) | (code[i + 1] << 16)) >> 16;\n          arg2 = ((code[i + 2] << 24) | (code[i + 3] << 16)) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++]; arg2 = code[i++];\n        }\n        if ((flags & 0x02)) {\n           x = arg1;\n           y = arg2;\n        } else {\n           x = 0; y = 0; // TODO \"they are points\" ?\n        }\n        var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n        if ((flags & 0x08)) {\n          scaleX =\n          scaleY = ((code[i] << 24) | (code[i + 1] << 16)) / 1073741824;\n          i += 2;\n        } else if ((flags & 0x40)) {\n          scaleX = ((code[i] << 24) | (code[i + 1] << 16)) / 1073741824;\n          scaleY = ((code[i + 2] << 24) | (code[i + 3] << 16)) / 1073741824;\n          i += 4;\n        } else if ((flags & 0x80)) {\n          scaleX = ((code[i] << 24) | (code[i + 1] << 16)) / 1073741824;\n          scale01 = ((code[i + 2] << 24) | (code[i + 3] << 16)) / 1073741824;\n          scale10 = ((code[i + 4] << 24) | (code[i + 5] << 16)) / 1073741824;\n          scaleY = ((code[i + 6] << 24) | (code[i + 7] << 16)) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          js.push('c.save();');\n          js.push('c.transform(' + scaleX + ',' + scale01 + ',' +\n                  scale10 + ',' + scaleY + ',' + x + ',' + y + ');');\n          compileGlyf(subglyph, js, font);\n          js.push('c.restore();');\n        }\n      } while ((flags & 0x20));\n    } else {\n      // simple glyph\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push((code[i] << 8) | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = (code[i] << 8) | code[i + 1];\n      i += 2 + instructionLength; // skipping the instructions\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if ((flags & 0x08)) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({flags: flags});\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += ((code[i] << 24) | (code[i + 1] << 16)) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += ((code[i] << 24) | (code[i + 1] << 16)) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        // contours might have implicit points, which is located in the middle\n        // between two neighboring off-curve points\n        var contour = points.slice(startPoint, endPoint + 1);\n        if ((contour[0].flags & 1)) {\n          contour.push(contour[0]); // using start point at the contour end\n        } else if ((contour[contour.length - 1].flags & 1)) {\n          // first is off-curve point, trying to use one from the end\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          // start and end are off-curve points, creating implicit one\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if ((contour[j].flags & 1)) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if ((contour[j + 1].flags & 1)){\n            quadraticCurveTo(contour[j].x, contour[j].y,\n                             contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y,\n              (contour[j].x + contour[j + 1].x) / 2,\n              (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n\n  function compileCharString(code, js, font) {\n    var stack = [];\n    var x = 0, y = 0;\n    var stems = 0;\n\n    function moveTo(x, y) {\n      js.push('c.moveTo(' + x + ',' + y + ');');\n    }\n    function lineTo(x, y) {\n      js.push('c.lineTo(' + x + ',' + y + ');');\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      js.push('c.bezierCurveTo(' + x1 + ',' + y1 + ',' + x2 + ',' + y2 + ',' +\n                                   x + ',' + y + ');');\n    }\n\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1: // hstem\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3: // vstem\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4: // vmoveto\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5: // rlineto\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6: // hlineto\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7: // vlineto\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8: // rrcurveto\n            while (stack.length > 0) {\n              xa = x + stack.shift(); ya = y + stack.shift();\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb + stack.shift(); y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10: // callsubr\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11: // return\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34: // flex\n                xa = x + stack.shift();\n                xb = xa + stack.shift(); y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35: // flex\n                xa = x + stack.shift(); ya = y + stack.shift();\n                xb = xa + stack.shift(); yb = ya + stack.shift();\n                x = xb + stack.shift(); y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift(); ya = y + stack.shift();\n                xb = xa + stack.shift(); yb = ya + stack.shift();\n                x = xb + stack.shift(); y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop(); // fd\n                break;\n              case 36: // hflex1\n                xa = x + stack.shift(); y1 = y + stack.shift();\n                xb = xa + stack.shift(); y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift(); y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37: // flex1\n                var x0 = x, y0 = y;\n                xa = x + stack.shift(); ya = y + stack.shift();\n                xb = xa + stack.shift(); yb = ya + stack.shift();\n                x = xb + stack.shift(); y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift(); ya = y + stack.shift();\n                xb = xa + stack.shift(); yb = ya + stack.shift();\n                x = xb; y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else  {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                error('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14: // endchar\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              js.push('c.save();');\n              js.push('c.translate('+ x + ',' + y + ');');\n              var gid = lookupCmap(font.cmap, String.fromCharCode(\n                font.glyphNameMap[Encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[gid], js, font);\n              js.push('c.restore();');\n\n              gid = lookupCmap(font.cmap, String.fromCharCode(\n                font.glyphNameMap[Encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[gid], js, font);\n            }\n            return;\n          case 18: // hstemhm\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19: // hintmask\n            stems += stack.length >> 1;\n            i += (stems + 7) >> 3;\n            stackClean = true;\n            break;\n          case 20: // cntrmask\n            stems += stack.length >> 1;\n            i += (stems + 7) >> 3;\n            stackClean = true;\n            break;\n          case 21: // rmoveto\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22: // hmoveto\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23: // vstemhm\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24: // rcurveline\n            while (stack.length > 2) {\n              xa = x + stack.shift(); ya = y + stack.shift();\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb + stack.shift(); y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25: // rlinecurve\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift(); ya = y + stack.shift();\n            xb = xa + stack.shift(); yb = ya + stack.shift();\n            x = xb + stack.shift(); y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26: // vvcurveto\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x; ya = y + stack.shift();\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb; y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27: // hhcurveto\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift(); ya = y;\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb + stack.shift(); y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push(((code[i] << 24) | (code[i + 1] << 16)) >> 16);\n            i += 2;\n            break;\n          case 29: // callgsubr\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30: // vhcurveto\n            while (stack.length > 0) {\n              xa = x; ya = y + stack.shift();\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n\n              xa = x + stack.shift(); ya = y;\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31: // hvcurveto\n            while (stack.length > 0) {\n              xa = x + stack.shift(); ya = y;\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n\n              xa = x; ya = y + stack.shift();\n              xb = xa + stack.shift(); yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              error('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push(((code[i] << 24) | (code[i + 1] << 16) |\n                         (code[i + 2] << 8) | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n\n  var noop = '';\n\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = {};\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function (unicode) {\n      var gid = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[gid];\n      if (!fn) {\n        this.compiledGlyphs[gid] = fn = this.compileGlyph(this.glyphs[gid]);\n      }\n      return fn;\n    },\n\n    compileGlyph: function (code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n\n      var js = [];\n      js.push('c.save();');\n      js.push('c.transform(' + this.fontMatrix.join(',') + ');');\n      js.push('c.scale(size, -size);');\n\n      this.compileGlyphImpl(code, js);\n\n      js.push('c.restore();');\n\n      return js.join('\\n');\n    },\n\n    compileGlyphImpl: function () {\n      error('Children classes should implement this.');\n    },\n\n    hasBuiltPath: function (unicode) {\n      var gid = lookupCmap(this.cmap, unicode);\n      return gid in this.compiledGlyphs;\n    }\n  };\n\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n\n    this.compiledGlyphs = [];\n  }\n\n  Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function (code, js) {\n      compileGlyf(code, js, this);\n    }\n  });\n\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || GlyphsUnicode;\n\n    this.compiledGlyphs = [];\n    this.gsubrsBias = (this.gsubrs.length < 1240 ?\n                       107 : (this.gsubrs.length < 33900 ? 1131 : 32768));\n    this.subrsBias = (this.subrs.length < 1240 ?\n                      107 : (this.subrs.length < 33900 ? 1131 : 32768));\n  }\n\n  Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function (code, js) {\n      compileCharString(code, js, this);\n    }\n  });\n\n\n  return {\n    create: function FontRendererFactory_create(font) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = bytesToString(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length);\n            break;\n        }\n      }\n\n      if (glyf) {\n        var fontMatrix = (!unitsPerEm ? font.fontMatrix :\n                          [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0]);\n        return new TrueTypeCompiled(\n          parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      } else {\n        return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n      }\n    }\n  };\n})();\n\n\nvar GlyphsUnicode = {\n  A: 0x0041,\n  AE: 0x00C6,\n  AEacute: 0x01FC,\n  AEmacron: 0x01E2,\n  AEsmall: 0xF7E6,\n  Aacute: 0x00C1,\n  Aacutesmall: 0xF7E1,\n  Abreve: 0x0102,\n  Abreveacute: 0x1EAE,\n  Abrevecyrillic: 0x04D0,\n  Abrevedotbelow: 0x1EB6,\n  Abrevegrave: 0x1EB0,\n  Abrevehookabove: 0x1EB2,\n  Abrevetilde: 0x1EB4,\n  Acaron: 0x01CD,\n  Acircle: 0x24B6,\n  Acircumflex: 0x00C2,\n  Acircumflexacute: 0x1EA4,\n  Acircumflexdotbelow: 0x1EAC,\n  Acircumflexgrave: 0x1EA6,\n  Acircumflexhookabove: 0x1EA8,\n  Acircumflexsmall: 0xF7E2,\n  Acircumflextilde: 0x1EAA,\n  Acute: 0xF6C9,\n  Acutesmall: 0xF7B4,\n  Acyrillic: 0x0410,\n  Adblgrave: 0x0200,\n  Adieresis: 0x00C4,\n  Adieresiscyrillic: 0x04D2,\n  Adieresismacron: 0x01DE,\n  Adieresissmall: 0xF7E4,\n  Adotbelow: 0x1EA0,\n  Adotmacron: 0x01E0,\n  Agrave: 0x00C0,\n  Agravesmall: 0xF7E0,\n  Ahookabove: 0x1EA2,\n  Aiecyrillic: 0x04D4,\n  Ainvertedbreve: 0x0202,\n  Alpha: 0x0391,\n  Alphatonos: 0x0386,\n  Amacron: 0x0100,\n  Amonospace: 0xFF21,\n  Aogonek: 0x0104,\n  Aring: 0x00C5,\n  Aringacute: 0x01FA,\n  Aringbelow: 0x1E00,\n  Aringsmall: 0xF7E5,\n  Asmall: 0xF761,\n  Atilde: 0x00C3,\n  Atildesmall: 0xF7E3,\n  Aybarmenian: 0x0531,\n  B: 0x0042,\n  Bcircle: 0x24B7,\n  Bdotaccent: 0x1E02,\n  Bdotbelow: 0x1E04,\n  Becyrillic: 0x0411,\n  Benarmenian: 0x0532,\n  Beta: 0x0392,\n  Bhook: 0x0181,\n  Blinebelow: 0x1E06,\n  Bmonospace: 0xFF22,\n  Brevesmall: 0xF6F4,\n  Bsmall: 0xF762,\n  Btopbar: 0x0182,\n  C: 0x0043,\n  Caarmenian: 0x053E,\n  Cacute: 0x0106,\n  Caron: 0xF6CA,\n  Caronsmall: 0xF6F5,\n  Ccaron: 0x010C,\n  Ccedilla: 0x00C7,\n  Ccedillaacute: 0x1E08,\n  Ccedillasmall: 0xF7E7,\n  Ccircle: 0x24B8,\n  Ccircumflex: 0x0108,\n  Cdot: 0x010A,\n  Cdotaccent: 0x010A,\n  Cedillasmall: 0xF7B8,\n  Chaarmenian: 0x0549,\n  Cheabkhasiancyrillic: 0x04BC,\n  Checyrillic: 0x0427,\n  Chedescenderabkhasiancyrillic: 0x04BE,\n  Chedescendercyrillic: 0x04B6,\n  Chedieresiscyrillic: 0x04F4,\n  Cheharmenian: 0x0543,\n  Chekhakassiancyrillic: 0x04CB,\n  Cheverticalstrokecyrillic: 0x04B8,\n  Chi: 0x03A7,\n  Chook: 0x0187,\n  Circumflexsmall: 0xF6F6,\n  Cmonospace: 0xFF23,\n  Coarmenian: 0x0551,\n  Csmall: 0xF763,\n  D: 0x0044,\n  DZ: 0x01F1,\n  DZcaron: 0x01C4,\n  Daarmenian: 0x0534,\n  Dafrican: 0x0189,\n  Dcaron: 0x010E,\n  Dcedilla: 0x1E10,\n  Dcircle: 0x24B9,\n  Dcircumflexbelow: 0x1E12,\n  Dcroat: 0x0110,\n  Ddotaccent: 0x1E0A,\n  Ddotbelow: 0x1E0C,\n  Decyrillic: 0x0414,\n  Deicoptic: 0x03EE,\n  Delta: 0x2206,\n  Deltagreek: 0x0394,\n  Dhook: 0x018A,\n  Dieresis: 0xF6CB,\n  DieresisAcute: 0xF6CC,\n  DieresisGrave: 0xF6CD,\n  Dieresissmall: 0xF7A8,\n  Digammagreek: 0x03DC,\n  Djecyrillic: 0x0402,\n  Dlinebelow: 0x1E0E,\n  Dmonospace: 0xFF24,\n  Dotaccentsmall: 0xF6F7,\n  Dslash: 0x0110,\n  Dsmall: 0xF764,\n  Dtopbar: 0x018B,\n  Dz: 0x01F2,\n  Dzcaron: 0x01C5,\n  Dzeabkhasiancyrillic: 0x04E0,\n  Dzecyrillic: 0x0405,\n  Dzhecyrillic: 0x040F,\n  E: 0x0045,\n  Eacute: 0x00C9,\n  Eacutesmall: 0xF7E9,\n  Ebreve: 0x0114,\n  Ecaron: 0x011A,\n  Ecedillabreve: 0x1E1C,\n  Echarmenian: 0x0535,\n  Ecircle: 0x24BA,\n  Ecircumflex: 0x00CA,\n  Ecircumflexacute: 0x1EBE,\n  Ecircumflexbelow: 0x1E18,\n  Ecircumflexdotbelow: 0x1EC6,\n  Ecircumflexgrave: 0x1EC0,\n  Ecircumflexhookabove: 0x1EC2,\n  Ecircumflexsmall: 0xF7EA,\n  Ecircumflextilde: 0x1EC4,\n  Ecyrillic: 0x0404,\n  Edblgrave: 0x0204,\n  Edieresis: 0x00CB,\n  Edieresissmall: 0xF7EB,\n  Edot: 0x0116,\n  Edotaccent: 0x0116,\n  Edotbelow: 0x1EB8,\n  Efcyrillic: 0x0424,\n  Egrave: 0x00C8,\n  Egravesmall: 0xF7E8,\n  Eharmenian: 0x0537,\n  Ehookabove: 0x1EBA,\n  Eightroman: 0x2167,\n  Einvertedbreve: 0x0206,\n  Eiotifiedcyrillic: 0x0464,\n  Elcyrillic: 0x041B,\n  Elevenroman: 0x216A,\n  Emacron: 0x0112,\n  Emacronacute: 0x1E16,\n  Emacrongrave: 0x1E14,\n  Emcyrillic: 0x041C,\n  Emonospace: 0xFF25,\n  Encyrillic: 0x041D,\n  Endescendercyrillic: 0x04A2,\n  Eng: 0x014A,\n  Enghecyrillic: 0x04A4,\n  Enhookcyrillic: 0x04C7,\n  Eogonek: 0x0118,\n  Eopen: 0x0190,\n  Epsilon: 0x0395,\n  Epsilontonos: 0x0388,\n  Ercyrillic: 0x0420,\n  Ereversed: 0x018E,\n  Ereversedcyrillic: 0x042D,\n  Escyrillic: 0x0421,\n  Esdescendercyrillic: 0x04AA,\n  Esh: 0x01A9,\n  Esmall: 0xF765,\n  Eta: 0x0397,\n  Etarmenian: 0x0538,\n  Etatonos: 0x0389,\n  Eth: 0x00D0,\n  Ethsmall: 0xF7F0,\n  Etilde: 0x1EBC,\n  Etildebelow: 0x1E1A,\n  Euro: 0x20AC,\n  Ezh: 0x01B7,\n  Ezhcaron: 0x01EE,\n  Ezhreversed: 0x01B8,\n  F: 0x0046,\n  Fcircle: 0x24BB,\n  Fdotaccent: 0x1E1E,\n  Feharmenian: 0x0556,\n  Feicoptic: 0x03E4,\n  Fhook: 0x0191,\n  Fitacyrillic: 0x0472,\n  Fiveroman: 0x2164,\n  Fmonospace: 0xFF26,\n  Fourroman: 0x2163,\n  Fsmall: 0xF766,\n  G: 0x0047,\n  GBsquare: 0x3387,\n  Gacute: 0x01F4,\n  Gamma: 0x0393,\n  Gammaafrican: 0x0194,\n  Gangiacoptic: 0x03EA,\n  Gbreve: 0x011E,\n  Gcaron: 0x01E6,\n  Gcedilla: 0x0122,\n  Gcircle: 0x24BC,\n  Gcircumflex: 0x011C,\n  Gcommaaccent: 0x0122,\n  Gdot: 0x0120,\n  Gdotaccent: 0x0120,\n  Gecyrillic: 0x0413,\n  Ghadarmenian: 0x0542,\n  Ghemiddlehookcyrillic: 0x0494,\n  Ghestrokecyrillic: 0x0492,\n  Gheupturncyrillic: 0x0490,\n  Ghook: 0x0193,\n  Gimarmenian: 0x0533,\n  Gjecyrillic: 0x0403,\n  Gmacron: 0x1E20,\n  Gmonospace: 0xFF27,\n  Grave: 0xF6CE,\n  Gravesmall: 0xF760,\n  Gsmall: 0xF767,\n  Gsmallhook: 0x029B,\n  Gstroke: 0x01E4,\n  H: 0x0048,\n  H18533: 0x25CF,\n  H18543: 0x25AA,\n  H18551: 0x25AB,\n  H22073: 0x25A1,\n  HPsquare: 0x33CB,\n  Haabkhasiancyrillic: 0x04A8,\n  Hadescendercyrillic: 0x04B2,\n  Hardsigncyrillic: 0x042A,\n  Hbar: 0x0126,\n  Hbrevebelow: 0x1E2A,\n  Hcedilla: 0x1E28,\n  Hcircle: 0x24BD,\n  Hcircumflex: 0x0124,\n  Hdieresis: 0x1E26,\n  Hdotaccent: 0x1E22,\n  Hdotbelow: 0x1E24,\n  Hmonospace: 0xFF28,\n  Hoarmenian: 0x0540,\n  Horicoptic: 0x03E8,\n  Hsmall: 0xF768,\n  Hungarumlaut: 0xF6CF,\n  Hungarumlautsmall: 0xF6F8,\n  Hzsquare: 0x3390,\n  I: 0x0049,\n  IAcyrillic: 0x042F,\n  IJ: 0x0132,\n  IUcyrillic: 0x042E,\n  Iacute: 0x00CD,\n  Iacutesmall: 0xF7ED,\n  Ibreve: 0x012C,\n  Icaron: 0x01CF,\n  Icircle: 0x24BE,\n  Icircumflex: 0x00CE,\n  Icircumflexsmall: 0xF7EE,\n  Icyrillic: 0x0406,\n  Idblgrave: 0x0208,\n  Idieresis: 0x00CF,\n  Idieresisacute: 0x1E2E,\n  Idieresiscyrillic: 0x04E4,\n  Idieresissmall: 0xF7EF,\n  Idot: 0x0130,\n  Idotaccent: 0x0130,\n  Idotbelow: 0x1ECA,\n  Iebrevecyrillic: 0x04D6,\n  Iecyrillic: 0x0415,\n  Ifraktur: 0x2111,\n  Igrave: 0x00CC,\n  Igravesmall: 0xF7EC,\n  Ihookabove: 0x1EC8,\n  Iicyrillic: 0x0418,\n  Iinvertedbreve: 0x020A,\n  Iishortcyrillic: 0x0419,\n  Imacron: 0x012A,\n  Imacroncyrillic: 0x04E2,\n  Imonospace: 0xFF29,\n  Iniarmenian: 0x053B,\n  Iocyrillic: 0x0401,\n  Iogonek: 0x012E,\n  Iota: 0x0399,\n  Iotaafrican: 0x0196,\n  Iotadieresis: 0x03AA,\n  Iotatonos: 0x038A,\n  Ismall: 0xF769,\n  Istroke: 0x0197,\n  Itilde: 0x0128,\n  Itildebelow: 0x1E2C,\n  Izhitsacyrillic: 0x0474,\n  Izhitsadblgravecyrillic: 0x0476,\n  J: 0x004A,\n  Jaarmenian: 0x0541,\n  Jcircle: 0x24BF,\n  Jcircumflex: 0x0134,\n  Jecyrillic: 0x0408,\n  Jheharmenian: 0x054B,\n  Jmonospace: 0xFF2A,\n  Jsmall: 0xF76A,\n  K: 0x004B,\n  KBsquare: 0x3385,\n  KKsquare: 0x33CD,\n  Kabashkircyrillic: 0x04A0,\n  Kacute: 0x1E30,\n  Kacyrillic: 0x041A,\n  Kadescendercyrillic: 0x049A,\n  Kahookcyrillic: 0x04C3,\n  Kappa: 0x039A,\n  Kastrokecyrillic: 0x049E,\n  Kaverticalstrokecyrillic: 0x049C,\n  Kcaron: 0x01E8,\n  Kcedilla: 0x0136,\n  Kcircle: 0x24C0,\n  Kcommaaccent: 0x0136,\n  Kdotbelow: 0x1E32,\n  Keharmenian: 0x0554,\n  Kenarmenian: 0x053F,\n  Khacyrillic: 0x0425,\n  Kheicoptic: 0x03E6,\n  Khook: 0x0198,\n  Kjecyrillic: 0x040C,\n  Klinebelow: 0x1E34,\n  Kmonospace: 0xFF2B,\n  Koppacyrillic: 0x0480,\n  Koppagreek: 0x03DE,\n  Ksicyrillic: 0x046E,\n  Ksmall: 0xF76B,\n  L: 0x004C,\n  LJ: 0x01C7,\n  LL: 0xF6BF,\n  Lacute: 0x0139,\n  Lambda: 0x039B,\n  Lcaron: 0x013D,\n  Lcedilla: 0x013B,\n  Lcircle: 0x24C1,\n  Lcircumflexbelow: 0x1E3C,\n  Lcommaaccent: 0x013B,\n  Ldot: 0x013F,\n  Ldotaccent: 0x013F,\n  Ldotbelow: 0x1E36,\n  Ldotbelowmacron: 0x1E38,\n  Liwnarmenian: 0x053C,\n  Lj: 0x01C8,\n  Ljecyrillic: 0x0409,\n  Llinebelow: 0x1E3A,\n  Lmonospace: 0xFF2C,\n  Lslash: 0x0141,\n  Lslashsmall: 0xF6F9,\n  Lsmall: 0xF76C,\n  M: 0x004D,\n  MBsquare: 0x3386,\n  Macron: 0xF6D0,\n  Macronsmall: 0xF7AF,\n  Macute: 0x1E3E,\n  Mcircle: 0x24C2,\n  Mdotaccent: 0x1E40,\n  Mdotbelow: 0x1E42,\n  Menarmenian: 0x0544,\n  Mmonospace: 0xFF2D,\n  Msmall: 0xF76D,\n  Mturned: 0x019C,\n  Mu: 0x039C,\n  N: 0x004E,\n  NJ: 0x01CA,\n  Nacute: 0x0143,\n  Ncaron: 0x0147,\n  Ncedilla: 0x0145,\n  Ncircle: 0x24C3,\n  Ncircumflexbelow: 0x1E4A,\n  Ncommaaccent: 0x0145,\n  Ndotaccent: 0x1E44,\n  Ndotbelow: 0x1E46,\n  Nhookleft: 0x019D,\n  Nineroman: 0x2168,\n  Nj: 0x01CB,\n  Njecyrillic: 0x040A,\n  Nlinebelow: 0x1E48,\n  Nmonospace: 0xFF2E,\n  Nowarmenian: 0x0546,\n  Nsmall: 0xF76E,\n  Ntilde: 0x00D1,\n  Ntildesmall: 0xF7F1,\n  Nu: 0x039D,\n  O: 0x004F,\n  OE: 0x0152,\n  OEsmall: 0xF6FA,\n  Oacute: 0x00D3,\n  Oacutesmall: 0xF7F3,\n  Obarredcyrillic: 0x04E8,\n  Obarreddieresiscyrillic: 0x04EA,\n  Obreve: 0x014E,\n  Ocaron: 0x01D1,\n  Ocenteredtilde: 0x019F,\n  Ocircle: 0x24C4,\n  Ocircumflex: 0x00D4,\n  Ocircumflexacute: 0x1ED0,\n  Ocircumflexdotbelow: 0x1ED8,\n  Ocircumflexgrave: 0x1ED2,\n  Ocircumflexhookabove: 0x1ED4,\n  Ocircumflexsmall: 0xF7F4,\n  Ocircumflextilde: 0x1ED6,\n  Ocyrillic: 0x041E,\n  Odblacute: 0x0150,\n  Odblgrave: 0x020C,\n  Odieresis: 0x00D6,\n  Odieresiscyrillic: 0x04E6,\n  Odieresissmall: 0xF7F6,\n  Odotbelow: 0x1ECC,\n  Ogoneksmall: 0xF6FB,\n  Ograve: 0x00D2,\n  Ogravesmall: 0xF7F2,\n  Oharmenian: 0x0555,\n  Ohm: 0x2126,\n  Ohookabove: 0x1ECE,\n  Ohorn: 0x01A0,\n  Ohornacute: 0x1EDA,\n  Ohorndotbelow: 0x1EE2,\n  Ohorngrave: 0x1EDC,\n  Ohornhookabove: 0x1EDE,\n  Ohorntilde: 0x1EE0,\n  Ohungarumlaut: 0x0150,\n  Oi: 0x01A2,\n  Oinvertedbreve: 0x020E,\n  Omacron: 0x014C,\n  Omacronacute: 0x1E52,\n  Omacrongrave: 0x1E50,\n  Omega: 0x2126,\n  Omegacyrillic: 0x0460,\n  Omegagreek: 0x03A9,\n  Omegaroundcyrillic: 0x047A,\n  Omegatitlocyrillic: 0x047C,\n  Omegatonos: 0x038F,\n  Omicron: 0x039F,\n  Omicrontonos: 0x038C,\n  Omonospace: 0xFF2F,\n  Oneroman: 0x2160,\n  Oogonek: 0x01EA,\n  Oogonekmacron: 0x01EC,\n  Oopen: 0x0186,\n  Oslash: 0x00D8,\n  Oslashacute: 0x01FE,\n  Oslashsmall: 0xF7F8,\n  Osmall: 0xF76F,\n  Ostrokeacute: 0x01FE,\n  Otcyrillic: 0x047E,\n  Otilde: 0x00D5,\n  Otildeacute: 0x1E4C,\n  Otildedieresis: 0x1E4E,\n  Otildesmall: 0xF7F5,\n  P: 0x0050,\n  Pacute: 0x1E54,\n  Pcircle: 0x24C5,\n  Pdotaccent: 0x1E56,\n  Pecyrillic: 0x041F,\n  Peharmenian: 0x054A,\n  Pemiddlehookcyrillic: 0x04A6,\n  Phi: 0x03A6,\n  Phook: 0x01A4,\n  Pi: 0x03A0,\n  Piwrarmenian: 0x0553,\n  Pmonospace: 0xFF30,\n  Psi: 0x03A8,\n  Psicyrillic: 0x0470,\n  Psmall: 0xF770,\n  Q: 0x0051,\n  Qcircle: 0x24C6,\n  Qmonospace: 0xFF31,\n  Qsmall: 0xF771,\n  R: 0x0052,\n  Raarmenian: 0x054C,\n  Racute: 0x0154,\n  Rcaron: 0x0158,\n  Rcedilla: 0x0156,\n  Rcircle: 0x24C7,\n  Rcommaaccent: 0x0156,\n  Rdblgrave: 0x0210,\n  Rdotaccent: 0x1E58,\n  Rdotbelow: 0x1E5A,\n  Rdotbelowmacron: 0x1E5C,\n  Reharmenian: 0x0550,\n  Rfraktur: 0x211C,\n  Rho: 0x03A1,\n  Ringsmall: 0xF6FC,\n  Rinvertedbreve: 0x0212,\n  Rlinebelow: 0x1E5E,\n  Rmonospace: 0xFF32,\n  Rsmall: 0xF772,\n  Rsmallinverted: 0x0281,\n  Rsmallinvertedsuperior: 0x02B6,\n  S: 0x0053,\n  SF010000: 0x250C,\n  SF020000: 0x2514,\n  SF030000: 0x2510,\n  SF040000: 0x2518,\n  SF050000: 0x253C,\n  SF060000: 0x252C,\n  SF070000: 0x2534,\n  SF080000: 0x251C,\n  SF090000: 0x2524,\n  SF100000: 0x2500,\n  SF110000: 0x2502,\n  SF190000: 0x2561,\n  SF200000: 0x2562,\n  SF210000: 0x2556,\n  SF220000: 0x2555,\n  SF230000: 0x2563,\n  SF240000: 0x2551,\n  SF250000: 0x2557,\n  SF260000: 0x255D,\n  SF270000: 0x255C,\n  SF280000: 0x255B,\n  SF360000: 0x255E,\n  SF370000: 0x255F,\n  SF380000: 0x255A,\n  SF390000: 0x2554,\n  SF400000: 0x2569,\n  SF410000: 0x2566,\n  SF420000: 0x2560,\n  SF430000: 0x2550,\n  SF440000: 0x256C,\n  SF450000: 0x2567,\n  SF460000: 0x2568,\n  SF470000: 0x2564,\n  SF480000: 0x2565,\n  SF490000: 0x2559,\n  SF500000: 0x2558,\n  SF510000: 0x2552,\n  SF520000: 0x2553,\n  SF530000: 0x256B,\n  SF540000: 0x256A,\n  Sacute: 0x015A,\n  Sacutedotaccent: 0x1E64,\n  Sampigreek: 0x03E0,\n  Scaron: 0x0160,\n  Scarondotaccent: 0x1E66,\n  Scaronsmall: 0xF6FD,\n  Scedilla: 0x015E,\n  Schwa: 0x018F,\n  Schwacyrillic: 0x04D8,\n  Schwadieresiscyrillic: 0x04DA,\n  Scircle: 0x24C8,\n  Scircumflex: 0x015C,\n  Scommaaccent: 0x0218,\n  Sdotaccent: 0x1E60,\n  Sdotbelow: 0x1E62,\n  Sdotbelowdotaccent: 0x1E68,\n  Seharmenian: 0x054D,\n  Sevenroman: 0x2166,\n  Shaarmenian: 0x0547,\n  Shacyrillic: 0x0428,\n  Shchacyrillic: 0x0429,\n  Sheicoptic: 0x03E2,\n  Shhacyrillic: 0x04BA,\n  Shimacoptic: 0x03EC,\n  Sigma: 0x03A3,\n  Sixroman: 0x2165,\n  Smonospace: 0xFF33,\n  Softsigncyrillic: 0x042C,\n  Ssmall: 0xF773,\n  Stigmagreek: 0x03DA,\n  T: 0x0054,\n  Tau: 0x03A4,\n  Tbar: 0x0166,\n  Tcaron: 0x0164,\n  Tcedilla: 0x0162,\n  Tcircle: 0x24C9,\n  Tcircumflexbelow: 0x1E70,\n  Tcommaaccent: 0x0162,\n  Tdotaccent: 0x1E6A,\n  Tdotbelow: 0x1E6C,\n  Tecyrillic: 0x0422,\n  Tedescendercyrillic: 0x04AC,\n  Tenroman: 0x2169,\n  Tetsecyrillic: 0x04B4,\n  Theta: 0x0398,\n  Thook: 0x01AC,\n  Thorn: 0x00DE,\n  Thornsmall: 0xF7FE,\n  Threeroman: 0x2162,\n  Tildesmall: 0xF6FE,\n  Tiwnarmenian: 0x054F,\n  Tlinebelow: 0x1E6E,\n  Tmonospace: 0xFF34,\n  Toarmenian: 0x0539,\n  Tonefive: 0x01BC,\n  Tonesix: 0x0184,\n  Tonetwo: 0x01A7,\n  Tretroflexhook: 0x01AE,\n  Tsecyrillic: 0x0426,\n  Tshecyrillic: 0x040B,\n  Tsmall: 0xF774,\n  Twelveroman: 0x216B,\n  Tworoman: 0x2161,\n  U: 0x0055,\n  Uacute: 0x00DA,\n  Uacutesmall: 0xF7FA,\n  Ubreve: 0x016C,\n  Ucaron: 0x01D3,\n  Ucircle: 0x24CA,\n  Ucircumflex: 0x00DB,\n  Ucircumflexbelow: 0x1E76,\n  Ucircumflexsmall: 0xF7FB,\n  Ucyrillic: 0x0423,\n  Udblacute: 0x0170,\n  Udblgrave: 0x0214,\n  Udieresis: 0x00DC,\n  Udieresisacute: 0x01D7,\n  Udieresisbelow: 0x1E72,\n  Udieresiscaron: 0x01D9,\n  Udieresiscyrillic: 0x04F0,\n  Udieresisgrave: 0x01DB,\n  Udieresismacron: 0x01D5,\n  Udieresissmall: 0xF7FC,\n  Udotbelow: 0x1EE4,\n  Ugrave: 0x00D9,\n  Ugravesmall: 0xF7F9,\n  Uhookabove: 0x1EE6,\n  Uhorn: 0x01AF,\n  Uhornacute: 0x1EE8,\n  Uhorndotbelow: 0x1EF0,\n  Uhorngrave: 0x1EEA,\n  Uhornhookabove: 0x1EEC,\n  Uhorntilde: 0x1EEE,\n  Uhungarumlaut: 0x0170,\n  Uhungarumlautcyrillic: 0x04F2,\n  Uinvertedbreve: 0x0216,\n  Ukcyrillic: 0x0478,\n  Umacron: 0x016A,\n  Umacroncyrillic: 0x04EE,\n  Umacrondieresis: 0x1E7A,\n  Umonospace: 0xFF35,\n  Uogonek: 0x0172,\n  Upsilon: 0x03A5,\n  Upsilon1: 0x03D2,\n  Upsilonacutehooksymbolgreek: 0x03D3,\n  Upsilonafrican: 0x01B1,\n  Upsilondieresis: 0x03AB,\n  Upsilondieresishooksymbolgreek: 0x03D4,\n  Upsilonhooksymbol: 0x03D2,\n  Upsilontonos: 0x038E,\n  Uring: 0x016E,\n  Ushortcyrillic: 0x040E,\n  Usmall: 0xF775,\n  Ustraightcyrillic: 0x04AE,\n  Ustraightstrokecyrillic: 0x04B0,\n  Utilde: 0x0168,\n  Utildeacute: 0x1E78,\n  Utildebelow: 0x1E74,\n  V: 0x0056,\n  Vcircle: 0x24CB,\n  Vdotbelow: 0x1E7E,\n  Vecyrillic: 0x0412,\n  Vewarmenian: 0x054E,\n  Vhook: 0x01B2,\n  Vmonospace: 0xFF36,\n  Voarmenian: 0x0548,\n  Vsmall: 0xF776,\n  Vtilde: 0x1E7C,\n  W: 0x0057,\n  Wacute: 0x1E82,\n  Wcircle: 0x24CC,\n  Wcircumflex: 0x0174,\n  Wdieresis: 0x1E84,\n  Wdotaccent: 0x1E86,\n  Wdotbelow: 0x1E88,\n  Wgrave: 0x1E80,\n  Wmonospace: 0xFF37,\n  Wsmall: 0xF777,\n  X: 0x0058,\n  Xcircle: 0x24CD,\n  Xdieresis: 0x1E8C,\n  Xdotaccent: 0x1E8A,\n  Xeharmenian: 0x053D,\n  Xi: 0x039E,\n  Xmonospace: 0xFF38,\n  Xsmall: 0xF778,\n  Y: 0x0059,\n  Yacute: 0x00DD,\n  Yacutesmall: 0xF7FD,\n  Yatcyrillic: 0x0462,\n  Ycircle: 0x24CE,\n  Ycircumflex: 0x0176,\n  Ydieresis: 0x0178,\n  Ydieresissmall: 0xF7FF,\n  Ydotaccent: 0x1E8E,\n  Ydotbelow: 0x1EF4,\n  Yericyrillic: 0x042B,\n  Yerudieresiscyrillic: 0x04F8,\n  Ygrave: 0x1EF2,\n  Yhook: 0x01B3,\n  Yhookabove: 0x1EF6,\n  Yiarmenian: 0x0545,\n  Yicyrillic: 0x0407,\n  Yiwnarmenian: 0x0552,\n  Ymonospace: 0xFF39,\n  Ysmall: 0xF779,\n  Ytilde: 0x1EF8,\n  Yusbigcyrillic: 0x046A,\n  Yusbigiotifiedcyrillic: 0x046C,\n  Yuslittlecyrillic: 0x0466,\n  Yuslittleiotifiedcyrillic: 0x0468,\n  Z: 0x005A,\n  Zaarmenian: 0x0536,\n  Zacute: 0x0179,\n  Zcaron: 0x017D,\n  Zcaronsmall: 0xF6FF,\n  Zcircle: 0x24CF,\n  Zcircumflex: 0x1E90,\n  Zdot: 0x017B,\n  Zdotaccent: 0x017B,\n  Zdotbelow: 0x1E92,\n  Zecyrillic: 0x0417,\n  Zedescendercyrillic: 0x0498,\n  Zedieresiscyrillic: 0x04DE,\n  Zeta: 0x0396,\n  Zhearmenian: 0x053A,\n  Zhebrevecyrillic: 0x04C1,\n  Zhecyrillic: 0x0416,\n  Zhedescendercyrillic: 0x0496,\n  Zhedieresiscyrillic: 0x04DC,\n  Zlinebelow: 0x1E94,\n  Zmonospace: 0xFF3A,\n  Zsmall: 0xF77A,\n  Zstroke: 0x01B5,\n  a: 0x0061,\n  aabengali: 0x0986,\n  aacute: 0x00E1,\n  aadeva: 0x0906,\n  aagujarati: 0x0A86,\n  aagurmukhi: 0x0A06,\n  aamatragurmukhi: 0x0A3E,\n  aarusquare: 0x3303,\n  aavowelsignbengali: 0x09BE,\n  aavowelsigndeva: 0x093E,\n  aavowelsigngujarati: 0x0ABE,\n  abbreviationmarkarmenian: 0x055F,\n  abbreviationsigndeva: 0x0970,\n  abengali: 0x0985,\n  abopomofo: 0x311A,\n  abreve: 0x0103,\n  abreveacute: 0x1EAF,\n  abrevecyrillic: 0x04D1,\n  abrevedotbelow: 0x1EB7,\n  abrevegrave: 0x1EB1,\n  abrevehookabove: 0x1EB3,\n  abrevetilde: 0x1EB5,\n  acaron: 0x01CE,\n  acircle: 0x24D0,\n  acircumflex: 0x00E2,\n  acircumflexacute: 0x1EA5,\n  acircumflexdotbelow: 0x1EAD,\n  acircumflexgrave: 0x1EA7,\n  acircumflexhookabove: 0x1EA9,\n  acircumflextilde: 0x1EAB,\n  acute: 0x00B4,\n  acutebelowcmb: 0x0317,\n  acutecmb: 0x0301,\n  acutecomb: 0x0301,\n  acutedeva: 0x0954,\n  acutelowmod: 0x02CF,\n  acutetonecmb: 0x0341,\n  acyrillic: 0x0430,\n  adblgrave: 0x0201,\n  addakgurmukhi: 0x0A71,\n  adeva: 0x0905,\n  adieresis: 0x00E4,\n  adieresiscyrillic: 0x04D3,\n  adieresismacron: 0x01DF,\n  adotbelow: 0x1EA1,\n  adotmacron: 0x01E1,\n  ae: 0x00E6,\n  aeacute: 0x01FD,\n  aekorean: 0x3150,\n  aemacron: 0x01E3,\n  afii00208: 0x2015,\n  afii08941: 0x20A4,\n  afii10017: 0x0410,\n  afii10018: 0x0411,\n  afii10019: 0x0412,\n  afii10020: 0x0413,\n  afii10021: 0x0414,\n  afii10022: 0x0415,\n  afii10023: 0x0401,\n  afii10024: 0x0416,\n  afii10025: 0x0417,\n  afii10026: 0x0418,\n  afii10027: 0x0419,\n  afii10028: 0x041A,\n  afii10029: 0x041B,\n  afii10030: 0x041C,\n  afii10031: 0x041D,\n  afii10032: 0x041E,\n  afii10033: 0x041F,\n  afii10034: 0x0420,\n  afii10035: 0x0421,\n  afii10036: 0x0422,\n  afii10037: 0x0423,\n  afii10038: 0x0424,\n  afii10039: 0x0425,\n  afii10040: 0x0426,\n  afii10041: 0x0427,\n  afii10042: 0x0428,\n  afii10043: 0x0429,\n  afii10044: 0x042A,\n  afii10045: 0x042B,\n  afii10046: 0x042C,\n  afii10047: 0x042D,\n  afii10048: 0x042E,\n  afii10049: 0x042F,\n  afii10050: 0x0490,\n  afii10051: 0x0402,\n  afii10052: 0x0403,\n  afii10053: 0x0404,\n  afii10054: 0x0405,\n  afii10055: 0x0406,\n  afii10056: 0x0407,\n  afii10057: 0x0408,\n  afii10058: 0x0409,\n  afii10059: 0x040A,\n  afii10060: 0x040B,\n  afii10061: 0x040C,\n  afii10062: 0x040E,\n  afii10063: 0xF6C4,\n  afii10064: 0xF6C5,\n  afii10065: 0x0430,\n  afii10066: 0x0431,\n  afii10067: 0x0432,\n  afii10068: 0x0433,\n  afii10069: 0x0434,\n  afii10070: 0x0435,\n  afii10071: 0x0451,\n  afii10072: 0x0436,\n  afii10073: 0x0437,\n  afii10074: 0x0438,\n  afii10075: 0x0439,\n  afii10076: 0x043A,\n  afii10077: 0x043B,\n  afii10078: 0x043C,\n  afii10079: 0x043D,\n  afii10080: 0x043E,\n  afii10081: 0x043F,\n  afii10082: 0x0440,\n  afii10083: 0x0441,\n  afii10084: 0x0442,\n  afii10085: 0x0443,\n  afii10086: 0x0444,\n  afii10087: 0x0445,\n  afii10088: 0x0446,\n  afii10089: 0x0447,\n  afii10090: 0x0448,\n  afii10091: 0x0449,\n  afii10092: 0x044A,\n  afii10093: 0x044B,\n  afii10094: 0x044C,\n  afii10095: 0x044D,\n  afii10096: 0x044E,\n  afii10097: 0x044F,\n  afii10098: 0x0491,\n  afii10099: 0x0452,\n  afii10100: 0x0453,\n  afii10101: 0x0454,\n  afii10102: 0x0455,\n  afii10103: 0x0456,\n  afii10104: 0x0457,\n  afii10105: 0x0458,\n  afii10106: 0x0459,\n  afii10107: 0x045A,\n  afii10108: 0x045B,\n  afii10109: 0x045C,\n  afii10110: 0x045E,\n  afii10145: 0x040F,\n  afii10146: 0x0462,\n  afii10147: 0x0472,\n  afii10148: 0x0474,\n  afii10192: 0xF6C6,\n  afii10193: 0x045F,\n  afii10194: 0x0463,\n  afii10195: 0x0473,\n  afii10196: 0x0475,\n  afii10831: 0xF6C7,\n  afii10832: 0xF6C8,\n  afii10846: 0x04D9,\n  afii299: 0x200E,\n  afii300: 0x200F,\n  afii301: 0x200D,\n  afii57381: 0x066A,\n  afii57388: 0x060C,\n  afii57392: 0x0660,\n  afii57393: 0x0661,\n  afii57394: 0x0662,\n  afii57395: 0x0663,\n  afii57396: 0x0664,\n  afii57397: 0x0665,\n  afii57398: 0x0666,\n  afii57399: 0x0667,\n  afii57400: 0x0668,\n  afii57401: 0x0669,\n  afii57403: 0x061B,\n  afii57407: 0x061F,\n  afii57409: 0x0621,\n  afii57410: 0x0622,\n  afii57411: 0x0623,\n  afii57412: 0x0624,\n  afii57413: 0x0625,\n  afii57414: 0x0626,\n  afii57415: 0x0627,\n  afii57416: 0x0628,\n  afii57417: 0x0629,\n  afii57418: 0x062A,\n  afii57419: 0x062B,\n  afii57420: 0x062C,\n  afii57421: 0x062D,\n  afii57422: 0x062E,\n  afii57423: 0x062F,\n  afii57424: 0x0630,\n  afii57425: 0x0631,\n  afii57426: 0x0632,\n  afii57427: 0x0633,\n  afii57428: 0x0634,\n  afii57429: 0x0635,\n  afii57430: 0x0636,\n  afii57431: 0x0637,\n  afii57432: 0x0638,\n  afii57433: 0x0639,\n  afii57434: 0x063A,\n  afii57440: 0x0640,\n  afii57441: 0x0641,\n  afii57442: 0x0642,\n  afii57443: 0x0643,\n  afii57444: 0x0644,\n  afii57445: 0x0645,\n  afii57446: 0x0646,\n  afii57448: 0x0648,\n  afii57449: 0x0649,\n  afii57450: 0x064A,\n  afii57451: 0x064B,\n  afii57452: 0x064C,\n  afii57453: 0x064D,\n  afii57454: 0x064E,\n  afii57455: 0x064F,\n  afii57456: 0x0650,\n  afii57457: 0x0651,\n  afii57458: 0x0652,\n  afii57470: 0x0647,\n  afii57505: 0x06A4,\n  afii57506: 0x067E,\n  afii57507: 0x0686,\n  afii57508: 0x0698,\n  afii57509: 0x06AF,\n  afii57511: 0x0679,\n  afii57512: 0x0688,\n  afii57513: 0x0691,\n  afii57514: 0x06BA,\n  afii57519: 0x06D2,\n  afii57534: 0x06D5,\n  afii57636: 0x20AA,\n  afii57645: 0x05BE,\n  afii57658: 0x05C3,\n  afii57664: 0x05D0,\n  afii57665: 0x05D1,\n  afii57666: 0x05D2,\n  afii57667: 0x05D3,\n  afii57668: 0x05D4,\n  afii57669: 0x05D5,\n  afii57670: 0x05D6,\n  afii57671: 0x05D7,\n  afii57672: 0x05D8,\n  afii57673: 0x05D9,\n  afii57674: 0x05DA,\n  afii57675: 0x05DB,\n  afii57676: 0x05DC,\n  afii57677: 0x05DD,\n  afii57678: 0x05DE,\n  afii57679: 0x05DF,\n  afii57680: 0x05E0,\n  afii57681: 0x05E1,\n  afii57682: 0x05E2,\n  afii57683: 0x05E3,\n  afii57684: 0x05E4,\n  afii57685: 0x05E5,\n  afii57686: 0x05E6,\n  afii57687: 0x05E7,\n  afii57688: 0x05E8,\n  afii57689: 0x05E9,\n  afii57690: 0x05EA,\n  afii57694: 0xFB2A,\n  afii57695: 0xFB2B,\n  afii57700: 0xFB4B,\n  afii57705: 0xFB1F,\n  afii57716: 0x05F0,\n  afii57717: 0x05F1,\n  afii57718: 0x05F2,\n  afii57723: 0xFB35,\n  afii57793: 0x05B4,\n  afii57794: 0x05B5,\n  afii57795: 0x05B6,\n  afii57796: 0x05BB,\n  afii57797: 0x05B8,\n  afii57798: 0x05B7,\n  afii57799: 0x05B0,\n  afii57800: 0x05B2,\n  afii57801: 0x05B1,\n  afii57802: 0x05B3,\n  afii57803: 0x05C2,\n  afii57804: 0x05C1,\n  afii57806: 0x05B9,\n  afii57807: 0x05BC,\n  afii57839: 0x05BD,\n  afii57841: 0x05BF,\n  afii57842: 0x05C0,\n  afii57929: 0x02BC,\n  afii61248: 0x2105,\n  afii61289: 0x2113,\n  afii61352: 0x2116,\n  afii61573: 0x202C,\n  afii61574: 0x202D,\n  afii61575: 0x202E,\n  afii61664: 0x200C,\n  afii63167: 0x066D,\n  afii64937: 0x02BD,\n  agrave: 0x00E0,\n  agujarati: 0x0A85,\n  agurmukhi: 0x0A05,\n  ahiragana: 0x3042,\n  ahookabove: 0x1EA3,\n  aibengali: 0x0990,\n  aibopomofo: 0x311E,\n  aideva: 0x0910,\n  aiecyrillic: 0x04D5,\n  aigujarati: 0x0A90,\n  aigurmukhi: 0x0A10,\n  aimatragurmukhi: 0x0A48,\n  ainarabic: 0x0639,\n  ainfinalarabic: 0xFECA,\n  aininitialarabic: 0xFECB,\n  ainmedialarabic: 0xFECC,\n  ainvertedbreve: 0x0203,\n  aivowelsignbengali: 0x09C8,\n  aivowelsigndeva: 0x0948,\n  aivowelsigngujarati: 0x0AC8,\n  akatakana: 0x30A2,\n  akatakanahalfwidth: 0xFF71,\n  akorean: 0x314F,\n  alef: 0x05D0,\n  alefarabic: 0x0627,\n  alefdageshhebrew: 0xFB30,\n  aleffinalarabic: 0xFE8E,\n  alefhamzaabovearabic: 0x0623,\n  alefhamzaabovefinalarabic: 0xFE84,\n  alefhamzabelowarabic: 0x0625,\n  alefhamzabelowfinalarabic: 0xFE88,\n  alefhebrew: 0x05D0,\n  aleflamedhebrew: 0xFB4F,\n  alefmaddaabovearabic: 0x0622,\n  alefmaddaabovefinalarabic: 0xFE82,\n  alefmaksuraarabic: 0x0649,\n  alefmaksurafinalarabic: 0xFEF0,\n  alefmaksurainitialarabic: 0xFEF3,\n  alefmaksuramedialarabic: 0xFEF4,\n  alefpatahhebrew: 0xFB2E,\n  alefqamatshebrew: 0xFB2F,\n  aleph: 0x2135,\n  allequal: 0x224C,\n  alpha: 0x03B1,\n  alphatonos: 0x03AC,\n  amacron: 0x0101,\n  amonospace: 0xFF41,\n  ampersand: 0x0026,\n  ampersandmonospace: 0xFF06,\n  ampersandsmall: 0xF726,\n  amsquare: 0x33C2,\n  anbopomofo: 0x3122,\n  angbopomofo: 0x3124,\n  angbracketleft: 0x3008, // This glyph is missing from Adobe's original list.\n  angbracketright: 0x3009, // This glyph is missing from Adobe's original list.\n  angkhankhuthai: 0x0E5A,\n  angle: 0x2220,\n  anglebracketleft: 0x3008,\n  anglebracketleftvertical: 0xFE3F,\n  anglebracketright: 0x3009,\n  anglebracketrightvertical: 0xFE40,\n  angleleft: 0x2329,\n  angleright: 0x232A,\n  angstrom: 0x212B,\n  anoteleia: 0x0387,\n  anudattadeva: 0x0952,\n  anusvarabengali: 0x0982,\n  anusvaradeva: 0x0902,\n  anusvaragujarati: 0x0A82,\n  aogonek: 0x0105,\n  apaatosquare: 0x3300,\n  aparen: 0x249C,\n  apostrophearmenian: 0x055A,\n  apostrophemod: 0x02BC,\n  apple: 0xF8FF,\n  approaches: 0x2250,\n  approxequal: 0x2248,\n  approxequalorimage: 0x2252,\n  approximatelyequal: 0x2245,\n  araeaekorean: 0x318E,\n  araeakorean: 0x318D,\n  arc: 0x2312,\n  arighthalfring: 0x1E9A,\n  aring: 0x00E5,\n  aringacute: 0x01FB,\n  aringbelow: 0x1E01,\n  arrowboth: 0x2194,\n  arrowdashdown: 0x21E3,\n  arrowdashleft: 0x21E0,\n  arrowdashright: 0x21E2,\n  arrowdashup: 0x21E1,\n  arrowdblboth: 0x21D4,\n  arrowdbldown: 0x21D3,\n  arrowdblleft: 0x21D0,\n  arrowdblright: 0x21D2,\n  arrowdblup: 0x21D1,\n  arrowdown: 0x2193,\n  arrowdownleft: 0x2199,\n  arrowdownright: 0x2198,\n  arrowdownwhite: 0x21E9,\n  arrowheaddownmod: 0x02C5,\n  arrowheadleftmod: 0x02C2,\n  arrowheadrightmod: 0x02C3,\n  arrowheadupmod: 0x02C4,\n  arrowhorizex: 0xF8E7,\n  arrowleft: 0x2190,\n  arrowleftdbl: 0x21D0,\n  arrowleftdblstroke: 0x21CD,\n  arrowleftoverright: 0x21C6,\n  arrowleftwhite: 0x21E6,\n  arrowright: 0x2192,\n  arrowrightdblstroke: 0x21CF,\n  arrowrightheavy: 0x279E,\n  arrowrightoverleft: 0x21C4,\n  arrowrightwhite: 0x21E8,\n  arrowtableft: 0x21E4,\n  arrowtabright: 0x21E5,\n  arrowup: 0x2191,\n  arrowupdn: 0x2195,\n  arrowupdnbse: 0x21A8,\n  arrowupdownbase: 0x21A8,\n  arrowupleft: 0x2196,\n  arrowupleftofdown: 0x21C5,\n  arrowupright: 0x2197,\n  arrowupwhite: 0x21E7,\n  arrowvertex: 0xF8E6,\n  asciicircum: 0x005E,\n  asciicircummonospace: 0xFF3E,\n  asciitilde: 0x007E,\n  asciitildemonospace: 0xFF5E,\n  ascript: 0x0251,\n  ascriptturned: 0x0252,\n  asmallhiragana: 0x3041,\n  asmallkatakana: 0x30A1,\n  asmallkatakanahalfwidth: 0xFF67,\n  asterisk: 0x002A,\n  asteriskaltonearabic: 0x066D,\n  asteriskarabic: 0x066D,\n  asteriskmath: 0x2217,\n  asteriskmonospace: 0xFF0A,\n  asterisksmall: 0xFE61,\n  asterism: 0x2042,\n  asuperior: 0xF6E9,\n  asymptoticallyequal: 0x2243,\n  at: 0x0040,\n  atilde: 0x00E3,\n  atmonospace: 0xFF20,\n  atsmall: 0xFE6B,\n  aturned: 0x0250,\n  aubengali: 0x0994,\n  aubopomofo: 0x3120,\n  audeva: 0x0914,\n  augujarati: 0x0A94,\n  augurmukhi: 0x0A14,\n  aulengthmarkbengali: 0x09D7,\n  aumatragurmukhi: 0x0A4C,\n  auvowelsignbengali: 0x09CC,\n  auvowelsigndeva: 0x094C,\n  auvowelsigngujarati: 0x0ACC,\n  avagrahadeva: 0x093D,\n  aybarmenian: 0x0561,\n  ayin: 0x05E2,\n  ayinaltonehebrew: 0xFB20,\n  ayinhebrew: 0x05E2,\n  b: 0x0062,\n  babengali: 0x09AC,\n  backslash: 0x005C,\n  backslashmonospace: 0xFF3C,\n  badeva: 0x092C,\n  bagujarati: 0x0AAC,\n  bagurmukhi: 0x0A2C,\n  bahiragana: 0x3070,\n  bahtthai: 0x0E3F,\n  bakatakana: 0x30D0,\n  bar: 0x007C,\n  barmonospace: 0xFF5C,\n  bbopomofo: 0x3105,\n  bcircle: 0x24D1,\n  bdotaccent: 0x1E03,\n  bdotbelow: 0x1E05,\n  beamedsixteenthnotes: 0x266C,\n  because: 0x2235,\n  becyrillic: 0x0431,\n  beharabic: 0x0628,\n  behfinalarabic: 0xFE90,\n  behinitialarabic: 0xFE91,\n  behiragana: 0x3079,\n  behmedialarabic: 0xFE92,\n  behmeeminitialarabic: 0xFC9F,\n  behmeemisolatedarabic: 0xFC08,\n  behnoonfinalarabic: 0xFC6D,\n  bekatakana: 0x30D9,\n  benarmenian: 0x0562,\n  bet: 0x05D1,\n  beta: 0x03B2,\n  betasymbolgreek: 0x03D0,\n  betdagesh: 0xFB31,\n  betdageshhebrew: 0xFB31,\n  bethebrew: 0x05D1,\n  betrafehebrew: 0xFB4C,\n  bhabengali: 0x09AD,\n  bhadeva: 0x092D,\n  bhagujarati: 0x0AAD,\n  bhagurmukhi: 0x0A2D,\n  bhook: 0x0253,\n  bihiragana: 0x3073,\n  bikatakana: 0x30D3,\n  bilabialclick: 0x0298,\n  bindigurmukhi: 0x0A02,\n  birusquare: 0x3331,\n  blackcircle: 0x25CF,\n  blackdiamond: 0x25C6,\n  blackdownpointingtriangle: 0x25BC,\n  blackleftpointingpointer: 0x25C4,\n  blackleftpointingtriangle: 0x25C0,\n  blacklenticularbracketleft: 0x3010,\n  blacklenticularbracketleftvertical: 0xFE3B,\n  blacklenticularbracketright: 0x3011,\n  blacklenticularbracketrightvertical: 0xFE3C,\n  blacklowerlefttriangle: 0x25E3,\n  blacklowerrighttriangle: 0x25E2,\n  blackrectangle: 0x25AC,\n  blackrightpointingpointer: 0x25BA,\n  blackrightpointingtriangle: 0x25B6,\n  blacksmallsquare: 0x25AA,\n  blacksmilingface: 0x263B,\n  blacksquare: 0x25A0,\n  blackstar: 0x2605,\n  blackupperlefttriangle: 0x25E4,\n  blackupperrighttriangle: 0x25E5,\n  blackuppointingsmalltriangle: 0x25B4,\n  blackuppointingtriangle: 0x25B2,\n  blank: 0x2423,\n  blinebelow: 0x1E07,\n  block: 0x2588,\n  bmonospace: 0xFF42,\n  bobaimaithai: 0x0E1A,\n  bohiragana: 0x307C,\n  bokatakana: 0x30DC,\n  bparen: 0x249D,\n  bqsquare: 0x33C3,\n  braceex: 0xF8F4,\n  braceleft: 0x007B,\n  braceleftbt: 0xF8F3,\n  braceleftmid: 0xF8F2,\n  braceleftmonospace: 0xFF5B,\n  braceleftsmall: 0xFE5B,\n  bracelefttp: 0xF8F1,\n  braceleftvertical: 0xFE37,\n  braceright: 0x007D,\n  bracerightbt: 0xF8FE,\n  bracerightmid: 0xF8FD,\n  bracerightmonospace: 0xFF5D,\n  bracerightsmall: 0xFE5C,\n  bracerighttp: 0xF8FC,\n  bracerightvertical: 0xFE38,\n  bracketleft: 0x005B,\n  bracketleftbt: 0xF8F0,\n  bracketleftex: 0xF8EF,\n  bracketleftmonospace: 0xFF3B,\n  bracketlefttp: 0xF8EE,\n  bracketright: 0x005D,\n  bracketrightbt: 0xF8FB,\n  bracketrightex: 0xF8FA,\n  bracketrightmonospace: 0xFF3D,\n  bracketrighttp: 0xF8F9,\n  breve: 0x02D8,\n  brevebelowcmb: 0x032E,\n  brevecmb: 0x0306,\n  breveinvertedbelowcmb: 0x032F,\n  breveinvertedcmb: 0x0311,\n  breveinverteddoublecmb: 0x0361,\n  bridgebelowcmb: 0x032A,\n  bridgeinvertedbelowcmb: 0x033A,\n  brokenbar: 0x00A6,\n  bstroke: 0x0180,\n  bsuperior: 0xF6EA,\n  btopbar: 0x0183,\n  buhiragana: 0x3076,\n  bukatakana: 0x30D6,\n  bullet: 0x2022,\n  bulletinverse: 0x25D8,\n  bulletoperator: 0x2219,\n  bullseye: 0x25CE,\n  c: 0x0063,\n  caarmenian: 0x056E,\n  cabengali: 0x099A,\n  cacute: 0x0107,\n  cadeva: 0x091A,\n  cagujarati: 0x0A9A,\n  cagurmukhi: 0x0A1A,\n  calsquare: 0x3388,\n  candrabindubengali: 0x0981,\n  candrabinducmb: 0x0310,\n  candrabindudeva: 0x0901,\n  candrabindugujarati: 0x0A81,\n  capslock: 0x21EA,\n  careof: 0x2105,\n  caron: 0x02C7,\n  caronbelowcmb: 0x032C,\n  caroncmb: 0x030C,\n  carriagereturn: 0x21B5,\n  cbopomofo: 0x3118,\n  ccaron: 0x010D,\n  ccedilla: 0x00E7,\n  ccedillaacute: 0x1E09,\n  ccircle: 0x24D2,\n  ccircumflex: 0x0109,\n  ccurl: 0x0255,\n  cdot: 0x010B,\n  cdotaccent: 0x010B,\n  cdsquare: 0x33C5,\n  cedilla: 0x00B8,\n  cedillacmb: 0x0327,\n  cent: 0x00A2,\n  centigrade: 0x2103,\n  centinferior: 0xF6DF,\n  centmonospace: 0xFFE0,\n  centoldstyle: 0xF7A2,\n  centsuperior: 0xF6E0,\n  chaarmenian: 0x0579,\n  chabengali: 0x099B,\n  chadeva: 0x091B,\n  chagujarati: 0x0A9B,\n  chagurmukhi: 0x0A1B,\n  chbopomofo: 0x3114,\n  cheabkhasiancyrillic: 0x04BD,\n  checkmark: 0x2713,\n  checyrillic: 0x0447,\n  chedescenderabkhasiancyrillic: 0x04BF,\n  chedescendercyrillic: 0x04B7,\n  chedieresiscyrillic: 0x04F5,\n  cheharmenian: 0x0573,\n  chekhakassiancyrillic: 0x04CC,\n  cheverticalstrokecyrillic: 0x04B9,\n  chi: 0x03C7,\n  chieuchacirclekorean: 0x3277,\n  chieuchaparenkorean: 0x3217,\n  chieuchcirclekorean: 0x3269,\n  chieuchkorean: 0x314A,\n  chieuchparenkorean: 0x3209,\n  chochangthai: 0x0E0A,\n  chochanthai: 0x0E08,\n  chochingthai: 0x0E09,\n  chochoethai: 0x0E0C,\n  chook: 0x0188,\n  cieucacirclekorean: 0x3276,\n  cieucaparenkorean: 0x3216,\n  cieuccirclekorean: 0x3268,\n  cieuckorean: 0x3148,\n  cieucparenkorean: 0x3208,\n  cieucuparenkorean: 0x321C,\n  circle: 0x25CB,\n  circlecopyrt: 0x00A9, // This glyph is missing from Adobe's original list.\n  circlemultiply: 0x2297,\n  circleot: 0x2299,\n  circleplus: 0x2295,\n  circlepostalmark: 0x3036,\n  circlewithlefthalfblack: 0x25D0,\n  circlewithrighthalfblack: 0x25D1,\n  circumflex: 0x02C6,\n  circumflexbelowcmb: 0x032D,\n  circumflexcmb: 0x0302,\n  clear: 0x2327,\n  clickalveolar: 0x01C2,\n  clickdental: 0x01C0,\n  clicklateral: 0x01C1,\n  clickretroflex: 0x01C3,\n  club: 0x2663,\n  clubsuitblack: 0x2663,\n  clubsuitwhite: 0x2667,\n  cmcubedsquare: 0x33A4,\n  cmonospace: 0xFF43,\n  cmsquaredsquare: 0x33A0,\n  coarmenian: 0x0581,\n  colon: 0x003A,\n  colonmonetary: 0x20A1,\n  colonmonospace: 0xFF1A,\n  colonsign: 0x20A1,\n  colonsmall: 0xFE55,\n  colontriangularhalfmod: 0x02D1,\n  colontriangularmod: 0x02D0,\n  comma: 0x002C,\n  commaabovecmb: 0x0313,\n  commaaboverightcmb: 0x0315,\n  commaaccent: 0xF6C3,\n  commaarabic: 0x060C,\n  commaarmenian: 0x055D,\n  commainferior: 0xF6E1,\n  commamonospace: 0xFF0C,\n  commareversedabovecmb: 0x0314,\n  commareversedmod: 0x02BD,\n  commasmall: 0xFE50,\n  commasuperior: 0xF6E2,\n  commaturnedabovecmb: 0x0312,\n  commaturnedmod: 0x02BB,\n  compass: 0x263C,\n  congruent: 0x2245,\n  contourintegral: 0x222E,\n  control: 0x2303,\n  controlACK: 0x0006,\n  controlBEL: 0x0007,\n  controlBS: 0x0008,\n  controlCAN: 0x0018,\n  controlCR: 0x000D,\n  controlDC1: 0x0011,\n  controlDC2: 0x0012,\n  controlDC3: 0x0013,\n  controlDC4: 0x0014,\n  controlDEL: 0x007F,\n  controlDLE: 0x0010,\n  controlEM: 0x0019,\n  controlENQ: 0x0005,\n  controlEOT: 0x0004,\n  controlESC: 0x001B,\n  controlETB: 0x0017,\n  controlETX: 0x0003,\n  controlFF: 0x000C,\n  controlFS: 0x001C,\n  controlGS: 0x001D,\n  controlHT: 0x0009,\n  controlLF: 0x000A,\n  controlNAK: 0x0015,\n  controlRS: 0x001E,\n  controlSI: 0x000F,\n  controlSO: 0x000E,\n  controlSOT: 0x0002,\n  controlSTX: 0x0001,\n  controlSUB: 0x001A,\n  controlSYN: 0x0016,\n  controlUS: 0x001F,\n  controlVT: 0x000B,\n  copyright: 0x00A9,\n  copyrightsans: 0xF8E9,\n  copyrightserif: 0xF6D9,\n  cornerbracketleft: 0x300C,\n  cornerbracketlefthalfwidth: 0xFF62,\n  cornerbracketleftvertical: 0xFE41,\n  cornerbracketright: 0x300D,\n  cornerbracketrighthalfwidth: 0xFF63,\n  cornerbracketrightvertical: 0xFE42,\n  corporationsquare: 0x337F,\n  cosquare: 0x33C7,\n  coverkgsquare: 0x33C6,\n  cparen: 0x249E,\n  cruzeiro: 0x20A2,\n  cstretched: 0x0297,\n  curlyand: 0x22CF,\n  curlyor: 0x22CE,\n  currency: 0x00A4,\n  cyrBreve: 0xF6D1,\n  cyrFlex: 0xF6D2,\n  cyrbreve: 0xF6D4,\n  cyrflex: 0xF6D5,\n  d: 0x0064,\n  daarmenian: 0x0564,\n  dabengali: 0x09A6,\n  dadarabic: 0x0636,\n  dadeva: 0x0926,\n  dadfinalarabic: 0xFEBE,\n  dadinitialarabic: 0xFEBF,\n  dadmedialarabic: 0xFEC0,\n  dagesh: 0x05BC,\n  dageshhebrew: 0x05BC,\n  dagger: 0x2020,\n  daggerdbl: 0x2021,\n  dagujarati: 0x0AA6,\n  dagurmukhi: 0x0A26,\n  dahiragana: 0x3060,\n  dakatakana: 0x30C0,\n  dalarabic: 0x062F,\n  dalet: 0x05D3,\n  daletdagesh: 0xFB33,\n  daletdageshhebrew: 0xFB33,\n  dalethebrew: 0x05D3,\n  dalfinalarabic: 0xFEAA,\n  dammaarabic: 0x064F,\n  dammalowarabic: 0x064F,\n  dammatanaltonearabic: 0x064C,\n  dammatanarabic: 0x064C,\n  danda: 0x0964,\n  dargahebrew: 0x05A7,\n  dargalefthebrew: 0x05A7,\n  dasiapneumatacyrilliccmb: 0x0485,\n  dblGrave: 0xF6D3,\n  dblanglebracketleft: 0x300A,\n  dblanglebracketleftvertical: 0xFE3D,\n  dblanglebracketright: 0x300B,\n  dblanglebracketrightvertical: 0xFE3E,\n  dblarchinvertedbelowcmb: 0x032B,\n  dblarrowleft: 0x21D4,\n  dblarrowright: 0x21D2,\n  dbldanda: 0x0965,\n  dblgrave: 0xF6D6,\n  dblgravecmb: 0x030F,\n  dblintegral: 0x222C,\n  dbllowline: 0x2017,\n  dbllowlinecmb: 0x0333,\n  dbloverlinecmb: 0x033F,\n  dblprimemod: 0x02BA,\n  dblverticalbar: 0x2016,\n  dblverticallineabovecmb: 0x030E,\n  dbopomofo: 0x3109,\n  dbsquare: 0x33C8,\n  dcaron: 0x010F,\n  dcedilla: 0x1E11,\n  dcircle: 0x24D3,\n  dcircumflexbelow: 0x1E13,\n  dcroat: 0x0111,\n  ddabengali: 0x09A1,\n  ddadeva: 0x0921,\n  ddagujarati: 0x0AA1,\n  ddagurmukhi: 0x0A21,\n  ddalarabic: 0x0688,\n  ddalfinalarabic: 0xFB89,\n  dddhadeva: 0x095C,\n  ddhabengali: 0x09A2,\n  ddhadeva: 0x0922,\n  ddhagujarati: 0x0AA2,\n  ddhagurmukhi: 0x0A22,\n  ddotaccent: 0x1E0B,\n  ddotbelow: 0x1E0D,\n  decimalseparatorarabic: 0x066B,\n  decimalseparatorpersian: 0x066B,\n  decyrillic: 0x0434,\n  degree: 0x00B0,\n  dehihebrew: 0x05AD,\n  dehiragana: 0x3067,\n  deicoptic: 0x03EF,\n  dekatakana: 0x30C7,\n  deleteleft: 0x232B,\n  deleteright: 0x2326,\n  delta: 0x03B4,\n  deltaturned: 0x018D,\n  denominatorminusonenumeratorbengali: 0x09F8,\n  dezh: 0x02A4,\n  dhabengali: 0x09A7,\n  dhadeva: 0x0927,\n  dhagujarati: 0x0AA7,\n  dhagurmukhi: 0x0A27,\n  dhook: 0x0257,\n  dialytikatonos: 0x0385,\n  dialytikatonoscmb: 0x0344,\n  diamond: 0x2666,\n  diamondsuitwhite: 0x2662,\n  dieresis: 0x00A8,\n  dieresisacute: 0xF6D7,\n  dieresisbelowcmb: 0x0324,\n  dieresiscmb: 0x0308,\n  dieresisgrave: 0xF6D8,\n  dieresistonos: 0x0385,\n  dihiragana: 0x3062,\n  dikatakana: 0x30C2,\n  dittomark: 0x3003,\n  divide: 0x00F7,\n  divides: 0x2223,\n  divisionslash: 0x2215,\n  djecyrillic: 0x0452,\n  dkshade: 0x2593,\n  dlinebelow: 0x1E0F,\n  dlsquare: 0x3397,\n  dmacron: 0x0111,\n  dmonospace: 0xFF44,\n  dnblock: 0x2584,\n  dochadathai: 0x0E0E,\n  dodekthai: 0x0E14,\n  dohiragana: 0x3069,\n  dokatakana: 0x30C9,\n  dollar: 0x0024,\n  dollarinferior: 0xF6E3,\n  dollarmonospace: 0xFF04,\n  dollaroldstyle: 0xF724,\n  dollarsmall: 0xFE69,\n  dollarsuperior: 0xF6E4,\n  dong: 0x20AB,\n  dorusquare: 0x3326,\n  dotaccent: 0x02D9,\n  dotaccentcmb: 0x0307,\n  dotbelowcmb: 0x0323,\n  dotbelowcomb: 0x0323,\n  dotkatakana: 0x30FB,\n  dotlessi: 0x0131,\n  dotlessj: 0xF6BE,\n  dotlessjstrokehook: 0x0284,\n  dotmath: 0x22C5,\n  dottedcircle: 0x25CC,\n  doubleyodpatah: 0xFB1F,\n  doubleyodpatahhebrew: 0xFB1F,\n  downtackbelowcmb: 0x031E,\n  downtackmod: 0x02D5,\n  dparen: 0x249F,\n  dsuperior: 0xF6EB,\n  dtail: 0x0256,\n  dtopbar: 0x018C,\n  duhiragana: 0x3065,\n  dukatakana: 0x30C5,\n  dz: 0x01F3,\n  dzaltone: 0x02A3,\n  dzcaron: 0x01C6,\n  dzcurl: 0x02A5,\n  dzeabkhasiancyrillic: 0x04E1,\n  dzecyrillic: 0x0455,\n  dzhecyrillic: 0x045F,\n  e: 0x0065,\n  eacute: 0x00E9,\n  earth: 0x2641,\n  ebengali: 0x098F,\n  ebopomofo: 0x311C,\n  ebreve: 0x0115,\n  ecandradeva: 0x090D,\n  ecandragujarati: 0x0A8D,\n  ecandravowelsigndeva: 0x0945,\n  ecandravowelsigngujarati: 0x0AC5,\n  ecaron: 0x011B,\n  ecedillabreve: 0x1E1D,\n  echarmenian: 0x0565,\n  echyiwnarmenian: 0x0587,\n  ecircle: 0x24D4,\n  ecircumflex: 0x00EA,\n  ecircumflexacute: 0x1EBF,\n  ecircumflexbelow: 0x1E19,\n  ecircumflexdotbelow: 0x1EC7,\n  ecircumflexgrave: 0x1EC1,\n  ecircumflexhookabove: 0x1EC3,\n  ecircumflextilde: 0x1EC5,\n  ecyrillic: 0x0454,\n  edblgrave: 0x0205,\n  edeva: 0x090F,\n  edieresis: 0x00EB,\n  edot: 0x0117,\n  edotaccent: 0x0117,\n  edotbelow: 0x1EB9,\n  eegurmukhi: 0x0A0F,\n  eematragurmukhi: 0x0A47,\n  efcyrillic: 0x0444,\n  egrave: 0x00E8,\n  egujarati: 0x0A8F,\n  eharmenian: 0x0567,\n  ehbopomofo: 0x311D,\n  ehiragana: 0x3048,\n  ehookabove: 0x1EBB,\n  eibopomofo: 0x311F,\n  eight: 0x0038,\n  eightarabic: 0x0668,\n  eightbengali: 0x09EE,\n  eightcircle: 0x2467,\n  eightcircleinversesansserif: 0x2791,\n  eightdeva: 0x096E,\n  eighteencircle: 0x2471,\n  eighteenparen: 0x2485,\n  eighteenperiod: 0x2499,\n  eightgujarati: 0x0AEE,\n  eightgurmukhi: 0x0A6E,\n  eighthackarabic: 0x0668,\n  eighthangzhou: 0x3028,\n  eighthnotebeamed: 0x266B,\n  eightideographicparen: 0x3227,\n  eightinferior: 0x2088,\n  eightmonospace: 0xFF18,\n  eightoldstyle: 0xF738,\n  eightparen: 0x247B,\n  eightperiod: 0x248F,\n  eightpersian: 0x06F8,\n  eightroman: 0x2177,\n  eightsuperior: 0x2078,\n  eightthai: 0x0E58,\n  einvertedbreve: 0x0207,\n  eiotifiedcyrillic: 0x0465,\n  ekatakana: 0x30A8,\n  ekatakanahalfwidth: 0xFF74,\n  ekonkargurmukhi: 0x0A74,\n  ekorean: 0x3154,\n  elcyrillic: 0x043B,\n  element: 0x2208,\n  elevencircle: 0x246A,\n  elevenparen: 0x247E,\n  elevenperiod: 0x2492,\n  elevenroman: 0x217A,\n  ellipsis: 0x2026,\n  ellipsisvertical: 0x22EE,\n  emacron: 0x0113,\n  emacronacute: 0x1E17,\n  emacrongrave: 0x1E15,\n  emcyrillic: 0x043C,\n  emdash: 0x2014,\n  emdashvertical: 0xFE31,\n  emonospace: 0xFF45,\n  emphasismarkarmenian: 0x055B,\n  emptyset: 0x2205,\n  enbopomofo: 0x3123,\n  encyrillic: 0x043D,\n  endash: 0x2013,\n  endashvertical: 0xFE32,\n  endescendercyrillic: 0x04A3,\n  eng: 0x014B,\n  engbopomofo: 0x3125,\n  enghecyrillic: 0x04A5,\n  enhookcyrillic: 0x04C8,\n  enspace: 0x2002,\n  eogonek: 0x0119,\n  eokorean: 0x3153,\n  eopen: 0x025B,\n  eopenclosed: 0x029A,\n  eopenreversed: 0x025C,\n  eopenreversedclosed: 0x025E,\n  eopenreversedhook: 0x025D,\n  eparen: 0x24A0,\n  epsilon: 0x03B5,\n  epsilontonos: 0x03AD,\n  equal: 0x003D,\n  equalmonospace: 0xFF1D,\n  equalsmall: 0xFE66,\n  equalsuperior: 0x207C,\n  equivalence: 0x2261,\n  erbopomofo: 0x3126,\n  ercyrillic: 0x0440,\n  ereversed: 0x0258,\n  ereversedcyrillic: 0x044D,\n  escyrillic: 0x0441,\n  esdescendercyrillic: 0x04AB,\n  esh: 0x0283,\n  eshcurl: 0x0286,\n  eshortdeva: 0x090E,\n  eshortvowelsigndeva: 0x0946,\n  eshreversedloop: 0x01AA,\n  eshsquatreversed: 0x0285,\n  esmallhiragana: 0x3047,\n  esmallkatakana: 0x30A7,\n  esmallkatakanahalfwidth: 0xFF6A,\n  estimated: 0x212E,\n  esuperior: 0xF6EC,\n  eta: 0x03B7,\n  etarmenian: 0x0568,\n  etatonos: 0x03AE,\n  eth: 0x00F0,\n  etilde: 0x1EBD,\n  etildebelow: 0x1E1B,\n  etnahtafoukhhebrew: 0x0591,\n  etnahtafoukhlefthebrew: 0x0591,\n  etnahtahebrew: 0x0591,\n  etnahtalefthebrew: 0x0591,\n  eturned: 0x01DD,\n  eukorean: 0x3161,\n  euro: 0x20AC,\n  evowelsignbengali: 0x09C7,\n  evowelsigndeva: 0x0947,\n  evowelsigngujarati: 0x0AC7,\n  exclam: 0x0021,\n  exclamarmenian: 0x055C,\n  exclamdbl: 0x203C,\n  exclamdown: 0x00A1,\n  exclamdownsmall: 0xF7A1,\n  exclammonospace: 0xFF01,\n  exclamsmall: 0xF721,\n  existential: 0x2203,\n  ezh: 0x0292,\n  ezhcaron: 0x01EF,\n  ezhcurl: 0x0293,\n  ezhreversed: 0x01B9,\n  ezhtail: 0x01BA,\n  f: 0x0066,\n  fadeva: 0x095E,\n  fagurmukhi: 0x0A5E,\n  fahrenheit: 0x2109,\n  fathaarabic: 0x064E,\n  fathalowarabic: 0x064E,\n  fathatanarabic: 0x064B,\n  fbopomofo: 0x3108,\n  fcircle: 0x24D5,\n  fdotaccent: 0x1E1F,\n  feharabic: 0x0641,\n  feharmenian: 0x0586,\n  fehfinalarabic: 0xFED2,\n  fehinitialarabic: 0xFED3,\n  fehmedialarabic: 0xFED4,\n  feicoptic: 0x03E5,\n  female: 0x2640,\n  ff: 0xFB00,\n  ffi: 0xFB03,\n  ffl: 0xFB04,\n  fi: 0xFB01,\n  fifteencircle: 0x246E,\n  fifteenparen: 0x2482,\n  fifteenperiod: 0x2496,\n  figuredash: 0x2012,\n  filledbox: 0x25A0,\n  filledrect: 0x25AC,\n  finalkaf: 0x05DA,\n  finalkafdagesh: 0xFB3A,\n  finalkafdageshhebrew: 0xFB3A,\n  finalkafhebrew: 0x05DA,\n  finalmem: 0x05DD,\n  finalmemhebrew: 0x05DD,\n  finalnun: 0x05DF,\n  finalnunhebrew: 0x05DF,\n  finalpe: 0x05E3,\n  finalpehebrew: 0x05E3,\n  finaltsadi: 0x05E5,\n  finaltsadihebrew: 0x05E5,\n  firsttonechinese: 0x02C9,\n  fisheye: 0x25C9,\n  fitacyrillic: 0x0473,\n  five: 0x0035,\n  fivearabic: 0x0665,\n  fivebengali: 0x09EB,\n  fivecircle: 0x2464,\n  fivecircleinversesansserif: 0x278E,\n  fivedeva: 0x096B,\n  fiveeighths: 0x215D,\n  fivegujarati: 0x0AEB,\n  fivegurmukhi: 0x0A6B,\n  fivehackarabic: 0x0665,\n  fivehangzhou: 0x3025,\n  fiveideographicparen: 0x3224,\n  fiveinferior: 0x2085,\n  fivemonospace: 0xFF15,\n  fiveoldstyle: 0xF735,\n  fiveparen: 0x2478,\n  fiveperiod: 0x248C,\n  fivepersian: 0x06F5,\n  fiveroman: 0x2174,\n  fivesuperior: 0x2075,\n  fivethai: 0x0E55,\n  fl: 0xFB02,\n  florin: 0x0192,\n  fmonospace: 0xFF46,\n  fmsquare: 0x3399,\n  fofanthai: 0x0E1F,\n  fofathai: 0x0E1D,\n  fongmanthai: 0x0E4F,\n  forall: 0x2200,\n  four: 0x0034,\n  fourarabic: 0x0664,\n  fourbengali: 0x09EA,\n  fourcircle: 0x2463,\n  fourcircleinversesansserif: 0x278D,\n  fourdeva: 0x096A,\n  fourgujarati: 0x0AEA,\n  fourgurmukhi: 0x0A6A,\n  fourhackarabic: 0x0664,\n  fourhangzhou: 0x3024,\n  fourideographicparen: 0x3223,\n  fourinferior: 0x2084,\n  fourmonospace: 0xFF14,\n  fournumeratorbengali: 0x09F7,\n  fouroldstyle: 0xF734,\n  fourparen: 0x2477,\n  fourperiod: 0x248B,\n  fourpersian: 0x06F4,\n  fourroman: 0x2173,\n  foursuperior: 0x2074,\n  fourteencircle: 0x246D,\n  fourteenparen: 0x2481,\n  fourteenperiod: 0x2495,\n  fourthai: 0x0E54,\n  fourthtonechinese: 0x02CB,\n  fparen: 0x24A1,\n  fraction: 0x2044,\n  franc: 0x20A3,\n  g: 0x0067,\n  gabengali: 0x0997,\n  gacute: 0x01F5,\n  gadeva: 0x0917,\n  gafarabic: 0x06AF,\n  gaffinalarabic: 0xFB93,\n  gafinitialarabic: 0xFB94,\n  gafmedialarabic: 0xFB95,\n  gagujarati: 0x0A97,\n  gagurmukhi: 0x0A17,\n  gahiragana: 0x304C,\n  gakatakana: 0x30AC,\n  gamma: 0x03B3,\n  gammalatinsmall: 0x0263,\n  gammasuperior: 0x02E0,\n  gangiacoptic: 0x03EB,\n  gbopomofo: 0x310D,\n  gbreve: 0x011F,\n  gcaron: 0x01E7,\n  gcedilla: 0x0123,\n  gcircle: 0x24D6,\n  gcircumflex: 0x011D,\n  gcommaaccent: 0x0123,\n  gdot: 0x0121,\n  gdotaccent: 0x0121,\n  gecyrillic: 0x0433,\n  gehiragana: 0x3052,\n  gekatakana: 0x30B2,\n  geometricallyequal: 0x2251,\n  gereshaccenthebrew: 0x059C,\n  gereshhebrew: 0x05F3,\n  gereshmuqdamhebrew: 0x059D,\n  germandbls: 0x00DF,\n  gershayimaccenthebrew: 0x059E,\n  gershayimhebrew: 0x05F4,\n  getamark: 0x3013,\n  ghabengali: 0x0998,\n  ghadarmenian: 0x0572,\n  ghadeva: 0x0918,\n  ghagujarati: 0x0A98,\n  ghagurmukhi: 0x0A18,\n  ghainarabic: 0x063A,\n  ghainfinalarabic: 0xFECE,\n  ghaininitialarabic: 0xFECF,\n  ghainmedialarabic: 0xFED0,\n  ghemiddlehookcyrillic: 0x0495,\n  ghestrokecyrillic: 0x0493,\n  gheupturncyrillic: 0x0491,\n  ghhadeva: 0x095A,\n  ghhagurmukhi: 0x0A5A,\n  ghook: 0x0260,\n  ghzsquare: 0x3393,\n  gihiragana: 0x304E,\n  gikatakana: 0x30AE,\n  gimarmenian: 0x0563,\n  gimel: 0x05D2,\n  gimeldagesh: 0xFB32,\n  gimeldageshhebrew: 0xFB32,\n  gimelhebrew: 0x05D2,\n  gjecyrillic: 0x0453,\n  glottalinvertedstroke: 0x01BE,\n  glottalstop: 0x0294,\n  glottalstopinverted: 0x0296,\n  glottalstopmod: 0x02C0,\n  glottalstopreversed: 0x0295,\n  glottalstopreversedmod: 0x02C1,\n  glottalstopreversedsuperior: 0x02E4,\n  glottalstopstroke: 0x02A1,\n  glottalstopstrokereversed: 0x02A2,\n  gmacron: 0x1E21,\n  gmonospace: 0xFF47,\n  gohiragana: 0x3054,\n  gokatakana: 0x30B4,\n  gparen: 0x24A2,\n  gpasquare: 0x33AC,\n  gradient: 0x2207,\n  grave: 0x0060,\n  gravebelowcmb: 0x0316,\n  gravecmb: 0x0300,\n  gravecomb: 0x0300,\n  gravedeva: 0x0953,\n  gravelowmod: 0x02CE,\n  gravemonospace: 0xFF40,\n  gravetonecmb: 0x0340,\n  greater: 0x003E,\n  greaterequal: 0x2265,\n  greaterequalorless: 0x22DB,\n  greatermonospace: 0xFF1E,\n  greaterorequivalent: 0x2273,\n  greaterorless: 0x2277,\n  greateroverequal: 0x2267,\n  greatersmall: 0xFE65,\n  gscript: 0x0261,\n  gstroke: 0x01E5,\n  guhiragana: 0x3050,\n  guillemotleft: 0x00AB,\n  guillemotright: 0x00BB,\n  guilsinglleft: 0x2039,\n  guilsinglright: 0x203A,\n  gukatakana: 0x30B0,\n  guramusquare: 0x3318,\n  gysquare: 0x33C9,\n  h: 0x0068,\n  haabkhasiancyrillic: 0x04A9,\n  haaltonearabic: 0x06C1,\n  habengali: 0x09B9,\n  hadescendercyrillic: 0x04B3,\n  hadeva: 0x0939,\n  hagujarati: 0x0AB9,\n  hagurmukhi: 0x0A39,\n  haharabic: 0x062D,\n  hahfinalarabic: 0xFEA2,\n  hahinitialarabic: 0xFEA3,\n  hahiragana: 0x306F,\n  hahmedialarabic: 0xFEA4,\n  haitusquare: 0x332A,\n  hakatakana: 0x30CF,\n  hakatakanahalfwidth: 0xFF8A,\n  halantgurmukhi: 0x0A4D,\n  hamzaarabic: 0x0621,\n  hamzalowarabic: 0x0621,\n  hangulfiller: 0x3164,\n  hardsigncyrillic: 0x044A,\n  harpoonleftbarbup: 0x21BC,\n  harpoonrightbarbup: 0x21C0,\n  hasquare: 0x33CA,\n  hatafpatah: 0x05B2,\n  hatafpatah16: 0x05B2,\n  hatafpatah23: 0x05B2,\n  hatafpatah2f: 0x05B2,\n  hatafpatahhebrew: 0x05B2,\n  hatafpatahnarrowhebrew: 0x05B2,\n  hatafpatahquarterhebrew: 0x05B2,\n  hatafpatahwidehebrew: 0x05B2,\n  hatafqamats: 0x05B3,\n  hatafqamats1b: 0x05B3,\n  hatafqamats28: 0x05B3,\n  hatafqamats34: 0x05B3,\n  hatafqamatshebrew: 0x05B3,\n  hatafqamatsnarrowhebrew: 0x05B3,\n  hatafqamatsquarterhebrew: 0x05B3,\n  hatafqamatswidehebrew: 0x05B3,\n  hatafsegol: 0x05B1,\n  hatafsegol17: 0x05B1,\n  hatafsegol24: 0x05B1,\n  hatafsegol30: 0x05B1,\n  hatafsegolhebrew: 0x05B1,\n  hatafsegolnarrowhebrew: 0x05B1,\n  hatafsegolquarterhebrew: 0x05B1,\n  hatafsegolwidehebrew: 0x05B1,\n  hbar: 0x0127,\n  hbopomofo: 0x310F,\n  hbrevebelow: 0x1E2B,\n  hcedilla: 0x1E29,\n  hcircle: 0x24D7,\n  hcircumflex: 0x0125,\n  hdieresis: 0x1E27,\n  hdotaccent: 0x1E23,\n  hdotbelow: 0x1E25,\n  he: 0x05D4,\n  heart: 0x2665,\n  heartsuitblack: 0x2665,\n  heartsuitwhite: 0x2661,\n  hedagesh: 0xFB34,\n  hedageshhebrew: 0xFB34,\n  hehaltonearabic: 0x06C1,\n  heharabic: 0x0647,\n  hehebrew: 0x05D4,\n  hehfinalaltonearabic: 0xFBA7,\n  hehfinalalttwoarabic: 0xFEEA,\n  hehfinalarabic: 0xFEEA,\n  hehhamzaabovefinalarabic: 0xFBA5,\n  hehhamzaaboveisolatedarabic: 0xFBA4,\n  hehinitialaltonearabic: 0xFBA8,\n  hehinitialarabic: 0xFEEB,\n  hehiragana: 0x3078,\n  hehmedialaltonearabic: 0xFBA9,\n  hehmedialarabic: 0xFEEC,\n  heiseierasquare: 0x337B,\n  hekatakana: 0x30D8,\n  hekatakanahalfwidth: 0xFF8D,\n  hekutaarusquare: 0x3336,\n  henghook: 0x0267,\n  herutusquare: 0x3339,\n  het: 0x05D7,\n  hethebrew: 0x05D7,\n  hhook: 0x0266,\n  hhooksuperior: 0x02B1,\n  hieuhacirclekorean: 0x327B,\n  hieuhaparenkorean: 0x321B,\n  hieuhcirclekorean: 0x326D,\n  hieuhkorean: 0x314E,\n  hieuhparenkorean: 0x320D,\n  hihiragana: 0x3072,\n  hikatakana: 0x30D2,\n  hikatakanahalfwidth: 0xFF8B,\n  hiriq: 0x05B4,\n  hiriq14: 0x05B4,\n  hiriq21: 0x05B4,\n  hiriq2d: 0x05B4,\n  hiriqhebrew: 0x05B4,\n  hiriqnarrowhebrew: 0x05B4,\n  hiriqquarterhebrew: 0x05B4,\n  hiriqwidehebrew: 0x05B4,\n  hlinebelow: 0x1E96,\n  hmonospace: 0xFF48,\n  hoarmenian: 0x0570,\n  hohipthai: 0x0E2B,\n  hohiragana: 0x307B,\n  hokatakana: 0x30DB,\n  hokatakanahalfwidth: 0xFF8E,\n  holam: 0x05B9,\n  holam19: 0x05B9,\n  holam26: 0x05B9,\n  holam32: 0x05B9,\n  holamhebrew: 0x05B9,\n  holamnarrowhebrew: 0x05B9,\n  holamquarterhebrew: 0x05B9,\n  holamwidehebrew: 0x05B9,\n  honokhukthai: 0x0E2E,\n  hookabovecomb: 0x0309,\n  hookcmb: 0x0309,\n  hookpalatalizedbelowcmb: 0x0321,\n  hookretroflexbelowcmb: 0x0322,\n  hoonsquare: 0x3342,\n  horicoptic: 0x03E9,\n  horizontalbar: 0x2015,\n  horncmb: 0x031B,\n  hotsprings: 0x2668,\n  house: 0x2302,\n  hparen: 0x24A3,\n  hsuperior: 0x02B0,\n  hturned: 0x0265,\n  huhiragana: 0x3075,\n  huiitosquare: 0x3333,\n  hukatakana: 0x30D5,\n  hukatakanahalfwidth: 0xFF8C,\n  hungarumlaut: 0x02DD,\n  hungarumlautcmb: 0x030B,\n  hv: 0x0195,\n  hyphen: 0x002D,\n  hypheninferior: 0xF6E5,\n  hyphenmonospace: 0xFF0D,\n  hyphensmall: 0xFE63,\n  hyphensuperior: 0xF6E6,\n  hyphentwo: 0x2010,\n  i: 0x0069,\n  iacute: 0x00ED,\n  iacyrillic: 0x044F,\n  ibengali: 0x0987,\n  ibopomofo: 0x3127,\n  ibreve: 0x012D,\n  icaron: 0x01D0,\n  icircle: 0x24D8,\n  icircumflex: 0x00EE,\n  icyrillic: 0x0456,\n  idblgrave: 0x0209,\n  ideographearthcircle: 0x328F,\n  ideographfirecircle: 0x328B,\n  ideographicallianceparen: 0x323F,\n  ideographiccallparen: 0x323A,\n  ideographiccentrecircle: 0x32A5,\n  ideographicclose: 0x3006,\n  ideographiccomma: 0x3001,\n  ideographiccommaleft: 0xFF64,\n  ideographiccongratulationparen: 0x3237,\n  ideographiccorrectcircle: 0x32A3,\n  ideographicearthparen: 0x322F,\n  ideographicenterpriseparen: 0x323D,\n  ideographicexcellentcircle: 0x329D,\n  ideographicfestivalparen: 0x3240,\n  ideographicfinancialcircle: 0x3296,\n  ideographicfinancialparen: 0x3236,\n  ideographicfireparen: 0x322B,\n  ideographichaveparen: 0x3232,\n  ideographichighcircle: 0x32A4,\n  ideographiciterationmark: 0x3005,\n  ideographiclaborcircle: 0x3298,\n  ideographiclaborparen: 0x3238,\n  ideographicleftcircle: 0x32A7,\n  ideographiclowcircle: 0x32A6,\n  ideographicmedicinecircle: 0x32A9,\n  ideographicmetalparen: 0x322E,\n  ideographicmoonparen: 0x322A,\n  ideographicnameparen: 0x3234,\n  ideographicperiod: 0x3002,\n  ideographicprintcircle: 0x329E,\n  ideographicreachparen: 0x3243,\n  ideographicrepresentparen: 0x3239,\n  ideographicresourceparen: 0x323E,\n  ideographicrightcircle: 0x32A8,\n  ideographicsecretcircle: 0x3299,\n  ideographicselfparen: 0x3242,\n  ideographicsocietyparen: 0x3233,\n  ideographicspace: 0x3000,\n  ideographicspecialparen: 0x3235,\n  ideographicstockparen: 0x3231,\n  ideographicstudyparen: 0x323B,\n  ideographicsunparen: 0x3230,\n  ideographicsuperviseparen: 0x323C,\n  ideographicwaterparen: 0x322C,\n  ideographicwoodparen: 0x322D,\n  ideographiczero: 0x3007,\n  ideographmetalcircle: 0x328E,\n  ideographmooncircle: 0x328A,\n  ideographnamecircle: 0x3294,\n  ideographsuncircle: 0x3290,\n  ideographwatercircle: 0x328C,\n  ideographwoodcircle: 0x328D,\n  ideva: 0x0907,\n  idieresis: 0x00EF,\n  idieresisacute: 0x1E2F,\n  idieresiscyrillic: 0x04E5,\n  idotbelow: 0x1ECB,\n  iebrevecyrillic: 0x04D7,\n  iecyrillic: 0x0435,\n  ieungacirclekorean: 0x3275,\n  ieungaparenkorean: 0x3215,\n  ieungcirclekorean: 0x3267,\n  ieungkorean: 0x3147,\n  ieungparenkorean: 0x3207,\n  igrave: 0x00EC,\n  igujarati: 0x0A87,\n  igurmukhi: 0x0A07,\n  ihiragana: 0x3044,\n  ihookabove: 0x1EC9,\n  iibengali: 0x0988,\n  iicyrillic: 0x0438,\n  iideva: 0x0908,\n  iigujarati: 0x0A88,\n  iigurmukhi: 0x0A08,\n  iimatragurmukhi: 0x0A40,\n  iinvertedbreve: 0x020B,\n  iishortcyrillic: 0x0439,\n  iivowelsignbengali: 0x09C0,\n  iivowelsigndeva: 0x0940,\n  iivowelsigngujarati: 0x0AC0,\n  ij: 0x0133,\n  ikatakana: 0x30A4,\n  ikatakanahalfwidth: 0xFF72,\n  ikorean: 0x3163,\n  ilde: 0x02DC,\n  iluyhebrew: 0x05AC,\n  imacron: 0x012B,\n  imacroncyrillic: 0x04E3,\n  imageorapproximatelyequal: 0x2253,\n  imatragurmukhi: 0x0A3F,\n  imonospace: 0xFF49,\n  increment: 0x2206,\n  infinity: 0x221E,\n  iniarmenian: 0x056B,\n  integral: 0x222B,\n  integralbottom: 0x2321,\n  integralbt: 0x2321,\n  integralex: 0xF8F5,\n  integraltop: 0x2320,\n  integraltp: 0x2320,\n  intersection: 0x2229,\n  intisquare: 0x3305,\n  invbullet: 0x25D8,\n  invcircle: 0x25D9,\n  invsmileface: 0x263B,\n  iocyrillic: 0x0451,\n  iogonek: 0x012F,\n  iota: 0x03B9,\n  iotadieresis: 0x03CA,\n  iotadieresistonos: 0x0390,\n  iotalatin: 0x0269,\n  iotatonos: 0x03AF,\n  iparen: 0x24A4,\n  irigurmukhi: 0x0A72,\n  ismallhiragana: 0x3043,\n  ismallkatakana: 0x30A3,\n  ismallkatakanahalfwidth: 0xFF68,\n  issharbengali: 0x09FA,\n  istroke: 0x0268,\n  isuperior: 0xF6ED,\n  iterationhiragana: 0x309D,\n  iterationkatakana: 0x30FD,\n  itilde: 0x0129,\n  itildebelow: 0x1E2D,\n  iubopomofo: 0x3129,\n  iucyrillic: 0x044E,\n  ivowelsignbengali: 0x09BF,\n  ivowelsigndeva: 0x093F,\n  ivowelsigngujarati: 0x0ABF,\n  izhitsacyrillic: 0x0475,\n  izhitsadblgravecyrillic: 0x0477,\n  j: 0x006A,\n  jaarmenian: 0x0571,\n  jabengali: 0x099C,\n  jadeva: 0x091C,\n  jagujarati: 0x0A9C,\n  jagurmukhi: 0x0A1C,\n  jbopomofo: 0x3110,\n  jcaron: 0x01F0,\n  jcircle: 0x24D9,\n  jcircumflex: 0x0135,\n  jcrossedtail: 0x029D,\n  jdotlessstroke: 0x025F,\n  jecyrillic: 0x0458,\n  jeemarabic: 0x062C,\n  jeemfinalarabic: 0xFE9E,\n  jeeminitialarabic: 0xFE9F,\n  jeemmedialarabic: 0xFEA0,\n  jeharabic: 0x0698,\n  jehfinalarabic: 0xFB8B,\n  jhabengali: 0x099D,\n  jhadeva: 0x091D,\n  jhagujarati: 0x0A9D,\n  jhagurmukhi: 0x0A1D,\n  jheharmenian: 0x057B,\n  jis: 0x3004,\n  jmonospace: 0xFF4A,\n  jparen: 0x24A5,\n  jsuperior: 0x02B2,\n  k: 0x006B,\n  kabashkircyrillic: 0x04A1,\n  kabengali: 0x0995,\n  kacute: 0x1E31,\n  kacyrillic: 0x043A,\n  kadescendercyrillic: 0x049B,\n  kadeva: 0x0915,\n  kaf: 0x05DB,\n  kafarabic: 0x0643,\n  kafdagesh: 0xFB3B,\n  kafdageshhebrew: 0xFB3B,\n  kaffinalarabic: 0xFEDA,\n  kafhebrew: 0x05DB,\n  kafinitialarabic: 0xFEDB,\n  kafmedialarabic: 0xFEDC,\n  kafrafehebrew: 0xFB4D,\n  kagujarati: 0x0A95,\n  kagurmukhi: 0x0A15,\n  kahiragana: 0x304B,\n  kahookcyrillic: 0x04C4,\n  kakatakana: 0x30AB,\n  kakatakanahalfwidth: 0xFF76,\n  kappa: 0x03BA,\n  kappasymbolgreek: 0x03F0,\n  kapyeounmieumkorean: 0x3171,\n  kapyeounphieuphkorean: 0x3184,\n  kapyeounpieupkorean: 0x3178,\n  kapyeounssangpieupkorean: 0x3179,\n  karoriisquare: 0x330D,\n  kashidaautoarabic: 0x0640,\n  kashidaautonosidebearingarabic: 0x0640,\n  kasmallkatakana: 0x30F5,\n  kasquare: 0x3384,\n  kasraarabic: 0x0650,\n  kasratanarabic: 0x064D,\n  kastrokecyrillic: 0x049F,\n  katahiraprolongmarkhalfwidth: 0xFF70,\n  kaverticalstrokecyrillic: 0x049D,\n  kbopomofo: 0x310E,\n  kcalsquare: 0x3389,\n  kcaron: 0x01E9,\n  kcedilla: 0x0137,\n  kcircle: 0x24DA,\n  kcommaaccent: 0x0137,\n  kdotbelow: 0x1E33,\n  keharmenian: 0x0584,\n  kehiragana: 0x3051,\n  kekatakana: 0x30B1,\n  kekatakanahalfwidth: 0xFF79,\n  kenarmenian: 0x056F,\n  kesmallkatakana: 0x30F6,\n  kgreenlandic: 0x0138,\n  khabengali: 0x0996,\n  khacyrillic: 0x0445,\n  khadeva: 0x0916,\n  khagujarati: 0x0A96,\n  khagurmukhi: 0x0A16,\n  khaharabic: 0x062E,\n  khahfinalarabic: 0xFEA6,\n  khahinitialarabic: 0xFEA7,\n  khahmedialarabic: 0xFEA8,\n  kheicoptic: 0x03E7,\n  khhadeva: 0x0959,\n  khhagurmukhi: 0x0A59,\n  khieukhacirclekorean: 0x3278,\n  khieukhaparenkorean: 0x3218,\n  khieukhcirclekorean: 0x326A,\n  khieukhkorean: 0x314B,\n  khieukhparenkorean: 0x320A,\n  khokhaithai: 0x0E02,\n  khokhonthai: 0x0E05,\n  khokhuatthai: 0x0E03,\n  khokhwaithai: 0x0E04,\n  khomutthai: 0x0E5B,\n  khook: 0x0199,\n  khorakhangthai: 0x0E06,\n  khzsquare: 0x3391,\n  kihiragana: 0x304D,\n  kikatakana: 0x30AD,\n  kikatakanahalfwidth: 0xFF77,\n  kiroguramusquare: 0x3315,\n  kiromeetorusquare: 0x3316,\n  kirosquare: 0x3314,\n  kiyeokacirclekorean: 0x326E,\n  kiyeokaparenkorean: 0x320E,\n  kiyeokcirclekorean: 0x3260,\n  kiyeokkorean: 0x3131,\n  kiyeokparenkorean: 0x3200,\n  kiyeoksioskorean: 0x3133,\n  kjecyrillic: 0x045C,\n  klinebelow: 0x1E35,\n  klsquare: 0x3398,\n  kmcubedsquare: 0x33A6,\n  kmonospace: 0xFF4B,\n  kmsquaredsquare: 0x33A2,\n  kohiragana: 0x3053,\n  kohmsquare: 0x33C0,\n  kokaithai: 0x0E01,\n  kokatakana: 0x30B3,\n  kokatakanahalfwidth: 0xFF7A,\n  kooposquare: 0x331E,\n  koppacyrillic: 0x0481,\n  koreanstandardsymbol: 0x327F,\n  koroniscmb: 0x0343,\n  kparen: 0x24A6,\n  kpasquare: 0x33AA,\n  ksicyrillic: 0x046F,\n  ktsquare: 0x33CF,\n  kturned: 0x029E,\n  kuhiragana: 0x304F,\n  kukatakana: 0x30AF,\n  kukatakanahalfwidth: 0xFF78,\n  kvsquare: 0x33B8,\n  kwsquare: 0x33BE,\n  l: 0x006C,\n  labengali: 0x09B2,\n  lacute: 0x013A,\n  ladeva: 0x0932,\n  lagujarati: 0x0AB2,\n  lagurmukhi: 0x0A32,\n  lakkhangyaothai: 0x0E45,\n  lamaleffinalarabic: 0xFEFC,\n  lamalefhamzaabovefinalarabic: 0xFEF8,\n  lamalefhamzaaboveisolatedarabic: 0xFEF7,\n  lamalefhamzabelowfinalarabic: 0xFEFA,\n  lamalefhamzabelowisolatedarabic: 0xFEF9,\n  lamalefisolatedarabic: 0xFEFB,\n  lamalefmaddaabovefinalarabic: 0xFEF6,\n  lamalefmaddaaboveisolatedarabic: 0xFEF5,\n  lamarabic: 0x0644,\n  lambda: 0x03BB,\n  lambdastroke: 0x019B,\n  lamed: 0x05DC,\n  lameddagesh: 0xFB3C,\n  lameddageshhebrew: 0xFB3C,\n  lamedhebrew: 0x05DC,\n  lamfinalarabic: 0xFEDE,\n  lamhahinitialarabic: 0xFCCA,\n  laminitialarabic: 0xFEDF,\n  lamjeeminitialarabic: 0xFCC9,\n  lamkhahinitialarabic: 0xFCCB,\n  lamlamhehisolatedarabic: 0xFDF2,\n  lammedialarabic: 0xFEE0,\n  lammeemhahinitialarabic: 0xFD88,\n  lammeeminitialarabic: 0xFCCC,\n  largecircle: 0x25EF,\n  lbar: 0x019A,\n  lbelt: 0x026C,\n  lbopomofo: 0x310C,\n  lcaron: 0x013E,\n  lcedilla: 0x013C,\n  lcircle: 0x24DB,\n  lcircumflexbelow: 0x1E3D,\n  lcommaaccent: 0x013C,\n  ldot: 0x0140,\n  ldotaccent: 0x0140,\n  ldotbelow: 0x1E37,\n  ldotbelowmacron: 0x1E39,\n  leftangleabovecmb: 0x031A,\n  lefttackbelowcmb: 0x0318,\n  less: 0x003C,\n  lessequal: 0x2264,\n  lessequalorgreater: 0x22DA,\n  lessmonospace: 0xFF1C,\n  lessorequivalent: 0x2272,\n  lessorgreater: 0x2276,\n  lessoverequal: 0x2266,\n  lesssmall: 0xFE64,\n  lezh: 0x026E,\n  lfblock: 0x258C,\n  lhookretroflex: 0x026D,\n  lira: 0x20A4,\n  liwnarmenian: 0x056C,\n  lj: 0x01C9,\n  ljecyrillic: 0x0459,\n  ll: 0xF6C0,\n  lladeva: 0x0933,\n  llagujarati: 0x0AB3,\n  llinebelow: 0x1E3B,\n  llladeva: 0x0934,\n  llvocalicbengali: 0x09E1,\n  llvocalicdeva: 0x0961,\n  llvocalicvowelsignbengali: 0x09E3,\n  llvocalicvowelsigndeva: 0x0963,\n  lmiddletilde: 0x026B,\n  lmonospace: 0xFF4C,\n  lmsquare: 0x33D0,\n  lochulathai: 0x0E2C,\n  logicaland: 0x2227,\n  logicalnot: 0x00AC,\n  logicalnotreversed: 0x2310,\n  logicalor: 0x2228,\n  lolingthai: 0x0E25,\n  longs: 0x017F,\n  lowlinecenterline: 0xFE4E,\n  lowlinecmb: 0x0332,\n  lowlinedashed: 0xFE4D,\n  lozenge: 0x25CA,\n  lparen: 0x24A7,\n  lslash: 0x0142,\n  lsquare: 0x2113,\n  lsuperior: 0xF6EE,\n  ltshade: 0x2591,\n  luthai: 0x0E26,\n  lvocalicbengali: 0x098C,\n  lvocalicdeva: 0x090C,\n  lvocalicvowelsignbengali: 0x09E2,\n  lvocalicvowelsigndeva: 0x0962,\n  lxsquare: 0x33D3,\n  m: 0x006D,\n  mabengali: 0x09AE,\n  macron: 0x00AF,\n  macronbelowcmb: 0x0331,\n  macroncmb: 0x0304,\n  macronlowmod: 0x02CD,\n  macronmonospace: 0xFFE3,\n  macute: 0x1E3F,\n  madeva: 0x092E,\n  magujarati: 0x0AAE,\n  magurmukhi: 0x0A2E,\n  mahapakhhebrew: 0x05A4,\n  mahapakhlefthebrew: 0x05A4,\n  mahiragana: 0x307E,\n  maichattawalowleftthai: 0xF895,\n  maichattawalowrightthai: 0xF894,\n  maichattawathai: 0x0E4B,\n  maichattawaupperleftthai: 0xF893,\n  maieklowleftthai: 0xF88C,\n  maieklowrightthai: 0xF88B,\n  maiekthai: 0x0E48,\n  maiekupperleftthai: 0xF88A,\n  maihanakatleftthai: 0xF884,\n  maihanakatthai: 0x0E31,\n  maitaikhuleftthai: 0xF889,\n  maitaikhuthai: 0x0E47,\n  maitholowleftthai: 0xF88F,\n  maitholowrightthai: 0xF88E,\n  maithothai: 0x0E49,\n  maithoupperleftthai: 0xF88D,\n  maitrilowleftthai: 0xF892,\n  maitrilowrightthai: 0xF891,\n  maitrithai: 0x0E4A,\n  maitriupperleftthai: 0xF890,\n  maiyamokthai: 0x0E46,\n  makatakana: 0x30DE,\n  makatakanahalfwidth: 0xFF8F,\n  male: 0x2642,\n  mansyonsquare: 0x3347,\n  maqafhebrew: 0x05BE,\n  mars: 0x2642,\n  masoracirclehebrew: 0x05AF,\n  masquare: 0x3383,\n  mbopomofo: 0x3107,\n  mbsquare: 0x33D4,\n  mcircle: 0x24DC,\n  mcubedsquare: 0x33A5,\n  mdotaccent: 0x1E41,\n  mdotbelow: 0x1E43,\n  meemarabic: 0x0645,\n  meemfinalarabic: 0xFEE2,\n  meeminitialarabic: 0xFEE3,\n  meemmedialarabic: 0xFEE4,\n  meemmeeminitialarabic: 0xFCD1,\n  meemmeemisolatedarabic: 0xFC48,\n  meetorusquare: 0x334D,\n  mehiragana: 0x3081,\n  meizierasquare: 0x337E,\n  mekatakana: 0x30E1,\n  mekatakanahalfwidth: 0xFF92,\n  mem: 0x05DE,\n  memdagesh: 0xFB3E,\n  memdageshhebrew: 0xFB3E,\n  memhebrew: 0x05DE,\n  menarmenian: 0x0574,\n  merkhahebrew: 0x05A5,\n  merkhakefulahebrew: 0x05A6,\n  merkhakefulalefthebrew: 0x05A6,\n  merkhalefthebrew: 0x05A5,\n  mhook: 0x0271,\n  mhzsquare: 0x3392,\n  middledotkatakanahalfwidth: 0xFF65,\n  middot: 0x00B7,\n  mieumacirclekorean: 0x3272,\n  mieumaparenkorean: 0x3212,\n  mieumcirclekorean: 0x3264,\n  mieumkorean: 0x3141,\n  mieumpansioskorean: 0x3170,\n  mieumparenkorean: 0x3204,\n  mieumpieupkorean: 0x316E,\n  mieumsioskorean: 0x316F,\n  mihiragana: 0x307F,\n  mikatakana: 0x30DF,\n  mikatakanahalfwidth: 0xFF90,\n  minus: 0x2212,\n  minusbelowcmb: 0x0320,\n  minuscircle: 0x2296,\n  minusmod: 0x02D7,\n  minusplus: 0x2213,\n  minute: 0x2032,\n  miribaarusquare: 0x334A,\n  mirisquare: 0x3349,\n  mlonglegturned: 0x0270,\n  mlsquare: 0x3396,\n  mmcubedsquare: 0x33A3,\n  mmonospace: 0xFF4D,\n  mmsquaredsquare: 0x339F,\n  mohiragana: 0x3082,\n  mohmsquare: 0x33C1,\n  mokatakana: 0x30E2,\n  mokatakanahalfwidth: 0xFF93,\n  molsquare: 0x33D6,\n  momathai: 0x0E21,\n  moverssquare: 0x33A7,\n  moverssquaredsquare: 0x33A8,\n  mparen: 0x24A8,\n  mpasquare: 0x33AB,\n  mssquare: 0x33B3,\n  msuperior: 0xF6EF,\n  mturned: 0x026F,\n  mu: 0x00B5,\n  mu1: 0x00B5,\n  muasquare: 0x3382,\n  muchgreater: 0x226B,\n  muchless: 0x226A,\n  mufsquare: 0x338C,\n  mugreek: 0x03BC,\n  mugsquare: 0x338D,\n  muhiragana: 0x3080,\n  mukatakana: 0x30E0,\n  mukatakanahalfwidth: 0xFF91,\n  mulsquare: 0x3395,\n  multiply: 0x00D7,\n  mumsquare: 0x339B,\n  munahhebrew: 0x05A3,\n  munahlefthebrew: 0x05A3,\n  musicalnote: 0x266A,\n  musicalnotedbl: 0x266B,\n  musicflatsign: 0x266D,\n  musicsharpsign: 0x266F,\n  mussquare: 0x33B2,\n  muvsquare: 0x33B6,\n  muwsquare: 0x33BC,\n  mvmegasquare: 0x33B9,\n  mvsquare: 0x33B7,\n  mwmegasquare: 0x33BF,\n  mwsquare: 0x33BD,\n  n: 0x006E,\n  nabengali: 0x09A8,\n  nabla: 0x2207,\n  nacute: 0x0144,\n  nadeva: 0x0928,\n  nagujarati: 0x0AA8,\n  nagurmukhi: 0x0A28,\n  nahiragana: 0x306A,\n  nakatakana: 0x30CA,\n  nakatakanahalfwidth: 0xFF85,\n  napostrophe: 0x0149,\n  nasquare: 0x3381,\n  nbopomofo: 0x310B,\n  nbspace: 0x00A0,\n  ncaron: 0x0148,\n  ncedilla: 0x0146,\n  ncircle: 0x24DD,\n  ncircumflexbelow: 0x1E4B,\n  ncommaaccent: 0x0146,\n  ndotaccent: 0x1E45,\n  ndotbelow: 0x1E47,\n  nehiragana: 0x306D,\n  nekatakana: 0x30CD,\n  nekatakanahalfwidth: 0xFF88,\n  newsheqelsign: 0x20AA,\n  nfsquare: 0x338B,\n  ngabengali: 0x0999,\n  ngadeva: 0x0919,\n  ngagujarati: 0x0A99,\n  ngagurmukhi: 0x0A19,\n  ngonguthai: 0x0E07,\n  nhiragana: 0x3093,\n  nhookleft: 0x0272,\n  nhookretroflex: 0x0273,\n  nieunacirclekorean: 0x326F,\n  nieunaparenkorean: 0x320F,\n  nieuncieuckorean: 0x3135,\n  nieuncirclekorean: 0x3261,\n  nieunhieuhkorean: 0x3136,\n  nieunkorean: 0x3134,\n  nieunpansioskorean: 0x3168,\n  nieunparenkorean: 0x3201,\n  nieunsioskorean: 0x3167,\n  nieuntikeutkorean: 0x3166,\n  nihiragana: 0x306B,\n  nikatakana: 0x30CB,\n  nikatakanahalfwidth: 0xFF86,\n  nikhahitleftthai: 0xF899,\n  nikhahitthai: 0x0E4D,\n  nine: 0x0039,\n  ninearabic: 0x0669,\n  ninebengali: 0x09EF,\n  ninecircle: 0x2468,\n  ninecircleinversesansserif: 0x2792,\n  ninedeva: 0x096F,\n  ninegujarati: 0x0AEF,\n  ninegurmukhi: 0x0A6F,\n  ninehackarabic: 0x0669,\n  ninehangzhou: 0x3029,\n  nineideographicparen: 0x3228,\n  nineinferior: 0x2089,\n  ninemonospace: 0xFF19,\n  nineoldstyle: 0xF739,\n  nineparen: 0x247C,\n  nineperiod: 0x2490,\n  ninepersian: 0x06F9,\n  nineroman: 0x2178,\n  ninesuperior: 0x2079,\n  nineteencircle: 0x2472,\n  nineteenparen: 0x2486,\n  nineteenperiod: 0x249A,\n  ninethai: 0x0E59,\n  nj: 0x01CC,\n  njecyrillic: 0x045A,\n  nkatakana: 0x30F3,\n  nkatakanahalfwidth: 0xFF9D,\n  nlegrightlong: 0x019E,\n  nlinebelow: 0x1E49,\n  nmonospace: 0xFF4E,\n  nmsquare: 0x339A,\n  nnabengali: 0x09A3,\n  nnadeva: 0x0923,\n  nnagujarati: 0x0AA3,\n  nnagurmukhi: 0x0A23,\n  nnnadeva: 0x0929,\n  nohiragana: 0x306E,\n  nokatakana: 0x30CE,\n  nokatakanahalfwidth: 0xFF89,\n  nonbreakingspace: 0x00A0,\n  nonenthai: 0x0E13,\n  nonuthai: 0x0E19,\n  noonarabic: 0x0646,\n  noonfinalarabic: 0xFEE6,\n  noonghunnaarabic: 0x06BA,\n  noonghunnafinalarabic: 0xFB9F,\n  nooninitialarabic: 0xFEE7,\n  noonjeeminitialarabic: 0xFCD2,\n  noonjeemisolatedarabic: 0xFC4B,\n  noonmedialarabic: 0xFEE8,\n  noonmeeminitialarabic: 0xFCD5,\n  noonmeemisolatedarabic: 0xFC4E,\n  noonnoonfinalarabic: 0xFC8D,\n  notcontains: 0x220C,\n  notelement: 0x2209,\n  notelementof: 0x2209,\n  notequal: 0x2260,\n  notgreater: 0x226F,\n  notgreaternorequal: 0x2271,\n  notgreaternorless: 0x2279,\n  notidentical: 0x2262,\n  notless: 0x226E,\n  notlessnorequal: 0x2270,\n  notparallel: 0x2226,\n  notprecedes: 0x2280,\n  notsubset: 0x2284,\n  notsucceeds: 0x2281,\n  notsuperset: 0x2285,\n  nowarmenian: 0x0576,\n  nparen: 0x24A9,\n  nssquare: 0x33B1,\n  nsuperior: 0x207F,\n  ntilde: 0x00F1,\n  nu: 0x03BD,\n  nuhiragana: 0x306C,\n  nukatakana: 0x30CC,\n  nukatakanahalfwidth: 0xFF87,\n  nuktabengali: 0x09BC,\n  nuktadeva: 0x093C,\n  nuktagujarati: 0x0ABC,\n  nuktagurmukhi: 0x0A3C,\n  numbersign: 0x0023,\n  numbersignmonospace: 0xFF03,\n  numbersignsmall: 0xFE5F,\n  numeralsigngreek: 0x0374,\n  numeralsignlowergreek: 0x0375,\n  numero: 0x2116,\n  nun: 0x05E0,\n  nundagesh: 0xFB40,\n  nundageshhebrew: 0xFB40,\n  nunhebrew: 0x05E0,\n  nvsquare: 0x33B5,\n  nwsquare: 0x33BB,\n  nyabengali: 0x099E,\n  nyadeva: 0x091E,\n  nyagujarati: 0x0A9E,\n  nyagurmukhi: 0x0A1E,\n  o: 0x006F,\n  oacute: 0x00F3,\n  oangthai: 0x0E2D,\n  obarred: 0x0275,\n  obarredcyrillic: 0x04E9,\n  obarreddieresiscyrillic: 0x04EB,\n  obengali: 0x0993,\n  obopomofo: 0x311B,\n  obreve: 0x014F,\n  ocandradeva: 0x0911,\n  ocandragujarati: 0x0A91,\n  ocandravowelsigndeva: 0x0949,\n  ocandravowelsigngujarati: 0x0AC9,\n  ocaron: 0x01D2,\n  ocircle: 0x24DE,\n  ocircumflex: 0x00F4,\n  ocircumflexacute: 0x1ED1,\n  ocircumflexdotbelow: 0x1ED9,\n  ocircumflexgrave: 0x1ED3,\n  ocircumflexhookabove: 0x1ED5,\n  ocircumflextilde: 0x1ED7,\n  ocyrillic: 0x043E,\n  odblacute: 0x0151,\n  odblgrave: 0x020D,\n  odeva: 0x0913,\n  odieresis: 0x00F6,\n  odieresiscyrillic: 0x04E7,\n  odotbelow: 0x1ECD,\n  oe: 0x0153,\n  oekorean: 0x315A,\n  ogonek: 0x02DB,\n  ogonekcmb: 0x0328,\n  ograve: 0x00F2,\n  ogujarati: 0x0A93,\n  oharmenian: 0x0585,\n  ohiragana: 0x304A,\n  ohookabove: 0x1ECF,\n  ohorn: 0x01A1,\n  ohornacute: 0x1EDB,\n  ohorndotbelow: 0x1EE3,\n  ohorngrave: 0x1EDD,\n  ohornhookabove: 0x1EDF,\n  ohorntilde: 0x1EE1,\n  ohungarumlaut: 0x0151,\n  oi: 0x01A3,\n  oinvertedbreve: 0x020F,\n  okatakana: 0x30AA,\n  okatakanahalfwidth: 0xFF75,\n  okorean: 0x3157,\n  olehebrew: 0x05AB,\n  omacron: 0x014D,\n  omacronacute: 0x1E53,\n  omacrongrave: 0x1E51,\n  omdeva: 0x0950,\n  omega: 0x03C9,\n  omega1: 0x03D6,\n  omegacyrillic: 0x0461,\n  omegalatinclosed: 0x0277,\n  omegaroundcyrillic: 0x047B,\n  omegatitlocyrillic: 0x047D,\n  omegatonos: 0x03CE,\n  omgujarati: 0x0AD0,\n  omicron: 0x03BF,\n  omicrontonos: 0x03CC,\n  omonospace: 0xFF4F,\n  one: 0x0031,\n  onearabic: 0x0661,\n  onebengali: 0x09E7,\n  onecircle: 0x2460,\n  onecircleinversesansserif: 0x278A,\n  onedeva: 0x0967,\n  onedotenleader: 0x2024,\n  oneeighth: 0x215B,\n  onefitted: 0xF6DC,\n  onegujarati: 0x0AE7,\n  onegurmukhi: 0x0A67,\n  onehackarabic: 0x0661,\n  onehalf: 0x00BD,\n  onehangzhou: 0x3021,\n  oneideographicparen: 0x3220,\n  oneinferior: 0x2081,\n  onemonospace: 0xFF11,\n  onenumeratorbengali: 0x09F4,\n  oneoldstyle: 0xF731,\n  oneparen: 0x2474,\n  oneperiod: 0x2488,\n  onepersian: 0x06F1,\n  onequarter: 0x00BC,\n  oneroman: 0x2170,\n  onesuperior: 0x00B9,\n  onethai: 0x0E51,\n  onethird: 0x2153,\n  oogonek: 0x01EB,\n  oogonekmacron: 0x01ED,\n  oogurmukhi: 0x0A13,\n  oomatragurmukhi: 0x0A4B,\n  oopen: 0x0254,\n  oparen: 0x24AA,\n  openbullet: 0x25E6,\n  option: 0x2325,\n  ordfeminine: 0x00AA,\n  ordmasculine: 0x00BA,\n  orthogonal: 0x221F,\n  oshortdeva: 0x0912,\n  oshortvowelsigndeva: 0x094A,\n  oslash: 0x00F8,\n  oslashacute: 0x01FF,\n  osmallhiragana: 0x3049,\n  osmallkatakana: 0x30A9,\n  osmallkatakanahalfwidth: 0xFF6B,\n  ostrokeacute: 0x01FF,\n  osuperior: 0xF6F0,\n  otcyrillic: 0x047F,\n  otilde: 0x00F5,\n  otildeacute: 0x1E4D,\n  otildedieresis: 0x1E4F,\n  oubopomofo: 0x3121,\n  overline: 0x203E,\n  overlinecenterline: 0xFE4A,\n  overlinecmb: 0x0305,\n  overlinedashed: 0xFE49,\n  overlinedblwavy: 0xFE4C,\n  overlinewavy: 0xFE4B,\n  overscore: 0x00AF,\n  ovowelsignbengali: 0x09CB,\n  ovowelsigndeva: 0x094B,\n  ovowelsigngujarati: 0x0ACB,\n  p: 0x0070,\n  paampssquare: 0x3380,\n  paasentosquare: 0x332B,\n  pabengali: 0x09AA,\n  pacute: 0x1E55,\n  padeva: 0x092A,\n  pagedown: 0x21DF,\n  pageup: 0x21DE,\n  pagujarati: 0x0AAA,\n  pagurmukhi: 0x0A2A,\n  pahiragana: 0x3071,\n  paiyannoithai: 0x0E2F,\n  pakatakana: 0x30D1,\n  palatalizationcyrilliccmb: 0x0484,\n  palochkacyrillic: 0x04C0,\n  pansioskorean: 0x317F,\n  paragraph: 0x00B6,\n  parallel: 0x2225,\n  parenleft: 0x0028,\n  parenleftaltonearabic: 0xFD3E,\n  parenleftbt: 0xF8ED,\n  parenleftex: 0xF8EC,\n  parenleftinferior: 0x208D,\n  parenleftmonospace: 0xFF08,\n  parenleftsmall: 0xFE59,\n  parenleftsuperior: 0x207D,\n  parenlefttp: 0xF8EB,\n  parenleftvertical: 0xFE35,\n  parenright: 0x0029,\n  parenrightaltonearabic: 0xFD3F,\n  parenrightbt: 0xF8F8,\n  parenrightex: 0xF8F7,\n  parenrightinferior: 0x208E,\n  parenrightmonospace: 0xFF09,\n  parenrightsmall: 0xFE5A,\n  parenrightsuperior: 0x207E,\n  parenrighttp: 0xF8F6,\n  parenrightvertical: 0xFE36,\n  partialdiff: 0x2202,\n  paseqhebrew: 0x05C0,\n  pashtahebrew: 0x0599,\n  pasquare: 0x33A9,\n  patah: 0x05B7,\n  patah11: 0x05B7,\n  patah1d: 0x05B7,\n  patah2a: 0x05B7,\n  patahhebrew: 0x05B7,\n  patahnarrowhebrew: 0x05B7,\n  patahquarterhebrew: 0x05B7,\n  patahwidehebrew: 0x05B7,\n  pazerhebrew: 0x05A1,\n  pbopomofo: 0x3106,\n  pcircle: 0x24DF,\n  pdotaccent: 0x1E57,\n  pe: 0x05E4,\n  pecyrillic: 0x043F,\n  pedagesh: 0xFB44,\n  pedageshhebrew: 0xFB44,\n  peezisquare: 0x333B,\n  pefinaldageshhebrew: 0xFB43,\n  peharabic: 0x067E,\n  peharmenian: 0x057A,\n  pehebrew: 0x05E4,\n  pehfinalarabic: 0xFB57,\n  pehinitialarabic: 0xFB58,\n  pehiragana: 0x307A,\n  pehmedialarabic: 0xFB59,\n  pekatakana: 0x30DA,\n  pemiddlehookcyrillic: 0x04A7,\n  perafehebrew: 0xFB4E,\n  percent: 0x0025,\n  percentarabic: 0x066A,\n  percentmonospace: 0xFF05,\n  percentsmall: 0xFE6A,\n  period: 0x002E,\n  periodarmenian: 0x0589,\n  periodcentered: 0x00B7,\n  periodhalfwidth: 0xFF61,\n  periodinferior: 0xF6E7,\n  periodmonospace: 0xFF0E,\n  periodsmall: 0xFE52,\n  periodsuperior: 0xF6E8,\n  perispomenigreekcmb: 0x0342,\n  perpendicular: 0x22A5,\n  perthousand: 0x2030,\n  peseta: 0x20A7,\n  pfsquare: 0x338A,\n  phabengali: 0x09AB,\n  phadeva: 0x092B,\n  phagujarati: 0x0AAB,\n  phagurmukhi: 0x0A2B,\n  phi: 0x03C6,\n  phi1: 0x03D5,\n  phieuphacirclekorean: 0x327A,\n  phieuphaparenkorean: 0x321A,\n  phieuphcirclekorean: 0x326C,\n  phieuphkorean: 0x314D,\n  phieuphparenkorean: 0x320C,\n  philatin: 0x0278,\n  phinthuthai: 0x0E3A,\n  phisymbolgreek: 0x03D5,\n  phook: 0x01A5,\n  phophanthai: 0x0E1E,\n  phophungthai: 0x0E1C,\n  phosamphaothai: 0x0E20,\n  pi: 0x03C0,\n  pieupacirclekorean: 0x3273,\n  pieupaparenkorean: 0x3213,\n  pieupcieuckorean: 0x3176,\n  pieupcirclekorean: 0x3265,\n  pieupkiyeokkorean: 0x3172,\n  pieupkorean: 0x3142,\n  pieupparenkorean: 0x3205,\n  pieupsioskiyeokkorean: 0x3174,\n  pieupsioskorean: 0x3144,\n  pieupsiostikeutkorean: 0x3175,\n  pieupthieuthkorean: 0x3177,\n  pieuptikeutkorean: 0x3173,\n  pihiragana: 0x3074,\n  pikatakana: 0x30D4,\n  pisymbolgreek: 0x03D6,\n  piwrarmenian: 0x0583,\n  plus: 0x002B,\n  plusbelowcmb: 0x031F,\n  pluscircle: 0x2295,\n  plusminus: 0x00B1,\n  plusmod: 0x02D6,\n  plusmonospace: 0xFF0B,\n  plussmall: 0xFE62,\n  plussuperior: 0x207A,\n  pmonospace: 0xFF50,\n  pmsquare: 0x33D8,\n  pohiragana: 0x307D,\n  pointingindexdownwhite: 0x261F,\n  pointingindexleftwhite: 0x261C,\n  pointingindexrightwhite: 0x261E,\n  pointingindexupwhite: 0x261D,\n  pokatakana: 0x30DD,\n  poplathai: 0x0E1B,\n  postalmark: 0x3012,\n  postalmarkface: 0x3020,\n  pparen: 0x24AB,\n  precedes: 0x227A,\n  prescription: 0x211E,\n  primemod: 0x02B9,\n  primereversed: 0x2035,\n  product: 0x220F,\n  projective: 0x2305,\n  prolongedkana: 0x30FC,\n  propellor: 0x2318,\n  propersubset: 0x2282,\n  propersuperset: 0x2283,\n  proportion: 0x2237,\n  proportional: 0x221D,\n  psi: 0x03C8,\n  psicyrillic: 0x0471,\n  psilipneumatacyrilliccmb: 0x0486,\n  pssquare: 0x33B0,\n  puhiragana: 0x3077,\n  pukatakana: 0x30D7,\n  pvsquare: 0x33B4,\n  pwsquare: 0x33BA,\n  q: 0x0071,\n  qadeva: 0x0958,\n  qadmahebrew: 0x05A8,\n  qafarabic: 0x0642,\n  qaffinalarabic: 0xFED6,\n  qafinitialarabic: 0xFED7,\n  qafmedialarabic: 0xFED8,\n  qamats: 0x05B8,\n  qamats10: 0x05B8,\n  qamats1a: 0x05B8,\n  qamats1c: 0x05B8,\n  qamats27: 0x05B8,\n  qamats29: 0x05B8,\n  qamats33: 0x05B8,\n  qamatsde: 0x05B8,\n  qamatshebrew: 0x05B8,\n  qamatsnarrowhebrew: 0x05B8,\n  qamatsqatanhebrew: 0x05B8,\n  qamatsqatannarrowhebrew: 0x05B8,\n  qamatsqatanquarterhebrew: 0x05B8,\n  qamatsqatanwidehebrew: 0x05B8,\n  qamatsquarterhebrew: 0x05B8,\n  qamatswidehebrew: 0x05B8,\n  qarneyparahebrew: 0x059F,\n  qbopomofo: 0x3111,\n  qcircle: 0x24E0,\n  qhook: 0x02A0,\n  qmonospace: 0xFF51,\n  qof: 0x05E7,\n  qofdagesh: 0xFB47,\n  qofdageshhebrew: 0xFB47,\n  qofhebrew: 0x05E7,\n  qparen: 0x24AC,\n  quarternote: 0x2669,\n  qubuts: 0x05BB,\n  qubuts18: 0x05BB,\n  qubuts25: 0x05BB,\n  qubuts31: 0x05BB,\n  qubutshebrew: 0x05BB,\n  qubutsnarrowhebrew: 0x05BB,\n  qubutsquarterhebrew: 0x05BB,\n  qubutswidehebrew: 0x05BB,\n  question: 0x003F,\n  questionarabic: 0x061F,\n  questionarmenian: 0x055E,\n  questiondown: 0x00BF,\n  questiondownsmall: 0xF7BF,\n  questiongreek: 0x037E,\n  questionmonospace: 0xFF1F,\n  questionsmall: 0xF73F,\n  quotedbl: 0x0022,\n  quotedblbase: 0x201E,\n  quotedblleft: 0x201C,\n  quotedblmonospace: 0xFF02,\n  quotedblprime: 0x301E,\n  quotedblprimereversed: 0x301D,\n  quotedblright: 0x201D,\n  quoteleft: 0x2018,\n  quoteleftreversed: 0x201B,\n  quotereversed: 0x201B,\n  quoteright: 0x2019,\n  quoterightn: 0x0149,\n  quotesinglbase: 0x201A,\n  quotesingle: 0x0027,\n  quotesinglemonospace: 0xFF07,\n  r: 0x0072,\n  raarmenian: 0x057C,\n  rabengali: 0x09B0,\n  racute: 0x0155,\n  radeva: 0x0930,\n  radical: 0x221A,\n  radicalex: 0xF8E5,\n  radoverssquare: 0x33AE,\n  radoverssquaredsquare: 0x33AF,\n  radsquare: 0x33AD,\n  rafe: 0x05BF,\n  rafehebrew: 0x05BF,\n  ragujarati: 0x0AB0,\n  ragurmukhi: 0x0A30,\n  rahiragana: 0x3089,\n  rakatakana: 0x30E9,\n  rakatakanahalfwidth: 0xFF97,\n  ralowerdiagonalbengali: 0x09F1,\n  ramiddlediagonalbengali: 0x09F0,\n  ramshorn: 0x0264,\n  ratio: 0x2236,\n  rbopomofo: 0x3116,\n  rcaron: 0x0159,\n  rcedilla: 0x0157,\n  rcircle: 0x24E1,\n  rcommaaccent: 0x0157,\n  rdblgrave: 0x0211,\n  rdotaccent: 0x1E59,\n  rdotbelow: 0x1E5B,\n  rdotbelowmacron: 0x1E5D,\n  referencemark: 0x203B,\n  reflexsubset: 0x2286,\n  reflexsuperset: 0x2287,\n  registered: 0x00AE,\n  registersans: 0xF8E8,\n  registerserif: 0xF6DA,\n  reharabic: 0x0631,\n  reharmenian: 0x0580,\n  rehfinalarabic: 0xFEAE,\n  rehiragana: 0x308C,\n  rekatakana: 0x30EC,\n  rekatakanahalfwidth: 0xFF9A,\n  resh: 0x05E8,\n  reshdageshhebrew: 0xFB48,\n  reshhebrew: 0x05E8,\n  reversedtilde: 0x223D,\n  reviahebrew: 0x0597,\n  reviamugrashhebrew: 0x0597,\n  revlogicalnot: 0x2310,\n  rfishhook: 0x027E,\n  rfishhookreversed: 0x027F,\n  rhabengali: 0x09DD,\n  rhadeva: 0x095D,\n  rho: 0x03C1,\n  rhook: 0x027D,\n  rhookturned: 0x027B,\n  rhookturnedsuperior: 0x02B5,\n  rhosymbolgreek: 0x03F1,\n  rhotichookmod: 0x02DE,\n  rieulacirclekorean: 0x3271,\n  rieulaparenkorean: 0x3211,\n  rieulcirclekorean: 0x3263,\n  rieulhieuhkorean: 0x3140,\n  rieulkiyeokkorean: 0x313A,\n  rieulkiyeoksioskorean: 0x3169,\n  rieulkorean: 0x3139,\n  rieulmieumkorean: 0x313B,\n  rieulpansioskorean: 0x316C,\n  rieulparenkorean: 0x3203,\n  rieulphieuphkorean: 0x313F,\n  rieulpieupkorean: 0x313C,\n  rieulpieupsioskorean: 0x316B,\n  rieulsioskorean: 0x313D,\n  rieulthieuthkorean: 0x313E,\n  rieultikeutkorean: 0x316A,\n  rieulyeorinhieuhkorean: 0x316D,\n  rightangle: 0x221F,\n  righttackbelowcmb: 0x0319,\n  righttriangle: 0x22BF,\n  rihiragana: 0x308A,\n  rikatakana: 0x30EA,\n  rikatakanahalfwidth: 0xFF98,\n  ring: 0x02DA,\n  ringbelowcmb: 0x0325,\n  ringcmb: 0x030A,\n  ringhalfleft: 0x02BF,\n  ringhalfleftarmenian: 0x0559,\n  ringhalfleftbelowcmb: 0x031C,\n  ringhalfleftcentered: 0x02D3,\n  ringhalfright: 0x02BE,\n  ringhalfrightbelowcmb: 0x0339,\n  ringhalfrightcentered: 0x02D2,\n  rinvertedbreve: 0x0213,\n  rittorusquare: 0x3351,\n  rlinebelow: 0x1E5F,\n  rlongleg: 0x027C,\n  rlonglegturned: 0x027A,\n  rmonospace: 0xFF52,\n  rohiragana: 0x308D,\n  rokatakana: 0x30ED,\n  rokatakanahalfwidth: 0xFF9B,\n  roruathai: 0x0E23,\n  rparen: 0x24AD,\n  rrabengali: 0x09DC,\n  rradeva: 0x0931,\n  rragurmukhi: 0x0A5C,\n  rreharabic: 0x0691,\n  rrehfinalarabic: 0xFB8D,\n  rrvocalicbengali: 0x09E0,\n  rrvocalicdeva: 0x0960,\n  rrvocalicgujarati: 0x0AE0,\n  rrvocalicvowelsignbengali: 0x09C4,\n  rrvocalicvowelsigndeva: 0x0944,\n  rrvocalicvowelsigngujarati: 0x0AC4,\n  rsuperior: 0xF6F1,\n  rtblock: 0x2590,\n  rturned: 0x0279,\n  rturnedsuperior: 0x02B4,\n  ruhiragana: 0x308B,\n  rukatakana: 0x30EB,\n  rukatakanahalfwidth: 0xFF99,\n  rupeemarkbengali: 0x09F2,\n  rupeesignbengali: 0x09F3,\n  rupiah: 0xF6DD,\n  ruthai: 0x0E24,\n  rvocalicbengali: 0x098B,\n  rvocalicdeva: 0x090B,\n  rvocalicgujarati: 0x0A8B,\n  rvocalicvowelsignbengali: 0x09C3,\n  rvocalicvowelsigndeva: 0x0943,\n  rvocalicvowelsigngujarati: 0x0AC3,\n  s: 0x0073,\n  sabengali: 0x09B8,\n  sacute: 0x015B,\n  sacutedotaccent: 0x1E65,\n  sadarabic: 0x0635,\n  sadeva: 0x0938,\n  sadfinalarabic: 0xFEBA,\n  sadinitialarabic: 0xFEBB,\n  sadmedialarabic: 0xFEBC,\n  sagujarati: 0x0AB8,\n  sagurmukhi: 0x0A38,\n  sahiragana: 0x3055,\n  sakatakana: 0x30B5,\n  sakatakanahalfwidth: 0xFF7B,\n  sallallahoualayhewasallamarabic: 0xFDFA,\n  samekh: 0x05E1,\n  samekhdagesh: 0xFB41,\n  samekhdageshhebrew: 0xFB41,\n  samekhhebrew: 0x05E1,\n  saraaathai: 0x0E32,\n  saraaethai: 0x0E41,\n  saraaimaimalaithai: 0x0E44,\n  saraaimaimuanthai: 0x0E43,\n  saraamthai: 0x0E33,\n  saraathai: 0x0E30,\n  saraethai: 0x0E40,\n  saraiileftthai: 0xF886,\n  saraiithai: 0x0E35,\n  saraileftthai: 0xF885,\n  saraithai: 0x0E34,\n  saraothai: 0x0E42,\n  saraueeleftthai: 0xF888,\n  saraueethai: 0x0E37,\n  saraueleftthai: 0xF887,\n  sarauethai: 0x0E36,\n  sarauthai: 0x0E38,\n  sarauuthai: 0x0E39,\n  sbopomofo: 0x3119,\n  scaron: 0x0161,\n  scarondotaccent: 0x1E67,\n  scedilla: 0x015F,\n  schwa: 0x0259,\n  schwacyrillic: 0x04D9,\n  schwadieresiscyrillic: 0x04DB,\n  schwahook: 0x025A,\n  scircle: 0x24E2,\n  scircumflex: 0x015D,\n  scommaaccent: 0x0219,\n  sdotaccent: 0x1E61,\n  sdotbelow: 0x1E63,\n  sdotbelowdotaccent: 0x1E69,\n  seagullbelowcmb: 0x033C,\n  second: 0x2033,\n  secondtonechinese: 0x02CA,\n  section: 0x00A7,\n  seenarabic: 0x0633,\n  seenfinalarabic: 0xFEB2,\n  seeninitialarabic: 0xFEB3,\n  seenmedialarabic: 0xFEB4,\n  segol: 0x05B6,\n  segol13: 0x05B6,\n  segol1f: 0x05B6,\n  segol2c: 0x05B6,\n  segolhebrew: 0x05B6,\n  segolnarrowhebrew: 0x05B6,\n  segolquarterhebrew: 0x05B6,\n  segoltahebrew: 0x0592,\n  segolwidehebrew: 0x05B6,\n  seharmenian: 0x057D,\n  sehiragana: 0x305B,\n  sekatakana: 0x30BB,\n  sekatakanahalfwidth: 0xFF7E,\n  semicolon: 0x003B,\n  semicolonarabic: 0x061B,\n  semicolonmonospace: 0xFF1B,\n  semicolonsmall: 0xFE54,\n  semivoicedmarkkana: 0x309C,\n  semivoicedmarkkanahalfwidth: 0xFF9F,\n  sentisquare: 0x3322,\n  sentosquare: 0x3323,\n  seven: 0x0037,\n  sevenarabic: 0x0667,\n  sevenbengali: 0x09ED,\n  sevencircle: 0x2466,\n  sevencircleinversesansserif: 0x2790,\n  sevendeva: 0x096D,\n  seveneighths: 0x215E,\n  sevengujarati: 0x0AED,\n  sevengurmukhi: 0x0A6D,\n  sevenhackarabic: 0x0667,\n  sevenhangzhou: 0x3027,\n  sevenideographicparen: 0x3226,\n  seveninferior: 0x2087,\n  sevenmonospace: 0xFF17,\n  sevenoldstyle: 0xF737,\n  sevenparen: 0x247A,\n  sevenperiod: 0x248E,\n  sevenpersian: 0x06F7,\n  sevenroman: 0x2176,\n  sevensuperior: 0x2077,\n  seventeencircle: 0x2470,\n  seventeenparen: 0x2484,\n  seventeenperiod: 0x2498,\n  seventhai: 0x0E57,\n  sfthyphen: 0x00AD,\n  shaarmenian: 0x0577,\n  shabengali: 0x09B6,\n  shacyrillic: 0x0448,\n  shaddaarabic: 0x0651,\n  shaddadammaarabic: 0xFC61,\n  shaddadammatanarabic: 0xFC5E,\n  shaddafathaarabic: 0xFC60,\n  shaddakasraarabic: 0xFC62,\n  shaddakasratanarabic: 0xFC5F,\n  shade: 0x2592,\n  shadedark: 0x2593,\n  shadelight: 0x2591,\n  shademedium: 0x2592,\n  shadeva: 0x0936,\n  shagujarati: 0x0AB6,\n  shagurmukhi: 0x0A36,\n  shalshelethebrew: 0x0593,\n  shbopomofo: 0x3115,\n  shchacyrillic: 0x0449,\n  sheenarabic: 0x0634,\n  sheenfinalarabic: 0xFEB6,\n  sheeninitialarabic: 0xFEB7,\n  sheenmedialarabic: 0xFEB8,\n  sheicoptic: 0x03E3,\n  sheqel: 0x20AA,\n  sheqelhebrew: 0x20AA,\n  sheva: 0x05B0,\n  sheva115: 0x05B0,\n  sheva15: 0x05B0,\n  sheva22: 0x05B0,\n  sheva2e: 0x05B0,\n  shevahebrew: 0x05B0,\n  shevanarrowhebrew: 0x05B0,\n  shevaquarterhebrew: 0x05B0,\n  shevawidehebrew: 0x05B0,\n  shhacyrillic: 0x04BB,\n  shimacoptic: 0x03ED,\n  shin: 0x05E9,\n  shindagesh: 0xFB49,\n  shindageshhebrew: 0xFB49,\n  shindageshshindot: 0xFB2C,\n  shindageshshindothebrew: 0xFB2C,\n  shindageshsindot: 0xFB2D,\n  shindageshsindothebrew: 0xFB2D,\n  shindothebrew: 0x05C1,\n  shinhebrew: 0x05E9,\n  shinshindot: 0xFB2A,\n  shinshindothebrew: 0xFB2A,\n  shinsindot: 0xFB2B,\n  shinsindothebrew: 0xFB2B,\n  shook: 0x0282,\n  sigma: 0x03C3,\n  sigma1: 0x03C2,\n  sigmafinal: 0x03C2,\n  sigmalunatesymbolgreek: 0x03F2,\n  sihiragana: 0x3057,\n  sikatakana: 0x30B7,\n  sikatakanahalfwidth: 0xFF7C,\n  siluqhebrew: 0x05BD,\n  siluqlefthebrew: 0x05BD,\n  similar: 0x223C,\n  sindothebrew: 0x05C2,\n  siosacirclekorean: 0x3274,\n  siosaparenkorean: 0x3214,\n  sioscieuckorean: 0x317E,\n  sioscirclekorean: 0x3266,\n  sioskiyeokkorean: 0x317A,\n  sioskorean: 0x3145,\n  siosnieunkorean: 0x317B,\n  siosparenkorean: 0x3206,\n  siospieupkorean: 0x317D,\n  siostikeutkorean: 0x317C,\n  six: 0x0036,\n  sixarabic: 0x0666,\n  sixbengali: 0x09EC,\n  sixcircle: 0x2465,\n  sixcircleinversesansserif: 0x278F,\n  sixdeva: 0x096C,\n  sixgujarati: 0x0AEC,\n  sixgurmukhi: 0x0A6C,\n  sixhackarabic: 0x0666,\n  sixhangzhou: 0x3026,\n  sixideographicparen: 0x3225,\n  sixinferior: 0x2086,\n  sixmonospace: 0xFF16,\n  sixoldstyle: 0xF736,\n  sixparen: 0x2479,\n  sixperiod: 0x248D,\n  sixpersian: 0x06F6,\n  sixroman: 0x2175,\n  sixsuperior: 0x2076,\n  sixteencircle: 0x246F,\n  sixteencurrencydenominatorbengali: 0x09F9,\n  sixteenparen: 0x2483,\n  sixteenperiod: 0x2497,\n  sixthai: 0x0E56,\n  slash: 0x002F,\n  slashmonospace: 0xFF0F,\n  slong: 0x017F,\n  slongdotaccent: 0x1E9B,\n  smileface: 0x263A,\n  smonospace: 0xFF53,\n  sofpasuqhebrew: 0x05C3,\n  softhyphen: 0x00AD,\n  softsigncyrillic: 0x044C,\n  sohiragana: 0x305D,\n  sokatakana: 0x30BD,\n  sokatakanahalfwidth: 0xFF7F,\n  soliduslongoverlaycmb: 0x0338,\n  solidusshortoverlaycmb: 0x0337,\n  sorusithai: 0x0E29,\n  sosalathai: 0x0E28,\n  sosothai: 0x0E0B,\n  sosuathai: 0x0E2A,\n  space: 0x0020,\n  spacehackarabic: 0x0020,\n  spade: 0x2660,\n  spadesuitblack: 0x2660,\n  spadesuitwhite: 0x2664,\n  sparen: 0x24AE,\n  squarebelowcmb: 0x033B,\n  squarecc: 0x33C4,\n  squarecm: 0x339D,\n  squarediagonalcrosshatchfill: 0x25A9,\n  squarehorizontalfill: 0x25A4,\n  squarekg: 0x338F,\n  squarekm: 0x339E,\n  squarekmcapital: 0x33CE,\n  squareln: 0x33D1,\n  squarelog: 0x33D2,\n  squaremg: 0x338E,\n  squaremil: 0x33D5,\n  squaremm: 0x339C,\n  squaremsquared: 0x33A1,\n  squareorthogonalcrosshatchfill: 0x25A6,\n  squareupperlefttolowerrightfill: 0x25A7,\n  squareupperrighttolowerleftfill: 0x25A8,\n  squareverticalfill: 0x25A5,\n  squarewhitewithsmallblack: 0x25A3,\n  srsquare: 0x33DB,\n  ssabengali: 0x09B7,\n  ssadeva: 0x0937,\n  ssagujarati: 0x0AB7,\n  ssangcieuckorean: 0x3149,\n  ssanghieuhkorean: 0x3185,\n  ssangieungkorean: 0x3180,\n  ssangkiyeokkorean: 0x3132,\n  ssangnieunkorean: 0x3165,\n  ssangpieupkorean: 0x3143,\n  ssangsioskorean: 0x3146,\n  ssangtikeutkorean: 0x3138,\n  ssuperior: 0xF6F2,\n  sterling: 0x00A3,\n  sterlingmonospace: 0xFFE1,\n  strokelongoverlaycmb: 0x0336,\n  strokeshortoverlaycmb: 0x0335,\n  subset: 0x2282,\n  subsetnotequal: 0x228A,\n  subsetorequal: 0x2286,\n  succeeds: 0x227B,\n  suchthat: 0x220B,\n  suhiragana: 0x3059,\n  sukatakana: 0x30B9,\n  sukatakanahalfwidth: 0xFF7D,\n  sukunarabic: 0x0652,\n  summation: 0x2211,\n  sun: 0x263C,\n  superset: 0x2283,\n  supersetnotequal: 0x228B,\n  supersetorequal: 0x2287,\n  svsquare: 0x33DC,\n  syouwaerasquare: 0x337C,\n  t: 0x0074,\n  tabengali: 0x09A4,\n  tackdown: 0x22A4,\n  tackleft: 0x22A3,\n  tadeva: 0x0924,\n  tagujarati: 0x0AA4,\n  tagurmukhi: 0x0A24,\n  taharabic: 0x0637,\n  tahfinalarabic: 0xFEC2,\n  tahinitialarabic: 0xFEC3,\n  tahiragana: 0x305F,\n  tahmedialarabic: 0xFEC4,\n  taisyouerasquare: 0x337D,\n  takatakana: 0x30BF,\n  takatakanahalfwidth: 0xFF80,\n  tatweelarabic: 0x0640,\n  tau: 0x03C4,\n  tav: 0x05EA,\n  tavdages: 0xFB4A,\n  tavdagesh: 0xFB4A,\n  tavdageshhebrew: 0xFB4A,\n  tavhebrew: 0x05EA,\n  tbar: 0x0167,\n  tbopomofo: 0x310A,\n  tcaron: 0x0165,\n  tccurl: 0x02A8,\n  tcedilla: 0x0163,\n  tcheharabic: 0x0686,\n  tchehfinalarabic: 0xFB7B,\n  tchehinitialarabic: 0xFB7C,\n  tchehmedialarabic: 0xFB7D,\n  tcircle: 0x24E3,\n  tcircumflexbelow: 0x1E71,\n  tcommaaccent: 0x0163,\n  tdieresis: 0x1E97,\n  tdotaccent: 0x1E6B,\n  tdotbelow: 0x1E6D,\n  tecyrillic: 0x0442,\n  tedescendercyrillic: 0x04AD,\n  teharabic: 0x062A,\n  tehfinalarabic: 0xFE96,\n  tehhahinitialarabic: 0xFCA2,\n  tehhahisolatedarabic: 0xFC0C,\n  tehinitialarabic: 0xFE97,\n  tehiragana: 0x3066,\n  tehjeeminitialarabic: 0xFCA1,\n  tehjeemisolatedarabic: 0xFC0B,\n  tehmarbutaarabic: 0x0629,\n  tehmarbutafinalarabic: 0xFE94,\n  tehmedialarabic: 0xFE98,\n  tehmeeminitialarabic: 0xFCA4,\n  tehmeemisolatedarabic: 0xFC0E,\n  tehnoonfinalarabic: 0xFC73,\n  tekatakana: 0x30C6,\n  tekatakanahalfwidth: 0xFF83,\n  telephone: 0x2121,\n  telephoneblack: 0x260E,\n  telishagedolahebrew: 0x05A0,\n  telishaqetanahebrew: 0x05A9,\n  tencircle: 0x2469,\n  tenideographicparen: 0x3229,\n  tenparen: 0x247D,\n  tenperiod: 0x2491,\n  tenroman: 0x2179,\n  tesh: 0x02A7,\n  tet: 0x05D8,\n  tetdagesh: 0xFB38,\n  tetdageshhebrew: 0xFB38,\n  tethebrew: 0x05D8,\n  tetsecyrillic: 0x04B5,\n  tevirhebrew: 0x059B,\n  tevirlefthebrew: 0x059B,\n  thabengali: 0x09A5,\n  thadeva: 0x0925,\n  thagujarati: 0x0AA5,\n  thagurmukhi: 0x0A25,\n  thalarabic: 0x0630,\n  thalfinalarabic: 0xFEAC,\n  thanthakhatlowleftthai: 0xF898,\n  thanthakhatlowrightthai: 0xF897,\n  thanthakhatthai: 0x0E4C,\n  thanthakhatupperleftthai: 0xF896,\n  theharabic: 0x062B,\n  thehfinalarabic: 0xFE9A,\n  thehinitialarabic: 0xFE9B,\n  thehmedialarabic: 0xFE9C,\n  thereexists: 0x2203,\n  therefore: 0x2234,\n  theta: 0x03B8,\n  theta1: 0x03D1,\n  thetasymbolgreek: 0x03D1,\n  thieuthacirclekorean: 0x3279,\n  thieuthaparenkorean: 0x3219,\n  thieuthcirclekorean: 0x326B,\n  thieuthkorean: 0x314C,\n  thieuthparenkorean: 0x320B,\n  thirteencircle: 0x246C,\n  thirteenparen: 0x2480,\n  thirteenperiod: 0x2494,\n  thonangmonthothai: 0x0E11,\n  thook: 0x01AD,\n  thophuthaothai: 0x0E12,\n  thorn: 0x00FE,\n  thothahanthai: 0x0E17,\n  thothanthai: 0x0E10,\n  thothongthai: 0x0E18,\n  thothungthai: 0x0E16,\n  thousandcyrillic: 0x0482,\n  thousandsseparatorarabic: 0x066C,\n  thousandsseparatorpersian: 0x066C,\n  three: 0x0033,\n  threearabic: 0x0663,\n  threebengali: 0x09E9,\n  threecircle: 0x2462,\n  threecircleinversesansserif: 0x278C,\n  threedeva: 0x0969,\n  threeeighths: 0x215C,\n  threegujarati: 0x0AE9,\n  threegurmukhi: 0x0A69,\n  threehackarabic: 0x0663,\n  threehangzhou: 0x3023,\n  threeideographicparen: 0x3222,\n  threeinferior: 0x2083,\n  threemonospace: 0xFF13,\n  threenumeratorbengali: 0x09F6,\n  threeoldstyle: 0xF733,\n  threeparen: 0x2476,\n  threeperiod: 0x248A,\n  threepersian: 0x06F3,\n  threequarters: 0x00BE,\n  threequartersemdash: 0xF6DE,\n  threeroman: 0x2172,\n  threesuperior: 0x00B3,\n  threethai: 0x0E53,\n  thzsquare: 0x3394,\n  tihiragana: 0x3061,\n  tikatakana: 0x30C1,\n  tikatakanahalfwidth: 0xFF81,\n  tikeutacirclekorean: 0x3270,\n  tikeutaparenkorean: 0x3210,\n  tikeutcirclekorean: 0x3262,\n  tikeutkorean: 0x3137,\n  tikeutparenkorean: 0x3202,\n  tilde: 0x02DC,\n  tildebelowcmb: 0x0330,\n  tildecmb: 0x0303,\n  tildecomb: 0x0303,\n  tildedoublecmb: 0x0360,\n  tildeoperator: 0x223C,\n  tildeoverlaycmb: 0x0334,\n  tildeverticalcmb: 0x033E,\n  timescircle: 0x2297,\n  tipehahebrew: 0x0596,\n  tipehalefthebrew: 0x0596,\n  tippigurmukhi: 0x0A70,\n  titlocyrilliccmb: 0x0483,\n  tiwnarmenian: 0x057F,\n  tlinebelow: 0x1E6F,\n  tmonospace: 0xFF54,\n  toarmenian: 0x0569,\n  tohiragana: 0x3068,\n  tokatakana: 0x30C8,\n  tokatakanahalfwidth: 0xFF84,\n  tonebarextrahighmod: 0x02E5,\n  tonebarextralowmod: 0x02E9,\n  tonebarhighmod: 0x02E6,\n  tonebarlowmod: 0x02E8,\n  tonebarmidmod: 0x02E7,\n  tonefive: 0x01BD,\n  tonesix: 0x0185,\n  tonetwo: 0x01A8,\n  tonos: 0x0384,\n  tonsquare: 0x3327,\n  topatakthai: 0x0E0F,\n  tortoiseshellbracketleft: 0x3014,\n  tortoiseshellbracketleftsmall: 0xFE5D,\n  tortoiseshellbracketleftvertical: 0xFE39,\n  tortoiseshellbracketright: 0x3015,\n  tortoiseshellbracketrightsmall: 0xFE5E,\n  tortoiseshellbracketrightvertical: 0xFE3A,\n  totaothai: 0x0E15,\n  tpalatalhook: 0x01AB,\n  tparen: 0x24AF,\n  trademark: 0x2122,\n  trademarksans: 0xF8EA,\n  trademarkserif: 0xF6DB,\n  tretroflexhook: 0x0288,\n  triagdn: 0x25BC,\n  triaglf: 0x25C4,\n  triagrt: 0x25BA,\n  triagup: 0x25B2,\n  ts: 0x02A6,\n  tsadi: 0x05E6,\n  tsadidagesh: 0xFB46,\n  tsadidageshhebrew: 0xFB46,\n  tsadihebrew: 0x05E6,\n  tsecyrillic: 0x0446,\n  tsere: 0x05B5,\n  tsere12: 0x05B5,\n  tsere1e: 0x05B5,\n  tsere2b: 0x05B5,\n  tserehebrew: 0x05B5,\n  tserenarrowhebrew: 0x05B5,\n  tserequarterhebrew: 0x05B5,\n  tserewidehebrew: 0x05B5,\n  tshecyrillic: 0x045B,\n  tsuperior: 0xF6F3,\n  ttabengali: 0x099F,\n  ttadeva: 0x091F,\n  ttagujarati: 0x0A9F,\n  ttagurmukhi: 0x0A1F,\n  tteharabic: 0x0679,\n  ttehfinalarabic: 0xFB67,\n  ttehinitialarabic: 0xFB68,\n  ttehmedialarabic: 0xFB69,\n  tthabengali: 0x09A0,\n  tthadeva: 0x0920,\n  tthagujarati: 0x0AA0,\n  tthagurmukhi: 0x0A20,\n  tturned: 0x0287,\n  tuhiragana: 0x3064,\n  tukatakana: 0x30C4,\n  tukatakanahalfwidth: 0xFF82,\n  tusmallhiragana: 0x3063,\n  tusmallkatakana: 0x30C3,\n  tusmallkatakanahalfwidth: 0xFF6F,\n  twelvecircle: 0x246B,\n  twelveparen: 0x247F,\n  twelveperiod: 0x2493,\n  twelveroman: 0x217B,\n  twentycircle: 0x2473,\n  twentyhangzhou: 0x5344,\n  twentyparen: 0x2487,\n  twentyperiod: 0x249B,\n  two: 0x0032,\n  twoarabic: 0x0662,\n  twobengali: 0x09E8,\n  twocircle: 0x2461,\n  twocircleinversesansserif: 0x278B,\n  twodeva: 0x0968,\n  twodotenleader: 0x2025,\n  twodotleader: 0x2025,\n  twodotleadervertical: 0xFE30,\n  twogujarati: 0x0AE8,\n  twogurmukhi: 0x0A68,\n  twohackarabic: 0x0662,\n  twohangzhou: 0x3022,\n  twoideographicparen: 0x3221,\n  twoinferior: 0x2082,\n  twomonospace: 0xFF12,\n  twonumeratorbengali: 0x09F5,\n  twooldstyle: 0xF732,\n  twoparen: 0x2475,\n  twoperiod: 0x2489,\n  twopersian: 0x06F2,\n  tworoman: 0x2171,\n  twostroke: 0x01BB,\n  twosuperior: 0x00B2,\n  twothai: 0x0E52,\n  twothirds: 0x2154,\n  u: 0x0075,\n  uacute: 0x00FA,\n  ubar: 0x0289,\n  ubengali: 0x0989,\n  ubopomofo: 0x3128,\n  ubreve: 0x016D,\n  ucaron: 0x01D4,\n  ucircle: 0x24E4,\n  ucircumflex: 0x00FB,\n  ucircumflexbelow: 0x1E77,\n  ucyrillic: 0x0443,\n  udattadeva: 0x0951,\n  udblacute: 0x0171,\n  udblgrave: 0x0215,\n  udeva: 0x0909,\n  udieresis: 0x00FC,\n  udieresisacute: 0x01D8,\n  udieresisbelow: 0x1E73,\n  udieresiscaron: 0x01DA,\n  udieresiscyrillic: 0x04F1,\n  udieresisgrave: 0x01DC,\n  udieresismacron: 0x01D6,\n  udotbelow: 0x1EE5,\n  ugrave: 0x00F9,\n  ugujarati: 0x0A89,\n  ugurmukhi: 0x0A09,\n  uhiragana: 0x3046,\n  uhookabove: 0x1EE7,\n  uhorn: 0x01B0,\n  uhornacute: 0x1EE9,\n  uhorndotbelow: 0x1EF1,\n  uhorngrave: 0x1EEB,\n  uhornhookabove: 0x1EED,\n  uhorntilde: 0x1EEF,\n  uhungarumlaut: 0x0171,\n  uhungarumlautcyrillic: 0x04F3,\n  uinvertedbreve: 0x0217,\n  ukatakana: 0x30A6,\n  ukatakanahalfwidth: 0xFF73,\n  ukcyrillic: 0x0479,\n  ukorean: 0x315C,\n  umacron: 0x016B,\n  umacroncyrillic: 0x04EF,\n  umacrondieresis: 0x1E7B,\n  umatragurmukhi: 0x0A41,\n  umonospace: 0xFF55,\n  underscore: 0x005F,\n  underscoredbl: 0x2017,\n  underscoremonospace: 0xFF3F,\n  underscorevertical: 0xFE33,\n  underscorewavy: 0xFE4F,\n  union: 0x222A,\n  universal: 0x2200,\n  uogonek: 0x0173,\n  uparen: 0x24B0,\n  upblock: 0x2580,\n  upperdothebrew: 0x05C4,\n  upsilon: 0x03C5,\n  upsilondieresis: 0x03CB,\n  upsilondieresistonos: 0x03B0,\n  upsilonlatin: 0x028A,\n  upsilontonos: 0x03CD,\n  uptackbelowcmb: 0x031D,\n  uptackmod: 0x02D4,\n  uragurmukhi: 0x0A73,\n  uring: 0x016F,\n  ushortcyrillic: 0x045E,\n  usmallhiragana: 0x3045,\n  usmallkatakana: 0x30A5,\n  usmallkatakanahalfwidth: 0xFF69,\n  ustraightcyrillic: 0x04AF,\n  ustraightstrokecyrillic: 0x04B1,\n  utilde: 0x0169,\n  utildeacute: 0x1E79,\n  utildebelow: 0x1E75,\n  uubengali: 0x098A,\n  uudeva: 0x090A,\n  uugujarati: 0x0A8A,\n  uugurmukhi: 0x0A0A,\n  uumatragurmukhi: 0x0A42,\n  uuvowelsignbengali: 0x09C2,\n  uuvowelsigndeva: 0x0942,\n  uuvowelsigngujarati: 0x0AC2,\n  uvowelsignbengali: 0x09C1,\n  uvowelsigndeva: 0x0941,\n  uvowelsigngujarati: 0x0AC1,\n  v: 0x0076,\n  vadeva: 0x0935,\n  vagujarati: 0x0AB5,\n  vagurmukhi: 0x0A35,\n  vakatakana: 0x30F7,\n  vav: 0x05D5,\n  vavdagesh: 0xFB35,\n  vavdagesh65: 0xFB35,\n  vavdageshhebrew: 0xFB35,\n  vavhebrew: 0x05D5,\n  vavholam: 0xFB4B,\n  vavholamhebrew: 0xFB4B,\n  vavvavhebrew: 0x05F0,\n  vavyodhebrew: 0x05F1,\n  vcircle: 0x24E5,\n  vdotbelow: 0x1E7F,\n  vecyrillic: 0x0432,\n  veharabic: 0x06A4,\n  vehfinalarabic: 0xFB6B,\n  vehinitialarabic: 0xFB6C,\n  vehmedialarabic: 0xFB6D,\n  vekatakana: 0x30F9,\n  venus: 0x2640,\n  verticalbar: 0x007C,\n  verticallineabovecmb: 0x030D,\n  verticallinebelowcmb: 0x0329,\n  verticallinelowmod: 0x02CC,\n  verticallinemod: 0x02C8,\n  vewarmenian: 0x057E,\n  vhook: 0x028B,\n  vikatakana: 0x30F8,\n  viramabengali: 0x09CD,\n  viramadeva: 0x094D,\n  viramagujarati: 0x0ACD,\n  visargabengali: 0x0983,\n  visargadeva: 0x0903,\n  visargagujarati: 0x0A83,\n  vmonospace: 0xFF56,\n  voarmenian: 0x0578,\n  voicediterationhiragana: 0x309E,\n  voicediterationkatakana: 0x30FE,\n  voicedmarkkana: 0x309B,\n  voicedmarkkanahalfwidth: 0xFF9E,\n  vokatakana: 0x30FA,\n  vparen: 0x24B1,\n  vtilde: 0x1E7D,\n  vturned: 0x028C,\n  vuhiragana: 0x3094,\n  vukatakana: 0x30F4,\n  w: 0x0077,\n  wacute: 0x1E83,\n  waekorean: 0x3159,\n  wahiragana: 0x308F,\n  wakatakana: 0x30EF,\n  wakatakanahalfwidth: 0xFF9C,\n  wakorean: 0x3158,\n  wasmallhiragana: 0x308E,\n  wasmallkatakana: 0x30EE,\n  wattosquare: 0x3357,\n  wavedash: 0x301C,\n  wavyunderscorevertical: 0xFE34,\n  wawarabic: 0x0648,\n  wawfinalarabic: 0xFEEE,\n  wawhamzaabovearabic: 0x0624,\n  wawhamzaabovefinalarabic: 0xFE86,\n  wbsquare: 0x33DD,\n  wcircle: 0x24E6,\n  wcircumflex: 0x0175,\n  wdieresis: 0x1E85,\n  wdotaccent: 0x1E87,\n  wdotbelow: 0x1E89,\n  wehiragana: 0x3091,\n  weierstrass: 0x2118,\n  wekatakana: 0x30F1,\n  wekorean: 0x315E,\n  weokorean: 0x315D,\n  wgrave: 0x1E81,\n  whitebullet: 0x25E6,\n  whitecircle: 0x25CB,\n  whitecircleinverse: 0x25D9,\n  whitecornerbracketleft: 0x300E,\n  whitecornerbracketleftvertical: 0xFE43,\n  whitecornerbracketright: 0x300F,\n  whitecornerbracketrightvertical: 0xFE44,\n  whitediamond: 0x25C7,\n  whitediamondcontainingblacksmalldiamond: 0x25C8,\n  whitedownpointingsmalltriangle: 0x25BF,\n  whitedownpointingtriangle: 0x25BD,\n  whiteleftpointingsmalltriangle: 0x25C3,\n  whiteleftpointingtriangle: 0x25C1,\n  whitelenticularbracketleft: 0x3016,\n  whitelenticularbracketright: 0x3017,\n  whiterightpointingsmalltriangle: 0x25B9,\n  whiterightpointingtriangle: 0x25B7,\n  whitesmallsquare: 0x25AB,\n  whitesmilingface: 0x263A,\n  whitesquare: 0x25A1,\n  whitestar: 0x2606,\n  whitetelephone: 0x260F,\n  whitetortoiseshellbracketleft: 0x3018,\n  whitetortoiseshellbracketright: 0x3019,\n  whiteuppointingsmalltriangle: 0x25B5,\n  whiteuppointingtriangle: 0x25B3,\n  wihiragana: 0x3090,\n  wikatakana: 0x30F0,\n  wikorean: 0x315F,\n  wmonospace: 0xFF57,\n  wohiragana: 0x3092,\n  wokatakana: 0x30F2,\n  wokatakanahalfwidth: 0xFF66,\n  won: 0x20A9,\n  wonmonospace: 0xFFE6,\n  wowaenthai: 0x0E27,\n  wparen: 0x24B2,\n  wring: 0x1E98,\n  wsuperior: 0x02B7,\n  wturned: 0x028D,\n  wynn: 0x01BF,\n  x: 0x0078,\n  xabovecmb: 0x033D,\n  xbopomofo: 0x3112,\n  xcircle: 0x24E7,\n  xdieresis: 0x1E8D,\n  xdotaccent: 0x1E8B,\n  xeharmenian: 0x056D,\n  xi: 0x03BE,\n  xmonospace: 0xFF58,\n  xparen: 0x24B3,\n  xsuperior: 0x02E3,\n  y: 0x0079,\n  yaadosquare: 0x334E,\n  yabengali: 0x09AF,\n  yacute: 0x00FD,\n  yadeva: 0x092F,\n  yaekorean: 0x3152,\n  yagujarati: 0x0AAF,\n  yagurmukhi: 0x0A2F,\n  yahiragana: 0x3084,\n  yakatakana: 0x30E4,\n  yakatakanahalfwidth: 0xFF94,\n  yakorean: 0x3151,\n  yamakkanthai: 0x0E4E,\n  yasmallhiragana: 0x3083,\n  yasmallkatakana: 0x30E3,\n  yasmallkatakanahalfwidth: 0xFF6C,\n  yatcyrillic: 0x0463,\n  ycircle: 0x24E8,\n  ycircumflex: 0x0177,\n  ydieresis: 0x00FF,\n  ydotaccent: 0x1E8F,\n  ydotbelow: 0x1EF5,\n  yeharabic: 0x064A,\n  yehbarreearabic: 0x06D2,\n  yehbarreefinalarabic: 0xFBAF,\n  yehfinalarabic: 0xFEF2,\n  yehhamzaabovearabic: 0x0626,\n  yehhamzaabovefinalarabic: 0xFE8A,\n  yehhamzaaboveinitialarabic: 0xFE8B,\n  yehhamzaabovemedialarabic: 0xFE8C,\n  yehinitialarabic: 0xFEF3,\n  yehmedialarabic: 0xFEF4,\n  yehmeeminitialarabic: 0xFCDD,\n  yehmeemisolatedarabic: 0xFC58,\n  yehnoonfinalarabic: 0xFC94,\n  yehthreedotsbelowarabic: 0x06D1,\n  yekorean: 0x3156,\n  yen: 0x00A5,\n  yenmonospace: 0xFFE5,\n  yeokorean: 0x3155,\n  yeorinhieuhkorean: 0x3186,\n  yerahbenyomohebrew: 0x05AA,\n  yerahbenyomolefthebrew: 0x05AA,\n  yericyrillic: 0x044B,\n  yerudieresiscyrillic: 0x04F9,\n  yesieungkorean: 0x3181,\n  yesieungpansioskorean: 0x3183,\n  yesieungsioskorean: 0x3182,\n  yetivhebrew: 0x059A,\n  ygrave: 0x1EF3,\n  yhook: 0x01B4,\n  yhookabove: 0x1EF7,\n  yiarmenian: 0x0575,\n  yicyrillic: 0x0457,\n  yikorean: 0x3162,\n  yinyang: 0x262F,\n  yiwnarmenian: 0x0582,\n  ymonospace: 0xFF59,\n  yod: 0x05D9,\n  yoddagesh: 0xFB39,\n  yoddageshhebrew: 0xFB39,\n  yodhebrew: 0x05D9,\n  yodyodhebrew: 0x05F2,\n  yodyodpatahhebrew: 0xFB1F,\n  yohiragana: 0x3088,\n  yoikorean: 0x3189,\n  yokatakana: 0x30E8,\n  yokatakanahalfwidth: 0xFF96,\n  yokorean: 0x315B,\n  yosmallhiragana: 0x3087,\n  yosmallkatakana: 0x30E7,\n  yosmallkatakanahalfwidth: 0xFF6E,\n  yotgreek: 0x03F3,\n  yoyaekorean: 0x3188,\n  yoyakorean: 0x3187,\n  yoyakthai: 0x0E22,\n  yoyingthai: 0x0E0D,\n  yparen: 0x24B4,\n  ypogegrammeni: 0x037A,\n  ypogegrammenigreekcmb: 0x0345,\n  yr: 0x01A6,\n  yring: 0x1E99,\n  ysuperior: 0x02B8,\n  ytilde: 0x1EF9,\n  yturned: 0x028E,\n  yuhiragana: 0x3086,\n  yuikorean: 0x318C,\n  yukatakana: 0x30E6,\n  yukatakanahalfwidth: 0xFF95,\n  yukorean: 0x3160,\n  yusbigcyrillic: 0x046B,\n  yusbigiotifiedcyrillic: 0x046D,\n  yuslittlecyrillic: 0x0467,\n  yuslittleiotifiedcyrillic: 0x0469,\n  yusmallhiragana: 0x3085,\n  yusmallkatakana: 0x30E5,\n  yusmallkatakanahalfwidth: 0xFF6D,\n  yuyekorean: 0x318B,\n  yuyeokorean: 0x318A,\n  yyabengali: 0x09DF,\n  yyadeva: 0x095F,\n  z: 0x007A,\n  zaarmenian: 0x0566,\n  zacute: 0x017A,\n  zadeva: 0x095B,\n  zagurmukhi: 0x0A5B,\n  zaharabic: 0x0638,\n  zahfinalarabic: 0xFEC6,\n  zahinitialarabic: 0xFEC7,\n  zahiragana: 0x3056,\n  zahmedialarabic: 0xFEC8,\n  zainarabic: 0x0632,\n  zainfinalarabic: 0xFEB0,\n  zakatakana: 0x30B6,\n  zaqefgadolhebrew: 0x0595,\n  zaqefqatanhebrew: 0x0594,\n  zarqahebrew: 0x0598,\n  zayin: 0x05D6,\n  zayindagesh: 0xFB36,\n  zayindageshhebrew: 0xFB36,\n  zayinhebrew: 0x05D6,\n  zbopomofo: 0x3117,\n  zcaron: 0x017E,\n  zcircle: 0x24E9,\n  zcircumflex: 0x1E91,\n  zcurl: 0x0291,\n  zdot: 0x017C,\n  zdotaccent: 0x017C,\n  zdotbelow: 0x1E93,\n  zecyrillic: 0x0437,\n  zedescendercyrillic: 0x0499,\n  zedieresiscyrillic: 0x04DF,\n  zehiragana: 0x305C,\n  zekatakana: 0x30BC,\n  zero: 0x0030,\n  zeroarabic: 0x0660,\n  zerobengali: 0x09E6,\n  zerodeva: 0x0966,\n  zerogujarati: 0x0AE6,\n  zerogurmukhi: 0x0A66,\n  zerohackarabic: 0x0660,\n  zeroinferior: 0x2080,\n  zeromonospace: 0xFF10,\n  zerooldstyle: 0xF730,\n  zeropersian: 0x06F0,\n  zerosuperior: 0x2070,\n  zerothai: 0x0E50,\n  zerowidthjoiner: 0xFEFF,\n  zerowidthnonjoiner: 0x200C,\n  zerowidthspace: 0x200B,\n  zeta: 0x03B6,\n  zhbopomofo: 0x3113,\n  zhearmenian: 0x056A,\n  zhebrevecyrillic: 0x04C2,\n  zhecyrillic: 0x0436,\n  zhedescendercyrillic: 0x0497,\n  zhedieresiscyrillic: 0x04DD,\n  zihiragana: 0x3058,\n  zikatakana: 0x30B8,\n  zinorhebrew: 0x05AE,\n  zlinebelow: 0x1E95,\n  zmonospace: 0xFF5A,\n  zohiragana: 0x305E,\n  zokatakana: 0x30BE,\n  zparen: 0x24B5,\n  zretroflexhook: 0x0290,\n  zstroke: 0x01B6,\n  zuhiragana: 0x305A,\n  zukatakana: 0x30BA,\n  '.notdef': 0x0000\n};\n\nvar DingbatsGlyphsUnicode = {\n  space: 0x0020,\n  a1: 0x2701,\n  a2: 0x2702,\n  a202: 0x2703,\n  a3: 0x2704,\n  a4: 0x260E,\n  a5: 0x2706,\n  a119: 0x2707,\n  a118: 0x2708,\n  a117: 0x2709,\n  a11: 0x261B,\n  a12: 0x261E,\n  a13: 0x270C,\n  a14: 0x270D,\n  a15: 0x270E,\n  a16: 0x270F,\n  a105: 0x2710,\n  a17: 0x2711,\n  a18: 0x2712,\n  a19: 0x2713,\n  a20: 0x2714,\n  a21: 0x2715,\n  a22: 0x2716,\n  a23: 0x2717,\n  a24: 0x2718,\n  a25: 0x2719,\n  a26: 0x271A,\n  a27: 0x271B,\n  a28: 0x271C,\n  a6: 0x271D,\n  a7: 0x271E,\n  a8: 0x271F,\n  a9: 0x2720,\n  a10: 0x2721,\n  a29: 0x2722,\n  a30: 0x2723,\n  a31: 0x2724,\n  a32: 0x2725,\n  a33: 0x2726,\n  a34: 0x2727,\n  a35: 0x2605,\n  a36: 0x2729,\n  a37: 0x272A,\n  a38: 0x272B,\n  a39: 0x272C,\n  a40: 0x272D,\n  a41: 0x272E,\n  a42: 0x272F,\n  a43: 0x2730,\n  a44: 0x2731,\n  a45: 0x2732,\n  a46: 0x2733,\n  a47: 0x2734,\n  a48: 0x2735,\n  a49: 0x2736,\n  a50: 0x2737,\n  a51: 0x2738,\n  a52: 0x2739,\n  a53: 0x273A,\n  a54: 0x273B,\n  a55: 0x273C,\n  a56: 0x273D,\n  a57: 0x273E,\n  a58: 0x273F,\n  a59: 0x2740,\n  a60: 0x2741,\n  a61: 0x2742,\n  a62: 0x2743,\n  a63: 0x2744,\n  a64: 0x2745,\n  a65: 0x2746,\n  a66: 0x2747,\n  a67: 0x2748,\n  a68: 0x2749,\n  a69: 0x274A,\n  a70: 0x274B,\n  a71: 0x25CF,\n  a72: 0x274D,\n  a73: 0x25A0,\n  a74: 0x274F,\n  a203: 0x2750,\n  a75: 0x2751,\n  a204: 0x2752,\n  a76: 0x25B2,\n  a77: 0x25BC,\n  a78: 0x25C6,\n  a79: 0x2756,\n  a81: 0x25D7,\n  a82: 0x2758,\n  a83: 0x2759,\n  a84: 0x275A,\n  a97: 0x275B,\n  a98: 0x275C,\n  a99: 0x275D,\n  a100: 0x275E,\n  a101: 0x2761,\n  a102: 0x2762,\n  a103: 0x2763,\n  a104: 0x2764,\n  a106: 0x2765,\n  a107: 0x2766,\n  a108: 0x2767,\n  a112: 0x2663,\n  a111: 0x2666,\n  a110: 0x2665,\n  a109: 0x2660,\n  a120: 0x2460,\n  a121: 0x2461,\n  a122: 0x2462,\n  a123: 0x2463,\n  a124: 0x2464,\n  a125: 0x2465,\n  a126: 0x2466,\n  a127: 0x2467,\n  a128: 0x2468,\n  a129: 0x2469,\n  a130: 0x2776,\n  a131: 0x2777,\n  a132: 0x2778,\n  a133: 0x2779,\n  a134: 0x277A,\n  a135: 0x277B,\n  a136: 0x277C,\n  a137: 0x277D,\n  a138: 0x277E,\n  a139: 0x277F,\n  a140: 0x2780,\n  a141: 0x2781,\n  a142: 0x2782,\n  a143: 0x2783,\n  a144: 0x2784,\n  a145: 0x2785,\n  a146: 0x2786,\n  a147: 0x2787,\n  a148: 0x2788,\n  a149: 0x2789,\n  a150: 0x278A,\n  a151: 0x278B,\n  a152: 0x278C,\n  a153: 0x278D,\n  a154: 0x278E,\n  a155: 0x278F,\n  a156: 0x2790,\n  a157: 0x2791,\n  a158: 0x2792,\n  a159: 0x2793,\n  a160: 0x2794,\n  a161: 0x2192,\n  a163: 0x2194,\n  a164: 0x2195,\n  a196: 0x2798,\n  a165: 0x2799,\n  a192: 0x279A,\n  a166: 0x279B,\n  a167: 0x279C,\n  a168: 0x279D,\n  a169: 0x279E,\n  a170: 0x279F,\n  a171: 0x27A0,\n  a172: 0x27A1,\n  a173: 0x27A2,\n  a162: 0x27A3,\n  a174: 0x27A4,\n  a175: 0x27A5,\n  a176: 0x27A6,\n  a177: 0x27A7,\n  a178: 0x27A8,\n  a179: 0x27A9,\n  a193: 0x27AA,\n  a180: 0x27AB,\n  a199: 0x27AC,\n  a181: 0x27AD,\n  a200: 0x27AE,\n  a182: 0x27AF,\n  a201: 0x27B1,\n  a183: 0x27B2,\n  a184: 0x27B3,\n  a197: 0x27B4,\n  a185: 0x27B5,\n  a194: 0x27B6,\n  a198: 0x27B7,\n  a186: 0x27B8,\n  a195: 0x27B9,\n  a187: 0x27BA,\n  a188: 0x27BB,\n  a189: 0x27BC,\n  a190: 0x27BD,\n  a191: 0x27BE,\n  a89: 0x2768, // 0xF8D7\n  a90: 0x2769, // 0xF8D8\n  a93: 0x276A, // 0xF8D9\n  a94: 0x276B, // 0xF8DA\n  a91: 0x276C, // 0xF8DB\n  a92: 0x276D, // 0xF8DC\n  a205: 0x276E, // 0xF8DD\n  a85: 0x276F, // 0xF8DE\n  a206: 0x2770, // 0xF8DF\n  a86: 0x2771, // 0xF8E0\n  a87: 0x2772, // 0xF8E1\n  a88: 0x2773, // 0xF8E2\n  a95: 0x2774, // 0xF8E3\n  a96: 0x2775, // 0xF8E4\n  '.notdef': 0x0000\n};\n\n\nvar PDFImage = (function PDFImageClosure() {\n  /**\n   * Decode the image in the main thread if it supported. Resovles the promise\n   * when the image data is ready.\n   */\n  function handleImageData(handler, xref, res, image) {\n    if (image instanceof JpegStream && image.isNativelyDecodable(xref, res)) {\n      // For natively supported jpegs send them to the main thread for decoding.\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = ColorSpace.parse(colorSpace, xref, res);\n      var numComps = colorSpace.numComps;\n      var decodePromise = handler.sendWithPromise('JpegDecode',\n                                                  [image.getIR(), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new Stream(data, 0, data.length, image.dict);\n      });\n    } else {\n      return Promise.resolve(image);\n    }\n  }\n\n  /**\n   * Decode and clamp a value. The formula is different from the spec because we\n   * don't decode to float range [0,1], we decode it in the [0,max] range.\n   */\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    // Clamp the value to the range\n    return (value < 0 ? 0 : (value > max ? max : value));\n  }\n\n  function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    // TODO cache rendered images?\n\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n\n    if (this.width < 1 || this.height < 1) {\n      error('Invalid image width: ' + this.width + ' or height: ' +\n            this.height);\n    }\n\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          error('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        info('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = Name.get('DeviceCMYK');\n            break;\n          default:\n            error('JPX images with ' + this.numComps +\n                  ' color components not supported.');\n        }\n      }\n      this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n      this.numComps = this.colorSpace.numComps;\n    }\n\n    this.decode = dict.get('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode &&\n        ((this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode)) ||\n         (isMask && !ColorSpace.isDefaultDecode(this.decode, 1)))) {\n      this.needsDecode = true;\n      // Do some preprocessing to avoid more math.\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n\n    if (smask) {\n      this.smask = new PDFImage(xref, res, smask, false);\n    } else if (mask) {\n      if (isStream(mask)) {\n        this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n      } else {\n        // Color key mask (just an array).\n        this.mask = mask;\n      }\n    }\n  }\n  /**\n   * Handles processing of image data and returns the Promise that is resolved\n   * with a PDFImage when the image is ready to be used.\n   */\n  PDFImage.buildImage = function PDFImage_buildImage(handler, xref,\n                                                     res, image, inline) {\n    var imagePromise = handleImageData(handler, xref, res, image);\n    var smaskPromise;\n    var maskPromise;\n\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n\n    if (smask) {\n      smaskPromise = handleImageData(handler, xref, res, smask);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if (isStream(mask)) {\n          maskPromise = handleImageData(handler, xref, res, mask);\n        } else if (isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          warn('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(\n      function(results) {\n        var imageData = results[0];\n        var smaskData = results[1];\n        var maskData = results[2];\n        return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n      });\n  };\n\n  /**\n   * Resize an image using the nearest neighbor algorithm. Currently only\n   * supports one and three component images.\n   * @param {TypedArray} pixels The original image with one component.\n   * @param {Number} bpc Number of bits per component.\n   * @param {Number} components Number of color components, 1 or 3 is supported.\n   * @param {Number} w1 Original width.\n   * @param {Number} h1 Original height.\n   * @param {Number} w2 New width.\n   * @param {Number} h2 New height.\n   * @param {TypedArray} dest (Optional) The destination buffer.\n   * @param {Number} alpha01 (Optional) Size reserved for the alpha channel.\n   * @return {TypedArray} Resized image data.\n   */\n  PDFImage.resize = function PDFImage_resize(pixels, bpc, components,\n                                             w1, h1, w2, h2, dest, alpha01) {\n\n    if (components !== 1 && components !== 3) {\n      error('Unsupported component count for resizing.');\n    }\n\n    var length = w2 * h2 * components;\n    var temp = dest ? dest : (bpc <= 8 ? new Uint8Array(length) :\n        (bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length)));\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i, j, py, newIndex = 0, oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * components;\n    if (alpha01 !== 1) {\n      alpha01 = 0;\n    }\n\n    for (j = 0; j < w2; j++) {\n      xScaled[j] = Math.floor(j * xRatio) * components;\n    }\n\n    if (components === 1) {\n      for (i = 0; i < h2; i++) {\n        py = Math.floor(i * yRatio) * w1Scanline;\n        for (j = 0; j < w2; j++) {\n          oldIndex = py + xScaled[j];\n          temp[newIndex++] = pixels[oldIndex];\n        }\n      }\n    } else if (components === 3) {\n      for (i = 0; i < h2; i++) {\n        py = Math.floor(i * yRatio) * w1Scanline;\n        for (j = 0; j < w2; j++) {\n          oldIndex = py + xScaled[j];\n          temp[newIndex++] = pixels[oldIndex++];\n          temp[newIndex++] = pixels[oldIndex++];\n          temp[newIndex++] = pixels[oldIndex++];\n          newIndex += alpha01;\n        }\n      }\n    }\n    return temp;\n  };\n\n  PDFImage.createMask =\n      function PDFImage_createMask(imgArray, width, height,\n                                   imageIsFromDecodeStream, inverseDecode) {\n\n    // |imgArray| might not contain full data for every pixel of the mask, so\n    // we need to distinguish between |computedLength| and |actualLength|.\n    // In particular, if inverseDecode is true, then the array we return must\n    // have a length of |computedLength|.\n\n    var computedLength = ((width + 7) >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      // imgArray came from a DecodeStream and its data is in an appropriate\n      // form, so we can just transfer it.\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n\n    // If necessary, invert the original mask data (but not any extra we might\n    // have added above). It's safe to modify the array -- whether it's the\n    // original or a copy, we're about to transfer it anyway, so nothing else\n    // in this thread can be relying on its contents.\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] = ~data[i];\n      }\n    }\n\n    return {data: data, width: width, height: height};\n  };\n\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width,\n                      this.smask && this.smask.width || 0,\n                      this.mask && this.mask.width || 0);\n    },\n\n    get drawHeight() {\n      return Math.max(this.height,\n                      this.smask && this.smask.height || 0,\n                      this.mask && this.mask.height || 0);\n    },\n\n    decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n\n      if (bpc === 1) {\n        // If the buffer needed decode that means it just needs to be inverted.\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!(buffer[i]);\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j],\n                                         decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n\n    getComponents: function PDFImage_getComponents(buffer) {\n      var bpc = this.bpc;\n\n      // This image doesn't require any extra work.\n      if (bpc === 8) {\n        return buffer;\n      }\n\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = (bpc <= 8 ? new Uint8Array(length) :\n        (bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length)));\n      var rowComps = width * numComps;\n\n      var max = (1 << bpc) - 1;\n      var i = 0, ii, buf;\n\n      if (bpc === 1) {\n        // Optimization for reading 1 bpc images.\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n\n          // unroll loop for all full bytes\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = (buf >> 7) & 1;\n            output[i + 1] = (buf >> 6) & 1;\n            output[i + 2] = (buf >> 5) & 1;\n            output[i + 3] = (buf >> 4) & 1;\n            output[i + 4] = (buf >> 3) & 1;\n            output[i + 5] = (buf >> 2) & 1;\n            output[i + 6] = (buf >> 1) & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n\n          // handle remaing bits\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        // The general case that handles all other bpc values.\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n\n          while (bits < bpc) {\n            buf = (buf << 8) | buffer[bufferPos++];\n            bits += 8;\n          }\n\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = (value < 0 ? 0 : (value > max ? max : value));\n          buf = buf & ((1 << remainingBits) - 1);\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n\n    fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height,\n                                               actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = PDFImage.resize(alphaBuf, smask.bpc, 1, sw, sh, width,\n                                     height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n\n          // Need to invert values in rgbaBuf\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n\n          if (sw !== width || sh !== height) {\n            alphaBuf = PDFImage.resize(alphaBuf, mask.bpc, 1, sw, sh, width,\n                                       height);\n          }\n        } else if (isArray(mask)) {\n          // Color key mask: if any of the compontents are outside the range\n          // then they should be painted.\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          error('Unknown mask format.');\n        }\n      }\n\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        // No mask.\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n\n    undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          // according formula we have to get Infinity in all components\n          // making it white (typical paper color) should be okay\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n\n    createImageData: function PDFImage_createImageData(forceRGBA) {\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = { // other fields are filled in below\n        width: drawWidth,\n        height: drawHeight\n      };\n\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n\n      // Rows start at byte boundary.\n      var rowBytes = (originalWidth * numComps * bpc + 7) >> 3;\n      var imgArray;\n\n      if (!forceRGBA) {\n        // If it is a 1-bit-per-pixel grayscale (i.e. black-and-white) image\n        // without any complications, we pass a same-sized copy to the main\n        // thread rather than expanding by 32x to RGBA form. This saves *lots*\n        // of memory for many scanned documents. It's also much faster.\n        //\n        // Similarly, if it is a 24-bit-per pixel RGB image without any\n        // complications, we avoid expanding by 1.333x to RGBA form.\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 &&\n                   !this.needsDecode) {\n          kind = ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask &&\n            drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          // If imgArray came from a DecodeStream, we're safe to transfer it\n          // (and thus neuter it) because it will constitute the entire\n          // DecodeStream's data.  But if it came from a Stream, we need to\n          // copy it because it'll only be a portion of the Stream's data, and\n          // the rest will be read later on.\n          if (this.image instanceof DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            // Invert the buffer (which must be grayscale if we reached here).\n            assert(kind === ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof JpegStream && !this.smask && !this.mask) {\n          imgData.kind = ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes,\n                                            drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      // imgArray can be incomplete (e.g. after CCITT fax encoding).\n      var actualHeight = 0 | (imgArray.length / rowBytes *\n                         drawHeight / originalHeight);\n\n      var comps = this.getComponents(imgArray);\n\n      // If opacity data is present, use RGBA_32BPP form. Otherwise, use the\n      // more compact RGB_24BPP form if allowable.\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n\n        // Color key masking (opacity) must be performed before decoding.\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight,\n                         comps);\n      }\n\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight,\n                              drawWidth, drawHeight, actualHeight, bpc, comps,\n                              alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n\n      return imgData;\n    },\n\n    fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        error('Reading gray scale from a color image: ' + numComps);\n      }\n\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n\n      // rows start at byte boundary\n      var rowBytes = (width * numComps * bpc + 7) >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n\n      var comps = this.getComponents(imgArray);\n      var i, length;\n\n      if (bpc === 1) {\n        // inline decoding (= inversion) for 1 bpc images\n        length = width * height;\n        if (this.needsDecode) {\n          // invert and scale to {0, 255}\n          for (i = 0; i < length; ++i) {\n            buffer[i] = (comps[i] - 1) & 255;\n          }\n        } else {\n          // scale to {0, 255}\n          for (i = 0; i < length; ++i) {\n            buffer[i] = (-comps[i]) & 255;\n          }\n        }\n        return;\n      }\n\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      // we aren't using a colorspace so we need to scale the value\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = (scale * comps[i]) | 0;\n      }\n    },\n\n    getImageBytes: function PDFImage_getImageBytes(length,\n                                                   drawWidth, drawHeight,\n                                                   forceRGB) {\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n})();\n\n\n// The Metrics object contains glyph widths (in glyph space units).\n// As per PDF spec, for most fonts (Type 3 being an exception) a glyph\n// space unit corresponds to 1/1000th of text space unit.\nvar Metrics = {\n  'Courier': 600,\n  'Courier-Bold': 600,\n  'Courier-BoldOblique': 600,\n  'Courier-Oblique': 600,\n  'Helvetica' : {\n    'space': 278,\n    'exclam': 278,\n    'quotedbl': 355,\n    'numbersign': 556,\n    'dollar': 556,\n    'percent': 889,\n    'ampersand': 667,\n    'quoteright': 222,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 389,\n    'plus': 584,\n    'comma': 278,\n    'hyphen': 333,\n    'period': 278,\n    'slash': 278,\n    'zero': 556,\n    'one': 556,\n    'two': 556,\n    'three': 556,\n    'four': 556,\n    'five': 556,\n    'six': 556,\n    'seven': 556,\n    'eight': 556,\n    'nine': 556,\n    'colon': 278,\n    'semicolon': 278,\n    'less': 584,\n    'equal': 584,\n    'greater': 584,\n    'question': 556,\n    'at': 1015,\n    'A': 667,\n    'B': 667,\n    'C': 722,\n    'D': 722,\n    'E': 667,\n    'F': 611,\n    'G': 778,\n    'H': 722,\n    'I': 278,\n    'J': 500,\n    'K': 667,\n    'L': 556,\n    'M': 833,\n    'N': 722,\n    'O': 778,\n    'P': 667,\n    'Q': 778,\n    'R': 722,\n    'S': 667,\n    'T': 611,\n    'U': 722,\n    'V': 667,\n    'W': 944,\n    'X': 667,\n    'Y': 667,\n    'Z': 611,\n    'bracketleft': 278,\n    'backslash': 278,\n    'bracketright': 278,\n    'asciicircum': 469,\n    'underscore': 556,\n    'quoteleft': 222,\n    'a': 556,\n    'b': 556,\n    'c': 500,\n    'd': 556,\n    'e': 556,\n    'f': 278,\n    'g': 556,\n    'h': 556,\n    'i': 222,\n    'j': 222,\n    'k': 500,\n    'l': 222,\n    'm': 833,\n    'n': 556,\n    'o': 556,\n    'p': 556,\n    'q': 556,\n    'r': 333,\n    's': 500,\n    't': 278,\n    'u': 556,\n    'v': 500,\n    'w': 722,\n    'x': 500,\n    'y': 500,\n    'z': 500,\n    'braceleft': 334,\n    'bar': 260,\n    'braceright': 334,\n    'asciitilde': 584,\n    'exclamdown': 333,\n    'cent': 556,\n    'sterling': 556,\n    'fraction': 167,\n    'yen': 556,\n    'florin': 556,\n    'section': 556,\n    'currency': 556,\n    'quotesingle': 191,\n    'quotedblleft': 333,\n    'guillemotleft': 556,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 500,\n    'fl': 500,\n    'endash': 556,\n    'dagger': 556,\n    'daggerdbl': 556,\n    'periodcentered': 278,\n    'paragraph': 537,\n    'bullet': 350,\n    'quotesinglbase': 222,\n    'quotedblbase': 333,\n    'quotedblright': 333,\n    'guillemotright': 556,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 611,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 1000,\n    'ordfeminine': 370,\n    'Lslash': 556,\n    'Oslash': 778,\n    'OE': 1000,\n    'ordmasculine': 365,\n    'ae': 889,\n    'dotlessi': 278,\n    'lslash': 222,\n    'oslash': 611,\n    'oe': 944,\n    'germandbls': 611,\n    'Idieresis': 278,\n    'eacute': 556,\n    'abreve': 556,\n    'uhungarumlaut': 556,\n    'ecaron': 556,\n    'Ydieresis': 667,\n    'divide': 584,\n    'Yacute': 667,\n    'Acircumflex': 667,\n    'aacute': 556,\n    'Ucircumflex': 722,\n    'yacute': 500,\n    'scommaaccent': 500,\n    'ecircumflex': 556,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 556,\n    'Uacute': 722,\n    'uogonek': 556,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 737,\n    'Emacron': 667,\n    'ccaron': 500,\n    'aring': 556,\n    'Ncommaaccent': 722,\n    'lacute': 222,\n    'agrave': 556,\n    'Tcommaaccent': 611,\n    'Cacute': 722,\n    'atilde': 556,\n    'Edotaccent': 667,\n    'scaron': 500,\n    'scedilla': 500,\n    'iacute': 278,\n    'lozenge': 471,\n    'Rcaron': 722,\n    'Gcommaaccent': 778,\n    'ucircumflex': 556,\n    'acircumflex': 556,\n    'Amacron': 667,\n    'rcaron': 333,\n    'ccedilla': 500,\n    'Zdotaccent': 611,\n    'Thorn': 667,\n    'Omacron': 778,\n    'Racute': 722,\n    'Sacute': 667,\n    'dcaron': 643,\n    'Umacron': 722,\n    'uring': 556,\n    'threesuperior': 333,\n    'Ograve': 778,\n    'Agrave': 667,\n    'Abreve': 667,\n    'multiply': 584,\n    'uacute': 556,\n    'Tcaron': 611,\n    'partialdiff': 476,\n    'ydieresis': 500,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 556,\n    'edieresis': 556,\n    'cacute': 500,\n    'nacute': 556,\n    'umacron': 556,\n    'Ncaron': 722,\n    'Iacute': 278,\n    'plusminus': 584,\n    'brokenbar': 260,\n    'registered': 737,\n    'Gbreve': 778,\n    'Idotaccent': 278,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 333,\n    'omacron': 556,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 722,\n    'lcommaaccent': 222,\n    'tcaron': 317,\n    'eogonek': 556,\n    'Uogonek': 722,\n    'Aacute': 667,\n    'Adieresis': 667,\n    'egrave': 556,\n    'zacute': 500,\n    'iogonek': 222,\n    'Oacute': 778,\n    'oacute': 556,\n    'amacron': 556,\n    'sacute': 500,\n    'idieresis': 278,\n    'Ocircumflex': 778,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 556,\n    'twosuperior': 333,\n    'Odieresis': 778,\n    'mu': 556,\n    'igrave': 278,\n    'ohungarumlaut': 556,\n    'Eogonek': 667,\n    'dcroat': 556,\n    'threequarters': 834,\n    'Scedilla': 667,\n    'lcaron': 299,\n    'Kcommaaccent': 667,\n    'Lacute': 556,\n    'trademark': 1000,\n    'edotaccent': 556,\n    'Igrave': 278,\n    'Imacron': 278,\n    'Lcaron': 556,\n    'onehalf': 834,\n    'lessequal': 549,\n    'ocircumflex': 556,\n    'ntilde': 556,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 556,\n    'gbreve': 556,\n    'onequarter': 834,\n    'Scaron': 667,\n    'Scommaaccent': 667,\n    'Ohungarumlaut': 778,\n    'degree': 400,\n    'ograve': 556,\n    'Ccaron': 722,\n    'ugrave': 556,\n    'radical': 453,\n    'Dcaron': 722,\n    'rcommaaccent': 333,\n    'Ntilde': 722,\n    'otilde': 556,\n    'Rcommaaccent': 722,\n    'Lcommaaccent': 556,\n    'Atilde': 667,\n    'Aogonek': 667,\n    'Aring': 667,\n    'Otilde': 778,\n    'zdotaccent': 500,\n    'Ecaron': 667,\n    'Iogonek': 278,\n    'kcommaaccent': 500,\n    'minus': 584,\n    'Icircumflex': 278,\n    'ncaron': 556,\n    'tcommaaccent': 278,\n    'logicalnot': 584,\n    'odieresis': 556,\n    'udieresis': 556,\n    'notequal': 549,\n    'gcommaaccent': 556,\n    'eth': 556,\n    'zcaron': 500,\n    'ncommaaccent': 556,\n    'onesuperior': 333,\n    'imacron': 278,\n    'Euro': 556\n  },\n  'Helvetica-Bold': {\n    'space': 278,\n    'exclam': 333,\n    'quotedbl': 474,\n    'numbersign': 556,\n    'dollar': 556,\n    'percent': 889,\n    'ampersand': 722,\n    'quoteright': 278,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 389,\n    'plus': 584,\n    'comma': 278,\n    'hyphen': 333,\n    'period': 278,\n    'slash': 278,\n    'zero': 556,\n    'one': 556,\n    'two': 556,\n    'three': 556,\n    'four': 556,\n    'five': 556,\n    'six': 556,\n    'seven': 556,\n    'eight': 556,\n    'nine': 556,\n    'colon': 333,\n    'semicolon': 333,\n    'less': 584,\n    'equal': 584,\n    'greater': 584,\n    'question': 611,\n    'at': 975,\n    'A': 722,\n    'B': 722,\n    'C': 722,\n    'D': 722,\n    'E': 667,\n    'F': 611,\n    'G': 778,\n    'H': 722,\n    'I': 278,\n    'J': 556,\n    'K': 722,\n    'L': 611,\n    'M': 833,\n    'N': 722,\n    'O': 778,\n    'P': 667,\n    'Q': 778,\n    'R': 722,\n    'S': 667,\n    'T': 611,\n    'U': 722,\n    'V': 667,\n    'W': 944,\n    'X': 667,\n    'Y': 667,\n    'Z': 611,\n    'bracketleft': 333,\n    'backslash': 278,\n    'bracketright': 333,\n    'asciicircum': 584,\n    'underscore': 556,\n    'quoteleft': 278,\n    'a': 556,\n    'b': 611,\n    'c': 556,\n    'd': 611,\n    'e': 556,\n    'f': 333,\n    'g': 611,\n    'h': 611,\n    'i': 278,\n    'j': 278,\n    'k': 556,\n    'l': 278,\n    'm': 889,\n    'n': 611,\n    'o': 611,\n    'p': 611,\n    'q': 611,\n    'r': 389,\n    's': 556,\n    't': 333,\n    'u': 611,\n    'v': 556,\n    'w': 778,\n    'x': 556,\n    'y': 556,\n    'z': 500,\n    'braceleft': 389,\n    'bar': 280,\n    'braceright': 389,\n    'asciitilde': 584,\n    'exclamdown': 333,\n    'cent': 556,\n    'sterling': 556,\n    'fraction': 167,\n    'yen': 556,\n    'florin': 556,\n    'section': 556,\n    'currency': 556,\n    'quotesingle': 238,\n    'quotedblleft': 500,\n    'guillemotleft': 556,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 611,\n    'fl': 611,\n    'endash': 556,\n    'dagger': 556,\n    'daggerdbl': 556,\n    'periodcentered': 278,\n    'paragraph': 556,\n    'bullet': 350,\n    'quotesinglbase': 278,\n    'quotedblbase': 500,\n    'quotedblright': 500,\n    'guillemotright': 556,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 611,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 1000,\n    'ordfeminine': 370,\n    'Lslash': 611,\n    'Oslash': 778,\n    'OE': 1000,\n    'ordmasculine': 365,\n    'ae': 889,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 611,\n    'oe': 944,\n    'germandbls': 611,\n    'Idieresis': 278,\n    'eacute': 556,\n    'abreve': 556,\n    'uhungarumlaut': 611,\n    'ecaron': 556,\n    'Ydieresis': 667,\n    'divide': 584,\n    'Yacute': 667,\n    'Acircumflex': 722,\n    'aacute': 556,\n    'Ucircumflex': 722,\n    'yacute': 556,\n    'scommaaccent': 556,\n    'ecircumflex': 556,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 556,\n    'Uacute': 722,\n    'uogonek': 611,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 737,\n    'Emacron': 667,\n    'ccaron': 556,\n    'aring': 556,\n    'Ncommaaccent': 722,\n    'lacute': 278,\n    'agrave': 556,\n    'Tcommaaccent': 611,\n    'Cacute': 722,\n    'atilde': 556,\n    'Edotaccent': 667,\n    'scaron': 556,\n    'scedilla': 556,\n    'iacute': 278,\n    'lozenge': 494,\n    'Rcaron': 722,\n    'Gcommaaccent': 778,\n    'ucircumflex': 611,\n    'acircumflex': 556,\n    'Amacron': 722,\n    'rcaron': 389,\n    'ccedilla': 556,\n    'Zdotaccent': 611,\n    'Thorn': 667,\n    'Omacron': 778,\n    'Racute': 722,\n    'Sacute': 667,\n    'dcaron': 743,\n    'Umacron': 722,\n    'uring': 611,\n    'threesuperior': 333,\n    'Ograve': 778,\n    'Agrave': 722,\n    'Abreve': 722,\n    'multiply': 584,\n    'uacute': 611,\n    'Tcaron': 611,\n    'partialdiff': 494,\n    'ydieresis': 556,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 556,\n    'edieresis': 556,\n    'cacute': 556,\n    'nacute': 611,\n    'umacron': 611,\n    'Ncaron': 722,\n    'Iacute': 278,\n    'plusminus': 584,\n    'brokenbar': 280,\n    'registered': 737,\n    'Gbreve': 778,\n    'Idotaccent': 278,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 389,\n    'omacron': 611,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 722,\n    'lcommaaccent': 278,\n    'tcaron': 389,\n    'eogonek': 556,\n    'Uogonek': 722,\n    'Aacute': 722,\n    'Adieresis': 722,\n    'egrave': 556,\n    'zacute': 500,\n    'iogonek': 278,\n    'Oacute': 778,\n    'oacute': 611,\n    'amacron': 556,\n    'sacute': 556,\n    'idieresis': 278,\n    'Ocircumflex': 778,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 611,\n    'twosuperior': 333,\n    'Odieresis': 778,\n    'mu': 611,\n    'igrave': 278,\n    'ohungarumlaut': 611,\n    'Eogonek': 667,\n    'dcroat': 611,\n    'threequarters': 834,\n    'Scedilla': 667,\n    'lcaron': 400,\n    'Kcommaaccent': 722,\n    'Lacute': 611,\n    'trademark': 1000,\n    'edotaccent': 556,\n    'Igrave': 278,\n    'Imacron': 278,\n    'Lcaron': 611,\n    'onehalf': 834,\n    'lessequal': 549,\n    'ocircumflex': 611,\n    'ntilde': 611,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 556,\n    'gbreve': 611,\n    'onequarter': 834,\n    'Scaron': 667,\n    'Scommaaccent': 667,\n    'Ohungarumlaut': 778,\n    'degree': 400,\n    'ograve': 611,\n    'Ccaron': 722,\n    'ugrave': 611,\n    'radical': 549,\n    'Dcaron': 722,\n    'rcommaaccent': 389,\n    'Ntilde': 722,\n    'otilde': 611,\n    'Rcommaaccent': 722,\n    'Lcommaaccent': 611,\n    'Atilde': 722,\n    'Aogonek': 722,\n    'Aring': 722,\n    'Otilde': 778,\n    'zdotaccent': 500,\n    'Ecaron': 667,\n    'Iogonek': 278,\n    'kcommaaccent': 556,\n    'minus': 584,\n    'Icircumflex': 278,\n    'ncaron': 611,\n    'tcommaaccent': 333,\n    'logicalnot': 584,\n    'odieresis': 611,\n    'udieresis': 611,\n    'notequal': 549,\n    'gcommaaccent': 611,\n    'eth': 611,\n    'zcaron': 500,\n    'ncommaaccent': 611,\n    'onesuperior': 333,\n    'imacron': 278,\n    'Euro': 556\n  },\n  'Helvetica-BoldOblique': {\n    'space': 278,\n    'exclam': 333,\n    'quotedbl': 474,\n    'numbersign': 556,\n    'dollar': 556,\n    'percent': 889,\n    'ampersand': 722,\n    'quoteright': 278,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 389,\n    'plus': 584,\n    'comma': 278,\n    'hyphen': 333,\n    'period': 278,\n    'slash': 278,\n    'zero': 556,\n    'one': 556,\n    'two': 556,\n    'three': 556,\n    'four': 556,\n    'five': 556,\n    'six': 556,\n    'seven': 556,\n    'eight': 556,\n    'nine': 556,\n    'colon': 333,\n    'semicolon': 333,\n    'less': 584,\n    'equal': 584,\n    'greater': 584,\n    'question': 611,\n    'at': 975,\n    'A': 722,\n    'B': 722,\n    'C': 722,\n    'D': 722,\n    'E': 667,\n    'F': 611,\n    'G': 778,\n    'H': 722,\n    'I': 278,\n    'J': 556,\n    'K': 722,\n    'L': 611,\n    'M': 833,\n    'N': 722,\n    'O': 778,\n    'P': 667,\n    'Q': 778,\n    'R': 722,\n    'S': 667,\n    'T': 611,\n    'U': 722,\n    'V': 667,\n    'W': 944,\n    'X': 667,\n    'Y': 667,\n    'Z': 611,\n    'bracketleft': 333,\n    'backslash': 278,\n    'bracketright': 333,\n    'asciicircum': 584,\n    'underscore': 556,\n    'quoteleft': 278,\n    'a': 556,\n    'b': 611,\n    'c': 556,\n    'd': 611,\n    'e': 556,\n    'f': 333,\n    'g': 611,\n    'h': 611,\n    'i': 278,\n    'j': 278,\n    'k': 556,\n    'l': 278,\n    'm': 889,\n    'n': 611,\n    'o': 611,\n    'p': 611,\n    'q': 611,\n    'r': 389,\n    's': 556,\n    't': 333,\n    'u': 611,\n    'v': 556,\n    'w': 778,\n    'x': 556,\n    'y': 556,\n    'z': 500,\n    'braceleft': 389,\n    'bar': 280,\n    'braceright': 389,\n    'asciitilde': 584,\n    'exclamdown': 333,\n    'cent': 556,\n    'sterling': 556,\n    'fraction': 167,\n    'yen': 556,\n    'florin': 556,\n    'section': 556,\n    'currency': 556,\n    'quotesingle': 238,\n    'quotedblleft': 500,\n    'guillemotleft': 556,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 611,\n    'fl': 611,\n    'endash': 556,\n    'dagger': 556,\n    'daggerdbl': 556,\n    'periodcentered': 278,\n    'paragraph': 556,\n    'bullet': 350,\n    'quotesinglbase': 278,\n    'quotedblbase': 500,\n    'quotedblright': 500,\n    'guillemotright': 556,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 611,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 1000,\n    'ordfeminine': 370,\n    'Lslash': 611,\n    'Oslash': 778,\n    'OE': 1000,\n    'ordmasculine': 365,\n    'ae': 889,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 611,\n    'oe': 944,\n    'germandbls': 611,\n    'Idieresis': 278,\n    'eacute': 556,\n    'abreve': 556,\n    'uhungarumlaut': 611,\n    'ecaron': 556,\n    'Ydieresis': 667,\n    'divide': 584,\n    'Yacute': 667,\n    'Acircumflex': 722,\n    'aacute': 556,\n    'Ucircumflex': 722,\n    'yacute': 556,\n    'scommaaccent': 556,\n    'ecircumflex': 556,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 556,\n    'Uacute': 722,\n    'uogonek': 611,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 737,\n    'Emacron': 667,\n    'ccaron': 556,\n    'aring': 556,\n    'Ncommaaccent': 722,\n    'lacute': 278,\n    'agrave': 556,\n    'Tcommaaccent': 611,\n    'Cacute': 722,\n    'atilde': 556,\n    'Edotaccent': 667,\n    'scaron': 556,\n    'scedilla': 556,\n    'iacute': 278,\n    'lozenge': 494,\n    'Rcaron': 722,\n    'Gcommaaccent': 778,\n    'ucircumflex': 611,\n    'acircumflex': 556,\n    'Amacron': 722,\n    'rcaron': 389,\n    'ccedilla': 556,\n    'Zdotaccent': 611,\n    'Thorn': 667,\n    'Omacron': 778,\n    'Racute': 722,\n    'Sacute': 667,\n    'dcaron': 743,\n    'Umacron': 722,\n    'uring': 611,\n    'threesuperior': 333,\n    'Ograve': 778,\n    'Agrave': 722,\n    'Abreve': 722,\n    'multiply': 584,\n    'uacute': 611,\n    'Tcaron': 611,\n    'partialdiff': 494,\n    'ydieresis': 556,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 556,\n    'edieresis': 556,\n    'cacute': 556,\n    'nacute': 611,\n    'umacron': 611,\n    'Ncaron': 722,\n    'Iacute': 278,\n    'plusminus': 584,\n    'brokenbar': 280,\n    'registered': 737,\n    'Gbreve': 778,\n    'Idotaccent': 278,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 389,\n    'omacron': 611,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 722,\n    'lcommaaccent': 278,\n    'tcaron': 389,\n    'eogonek': 556,\n    'Uogonek': 722,\n    'Aacute': 722,\n    'Adieresis': 722,\n    'egrave': 556,\n    'zacute': 500,\n    'iogonek': 278,\n    'Oacute': 778,\n    'oacute': 611,\n    'amacron': 556,\n    'sacute': 556,\n    'idieresis': 278,\n    'Ocircumflex': 778,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 611,\n    'twosuperior': 333,\n    'Odieresis': 778,\n    'mu': 611,\n    'igrave': 278,\n    'ohungarumlaut': 611,\n    'Eogonek': 667,\n    'dcroat': 611,\n    'threequarters': 834,\n    'Scedilla': 667,\n    'lcaron': 400,\n    'Kcommaaccent': 722,\n    'Lacute': 611,\n    'trademark': 1000,\n    'edotaccent': 556,\n    'Igrave': 278,\n    'Imacron': 278,\n    'Lcaron': 611,\n    'onehalf': 834,\n    'lessequal': 549,\n    'ocircumflex': 611,\n    'ntilde': 611,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 556,\n    'gbreve': 611,\n    'onequarter': 834,\n    'Scaron': 667,\n    'Scommaaccent': 667,\n    'Ohungarumlaut': 778,\n    'degree': 400,\n    'ograve': 611,\n    'Ccaron': 722,\n    'ugrave': 611,\n    'radical': 549,\n    'Dcaron': 722,\n    'rcommaaccent': 389,\n    'Ntilde': 722,\n    'otilde': 611,\n    'Rcommaaccent': 722,\n    'Lcommaaccent': 611,\n    'Atilde': 722,\n    'Aogonek': 722,\n    'Aring': 722,\n    'Otilde': 778,\n    'zdotaccent': 500,\n    'Ecaron': 667,\n    'Iogonek': 278,\n    'kcommaaccent': 556,\n    'minus': 584,\n    'Icircumflex': 278,\n    'ncaron': 611,\n    'tcommaaccent': 333,\n    'logicalnot': 584,\n    'odieresis': 611,\n    'udieresis': 611,\n    'notequal': 549,\n    'gcommaaccent': 611,\n    'eth': 611,\n    'zcaron': 500,\n    'ncommaaccent': 611,\n    'onesuperior': 333,\n    'imacron': 278,\n    'Euro': 556\n  },\n  'Helvetica-Oblique' : {\n    'space': 278,\n    'exclam': 278,\n    'quotedbl': 355,\n    'numbersign': 556,\n    'dollar': 556,\n    'percent': 889,\n    'ampersand': 667,\n    'quoteright': 222,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 389,\n    'plus': 584,\n    'comma': 278,\n    'hyphen': 333,\n    'period': 278,\n    'slash': 278,\n    'zero': 556,\n    'one': 556,\n    'two': 556,\n    'three': 556,\n    'four': 556,\n    'five': 556,\n    'six': 556,\n    'seven': 556,\n    'eight': 556,\n    'nine': 556,\n    'colon': 278,\n    'semicolon': 278,\n    'less': 584,\n    'equal': 584,\n    'greater': 584,\n    'question': 556,\n    'at': 1015,\n    'A': 667,\n    'B': 667,\n    'C': 722,\n    'D': 722,\n    'E': 667,\n    'F': 611,\n    'G': 778,\n    'H': 722,\n    'I': 278,\n    'J': 500,\n    'K': 667,\n    'L': 556,\n    'M': 833,\n    'N': 722,\n    'O': 778,\n    'P': 667,\n    'Q': 778,\n    'R': 722,\n    'S': 667,\n    'T': 611,\n    'U': 722,\n    'V': 667,\n    'W': 944,\n    'X': 667,\n    'Y': 667,\n    'Z': 611,\n    'bracketleft': 278,\n    'backslash': 278,\n    'bracketright': 278,\n    'asciicircum': 469,\n    'underscore': 556,\n    'quoteleft': 222,\n    'a': 556,\n    'b': 556,\n    'c': 500,\n    'd': 556,\n    'e': 556,\n    'f': 278,\n    'g': 556,\n    'h': 556,\n    'i': 222,\n    'j': 222,\n    'k': 500,\n    'l': 222,\n    'm': 833,\n    'n': 556,\n    'o': 556,\n    'p': 556,\n    'q': 556,\n    'r': 333,\n    's': 500,\n    't': 278,\n    'u': 556,\n    'v': 500,\n    'w': 722,\n    'x': 500,\n    'y': 500,\n    'z': 500,\n    'braceleft': 334,\n    'bar': 260,\n    'braceright': 334,\n    'asciitilde': 584,\n    'exclamdown': 333,\n    'cent': 556,\n    'sterling': 556,\n    'fraction': 167,\n    'yen': 556,\n    'florin': 556,\n    'section': 556,\n    'currency': 556,\n    'quotesingle': 191,\n    'quotedblleft': 333,\n    'guillemotleft': 556,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 500,\n    'fl': 500,\n    'endash': 556,\n    'dagger': 556,\n    'daggerdbl': 556,\n    'periodcentered': 278,\n    'paragraph': 537,\n    'bullet': 350,\n    'quotesinglbase': 222,\n    'quotedblbase': 333,\n    'quotedblright': 333,\n    'guillemotright': 556,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 611,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 1000,\n    'ordfeminine': 370,\n    'Lslash': 556,\n    'Oslash': 778,\n    'OE': 1000,\n    'ordmasculine': 365,\n    'ae': 889,\n    'dotlessi': 278,\n    'lslash': 222,\n    'oslash': 611,\n    'oe': 944,\n    'germandbls': 611,\n    'Idieresis': 278,\n    'eacute': 556,\n    'abreve': 556,\n    'uhungarumlaut': 556,\n    'ecaron': 556,\n    'Ydieresis': 667,\n    'divide': 584,\n    'Yacute': 667,\n    'Acircumflex': 667,\n    'aacute': 556,\n    'Ucircumflex': 722,\n    'yacute': 500,\n    'scommaaccent': 500,\n    'ecircumflex': 556,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 556,\n    'Uacute': 722,\n    'uogonek': 556,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 737,\n    'Emacron': 667,\n    'ccaron': 500,\n    'aring': 556,\n    'Ncommaaccent': 722,\n    'lacute': 222,\n    'agrave': 556,\n    'Tcommaaccent': 611,\n    'Cacute': 722,\n    'atilde': 556,\n    'Edotaccent': 667,\n    'scaron': 500,\n    'scedilla': 500,\n    'iacute': 278,\n    'lozenge': 471,\n    'Rcaron': 722,\n    'Gcommaaccent': 778,\n    'ucircumflex': 556,\n    'acircumflex': 556,\n    'Amacron': 667,\n    'rcaron': 333,\n    'ccedilla': 500,\n    'Zdotaccent': 611,\n    'Thorn': 667,\n    'Omacron': 778,\n    'Racute': 722,\n    'Sacute': 667,\n    'dcaron': 643,\n    'Umacron': 722,\n    'uring': 556,\n    'threesuperior': 333,\n    'Ograve': 778,\n    'Agrave': 667,\n    'Abreve': 667,\n    'multiply': 584,\n    'uacute': 556,\n    'Tcaron': 611,\n    'partialdiff': 476,\n    'ydieresis': 500,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 556,\n    'edieresis': 556,\n    'cacute': 500,\n    'nacute': 556,\n    'umacron': 556,\n    'Ncaron': 722,\n    'Iacute': 278,\n    'plusminus': 584,\n    'brokenbar': 260,\n    'registered': 737,\n    'Gbreve': 778,\n    'Idotaccent': 278,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 333,\n    'omacron': 556,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 722,\n    'lcommaaccent': 222,\n    'tcaron': 317,\n    'eogonek': 556,\n    'Uogonek': 722,\n    'Aacute': 667,\n    'Adieresis': 667,\n    'egrave': 556,\n    'zacute': 500,\n    'iogonek': 222,\n    'Oacute': 778,\n    'oacute': 556,\n    'amacron': 556,\n    'sacute': 500,\n    'idieresis': 278,\n    'Ocircumflex': 778,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 556,\n    'twosuperior': 333,\n    'Odieresis': 778,\n    'mu': 556,\n    'igrave': 278,\n    'ohungarumlaut': 556,\n    'Eogonek': 667,\n    'dcroat': 556,\n    'threequarters': 834,\n    'Scedilla': 667,\n    'lcaron': 299,\n    'Kcommaaccent': 667,\n    'Lacute': 556,\n    'trademark': 1000,\n    'edotaccent': 556,\n    'Igrave': 278,\n    'Imacron': 278,\n    'Lcaron': 556,\n    'onehalf': 834,\n    'lessequal': 549,\n    'ocircumflex': 556,\n    'ntilde': 556,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 556,\n    'gbreve': 556,\n    'onequarter': 834,\n    'Scaron': 667,\n    'Scommaaccent': 667,\n    'Ohungarumlaut': 778,\n    'degree': 400,\n    'ograve': 556,\n    'Ccaron': 722,\n    'ugrave': 556,\n    'radical': 453,\n    'Dcaron': 722,\n    'rcommaaccent': 333,\n    'Ntilde': 722,\n    'otilde': 556,\n    'Rcommaaccent': 722,\n    'Lcommaaccent': 556,\n    'Atilde': 667,\n    'Aogonek': 667,\n    'Aring': 667,\n    'Otilde': 778,\n    'zdotaccent': 500,\n    'Ecaron': 667,\n    'Iogonek': 278,\n    'kcommaaccent': 500,\n    'minus': 584,\n    'Icircumflex': 278,\n    'ncaron': 556,\n    'tcommaaccent': 278,\n    'logicalnot': 584,\n    'odieresis': 556,\n    'udieresis': 556,\n    'notequal': 549,\n    'gcommaaccent': 556,\n    'eth': 556,\n    'zcaron': 500,\n    'ncommaaccent': 556,\n    'onesuperior': 333,\n    'imacron': 278,\n    'Euro': 556\n  },\n  'Symbol': {\n    'space': 250,\n    'exclam': 333,\n    'universal': 713,\n    'numbersign': 500,\n    'existential': 549,\n    'percent': 833,\n    'ampersand': 778,\n    'suchthat': 439,\n    'parenleft': 333,\n    'parenright': 333,\n    'asteriskmath': 500,\n    'plus': 549,\n    'comma': 250,\n    'minus': 549,\n    'period': 250,\n    'slash': 278,\n    'zero': 500,\n    'one': 500,\n    'two': 500,\n    'three': 500,\n    'four': 500,\n    'five': 500,\n    'six': 500,\n    'seven': 500,\n    'eight': 500,\n    'nine': 500,\n    'colon': 278,\n    'semicolon': 278,\n    'less': 549,\n    'equal': 549,\n    'greater': 549,\n    'question': 444,\n    'congruent': 549,\n    'Alpha': 722,\n    'Beta': 667,\n    'Chi': 722,\n    'Delta': 612,\n    'Epsilon': 611,\n    'Phi': 763,\n    'Gamma': 603,\n    'Eta': 722,\n    'Iota': 333,\n    'theta1': 631,\n    'Kappa': 722,\n    'Lambda': 686,\n    'Mu': 889,\n    'Nu': 722,\n    'Omicron': 722,\n    'Pi': 768,\n    'Theta': 741,\n    'Rho': 556,\n    'Sigma': 592,\n    'Tau': 611,\n    'Upsilon': 690,\n    'sigma1': 439,\n    'Omega': 768,\n    'Xi': 645,\n    'Psi': 795,\n    'Zeta': 611,\n    'bracketleft': 333,\n    'therefore': 863,\n    'bracketright': 333,\n    'perpendicular': 658,\n    'underscore': 500,\n    'radicalex': 500,\n    'alpha': 631,\n    'beta': 549,\n    'chi': 549,\n    'delta': 494,\n    'epsilon': 439,\n    'phi': 521,\n    'gamma': 411,\n    'eta': 603,\n    'iota': 329,\n    'phi1': 603,\n    'kappa': 549,\n    'lambda': 549,\n    'mu': 576,\n    'nu': 521,\n    'omicron': 549,\n    'pi': 549,\n    'theta': 521,\n    'rho': 549,\n    'sigma': 603,\n    'tau': 439,\n    'upsilon': 576,\n    'omega1': 713,\n    'omega': 686,\n    'xi': 493,\n    'psi': 686,\n    'zeta': 494,\n    'braceleft': 480,\n    'bar': 200,\n    'braceright': 480,\n    'similar': 549,\n    'Euro': 750,\n    'Upsilon1': 620,\n    'minute': 247,\n    'lessequal': 549,\n    'fraction': 167,\n    'infinity': 713,\n    'florin': 500,\n    'club': 753,\n    'diamond': 753,\n    'heart': 753,\n    'spade': 753,\n    'arrowboth': 1042,\n    'arrowleft': 987,\n    'arrowup': 603,\n    'arrowright': 987,\n    'arrowdown': 603,\n    'degree': 400,\n    'plusminus': 549,\n    'second': 411,\n    'greaterequal': 549,\n    'multiply': 549,\n    'proportional': 713,\n    'partialdiff': 494,\n    'bullet': 460,\n    'divide': 549,\n    'notequal': 549,\n    'equivalence': 549,\n    'approxequal': 549,\n    'ellipsis': 1000,\n    'arrowvertex': 603,\n    'arrowhorizex': 1000,\n    'carriagereturn': 658,\n    'aleph': 823,\n    'Ifraktur': 686,\n    'Rfraktur': 795,\n    'weierstrass': 987,\n    'circlemultiply': 768,\n    'circleplus': 768,\n    'emptyset': 823,\n    'intersection': 768,\n    'union': 768,\n    'propersuperset': 713,\n    'reflexsuperset': 713,\n    'notsubset': 713,\n    'propersubset': 713,\n    'reflexsubset': 713,\n    'element': 713,\n    'notelement': 713,\n    'angle': 768,\n    'gradient': 713,\n    'registerserif': 790,\n    'copyrightserif': 790,\n    'trademarkserif': 890,\n    'product': 823,\n    'radical': 549,\n    'dotmath': 250,\n    'logicalnot': 713,\n    'logicaland': 603,\n    'logicalor': 603,\n    'arrowdblboth': 1042,\n    'arrowdblleft': 987,\n    'arrowdblup': 603,\n    'arrowdblright': 987,\n    'arrowdbldown': 603,\n    'lozenge': 494,\n    'angleleft': 329,\n    'registersans': 790,\n    'copyrightsans': 790,\n    'trademarksans': 786,\n    'summation': 713,\n    'parenlefttp': 384,\n    'parenleftex': 384,\n    'parenleftbt': 384,\n    'bracketlefttp': 384,\n    'bracketleftex': 384,\n    'bracketleftbt': 384,\n    'bracelefttp': 494,\n    'braceleftmid': 494,\n    'braceleftbt': 494,\n    'braceex': 494,\n    'angleright': 329,\n    'integral': 274,\n    'integraltp': 686,\n    'integralex': 686,\n    'integralbt': 686,\n    'parenrighttp': 384,\n    'parenrightex': 384,\n    'parenrightbt': 384,\n    'bracketrighttp': 384,\n    'bracketrightex': 384,\n    'bracketrightbt': 384,\n    'bracerighttp': 494,\n    'bracerightmid': 494,\n    'bracerightbt': 494,\n    'apple': 790\n  },\n  'Times-Roman': {\n    'space': 250,\n    'exclam': 333,\n    'quotedbl': 408,\n    'numbersign': 500,\n    'dollar': 500,\n    'percent': 833,\n    'ampersand': 778,\n    'quoteright': 333,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 500,\n    'plus': 564,\n    'comma': 250,\n    'hyphen': 333,\n    'period': 250,\n    'slash': 278,\n    'zero': 500,\n    'one': 500,\n    'two': 500,\n    'three': 500,\n    'four': 500,\n    'five': 500,\n    'six': 500,\n    'seven': 500,\n    'eight': 500,\n    'nine': 500,\n    'colon': 278,\n    'semicolon': 278,\n    'less': 564,\n    'equal': 564,\n    'greater': 564,\n    'question': 444,\n    'at': 921,\n    'A': 722,\n    'B': 667,\n    'C': 667,\n    'D': 722,\n    'E': 611,\n    'F': 556,\n    'G': 722,\n    'H': 722,\n    'I': 333,\n    'J': 389,\n    'K': 722,\n    'L': 611,\n    'M': 889,\n    'N': 722,\n    'O': 722,\n    'P': 556,\n    'Q': 722,\n    'R': 667,\n    'S': 556,\n    'T': 611,\n    'U': 722,\n    'V': 722,\n    'W': 944,\n    'X': 722,\n    'Y': 722,\n    'Z': 611,\n    'bracketleft': 333,\n    'backslash': 278,\n    'bracketright': 333,\n    'asciicircum': 469,\n    'underscore': 500,\n    'quoteleft': 333,\n    'a': 444,\n    'b': 500,\n    'c': 444,\n    'd': 500,\n    'e': 444,\n    'f': 333,\n    'g': 500,\n    'h': 500,\n    'i': 278,\n    'j': 278,\n    'k': 500,\n    'l': 278,\n    'm': 778,\n    'n': 500,\n    'o': 500,\n    'p': 500,\n    'q': 500,\n    'r': 333,\n    's': 389,\n    't': 278,\n    'u': 500,\n    'v': 500,\n    'w': 722,\n    'x': 500,\n    'y': 500,\n    'z': 444,\n    'braceleft': 480,\n    'bar': 200,\n    'braceright': 480,\n    'asciitilde': 541,\n    'exclamdown': 333,\n    'cent': 500,\n    'sterling': 500,\n    'fraction': 167,\n    'yen': 500,\n    'florin': 500,\n    'section': 500,\n    'currency': 500,\n    'quotesingle': 180,\n    'quotedblleft': 444,\n    'guillemotleft': 500,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 556,\n    'fl': 556,\n    'endash': 500,\n    'dagger': 500,\n    'daggerdbl': 500,\n    'periodcentered': 250,\n    'paragraph': 453,\n    'bullet': 350,\n    'quotesinglbase': 333,\n    'quotedblbase': 444,\n    'quotedblright': 444,\n    'guillemotright': 500,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 444,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 889,\n    'ordfeminine': 276,\n    'Lslash': 611,\n    'Oslash': 722,\n    'OE': 889,\n    'ordmasculine': 310,\n    'ae': 667,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 500,\n    'oe': 722,\n    'germandbls': 500,\n    'Idieresis': 333,\n    'eacute': 444,\n    'abreve': 444,\n    'uhungarumlaut': 500,\n    'ecaron': 444,\n    'Ydieresis': 722,\n    'divide': 564,\n    'Yacute': 722,\n    'Acircumflex': 722,\n    'aacute': 444,\n    'Ucircumflex': 722,\n    'yacute': 500,\n    'scommaaccent': 389,\n    'ecircumflex': 444,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 444,\n    'Uacute': 722,\n    'uogonek': 500,\n    'Edieresis': 611,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 760,\n    'Emacron': 611,\n    'ccaron': 444,\n    'aring': 444,\n    'Ncommaaccent': 722,\n    'lacute': 278,\n    'agrave': 444,\n    'Tcommaaccent': 611,\n    'Cacute': 667,\n    'atilde': 444,\n    'Edotaccent': 611,\n    'scaron': 389,\n    'scedilla': 389,\n    'iacute': 278,\n    'lozenge': 471,\n    'Rcaron': 667,\n    'Gcommaaccent': 722,\n    'ucircumflex': 500,\n    'acircumflex': 444,\n    'Amacron': 722,\n    'rcaron': 333,\n    'ccedilla': 444,\n    'Zdotaccent': 611,\n    'Thorn': 556,\n    'Omacron': 722,\n    'Racute': 667,\n    'Sacute': 556,\n    'dcaron': 588,\n    'Umacron': 722,\n    'uring': 500,\n    'threesuperior': 300,\n    'Ograve': 722,\n    'Agrave': 722,\n    'Abreve': 722,\n    'multiply': 564,\n    'uacute': 500,\n    'Tcaron': 611,\n    'partialdiff': 476,\n    'ydieresis': 500,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 611,\n    'adieresis': 444,\n    'edieresis': 444,\n    'cacute': 444,\n    'nacute': 500,\n    'umacron': 500,\n    'Ncaron': 722,\n    'Iacute': 333,\n    'plusminus': 564,\n    'brokenbar': 200,\n    'registered': 760,\n    'Gbreve': 722,\n    'Idotaccent': 333,\n    'summation': 600,\n    'Egrave': 611,\n    'racute': 333,\n    'omacron': 500,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 667,\n    'lcommaaccent': 278,\n    'tcaron': 326,\n    'eogonek': 444,\n    'Uogonek': 722,\n    'Aacute': 722,\n    'Adieresis': 722,\n    'egrave': 444,\n    'zacute': 444,\n    'iogonek': 278,\n    'Oacute': 722,\n    'oacute': 500,\n    'amacron': 444,\n    'sacute': 389,\n    'idieresis': 278,\n    'Ocircumflex': 722,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 500,\n    'twosuperior': 300,\n    'Odieresis': 722,\n    'mu': 500,\n    'igrave': 278,\n    'ohungarumlaut': 500,\n    'Eogonek': 611,\n    'dcroat': 500,\n    'threequarters': 750,\n    'Scedilla': 556,\n    'lcaron': 344,\n    'Kcommaaccent': 722,\n    'Lacute': 611,\n    'trademark': 980,\n    'edotaccent': 444,\n    'Igrave': 333,\n    'Imacron': 333,\n    'Lcaron': 611,\n    'onehalf': 750,\n    'lessequal': 549,\n    'ocircumflex': 500,\n    'ntilde': 500,\n    'Uhungarumlaut': 722,\n    'Eacute': 611,\n    'emacron': 444,\n    'gbreve': 500,\n    'onequarter': 750,\n    'Scaron': 556,\n    'Scommaaccent': 556,\n    'Ohungarumlaut': 722,\n    'degree': 400,\n    'ograve': 500,\n    'Ccaron': 667,\n    'ugrave': 500,\n    'radical': 453,\n    'Dcaron': 722,\n    'rcommaaccent': 333,\n    'Ntilde': 722,\n    'otilde': 500,\n    'Rcommaaccent': 667,\n    'Lcommaaccent': 611,\n    'Atilde': 722,\n    'Aogonek': 722,\n    'Aring': 722,\n    'Otilde': 722,\n    'zdotaccent': 444,\n    'Ecaron': 611,\n    'Iogonek': 333,\n    'kcommaaccent': 500,\n    'minus': 564,\n    'Icircumflex': 333,\n    'ncaron': 500,\n    'tcommaaccent': 278,\n    'logicalnot': 564,\n    'odieresis': 500,\n    'udieresis': 500,\n    'notequal': 549,\n    'gcommaaccent': 500,\n    'eth': 500,\n    'zcaron': 444,\n    'ncommaaccent': 500,\n    'onesuperior': 300,\n    'imacron': 278,\n    'Euro': 500\n  },\n  'Times-Bold': {\n    'space': 250,\n    'exclam': 333,\n    'quotedbl': 555,\n    'numbersign': 500,\n    'dollar': 500,\n    'percent': 1000,\n    'ampersand': 833,\n    'quoteright': 333,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 500,\n    'plus': 570,\n    'comma': 250,\n    'hyphen': 333,\n    'period': 250,\n    'slash': 278,\n    'zero': 500,\n    'one': 500,\n    'two': 500,\n    'three': 500,\n    'four': 500,\n    'five': 500,\n    'six': 500,\n    'seven': 500,\n    'eight': 500,\n    'nine': 500,\n    'colon': 333,\n    'semicolon': 333,\n    'less': 570,\n    'equal': 570,\n    'greater': 570,\n    'question': 500,\n    'at': 930,\n    'A': 722,\n    'B': 667,\n    'C': 722,\n    'D': 722,\n    'E': 667,\n    'F': 611,\n    'G': 778,\n    'H': 778,\n    'I': 389,\n    'J': 500,\n    'K': 778,\n    'L': 667,\n    'M': 944,\n    'N': 722,\n    'O': 778,\n    'P': 611,\n    'Q': 778,\n    'R': 722,\n    'S': 556,\n    'T': 667,\n    'U': 722,\n    'V': 722,\n    'W': 1000,\n    'X': 722,\n    'Y': 722,\n    'Z': 667,\n    'bracketleft': 333,\n    'backslash': 278,\n    'bracketright': 333,\n    'asciicircum': 581,\n    'underscore': 500,\n    'quoteleft': 333,\n    'a': 500,\n    'b': 556,\n    'c': 444,\n    'd': 556,\n    'e': 444,\n    'f': 333,\n    'g': 500,\n    'h': 556,\n    'i': 278,\n    'j': 333,\n    'k': 556,\n    'l': 278,\n    'm': 833,\n    'n': 556,\n    'o': 500,\n    'p': 556,\n    'q': 556,\n    'r': 444,\n    's': 389,\n    't': 333,\n    'u': 556,\n    'v': 500,\n    'w': 722,\n    'x': 500,\n    'y': 500,\n    'z': 444,\n    'braceleft': 394,\n    'bar': 220,\n    'braceright': 394,\n    'asciitilde': 520,\n    'exclamdown': 333,\n    'cent': 500,\n    'sterling': 500,\n    'fraction': 167,\n    'yen': 500,\n    'florin': 500,\n    'section': 500,\n    'currency': 500,\n    'quotesingle': 278,\n    'quotedblleft': 500,\n    'guillemotleft': 500,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 556,\n    'fl': 556,\n    'endash': 500,\n    'dagger': 500,\n    'daggerdbl': 500,\n    'periodcentered': 250,\n    'paragraph': 540,\n    'bullet': 350,\n    'quotesinglbase': 333,\n    'quotedblbase': 500,\n    'quotedblright': 500,\n    'guillemotright': 500,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 500,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 1000,\n    'ordfeminine': 300,\n    'Lslash': 667,\n    'Oslash': 778,\n    'OE': 1000,\n    'ordmasculine': 330,\n    'ae': 722,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 500,\n    'oe': 722,\n    'germandbls': 556,\n    'Idieresis': 389,\n    'eacute': 444,\n    'abreve': 500,\n    'uhungarumlaut': 556,\n    'ecaron': 444,\n    'Ydieresis': 722,\n    'divide': 570,\n    'Yacute': 722,\n    'Acircumflex': 722,\n    'aacute': 500,\n    'Ucircumflex': 722,\n    'yacute': 500,\n    'scommaaccent': 389,\n    'ecircumflex': 444,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 500,\n    'Uacute': 722,\n    'uogonek': 556,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 747,\n    'Emacron': 667,\n    'ccaron': 444,\n    'aring': 500,\n    'Ncommaaccent': 722,\n    'lacute': 278,\n    'agrave': 500,\n    'Tcommaaccent': 667,\n    'Cacute': 722,\n    'atilde': 500,\n    'Edotaccent': 667,\n    'scaron': 389,\n    'scedilla': 389,\n    'iacute': 278,\n    'lozenge': 494,\n    'Rcaron': 722,\n    'Gcommaaccent': 778,\n    'ucircumflex': 556,\n    'acircumflex': 500,\n    'Amacron': 722,\n    'rcaron': 444,\n    'ccedilla': 444,\n    'Zdotaccent': 667,\n    'Thorn': 611,\n    'Omacron': 778,\n    'Racute': 722,\n    'Sacute': 556,\n    'dcaron': 672,\n    'Umacron': 722,\n    'uring': 556,\n    'threesuperior': 300,\n    'Ograve': 778,\n    'Agrave': 722,\n    'Abreve': 722,\n    'multiply': 570,\n    'uacute': 556,\n    'Tcaron': 667,\n    'partialdiff': 494,\n    'ydieresis': 500,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 500,\n    'edieresis': 444,\n    'cacute': 444,\n    'nacute': 556,\n    'umacron': 556,\n    'Ncaron': 722,\n    'Iacute': 389,\n    'plusminus': 570,\n    'brokenbar': 220,\n    'registered': 747,\n    'Gbreve': 778,\n    'Idotaccent': 389,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 444,\n    'omacron': 500,\n    'Zacute': 667,\n    'Zcaron': 667,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 722,\n    'lcommaaccent': 278,\n    'tcaron': 416,\n    'eogonek': 444,\n    'Uogonek': 722,\n    'Aacute': 722,\n    'Adieresis': 722,\n    'egrave': 444,\n    'zacute': 444,\n    'iogonek': 278,\n    'Oacute': 778,\n    'oacute': 500,\n    'amacron': 500,\n    'sacute': 389,\n    'idieresis': 278,\n    'Ocircumflex': 778,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 556,\n    'twosuperior': 300,\n    'Odieresis': 778,\n    'mu': 556,\n    'igrave': 278,\n    'ohungarumlaut': 500,\n    'Eogonek': 667,\n    'dcroat': 556,\n    'threequarters': 750,\n    'Scedilla': 556,\n    'lcaron': 394,\n    'Kcommaaccent': 778,\n    'Lacute': 667,\n    'trademark': 1000,\n    'edotaccent': 444,\n    'Igrave': 389,\n    'Imacron': 389,\n    'Lcaron': 667,\n    'onehalf': 750,\n    'lessequal': 549,\n    'ocircumflex': 500,\n    'ntilde': 556,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 444,\n    'gbreve': 500,\n    'onequarter': 750,\n    'Scaron': 556,\n    'Scommaaccent': 556,\n    'Ohungarumlaut': 778,\n    'degree': 400,\n    'ograve': 500,\n    'Ccaron': 722,\n    'ugrave': 556,\n    'radical': 549,\n    'Dcaron': 722,\n    'rcommaaccent': 444,\n    'Ntilde': 722,\n    'otilde': 500,\n    'Rcommaaccent': 722,\n    'Lcommaaccent': 667,\n    'Atilde': 722,\n    'Aogonek': 722,\n    'Aring': 722,\n    'Otilde': 778,\n    'zdotaccent': 444,\n    'Ecaron': 667,\n    'Iogonek': 389,\n    'kcommaaccent': 556,\n    'minus': 570,\n    'Icircumflex': 389,\n    'ncaron': 556,\n    'tcommaaccent': 333,\n    'logicalnot': 570,\n    'odieresis': 500,\n    'udieresis': 556,\n    'notequal': 549,\n    'gcommaaccent': 500,\n    'eth': 500,\n    'zcaron': 444,\n    'ncommaaccent': 556,\n    'onesuperior': 300,\n    'imacron': 278,\n    'Euro': 500\n  },\n  'Times-BoldItalic': {\n    'space': 250,\n    'exclam': 389,\n    'quotedbl': 555,\n    'numbersign': 500,\n    'dollar': 500,\n    'percent': 833,\n    'ampersand': 778,\n    'quoteright': 333,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 500,\n    'plus': 570,\n    'comma': 250,\n    'hyphen': 333,\n    'period': 250,\n    'slash': 278,\n    'zero': 500,\n    'one': 500,\n    'two': 500,\n    'three': 500,\n    'four': 500,\n    'five': 500,\n    'six': 500,\n    'seven': 500,\n    'eight': 500,\n    'nine': 500,\n    'colon': 333,\n    'semicolon': 333,\n    'less': 570,\n    'equal': 570,\n    'greater': 570,\n    'question': 500,\n    'at': 832,\n    'A': 667,\n    'B': 667,\n    'C': 667,\n    'D': 722,\n    'E': 667,\n    'F': 667,\n    'G': 722,\n    'H': 778,\n    'I': 389,\n    'J': 500,\n    'K': 667,\n    'L': 611,\n    'M': 889,\n    'N': 722,\n    'O': 722,\n    'P': 611,\n    'Q': 722,\n    'R': 667,\n    'S': 556,\n    'T': 611,\n    'U': 722,\n    'V': 667,\n    'W': 889,\n    'X': 667,\n    'Y': 611,\n    'Z': 611,\n    'bracketleft': 333,\n    'backslash': 278,\n    'bracketright': 333,\n    'asciicircum': 570,\n    'underscore': 500,\n    'quoteleft': 333,\n    'a': 500,\n    'b': 500,\n    'c': 444,\n    'd': 500,\n    'e': 444,\n    'f': 333,\n    'g': 500,\n    'h': 556,\n    'i': 278,\n    'j': 278,\n    'k': 500,\n    'l': 278,\n    'm': 778,\n    'n': 556,\n    'o': 500,\n    'p': 500,\n    'q': 500,\n    'r': 389,\n    's': 389,\n    't': 278,\n    'u': 556,\n    'v': 444,\n    'w': 667,\n    'x': 500,\n    'y': 444,\n    'z': 389,\n    'braceleft': 348,\n    'bar': 220,\n    'braceright': 348,\n    'asciitilde': 570,\n    'exclamdown': 389,\n    'cent': 500,\n    'sterling': 500,\n    'fraction': 167,\n    'yen': 500,\n    'florin': 500,\n    'section': 500,\n    'currency': 500,\n    'quotesingle': 278,\n    'quotedblleft': 500,\n    'guillemotleft': 500,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 556,\n    'fl': 556,\n    'endash': 500,\n    'dagger': 500,\n    'daggerdbl': 500,\n    'periodcentered': 250,\n    'paragraph': 500,\n    'bullet': 350,\n    'quotesinglbase': 333,\n    'quotedblbase': 500,\n    'quotedblright': 500,\n    'guillemotright': 500,\n    'ellipsis': 1000,\n    'perthousand': 1000,\n    'questiondown': 500,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 1000,\n    'AE': 944,\n    'ordfeminine': 266,\n    'Lslash': 611,\n    'Oslash': 722,\n    'OE': 944,\n    'ordmasculine': 300,\n    'ae': 722,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 500,\n    'oe': 722,\n    'germandbls': 500,\n    'Idieresis': 389,\n    'eacute': 444,\n    'abreve': 500,\n    'uhungarumlaut': 556,\n    'ecaron': 444,\n    'Ydieresis': 611,\n    'divide': 570,\n    'Yacute': 611,\n    'Acircumflex': 667,\n    'aacute': 500,\n    'Ucircumflex': 722,\n    'yacute': 444,\n    'scommaaccent': 389,\n    'ecircumflex': 444,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 500,\n    'Uacute': 722,\n    'uogonek': 556,\n    'Edieresis': 667,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 747,\n    'Emacron': 667,\n    'ccaron': 444,\n    'aring': 500,\n    'Ncommaaccent': 722,\n    'lacute': 278,\n    'agrave': 500,\n    'Tcommaaccent': 611,\n    'Cacute': 667,\n    'atilde': 500,\n    'Edotaccent': 667,\n    'scaron': 389,\n    'scedilla': 389,\n    'iacute': 278,\n    'lozenge': 494,\n    'Rcaron': 667,\n    'Gcommaaccent': 722,\n    'ucircumflex': 556,\n    'acircumflex': 500,\n    'Amacron': 667,\n    'rcaron': 389,\n    'ccedilla': 444,\n    'Zdotaccent': 611,\n    'Thorn': 611,\n    'Omacron': 722,\n    'Racute': 667,\n    'Sacute': 556,\n    'dcaron': 608,\n    'Umacron': 722,\n    'uring': 556,\n    'threesuperior': 300,\n    'Ograve': 722,\n    'Agrave': 667,\n    'Abreve': 667,\n    'multiply': 570,\n    'uacute': 556,\n    'Tcaron': 611,\n    'partialdiff': 494,\n    'ydieresis': 444,\n    'Nacute': 722,\n    'icircumflex': 278,\n    'Ecircumflex': 667,\n    'adieresis': 500,\n    'edieresis': 444,\n    'cacute': 444,\n    'nacute': 556,\n    'umacron': 556,\n    'Ncaron': 722,\n    'Iacute': 389,\n    'plusminus': 570,\n    'brokenbar': 220,\n    'registered': 747,\n    'Gbreve': 722,\n    'Idotaccent': 389,\n    'summation': 600,\n    'Egrave': 667,\n    'racute': 389,\n    'omacron': 500,\n    'Zacute': 611,\n    'Zcaron': 611,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 667,\n    'lcommaaccent': 278,\n    'tcaron': 366,\n    'eogonek': 444,\n    'Uogonek': 722,\n    'Aacute': 667,\n    'Adieresis': 667,\n    'egrave': 444,\n    'zacute': 389,\n    'iogonek': 278,\n    'Oacute': 722,\n    'oacute': 500,\n    'amacron': 500,\n    'sacute': 389,\n    'idieresis': 278,\n    'Ocircumflex': 722,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 500,\n    'twosuperior': 300,\n    'Odieresis': 722,\n    'mu': 576,\n    'igrave': 278,\n    'ohungarumlaut': 500,\n    'Eogonek': 667,\n    'dcroat': 500,\n    'threequarters': 750,\n    'Scedilla': 556,\n    'lcaron': 382,\n    'Kcommaaccent': 667,\n    'Lacute': 611,\n    'trademark': 1000,\n    'edotaccent': 444,\n    'Igrave': 389,\n    'Imacron': 389,\n    'Lcaron': 611,\n    'onehalf': 750,\n    'lessequal': 549,\n    'ocircumflex': 500,\n    'ntilde': 556,\n    'Uhungarumlaut': 722,\n    'Eacute': 667,\n    'emacron': 444,\n    'gbreve': 500,\n    'onequarter': 750,\n    'Scaron': 556,\n    'Scommaaccent': 556,\n    'Ohungarumlaut': 722,\n    'degree': 400,\n    'ograve': 500,\n    'Ccaron': 667,\n    'ugrave': 556,\n    'radical': 549,\n    'Dcaron': 722,\n    'rcommaaccent': 389,\n    'Ntilde': 722,\n    'otilde': 500,\n    'Rcommaaccent': 667,\n    'Lcommaaccent': 611,\n    'Atilde': 667,\n    'Aogonek': 667,\n    'Aring': 667,\n    'Otilde': 722,\n    'zdotaccent': 389,\n    'Ecaron': 667,\n    'Iogonek': 389,\n    'kcommaaccent': 500,\n    'minus': 606,\n    'Icircumflex': 389,\n    'ncaron': 556,\n    'tcommaaccent': 278,\n    'logicalnot': 606,\n    'odieresis': 500,\n    'udieresis': 556,\n    'notequal': 549,\n    'gcommaaccent': 500,\n    'eth': 500,\n    'zcaron': 389,\n    'ncommaaccent': 556,\n    'onesuperior': 300,\n    'imacron': 278,\n    'Euro': 500\n  },\n  'Times-Italic': {\n    'space': 250,\n    'exclam': 333,\n    'quotedbl': 420,\n    'numbersign': 500,\n    'dollar': 500,\n    'percent': 833,\n    'ampersand': 778,\n    'quoteright': 333,\n    'parenleft': 333,\n    'parenright': 333,\n    'asterisk': 500,\n    'plus': 675,\n    'comma': 250,\n    'hyphen': 333,\n    'period': 250,\n    'slash': 278,\n    'zero': 500,\n    'one': 500,\n    'two': 500,\n    'three': 500,\n    'four': 500,\n    'five': 500,\n    'six': 500,\n    'seven': 500,\n    'eight': 500,\n    'nine': 500,\n    'colon': 333,\n    'semicolon': 333,\n    'less': 675,\n    'equal': 675,\n    'greater': 675,\n    'question': 500,\n    'at': 920,\n    'A': 611,\n    'B': 611,\n    'C': 667,\n    'D': 722,\n    'E': 611,\n    'F': 611,\n    'G': 722,\n    'H': 722,\n    'I': 333,\n    'J': 444,\n    'K': 667,\n    'L': 556,\n    'M': 833,\n    'N': 667,\n    'O': 722,\n    'P': 611,\n    'Q': 722,\n    'R': 611,\n    'S': 500,\n    'T': 556,\n    'U': 722,\n    'V': 611,\n    'W': 833,\n    'X': 611,\n    'Y': 556,\n    'Z': 556,\n    'bracketleft': 389,\n    'backslash': 278,\n    'bracketright': 389,\n    'asciicircum': 422,\n    'underscore': 500,\n    'quoteleft': 333,\n    'a': 500,\n    'b': 500,\n    'c': 444,\n    'd': 500,\n    'e': 444,\n    'f': 278,\n    'g': 500,\n    'h': 500,\n    'i': 278,\n    'j': 278,\n    'k': 444,\n    'l': 278,\n    'm': 722,\n    'n': 500,\n    'o': 500,\n    'p': 500,\n    'q': 500,\n    'r': 389,\n    's': 389,\n    't': 278,\n    'u': 500,\n    'v': 444,\n    'w': 667,\n    'x': 444,\n    'y': 444,\n    'z': 389,\n    'braceleft': 400,\n    'bar': 275,\n    'braceright': 400,\n    'asciitilde': 541,\n    'exclamdown': 389,\n    'cent': 500,\n    'sterling': 500,\n    'fraction': 167,\n    'yen': 500,\n    'florin': 500,\n    'section': 500,\n    'currency': 500,\n    'quotesingle': 214,\n    'quotedblleft': 556,\n    'guillemotleft': 500,\n    'guilsinglleft': 333,\n    'guilsinglright': 333,\n    'fi': 500,\n    'fl': 500,\n    'endash': 500,\n    'dagger': 500,\n    'daggerdbl': 500,\n    'periodcentered': 250,\n    'paragraph': 523,\n    'bullet': 350,\n    'quotesinglbase': 333,\n    'quotedblbase': 556,\n    'quotedblright': 556,\n    'guillemotright': 500,\n    'ellipsis': 889,\n    'perthousand': 1000,\n    'questiondown': 500,\n    'grave': 333,\n    'acute': 333,\n    'circumflex': 333,\n    'tilde': 333,\n    'macron': 333,\n    'breve': 333,\n    'dotaccent': 333,\n    'dieresis': 333,\n    'ring': 333,\n    'cedilla': 333,\n    'hungarumlaut': 333,\n    'ogonek': 333,\n    'caron': 333,\n    'emdash': 889,\n    'AE': 889,\n    'ordfeminine': 276,\n    'Lslash': 556,\n    'Oslash': 722,\n    'OE': 944,\n    'ordmasculine': 310,\n    'ae': 667,\n    'dotlessi': 278,\n    'lslash': 278,\n    'oslash': 500,\n    'oe': 667,\n    'germandbls': 500,\n    'Idieresis': 333,\n    'eacute': 444,\n    'abreve': 500,\n    'uhungarumlaut': 500,\n    'ecaron': 444,\n    'Ydieresis': 556,\n    'divide': 675,\n    'Yacute': 556,\n    'Acircumflex': 611,\n    'aacute': 500,\n    'Ucircumflex': 722,\n    'yacute': 444,\n    'scommaaccent': 389,\n    'ecircumflex': 444,\n    'Uring': 722,\n    'Udieresis': 722,\n    'aogonek': 500,\n    'Uacute': 722,\n    'uogonek': 500,\n    'Edieresis': 611,\n    'Dcroat': 722,\n    'commaaccent': 250,\n    'copyright': 760,\n    'Emacron': 611,\n    'ccaron': 444,\n    'aring': 500,\n    'Ncommaaccent': 667,\n    'lacute': 278,\n    'agrave': 500,\n    'Tcommaaccent': 556,\n    'Cacute': 667,\n    'atilde': 500,\n    'Edotaccent': 611,\n    'scaron': 389,\n    'scedilla': 389,\n    'iacute': 278,\n    'lozenge': 471,\n    'Rcaron': 611,\n    'Gcommaaccent': 722,\n    'ucircumflex': 500,\n    'acircumflex': 500,\n    'Amacron': 611,\n    'rcaron': 389,\n    'ccedilla': 444,\n    'Zdotaccent': 556,\n    'Thorn': 611,\n    'Omacron': 722,\n    'Racute': 611,\n    'Sacute': 500,\n    'dcaron': 544,\n    'Umacron': 722,\n    'uring': 500,\n    'threesuperior': 300,\n    'Ograve': 722,\n    'Agrave': 611,\n    'Abreve': 611,\n    'multiply': 675,\n    'uacute': 500,\n    'Tcaron': 556,\n    'partialdiff': 476,\n    'ydieresis': 444,\n    'Nacute': 667,\n    'icircumflex': 278,\n    'Ecircumflex': 611,\n    'adieresis': 500,\n    'edieresis': 444,\n    'cacute': 444,\n    'nacute': 500,\n    'umacron': 500,\n    'Ncaron': 667,\n    'Iacute': 333,\n    'plusminus': 675,\n    'brokenbar': 275,\n    'registered': 760,\n    'Gbreve': 722,\n    'Idotaccent': 333,\n    'summation': 600,\n    'Egrave': 611,\n    'racute': 389,\n    'omacron': 500,\n    'Zacute': 556,\n    'Zcaron': 556,\n    'greaterequal': 549,\n    'Eth': 722,\n    'Ccedilla': 667,\n    'lcommaaccent': 278,\n    'tcaron': 300,\n    'eogonek': 444,\n    'Uogonek': 722,\n    'Aacute': 611,\n    'Adieresis': 611,\n    'egrave': 444,\n    'zacute': 389,\n    'iogonek': 278,\n    'Oacute': 722,\n    'oacute': 500,\n    'amacron': 500,\n    'sacute': 389,\n    'idieresis': 278,\n    'Ocircumflex': 722,\n    'Ugrave': 722,\n    'Delta': 612,\n    'thorn': 500,\n    'twosuperior': 300,\n    'Odieresis': 722,\n    'mu': 500,\n    'igrave': 278,\n    'ohungarumlaut': 500,\n    'Eogonek': 611,\n    'dcroat': 500,\n    'threequarters': 750,\n    'Scedilla': 500,\n    'lcaron': 300,\n    'Kcommaaccent': 667,\n    'Lacute': 556,\n    'trademark': 980,\n    'edotaccent': 444,\n    'Igrave': 333,\n    'Imacron': 333,\n    'Lcaron': 611,\n    'onehalf': 750,\n    'lessequal': 549,\n    'ocircumflex': 500,\n    'ntilde': 500,\n    'Uhungarumlaut': 722,\n    'Eacute': 611,\n    'emacron': 444,\n    'gbreve': 500,\n    'onequarter': 750,\n    'Scaron': 500,\n    'Scommaaccent': 500,\n    'Ohungarumlaut': 722,\n    'degree': 400,\n    'ograve': 500,\n    'Ccaron': 667,\n    'ugrave': 500,\n    'radical': 453,\n    'Dcaron': 722,\n    'rcommaaccent': 389,\n    'Ntilde': 667,\n    'otilde': 500,\n    'Rcommaaccent': 611,\n    'Lcommaaccent': 556,\n    'Atilde': 611,\n    'Aogonek': 611,\n    'Aring': 611,\n    'Otilde': 722,\n    'zdotaccent': 389,\n    'Ecaron': 611,\n    'Iogonek': 333,\n    'kcommaaccent': 444,\n    'minus': 675,\n    'Icircumflex': 333,\n    'ncaron': 500,\n    'tcommaaccent': 278,\n    'logicalnot': 675,\n    'odieresis': 500,\n    'udieresis': 500,\n    'notequal': 549,\n    'gcommaaccent': 500,\n    'eth': 500,\n    'zcaron': 389,\n    'ncommaaccent': 500,\n    'onesuperior': 300,\n    'imacron': 278,\n    'Euro': 500\n  },\n  'ZapfDingbats': {\n    'space': 278,\n    'a1': 974,\n    'a2': 961,\n    'a202': 974,\n    'a3': 980,\n    'a4': 719,\n    'a5': 789,\n    'a119': 790,\n    'a118': 791,\n    'a117': 690,\n    'a11': 960,\n    'a12': 939,\n    'a13': 549,\n    'a14': 855,\n    'a15': 911,\n    'a16': 933,\n    'a105': 911,\n    'a17': 945,\n    'a18': 974,\n    'a19': 755,\n    'a20': 846,\n    'a21': 762,\n    'a22': 761,\n    'a23': 571,\n    'a24': 677,\n    'a25': 763,\n    'a26': 760,\n    'a27': 759,\n    'a28': 754,\n    'a6': 494,\n    'a7': 552,\n    'a8': 537,\n    'a9': 577,\n    'a10': 692,\n    'a29': 786,\n    'a30': 788,\n    'a31': 788,\n    'a32': 790,\n    'a33': 793,\n    'a34': 794,\n    'a35': 816,\n    'a36': 823,\n    'a37': 789,\n    'a38': 841,\n    'a39': 823,\n    'a40': 833,\n    'a41': 816,\n    'a42': 831,\n    'a43': 923,\n    'a44': 744,\n    'a45': 723,\n    'a46': 749,\n    'a47': 790,\n    'a48': 792,\n    'a49': 695,\n    'a50': 776,\n    'a51': 768,\n    'a52': 792,\n    'a53': 759,\n    'a54': 707,\n    'a55': 708,\n    'a56': 682,\n    'a57': 701,\n    'a58': 826,\n    'a59': 815,\n    'a60': 789,\n    'a61': 789,\n    'a62': 707,\n    'a63': 687,\n    'a64': 696,\n    'a65': 689,\n    'a66': 786,\n    'a67': 787,\n    'a68': 713,\n    'a69': 791,\n    'a70': 785,\n    'a71': 791,\n    'a72': 873,\n    'a73': 761,\n    'a74': 762,\n    'a203': 762,\n    'a75': 759,\n    'a204': 759,\n    'a76': 892,\n    'a77': 892,\n    'a78': 788,\n    'a79': 784,\n    'a81': 438,\n    'a82': 138,\n    'a83': 277,\n    'a84': 415,\n    'a97': 392,\n    'a98': 392,\n    'a99': 668,\n    'a100': 668,\n    'a89': 390,\n    'a90': 390,\n    'a93': 317,\n    'a94': 317,\n    'a91': 276,\n    'a92': 276,\n    'a205': 509,\n    'a85': 509,\n    'a206': 410,\n    'a86': 410,\n    'a87': 234,\n    'a88': 234,\n    'a95': 334,\n    'a96': 334,\n    'a101': 732,\n    'a102': 544,\n    'a103': 544,\n    'a104': 910,\n    'a106': 667,\n    'a107': 760,\n    'a108': 760,\n    'a112': 776,\n    'a111': 595,\n    'a110': 694,\n    'a109': 626,\n    'a120': 788,\n    'a121': 788,\n    'a122': 788,\n    'a123': 788,\n    'a124': 788,\n    'a125': 788,\n    'a126': 788,\n    'a127': 788,\n    'a128': 788,\n    'a129': 788,\n    'a130': 788,\n    'a131': 788,\n    'a132': 788,\n    'a133': 788,\n    'a134': 788,\n    'a135': 788,\n    'a136': 788,\n    'a137': 788,\n    'a138': 788,\n    'a139': 788,\n    'a140': 788,\n    'a141': 788,\n    'a142': 788,\n    'a143': 788,\n    'a144': 788,\n    'a145': 788,\n    'a146': 788,\n    'a147': 788,\n    'a148': 788,\n    'a149': 788,\n    'a150': 788,\n    'a151': 788,\n    'a152': 788,\n    'a153': 788,\n    'a154': 788,\n    'a155': 788,\n    'a156': 788,\n    'a157': 788,\n    'a158': 788,\n    'a159': 788,\n    'a160': 894,\n    'a161': 838,\n    'a163': 1016,\n    'a164': 458,\n    'a196': 748,\n    'a165': 924,\n    'a192': 748,\n    'a166': 918,\n    'a167': 927,\n    'a168': 928,\n    'a169': 928,\n    'a170': 834,\n    'a171': 873,\n    'a172': 828,\n    'a173': 924,\n    'a162': 924,\n    'a174': 917,\n    'a175': 930,\n    'a176': 931,\n    'a177': 463,\n    'a178': 883,\n    'a179': 836,\n    'a193': 836,\n    'a180': 867,\n    'a199': 867,\n    'a181': 696,\n    'a200': 696,\n    'a182': 874,\n    'a201': 874,\n    'a183': 760,\n    'a184': 946,\n    'a197': 771,\n    'a185': 865,\n    'a194': 771,\n    'a198': 888,\n    'a186': 967,\n    'a195': 888,\n    'a187': 831,\n    'a188': 873,\n    'a189': 927,\n    'a190': 970,\n    'a191': 918\n  }\n};\n\n\nvar EOF = {};\n\nfunction isEOF(v) {\n  return (v === EOF);\n}\n\nvar MAX_LENGTH_TO_CACHE = 1000;\n\nvar Parser = (function ParserClosure() {\n  function Parser(lexer, allowStreams, xref) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.imageCache = {};\n    this.refill();\n  }\n\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if (isCmd(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n\n      if (buf1 instanceof Cmd) {\n        switch (buf1.cmd) {\n          case 'BI': // inline image\n            return this.makeInlineImage(cipherTransform);\n          case '[': // array\n            var array = [];\n            while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if (isEOF(this.buf1)) {\n              error('End of file inside array');\n            }\n            this.shift();\n            return array;\n          case '<<': // dictionary or stream\n            var dict = new Dict(this.xref);\n            while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n              if (!isName(this.buf1)) {\n                info('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n\n              var key = this.buf1.name;\n              this.shift();\n              if (isEOF(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if (isEOF(this.buf1)) {\n              error('End of file inside dictionary');\n            }\n\n            // Stream objects are not allowed inside content streams or\n            // object streams.\n            if (isCmd(this.buf2, 'stream')) {\n              return (this.allowStreams ?\n                      this.makeStream(dict, cipherTransform) : dict);\n            }\n            this.shift();\n            return dict;\n          default: // simple object\n            return buf1;\n        }\n      }\n\n      if (isInt(buf1)) { // indirect reference or integer\n        var num = buf1;\n        if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n          var ref = new Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n\n      if (isString(buf1)) { // string\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n\n      // simple object\n      return buf1;\n    },\n    /**\n     * Find the end of the stream by searching for the /EI\\s/.\n     * @returns {number} The inline stream length.\n     */\n    findDefaultInlineStreamEnd:\n        function Parser_findDefaultInlineStreamEnd(stream) {\n      var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n      var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = (ch === E) ? 1 : 0;\n        } else if (state === 1) {\n          state = (ch === I) ? 2 : 0;\n        } else {\n          assert(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            // Let's check the next five bytes are ASCII... just be sure.\n            n = 5;\n            followingBytes = stream.peekBytes(n);\n            for (i = 0; i < n; i++) {\n              ch = followingBytes[i];\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                // Not a LF, CR, SPACE or any visible ASCII character, i.e.\n                // it's binary stuff. Resetting the state.\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;  // Finished!\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      return ((stream.pos - 4) - startPos);\n    },\n    /**\n     * Find the EOI (end-of-image) marker 0xFFD9 of the stream.\n     * @returns {number} The inline stream length.\n     */\n    findDCTDecodeInlineStreamEnd:\n        function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) { // Not a valid marker.\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00: // Byte stuffing.\n            // 0xFF00 appears to be a very common byte sequence in JPEG images.\n            break;\n\n          case 0xFF: // Fill byte.\n            // Avoid skipping a valid marker, resetting the stream position.\n            stream.skip(-1);\n            break;\n\n          case 0xD9: // EOI\n            foundEOI = true;\n            break;\n\n          case 0xC0: // SOF0\n          case 0xC1: // SOF1\n          case 0xC2: // SOF2\n          case 0xC3: // SOF3\n\n          case 0xC5: // SOF5\n          case 0xC6: // SOF6\n          case 0xC7: // SOF7\n\n          case 0xC9: // SOF9\n          case 0xCA: // SOF10\n          case 0xCB: // SOF11\n\n          case 0xCD: // SOF13\n          case 0xCE: // SOF14\n          case 0xCF: // SOF15\n\n          case 0xC4: // DHT\n          case 0xCC: // DAC\n\n          case 0xDA: // SOS\n          case 0xDB: // DQT\n          case 0xDC: // DNL\n          case 0xDD: // DRI\n          case 0xDE: // DHP\n          case 0xDF: // EXP\n\n          case 0xE0: // APP0\n          case 0xE1: // APP1\n          case 0xE2: // APP2\n          case 0xE3: // APP3\n          case 0xE4: // APP4\n          case 0xE5: // APP5\n          case 0xE6: // APP6\n          case 0xE7: // APP7\n          case 0xE8: // APP8\n          case 0xE9: // APP9\n          case 0xEA: // APP10\n          case 0xEB: // APP11\n          case 0xEC: // APP12\n          case 0xED: // APP13\n          case 0xEE: // APP14\n          case 0xEF: // APP15\n\n          case 0xFE: // COM\n            // The marker should be followed by the length of the segment.\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              // |markerLength| contains the byte length of the marker segment,\n              // including its own length (2 bytes) and excluding the marker.\n              stream.skip(markerLength - 2); // Jump to the next marker.\n            } else {\n              // The marker length is invalid, resetting the stream position.\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        warn('Inline DCTDecode image stream: ' +\n             'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length); // Reset the stream position.\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    /**\n     * Find the EOD (end-of-data) marker '~>' (i.e. TILDE + GT) of the stream.\n     * @returns {number} The inline stream length.\n     */\n    findASCII85DecodeInlineStreamEnd:\n        function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E, GT = 0x3E;\n      var startPos = stream.pos, ch, length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        warn('Inline ASCII85Decode image stream: ' +\n             'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length); // Reset the stream position.\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    /**\n     * Find the EOD (end-of-data) marker '>' (i.e. GT) of the stream.\n     * @returns {number} The inline stream length.\n     */\n    findASCIIHexDecodeInlineStreamEnd:\n        function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos, ch, length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        warn('Inline ASCIIHexDecode image stream: ' +\n             'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length); // Reset the stream position.\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    /**\n     * Skip over the /EI/ for streams where we search for an EOD marker.\n     */\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45, I = 0x49;\n      var state = 0, ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = (ch === E) ? 1 : 0;\n        } else if (state === 1) {\n          state = (ch === I) ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n\n      // Parse dictionary.\n      var dict = new Dict(null);\n      while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n        if (!isName(this.buf1)) {\n          error('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if (isEOF(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n\n      // Extract the name of the first (i.e. the current) image filter.\n      var filter = this.fetchIfRef(dict.get('Filter', 'F')), filterName;\n      if (isName(filter)) {\n        filterName = filter.name;\n      } else if (isArray(filter) && isName(filter[0])) {\n        filterName = filter[0].name;\n      }\n\n      // Parse image stream.\n      var startPos = stream.pos, length, i, ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n\n      // Cache all images below the MAX_LENGTH_TO_CACHE threshold by their\n      // adler32 checksum.\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          // No modulo required in the loop if imageBytes.length < 5552.\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = ((b % 65521) << 16) | (a % 65521);\n\n        if (this.imageCache.adler32 === adler32) {\n          this.buf2 = Cmd.get('EI');\n          this.shift();\n\n          this.imageCache[adler32].reset();\n          return this.imageCache[adler32];\n        }\n      }\n\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n\n      this.buf2 = Cmd.get('EI');\n      this.shift();\n\n      return imageStream;\n    },\n    fetchIfRef: function Parser_fetchIfRef(obj) {\n      // not relying on the xref.fetchIfRef -- xref might not be set\n      return (isRef(obj) ? this.xref.fetch(obj) : obj);\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n\n      // get stream start position\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n\n      // get length\n      var length = this.fetchIfRef(dict.get('Length'));\n      if (!isInt(length)) {\n        info('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n\n      // skip over the stream data\n      stream.pos = pos + length;\n      lexer.nextChar();\n\n      this.shift(); // '>>'\n      this.shift(); // 'stream'\n      if (!isCmd(this.buf1, 'endstream')) {\n        // bad stream length, scanning for endstream\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65,\n                                   0x61, 0x6D];\n        var skipped = 0, found = false, i, j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          for (i = 0, j = 0; i < scanLength; i++) {\n            var b = scanBytes[i];\n            if (b !== ENDSTREAM_SIGNATURE[j]) {\n              i -= j;\n              j = 0;\n            } else {\n              j++;\n              if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n                i++;\n                found = true;\n                break;\n              }\n            }\n          }\n          if (found) {\n            skipped += i - ENDSTREAM_SIGNATURE_LENGTH;\n            stream.pos += i - ENDSTREAM_SIGNATURE_LENGTH;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          error('Missing endstream');\n        }\n        length = skipped;\n\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift(); // 'endstream'\n\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = this.fetchIfRef(dict.get('Filter', 'F'));\n      var params = this.fetchIfRef(dict.get('DecodeParms', 'DP'));\n      if (isName(filter)) {\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n\n      var maybeLength = length;\n      if (isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = filterArray[i];\n          if (!isName(filter)) {\n            error('Bad filter name: ' + filter);\n          }\n\n          params = null;\n          if (isArray(paramsArray) && (i in paramsArray)) {\n            params = paramsArray[i];\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          // after the first stream the length variable is invalid\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (stream.dict.get('Length') === 0) {\n        return new NullStream(stream);\n      }\n      try {\n        if (params) {\n          params = this.fetchIfRef(params);\n        }\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[StreamType.FLATE] = true;\n          if (params) {\n            return new PredictorStream(new FlateStream(stream, maybeLength),\n                                       maybeLength, params);\n          }\n          return new FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new PredictorStream(\n              new LZWStream(stream, maybeLength, earlyChange),\n              maybeLength, params);\n          }\n          return new LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[StreamType.DCT] = true;\n          return new JpegStream(stream, maybeLength, stream.dict, this.xref);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[StreamType.JPX] = true;\n          return new JpxStream(stream, maybeLength, stream.dict);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[StreamType.A85] = true;\n          return new Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[StreamType.AHX] = true;\n          return new AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[StreamType.CCF] = true;\n          return new CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[StreamType.RL] = true;\n          return new RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[StreamType.JBIG] = true;\n          return new Jbig2Stream(stream, maybeLength, stream.dict);\n        }\n        warn('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof MissingDataException) {\n          throw ex;\n        }\n        warn('Invalid stream: \\\"' + ex + '\\\"');\n        return new NullStream(stream);\n      }\n    }\n  };\n\n  return Parser;\n})();\n\nvar Lexer = (function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n\n    // While lexing, we build up many strings one char at a time. Using += for\n    // this can result in lots of garbage strings. It's better to build an\n    // array of single-char strings and then join() them together at the end.\n    // And reusing a single array (i.e. |this.strBuf|) over and over for this\n    // purpose uses less memory than using a new array for each string.\n    this.strBuf = [];\n\n    // The PDFs might have \"glued\" commands with other commands, operands or\n    // literals, e.g. \"q1\". The knownCommands is a dictionary of the valid\n    // commands and their prefixes. The prefixes are built the following way:\n    // if there a command that is a prefix of the other valid command or\n    // literal (e.g. 'f' and 'false') the following prefixes must be included,\n    // 'fa', 'fal', 'fals'. The prefixes are not needed, if the command has no\n    // other commands or literals as a prefix. The knowCommands is optional.\n    this.knownCommands = knownCommands;\n  }\n\n  Lexer.isSpace = function Lexer_isSpace(ch) {\n    // Space is one of the following characters: SPACE, TAB, CR or LF.\n    return (ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A);\n  };\n\n  // A '1' in this array means the character is white space. A '1' or\n  // '2' means the character ends a name or command.\n  var specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, // 0x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 1x\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, // 2x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, // 3x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 4x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, // 5x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 6x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, // 7x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 8x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 9x\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // ax\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // bx\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // cx\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // dx\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // ex\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  // fx\n  ];\n\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) { // '0'-'9'\n      return ch & 0x0F;\n    }\n    if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n      // 'A'-'F', 'a'-'f'\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return (this.currentChar = this.stream.getByte());\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0; // different from 0 if it's a floating point value\n      var sign = 1;\n\n      if (ch === 0x2D) { // '-'\n        sign = -1;\n        ch = this.nextChar();\n      } else if (ch === 0x2B) { // '+'\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) { // '.'\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch < 0x30 || ch > 0x39) { // '0' - '9'\n        error('Invalid number: ' + String.fromCharCode(ch));\n        return 0;\n      }\n\n      var baseValue = ch - 0x30; // '0'\n      var powerValue = 0;\n      var powerValueSign = 1;\n\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) { // '0' - '9'\n          var currentDigit = ch - 0x30; // '0'\n          if (eNotation) { // We are after an 'e' or 'E'\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) { // We are after a point\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) { // '.'\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            // A number can have only one '.'\n            break;\n          }\n        } else if (ch === 0x2D) { // '-'\n          // ignore minus signs in the middle of numbers to match\n          // Adobe's behavior\n          warn('Badly formated number');\n        } else if (ch === 0x45 || ch === 0x65) { // 'E', 'e'\n          // 'E' can be either a scientific notation or the beginning of a new\n          // operator\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) { // '+', '-'\n            powerValueSign = (ch === 0x2D) ? -1 : 1;\n            this.nextChar(); // Consume the sign character\n          } else if (ch < 0x30 || ch > 0x39) { // '0' - '9'\n            // The 'E' must be the beginning of a new operator\n            break;\n          }\n          eNotation = true;\n        } else {\n          // the last character doesn't belong to us\n          break;\n        }\n      }\n\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            warn('Unterminated string');\n            done = true;\n            break;\n          case 0x28: // '('\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29: // ')'\n            if (--numParen === 0) {\n              this.nextChar(); // consume strings ')'\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C: // '\\\\'\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                warn('Unterminated string');\n                done = true;\n                break;\n              case 0x6E: // 'n'\n                strBuf.push('\\n');\n                break;\n              case 0x72: // 'r'\n                strBuf.push('\\r');\n                break;\n              case 0x74: // 't'\n                strBuf.push('\\t');\n                break;\n              case 0x62: // 'b'\n                strBuf.push('\\b');\n                break;\n              case 0x66: // 'f'\n                strBuf.push('\\f');\n                break;\n              case 0x5C: // '\\'\n              case 0x28: // '('\n              case 0x29: // ')'\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30: case 0x31: case 0x32: case 0x33: // '0'-'3'\n              case 0x34: case 0x35: case 0x36: case 0x37: // '4'-'7'\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) { // '0'-'7'\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {  // '0'-'7'\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D: // CR\n                if (this.peekChar() === 0x0A) { // LF\n                  this.nextChar();\n                }\n                break;\n              case 0x0A: // LF\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) { // '#'\n          ch = this.nextChar();\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            var x2 = toHexDigit(this.nextChar());\n            if (x2 === -1) {\n              error('Illegal digit in hex char in name: ' + x2);\n            }\n            strBuf.push(String.fromCharCode((x << 4) | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 128) {\n        error('Warning: name token is longer than allowed by the spec: ' +\n              strBuf.length);\n      }\n      return Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          warn('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) { // '>'\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              warn('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              warn('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      // skip whitespace and comments\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) { // LF, CR\n            comment = false;\n          }\n        } else if (ch === 0x25) { // '%'\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n\n      // start reading token\n      switch (ch | 0) {\n        case 0x30: case 0x31: case 0x32: case 0x33: case 0x34: // '0'-'4'\n        case 0x35: case 0x36: case 0x37: case 0x38: case 0x39: // '5'-'9'\n        case 0x2B: case 0x2D: case 0x2E: // '+', '-', '.'\n          return this.getNumber();\n        case 0x28: // '('\n          return this.getString();\n        case 0x2F: // '/'\n          return this.getName();\n        // array punctuation\n        case 0x5B: // '['\n          this.nextChar();\n          return Cmd.get('[');\n        case 0x5D: // ']'\n          this.nextChar();\n          return Cmd.get(']');\n        // hex string or dict punctuation\n        case 0x3C: // '<'\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            // dict punctuation\n            this.nextChar();\n            return Cmd.get('<<');\n          }\n          return this.getHexString();\n        // dict punctuation\n        case 0x3E: // '>'\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return Cmd.get('>>');\n          }\n          return Cmd.get('>');\n        case 0x7B: // '{'\n          this.nextChar();\n          return Cmd.get('{');\n        case 0x7D: // '}'\n          this.nextChar();\n          return Cmd.get('}');\n        case 0x29: // ')'\n          error('Illegal character: ' + ch);\n          break;\n      }\n\n      // command\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        // stop if known command is found and next character does not make\n        // the str a command\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          error('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) { // CR\n          ch = this.nextChar();\n          if (ch === 0x0A) { // LF\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) { // LF\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n\n  return Lexer;\n})();\n\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' +\n                      'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'), hintsLength, item;\n      if (isArray(hints) &&\n          ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(isInt(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index +\n                            ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) &&\n          isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null; // No valid linearization dictionary found.\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' +\n                      'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: (linDict.has('P') ? getInt('P', true) : 0)\n    };\n  }\n};\n\n\nvar PostScriptParser = (function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      error('Unexpected symbol: found ' + this.token.type + ' expected ' +\n        type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      // Add two place holders that will be updated later\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        // The true block is right after the 'if' so it just falls through on\n        // true else it jumps and skips the true block.\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        // The jump is added at the end of the true block to skip the false\n        // block.\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        error('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n})();\n\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\n\nvar PostScriptToken = (function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n\n  var opCache = {};\n\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE,\n    '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE,\n    '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE,\n    'IFELSE');\n  return PostScriptToken;\n})();\n\nvar PostScriptLexer = (function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return (this.currentChar = this.stream.getByte());\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n\n      // skip comments\n      while (true) {\n        if (ch < 0) {\n          return EOF;\n        }\n\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) { // '%'\n          comment = true;\n        } else if (!Lexer.isSpace(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30: case 0x31: case 0x32: case 0x33: case 0x34: // '0'-'4'\n        case 0x35: case 0x36: case 0x37: case 0x38: case 0x39: // '5'-'9'\n        case 0x2B: case 0x2D: case 0x2E: // '+', '-', '.'\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER,\n                                     this.getNumber());\n        case 0x7B: // '{'\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D: // '}'\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      // operator\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n\n      while ((ch = this.nextChar()) >= 0 && // and 'A'-'Z', 'a'-'z'\n             ((ch >= 0x41 && ch <= 0x5A) || (ch >= 0x61 && ch <= 0x7A))) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n\n      while ((ch = this.nextChar()) >= 0) {\n        if ((ch >= 0x30 && ch <= 0x39) || // '0'-'9'\n            ch === 0x2D || ch === 0x2E) { // '-', '.'\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        error('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n})();\n\n\nvar Stream = (function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = (arrayBuffer instanceof Uint8Array ?\n                  arrayBuffer : new Uint8Array(arrayBuffer));\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = (start + length) || this.bytes.length;\n    this.dict = dict;\n  }\n\n  // required methods for a stream. if a particular stream does not\n  // implement these, an error should be thrown\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    // returns subarray of original buffer\n    // should only be read\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    },\n    isStream: true\n  };\n\n  return Stream;\n})();\n\nvar StringStream = (function StringStreamClosure() {\n  function StringStream(str) {\n    var length = str.length;\n    var bytes = new Uint8Array(length);\n    for (var n = 0; n < length; ++n) {\n      bytes[n] = str.charCodeAt(n);\n    }\n    Stream.call(this, bytes);\n  }\n\n  StringStream.prototype = Stream.prototype;\n\n  return StringStream;\n})();\n\n// super class for the decoding streams\nvar DecodeStream = (function DecodeStreamClosure() {\n  // Lots of DecodeStreams are created whose buffers are never used.  For these\n  // we share a single empty buffer. This is (a) space-efficient and (b) avoids\n  // having special cases that would be required if we used |null| for an empty\n  // buffer.\n  var emptyBuffer = new Uint8Array(0);\n\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      // Compute the first power of two that is as big as maybeMinBufferLength.\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return (this.buffer = buffer2);\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end, pos = this.pos;\n\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n\n  return DecodeStream;\n})();\n\nvar StreamsSequenceStream = (function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, /* maybeLength = */ null);\n  }\n\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\n  StreamsSequenceStream.prototype.readBlock =\n      function streamSequenceStreamReadBlock() {\n\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n\n  StreamsSequenceStream.prototype.getBaseStreams =\n    function StreamsSequenceStream_getBaseStreams() {\n\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n\n  return StreamsSequenceStream;\n})();\n\nvar FlateStream = (function FlateStreamClosure() {\n  var codeLenCodeMap = new Uint32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n  ]);\n\n  var lengthDecode = new Uint32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n  ]);\n\n  var distDecode = new Uint32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n  ]);\n\n  var fixedLitCodeTab = [new Uint32Array([\n    0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n    0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n    0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n    0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n    0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n    0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n    0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n    0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n    0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n    0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n    0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n    0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n    0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n    0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n    0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n    0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n    0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n    0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n    0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n    0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n    0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n    0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n    0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n    0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n    0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n    0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n    0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n    0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n    0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n    0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n    0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n    0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n    0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n    0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n    0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n    0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n    0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n    0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n    0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n    0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n    0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n    0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n    0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n    0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n    0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n    0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n    0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n    0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n    0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n    0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n    0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n    0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n    0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n    0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n    0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n    0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n    0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n    0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n    0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n    0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n    0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n    0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n    0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n    0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n  ]), 9];\n\n  var fixedDistCodeTab = [new Uint32Array([\n    0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n    0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n    0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n    0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n  ]), 5];\n\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((((cmf << 8) + flg) % 31) !== 0) {\n      error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n\n    this.codeSize = 0;\n    this.codeBuf = 0;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        error('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & ((1 << bits) - 1);\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n\n    return b;\n  };\n\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        // premature end of stream. code might however still be valid.\n        // codeSize < codeLen check below guards against incomplete codeVal.\n        break;\n      }\n      codeBuf |= (b << codeSize);\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & ((1 << maxLen) - 1)];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      error('Bad encoding in flate stream');\n    }\n    this.codeBuf = (codeBuf >> codeLen);\n    this.codeSize = (codeSize - codeLen);\n    return codeVal;\n  };\n\n  FlateStream.prototype.generateHuffmanTable =\n      function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n\n    // find max code length\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n\n    // build the table\n    var size = 1 << maxLen;\n    var codes = new Uint32Array(size);\n    for (var len = 1, code = 0, skip = 2;\n         len <= maxLen;\n         ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          // bit-reverse the code\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = (code2 << 1) | (t & 1);\n            t >>= 1;\n          }\n\n          // fill the table entries\n          for (i = code2; i < size; i += skip) {\n            codes[i] = (len << 16) | val;\n          }\n          ++code;\n        }\n      }\n    }\n\n    return [codes, maxLen];\n  };\n\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    // read block header\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n\n    if (hdr === 0) { // uncompressed block\n      var b;\n\n      if ((b = str.getByte()) === -1) {\n        error('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        error('Bad block header in flate stream');\n      }\n      blockLen |= (b << 8);\n      if ((b = str.getByte()) === -1) {\n        error('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        error('Bad block header in flate stream');\n      }\n      check |= (b << 8);\n      if (check !== (~blockLen & 0xffff) &&\n          (blockLen !== 0 || check !== 0)) {\n        // Ignoring error for bad \"empty\" block (see issue 1277)\n        error('Bad uncompressed block length in flate stream');\n      }\n\n      this.codeBuf = 0;\n      this.codeSize = 0;\n\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) { // compressed block, fixed codes\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) { // compressed block, dynamic codes\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n\n      // build the code lengths code table\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\n      // build the literal and distance code tables\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2; bitsOffset = 3; what = len;\n        } else if (code === 17) {\n          bitsLength = 3; bitsOffset = 3; what = (len = 0);\n        } else if (code === 18) {\n          bitsLength = 7; bitsOffset = 11; what = (len = 0);\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n\n      litCodeTable =\n        this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable =\n        this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      error('Unknown block type in flate stream');\n    }\n\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n\n  return FlateStream;\n})();\n\nvar PredictorStream = (function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    var predictor = this.predictor = params.get('Predictor') || 1;\n\n    if (predictor <= 1) {\n      return str; // no prediction\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      error('Unsupported predictor: ' + predictor);\n    }\n\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n\n    this.str = str;\n    this.dict = str.dict;\n\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n\n    this.pixBytes = (colors * bits + 7) >> 3;\n    this.rowBytes = (columns * colors * bits + 7) >> 3;\n\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\n  PredictorStream.prototype.readBlockTiff =\n      function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\n    var bits = this.bits;\n    var colors = this.colors;\n\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n\n    var inbuf = 0, outbuf = 0;\n    var inbits = 0, outbits = 0;\n    var pos = bufferLength;\n    var i;\n\n    if (bits === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i];\n        inbuf = (inbuf << 8) | c;\n        // bitwise addition is exclusive or\n        // first shift inbuf and then add\n        buffer[pos++] = (c ^ (inbuf >> colors)) & 0xFF;\n        // truncate inbuf (assumes colors < 16)\n        inbuf &= 0xFFFF;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0, k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = (inbuf << 8) | (rawBytes[j++] & 0xFF);\n            inbits += 8;\n          }\n          compArray[kk] = (compArray[kk] +\n                           (inbuf >> (inbits - bits))) & bitMask;\n          inbits -= bits;\n          outbuf = (outbuf << bits) | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = (outbuf >> (outbits - 8)) & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << (8 - outbits)) +\n                      (inbuf & ((1 << (8 - outbits)) - 1));\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n\n  PredictorStream.prototype.readBlockPng =\n      function predictorStreamReadBlockPng() {\n\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n\n    var i, j = bufferLength, up, c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) +\n                           rawBytes[i]) & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        // we need to save the up left pixels values. the simplest way\n        // is to create a new buffer\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        error('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n\n  return PredictorStream;\n})();\n\n/**\n * Depending on the type of JPEG a JpegStream is handled in different ways. For\n * JPEG's that are supported natively such as DeviceGray and DeviceRGB the image\n * data is stored and then loaded by the browser.  For unsupported JPEG's we use\n * a library to decode these images and the stream behaves like all the other\n * DecodeStreams.\n */\nvar JpegStream = (function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, xref) {\n    // Some images may contain 'junk' before the SOI (start-of-image) marker.\n    // Note: this seems to mainly affect inline images.\n    var ch;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) { // Find the first byte of the SOI marker (0xFFD8).\n        stream.skip(-1); // Reset the stream position to the SOI.\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  JpegStream.prototype = Object.create(DecodeStream.prototype);\n\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      // If this.maybeLength is null, we'll get the entire stream.\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n\n  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    try {\n      var jpegImage = new JpegImage();\n\n      // checking if values needs to be transformed before conversion\n      if (this.forceRGB && this.dict && isArray(this.dict.get('Decode'))) {\n        var decodeArr = this.dict.get('Decode');\n        var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n        var decodeArrLength = decodeArr.length;\n        var transform = new Int32Array(decodeArrLength);\n        var transformNeeded = false;\n        var maxValue = (1 << bitsPerComponent) - 1;\n        for (var i = 0; i < decodeArrLength; i += 2) {\n          transform[i] = ((decodeArr[i + 1] - decodeArr[i]) * 256) | 0;\n          transform[i + 1] = (decodeArr[i] * maxValue) | 0;\n          if (transform[i] !== 256 || transform[i + 1] !== 0) {\n            transformNeeded = true;\n          }\n        }\n        if (transformNeeded) {\n          jpegImage.decodeTransform = transform;\n        }\n      }\n\n      jpegImage.parse(this.bytes);\n      var data = jpegImage.getData(this.drawWidth, this.drawHeight,\n                                   this.forceRGB);\n      this.buffer = data;\n      this.bufferLength = data.length;\n      this.eof = true;\n    } catch (e) {\n      error('JPEG error: ' + e);\n    }\n  };\n\n  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n    this.ensureBuffer();\n    return this.buffer;\n  };\n\n  JpegStream.prototype.getIR = function JpegStream_getIR() {\n    return PDFJS.createObjectURL(this.bytes, 'image/jpeg');\n  };\n  /**\n   * Checks if the image can be decoded and displayed by the browser without any\n   * further processing such as color space conversions.\n   */\n  JpegStream.prototype.isNativelySupported =\n      function JpegStream_isNativelySupported(xref, res) {\n    var cs = ColorSpace.parse(this.dict.get('ColorSpace', 'CS'), xref, res);\n    return cs.name === 'DeviceGray' || cs.name === 'DeviceRGB';\n  };\n  /**\n   * Checks if the image can be decoded by the browser.\n   */\n  JpegStream.prototype.isNativelyDecodable =\n      function JpegStream_isNativelyDecodable(xref, res) {\n    var cs = ColorSpace.parse(this.dict.get('ColorSpace', 'CS'), xref, res);\n    var numComps = cs.numComps;\n    return numComps === 1 || numComps === 3;\n  };\n\n  return JpegStream;\n})();\n\n/**\n * For JPEG 2000's we use a library to decode these images and\n * the stream behaves like all the other DecodeStreams.\n */\nvar JpxStream = (function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  JpxStream.prototype = Object.create(DecodeStream.prototype);\n\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      // If this.maybeLength is null, we'll get the entire stream.\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n\n  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n\n    var jpxImage = new JpxImage();\n    jpxImage.parse(this.bytes);\n\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8Array(width * height * componentsCount);\n\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n\n  return JpxStream;\n})();\n\n/**\n * For JBIG2's we use a library to decode these images and\n * the stream behaves like all the other DecodeStreams.\n */\nvar Jbig2Stream = (function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function Jbig2Stream_bytes() {\n      // If this.maybeLength is null, we'll get the entire stream.\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n\n  Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n\n    var jbig2Image = new Jbig2Image();\n\n    var chunks = [], xref = this.dict.xref;\n    var decodeParams = xref.fetchIfRef(this.dict.get('DecodeParms'));\n\n    // According to the PDF specification, DecodeParms can be either\n    // a dictionary, or an array whose elements are dictionaries.\n    if (isArray(decodeParams)) {\n      if (decodeParams.length > 1) {\n        warn('JBIG2 - \\'DecodeParms\\' array with multiple elements ' +\n             'not supported.');\n      }\n      decodeParams = xref.fetchIfRef(decodeParams[0]);\n    }\n    if (decodeParams && decodeParams.has('JBIG2Globals')) {\n      var globalsStream = decodeParams.get('JBIG2Globals');\n      var globals = globalsStream.getBytes();\n      chunks.push({data: globals, start: 0, end: globals.length});\n    }\n    chunks.push({data: this.bytes, start: 0, end: this.bytes.length});\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n\n    // JBIG2 had black as 1 and white as 0, inverting the colors\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n\n  return Jbig2Stream;\n})();\n\nvar DecryptStream = (function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  var chunkSize = 512;\n\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n\n    var bufferLength = this.bufferLength;\n    var i, n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n\n  return DecryptStream;\n})();\n\nvar Ascii85Stream = (function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n\n    // Most streams increase in size when decoded, but Ascii85 streams\n    // typically shrink by ~20%.\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E; // '~'\n    var Z_LOWER_CHAR = 0x7A; // 'z'\n    var EOF = -1;\n\n    var str = this.str;\n\n    var c = str.getByte();\n    while (Lexer.isSpace(c)) {\n      c = str.getByte();\n    }\n\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n\n    var bufferLength = this.bufferLength, buffer;\n    var i;\n\n    // special code for z\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while (Lexer.isSpace(c)) {\n          c = str.getByte();\n        }\n\n        input[i] = c;\n\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n\n      // partial ending;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n\n  return Ascii85Stream;\n})();\n\nvar AsciiHexStream = (function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n\n    this.firstDigit = -1;\n\n    // Most streams increase in size when decoded, but AsciiHex streams shrink\n    // by 50%.\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n\n    var maxDecodeLength = (bytes.length + 1) >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i], digit;\n      if (ch >= 0x30 && ch <= 0x39) { // '0'-'9'\n        digit = ch & 0x0F;\n      } else if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n        // 'A'-'Z', 'a'-'z'\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) { // '>'\n        this.eof = true;\n        break;\n      } else { // probably whitespace\n        continue; // ignoring\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = (firstDigit << 4) | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      // incomplete byte\n      buffer[bufferLength++] = (firstDigit << 4);\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n\n  return AsciiHexStream;\n})();\n\nvar RunLengthStream = (function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    // The repeatHeader has following format. The first byte defines type of run\n    // and amount of bytes to repeat/copy: n = 0 through 127 - copy next n bytes\n    // (in addition to the second byte from the header), n = 129 through 255 -\n    // duplicate the second byte from the header (257 - n) times, n = 128 - end.\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      // copy n bytes\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n\n  return RunLengthStream;\n})();\n\nvar CCITTFaxStream = (function CCITTFaxStreamClosure() {\n\n  var ccittEOL = -2;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n\n  var twoDimTable = [\n    [-1, -1], [-1, -1],                   // 000000x\n    [7, twoDimVertL3],                    // 0000010\n    [7, twoDimVertR3],                    // 0000011\n    [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n    [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n    [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n    [4, twoDimPass], [4, twoDimPass],\n    [4, twoDimPass], [4, twoDimPass],\n    [4, twoDimPass], [4, twoDimPass],\n    [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimHoriz], [3, twoDimHoriz],\n    [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertL1], [3, twoDimVertL1],\n    [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [3, twoDimVertR1], [3, twoDimVertR1],\n    [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0],\n    [1, twoDimVert0], [1, twoDimVert0]\n  ];\n\n  var whiteTable1 = [\n    [-1, -1],                               // 00000\n    [12, ccittEOL],                         // 00001\n    [-1, -1], [-1, -1],                     // 0001x\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n    [11, 1792], [11, 1792],                 // 1000x\n    [12, 1984],                             // 10010\n    [12, 2048],                             // 10011\n    [12, 2112],                             // 10100\n    [12, 2176],                             // 10101\n    [12, 2240],                             // 10110\n    [12, 2304],                             // 10111\n    [11, 1856], [11, 1856],                 // 1100x\n    [11, 1920], [11, 1920],                 // 1101x\n    [12, 2368],                             // 11100\n    [12, 2432],                             // 11101\n    [12, 2496],                             // 11110\n    [12, 2560]                              // 11111\n  ];\n\n  var whiteTable2 = [\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n    [8, 29], [8, 29],                           // 00000010x\n    [8, 30], [8, 30],                           // 00000011x\n    [8, 45], [8, 45],                           // 00000100x\n    [8, 46], [8, 46],                           // 00000101x\n    [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n    [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n    [8, 47], [8, 47],                           // 00001010x\n    [8, 48], [8, 48],                           // 00001011x\n    [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n    [6, 13], [6, 13], [6, 13], [6, 13],\n    [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n    [8, 33], [8, 33],                           // 00010010x\n    [8, 34], [8, 34],                           // 00010011x\n    [8, 35], [8, 35],                           // 00010100x\n    [8, 36], [8, 36],                           // 00010101x\n    [8, 37], [8, 37],                           // 00010110x\n    [8, 38], [8, 38],                           // 00010111x\n    [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n    [8, 31], [8, 31],                           // 00011010x\n    [8, 32], [8, 32],                           // 00011011x\n    [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n    [6, 1], [6, 1], [6, 1], [6, 1],\n    [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n    [6, 12], [6, 12], [6, 12], [6, 12],\n    [8, 53], [8, 53],                           // 00100100x\n    [8, 54], [8, 54],                           // 00100101x\n    [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n    [8, 39], [8, 39],                           // 00101000x\n    [8, 40], [8, 40],                           // 00101001x\n    [8, 41], [8, 41],                           // 00101010x\n    [8, 42], [8, 42],                           // 00101011x\n    [8, 43], [8, 43],                           // 00101100x\n    [8, 44], [8, 44],                           // 00101101x\n    [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n    [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n    [8, 61], [8, 61],                           // 00110010x\n    [8, 62], [8, 62],                           // 00110011x\n    [8, 63], [8, 63],                           // 00110100x\n    [8, 0], [8, 0],                             // 00110101x\n    [8, 320], [8, 320],                         // 00110110x\n    [8, 384], [8, 384],                         // 00110111x\n    [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 10], [5, 10], [5, 10], [5, 10],\n    [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [5, 11], [5, 11], [5, 11], [5, 11],\n    [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n    [8, 59], [8, 59],                           // 01001010x\n    [8, 60], [8, 60],                           // 01001011x\n    [9, 1472],                                  // 010011000\n    [9, 1536],                                  // 010011001\n    [9, 1600],                                  // 010011010\n    [9, 1728],                                  // 010011011\n    [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n    [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n    [8, 49], [8, 49],                           // 01010010x\n    [8, 50], [8, 50],                           // 01010011x\n    [8, 51], [8, 51],                           // 01010100x\n    [8, 52], [8, 52],                           // 01010101x\n    [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n    [8, 55], [8, 55],                           // 01011000x\n    [8, 56], [8, 56],                           // 01011001x\n    [8, 57], [8, 57],                           // 01011010x\n    [8, 58], [8, 58],                           // 01011011x\n    [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n    [6, 192], [6, 192], [6, 192], [6, 192],\n    [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n    [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n    [8, 448], [8, 448],                         // 01100100x\n    [8, 512], [8, 512],                         // 01100101x\n    [9, 704],                                   // 011001100\n    [9, 768],                                   // 011001101\n    [8, 640], [8, 640],                         // 01100111x\n    [8, 576], [8, 576],                         // 01101000x\n    [9, 832],                                   // 011010010\n    [9, 896],                                   // 011010011\n    [9, 960],                                   // 011010100\n    [9, 1024],                                  // 011010101\n    [9, 1088],                                  // 011010110\n    [9, 1152],                                  // 011010111\n    [9, 1216],                                  // 011011000\n    [9, 1280],                                  // 011011001\n    [9, 1344],                                  // 011011010\n    [9, 1408],                                  // 011011011\n    [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n    [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 2], [4, 2], [4, 2], [4, 2],\n    [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [4, 3], [4, 3], [4, 3], [4, 3],\n    [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 128], [5, 128], [5, 128], [5, 128],\n    [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 8], [5, 8], [5, 8], [5, 8],\n    [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [5, 9], [5, 9], [5, 9], [5, 9],\n    [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n    [6, 16], [6, 16], [6, 16], [6, 16],\n    [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n    [6, 17], [6, 17], [6, 17], [6, 17],\n    [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 4], [4, 4], [4, 4], [4, 4],\n    [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [4, 5], [4, 5], [4, 5], [4, 5],\n    [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n    [6, 14], [6, 14], [6, 14], [6, 14],\n    [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n    [6, 15], [6, 15], [6, 15], [6, 15],\n    [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [5, 64], [5, 64], [5, 64], [5, 64],\n    [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 6], [4, 6], [4, 6], [4, 6],\n    [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7],\n    [4, 7], [4, 7], [4, 7], [4, 7]\n  ];\n\n  var blackTable1 = [\n    [-1, -1], [-1, -1],                             // 000000000000x\n    [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n    [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n    [12, 1984], [12, 1984],                         // 000000010010x\n    [12, 2048], [12, 2048],                         // 000000010011x\n    [12, 2112], [12, 2112],                         // 000000010100x\n    [12, 2176], [12, 2176],                         // 000000010101x\n    [12, 2240], [12, 2240],                         // 000000010110x\n    [12, 2304], [12, 2304],                         // 000000010111x\n    [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n    [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n    [12, 2368], [12, 2368],                         // 000000011100x\n    [12, 2432], [12, 2432],                         // 000000011101x\n    [12, 2496], [12, 2496],                         // 000000011110x\n    [12, 2560], [12, 2560],                         // 000000011111x\n    [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n    [10, 18], [10, 18], [10, 18], [10, 18],\n    [12, 52], [12, 52],                             // 000000100100x\n    [13, 640],                                      // 0000001001010\n    [13, 704],                                      // 0000001001011\n    [13, 768],                                      // 0000001001100\n    [13, 832],                                      // 0000001001101\n    [12, 55], [12, 55],                             // 000000100111x\n    [12, 56], [12, 56],                             // 000000101000x\n    [13, 1280],                                     // 0000001010010\n    [13, 1344],                                     // 0000001010011\n    [13, 1408],                                     // 0000001010100\n    [13, 1472],                                     // 0000001010101\n    [12, 59], [12, 59],                             // 000000101011x\n    [12, 60], [12, 60],                             // 000000101100x\n    [13, 1536],                                     // 0000001011010\n    [13, 1600],                                     // 0000001011011\n    [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n    [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n    [13, 1664],                                     // 0000001100100\n    [13, 1728],                                     // 0000001100101\n    [12, 320], [12, 320],                           // 000000110011x\n    [12, 384], [12, 384],                           // 000000110100x\n    [12, 448], [12, 448],                           // 000000110101x\n    [13, 512],                                      // 0000001101100\n    [13, 576],                                      // 0000001101101\n    [12, 53], [12, 53],                             // 000000110111x\n    [12, 54], [12, 54],                             // 000000111000x\n    [13, 896],                                      // 0000001110010\n    [13, 960],                                      // 0000001110011\n    [13, 1024],                                     // 0000001110100\n    [13, 1088],                                     // 0000001110101\n    [13, 1152],                                     // 0000001110110\n    [13, 1216],                                     // 0000001110111\n    [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n    [10, 64], [10, 64], [10, 64], [10, 64]\n  ];\n\n  var blackTable2 = [\n    [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [8, 13], [8, 13], [8, 13], [8, 13],\n    [11, 23], [11, 23],                     // 00000101000x\n    [12, 50],                               // 000001010010\n    [12, 51],                               // 000001010011\n    [12, 44],                               // 000001010100\n    [12, 45],                               // 000001010101\n    [12, 46],                               // 000001010110\n    [12, 47],                               // 000001010111\n    [12, 57],                               // 000001011000\n    [12, 58],                               // 000001011001\n    [12, 61],                               // 000001011010\n    [12, 256],                              // 000001011011\n    [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n    [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n    [12, 48],                               // 000001100100\n    [12, 49],                               // 000001100101\n    [12, 62],                               // 000001100110\n    [12, 63],                               // 000001100111\n    [12, 30],                               // 000001101000\n    [12, 31],                               // 000001101001\n    [12, 32],                               // 000001101010\n    [12, 33],                               // 000001101011\n    [12, 40],                               // 000001101100\n    [12, 41],                               // 000001101101\n    [11, 22], [11, 22],                     // 00000110111x\n    [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [8, 14], [8, 14], [8, 14], [8, 14],\n    [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 10], [7, 10], [7, 10], [7, 10],\n    [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [7, 11], [7, 11], [7, 11], [7, 11],\n    [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n    [9, 15], [9, 15], [9, 15], [9, 15],\n    [12, 128],                              // 000011001000\n    [12, 192],                              // 000011001001\n    [12, 26],                               // 000011001010\n    [12, 27],                               // 000011001011\n    [12, 28],                               // 000011001100\n    [12, 29],                               // 000011001101\n    [11, 19], [11, 19],                     // 00001100111x\n    [11, 20], [11, 20],                     // 00001101000x\n    [12, 34],                               // 000011010010\n    [12, 35],                               // 000011010011\n    [12, 36],                               // 000011010100\n    [12, 37],                               // 000011010101\n    [12, 38],                               // 000011010110\n    [12, 39],                               // 000011010111\n    [11, 21], [11, 21],                     // 00001101100x\n    [12, 42],                               // 000011011010\n    [12, 43],                               // 000011011011\n    [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n    [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12],\n    [7, 12], [7, 12], [7, 12], [7, 12]\n  ];\n\n  var blackTable3 = [\n    [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n    [6, 9],                                 // 000100\n    [6, 8],                                 // 000101\n    [5, 7], [5, 7],                         // 00011x\n    [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n    [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n    [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n    [3, 1], [3, 1], [3, 1], [3, 1],\n    [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n    [3, 4], [3, 4], [3, 4], [3, 4],\n    [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 3], [2, 3], [2, 3], [2, 3],\n    [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n    [2, 2], [2, 2], [2, 2], [2, 2],\n    [2, 2], [2, 2], [2, 2], [2, 2],\n    [2, 2], [2, 2], [2, 2], [2, 2]\n  ];\n\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n\n    params = params || Dict.empty;\n\n    this.encoding = params.get('K') || 0;\n    this.eoline = params.get('EndOfLine') || false;\n    this.byteAlign = params.get('EncodedByteAlign') || false;\n    this.columns = params.get('Columns') || 1728;\n    this.rows = params.get('Rows') || 0;\n    var eoblock = params.get('EndOfBlock');\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = params.get('BlackIs1') || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n\n    var code1;\n    while ((code1 = this.lookBits(12)) === 0) {\n      this.eatBits(1);\n    }\n    if (code1 === 1) {\n      this.eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this.lookBits(1);\n      this.eatBits(1);\n    }\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n\n  CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n    while (!this.eof) {\n      var c = this.lookChar();\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n\n  CCITTFaxStream.prototype.addPixels =\n      function ccittFaxStreamAddPixels(a1, blackPixels) {\n    var codingLine = this.codingLine;\n    var codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info('row is wrong length');\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  };\n\n  CCITTFaxStream.prototype.addPixelsNeg =\n      function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n    var codingLine = this.codingLine;\n    var codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info('row is wrong length');\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info('invalid code');\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  };\n\n  CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n    var refLine = this.refLine;\n    var codingLine = this.codingLine;\n    var columns = this.columns;\n\n    var refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.eof) {\n        return null;\n      }\n      this.err = false;\n\n      var code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this.getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this.addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += (code3 = this.getBlackCode());\n                } while (code3 >= 64);\n                do {\n                  code2 += (code3 = this.getWhiteCode());\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += (code3 = this.getWhiteCode());\n                } while (code3 >= 64);\n                do {\n                  code2 += (code3 = this.getBlackCode());\n                } while (code3 >= 64);\n              }\n              this.addPixels(codingLine[this.codingPos] +\n                             code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this.addPixels(codingLine[this.codingPos] + code2,\n                               blackPixels ^ 1);\n              }\n              while (refLine[refPos] <= codingLine[this.codingPos] &&\n                     refLine[refPos] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this.addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this.addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this.addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this.addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] &&\n                       refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case EOF:\n              this.addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info('bad 2d code');\n              this.addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += (code3 = this.getBlackCode());\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += (code3 = this.getWhiteCode());\n            } while (code3 >= 64);\n          }\n          this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      var gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.eof = true;\n      } else {\n        code1 = this.lookBits(12);\n        if (this.eoline) {\n          while (code1 !== EOF && code1 !== 1) {\n            this.eatBits(1);\n            code1 = this.lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this.eatBits(1);\n            code1 = this.lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this.eatBits(12);\n          gotEOL = true;\n        } else if (code1 === EOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0) {\n        this.nextLine2D = !this.lookBits(1);\n        this.eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this.lookBits(12);\n        if (code1 === 1) {\n          this.eatBits(12);\n          if (this.encoding > 0) {\n            this.lookBits(1);\n            this.eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this.lookBits(12);\n              if (code1 !== 1) {\n                info('bad rtc code: ' + code1);\n              }\n              this.eatBits(12);\n              if (this.encoding > 0) {\n                this.lookBits(1);\n                this.eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this.lookBits(13);\n          if (code1 === EOF) {\n            this.eof = true;\n            return null;\n          }\n          if ((code1 >> 1) === 1) {\n            break;\n          }\n          this.eatBits(1);\n        }\n        this.eatBits(12);\n        if (this.encoding > 0) {\n          this.eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      if (codingLine[0] > 0) {\n        this.outputBits = codingLine[this.codingPos = 0];\n      } else {\n        this.outputBits = codingLine[this.codingPos = 1];\n      }\n      this.row++;\n    }\n\n    var c;\n    if (this.outputBits >= 8) {\n      c = (this.codingPos & 1) ? 0 : 0xFF;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits = (codingLine[this.codingPos] -\n                           codingLine[this.codingPos - 1]);\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xFF >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xFF >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits = (codingLine[this.codingPos] -\n                               codingLine[this.codingPos - 1]);\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xFF;\n    }\n    return c;\n  };\n\n  // This functions returns the code found from the table.\n  // The start and end parameters set the boundaries for searching the table.\n  // The limit parameter is optional. Function returns an array with three\n  // values. The first array element indicates whether a valid code is being\n  // returned. The second array element is the actual code. The third array\n  // element indicates whether EOF was reached.\n  CCITTFaxStream.prototype.findTableCode =\n      function ccittFaxStreamFindTableCode(start, end, table, limit) {\n\n    var limitValue = limit || 0;\n    for (var i = start; i <= end; ++i) {\n      var code = this.lookBits(i);\n      if (code === EOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        var p = table[code - limitValue];\n        if (p[0] === i) {\n          this.eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  };\n\n  CCITTFaxStream.prototype.getTwoDimCode =\n      function ccittFaxStreamGetTwoDimCode() {\n\n    var code = 0;\n    var p;\n    if (this.eoblock) {\n      code = this.lookBits(7);\n      p = twoDimTable[code];\n      if (p && p[0] > 0) {\n        this.eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      var result = this.findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info('Bad two dim code');\n    return EOF;\n  };\n\n  CCITTFaxStream.prototype.getWhiteCode =\n      function ccittFaxStreamGetWhiteCode() {\n\n    var code = 0;\n    var p;\n    if (this.eoblock) {\n      code = this.lookBits(12);\n      if (code === EOF) {\n        return 1;\n      }\n\n      if ((code >> 5) === 0) {\n        p = whiteTable1[code];\n      } else {\n        p = whiteTable2[code >> 3];\n      }\n\n      if (p[0] > 0) {\n        this.eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      var result = this.findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this.findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info('bad white code');\n    this.eatBits(1);\n    return 1;\n  };\n\n  CCITTFaxStream.prototype.getBlackCode =\n      function ccittFaxStreamGetBlackCode() {\n\n    var code, p;\n    if (this.eoblock) {\n      code = this.lookBits(13);\n      if (code === EOF) {\n        return 1;\n      }\n      if ((code >> 7) === 0) {\n        p = blackTable1[code];\n      } else if ((code >> 9) === 0 && (code >> 7) !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this.eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      var result = this.findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this.findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this.findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info('bad black code');\n    this.eatBits(1);\n    return 1;\n  };\n\n  CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n    var c;\n    while (this.inputBits < n) {\n      if ((c = this.str.getByte()) === -1) {\n        if (this.inputBits === 0) {\n          return EOF;\n        }\n        return ((this.inputBuf << (n - this.inputBits)) &\n                (0xFFFF >> (16 - n)));\n      }\n      this.inputBuf = (this.inputBuf << 8) + c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xFFFF >> (16 - n));\n  };\n\n  CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  };\n\n  return CCITTFaxStream;\n})();\n\nvar LZWStream = (function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n\n    DecodeStream.call(this, maybeLength);\n  }\n\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = (cachedData << 8) | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = (bitsCached -= n);\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return (cachedData >>> bitsCached) & ((1 << n) - 1);\n  };\n\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n    var i, j, q;\n\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return; // eof was found\n    }\n\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = (nextCode + earlyChange) & (nextCode + earlyChange - 1) ?\n          codeLength : Math.min(Math.log(nextCode + earlyChange) /\n          0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n\n    this.bufferLength = currentBufferLength;\n  };\n\n  return LZWStream;\n})();\n\nvar NullStream = (function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n\n  NullStream.prototype = Stream.prototype;\n\n  return NullStream;\n})();\n\n\nvar WorkerMessageHandler = PDFJS.WorkerMessageHandler = {\n  setup: function wphSetup(handler) {\n    var pdfManager;\n\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = createPromiseCapability();\n\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise,\n                     encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2],\n          };\n          loadDocumentCapability.resolve(doc);\n        },\n        parseFailure);\n      };\n\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n\n      pdfManager.ensureDoc('checkHeader', []).then(function() {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function() {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(\n            parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n\n      return loadDocumentCapability.promise;\n    }\n\n    function getPdfManager(data) {\n      var pdfManagerCapability = createPromiseCapability();\n\n      var source = data.source;\n      var disableRange = data.disableRange;\n      if (source.data) {\n        try {\n          pdfManager = new LocalPdfManager(source.data, source.password);\n          pdfManagerCapability.resolve();\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      } else if (source.chunkedViewerLoading) {\n        try {\n          pdfManager = new NetworkPdfManager(source, handler);\n          pdfManagerCapability.resolve();\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n\n      var networkManager = new NetworkManager(source.url, {\n        httpHeaders: source.httpHeaders,\n        withCredentials: source.withCredentials\n      });\n      var cachedChunks = [];\n      var fullRequestXhrId = networkManager.requestFull({\n        onHeadersReceived: function onHeadersReceived() {\n          if (disableRange) {\n            return;\n          }\n\n          var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n          if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n            return;\n          }\n\n          var contentEncoding =\n            fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n          if (contentEncoding !== 'identity') {\n            return;\n          }\n\n          var length = fullRequestXhr.getResponseHeader('Content-Length');\n          length = parseInt(length, 10);\n          if (fullRequestXhr.status === 206) {\n            // Since Chrome 39, there exists a bug where cached responses are\n            // served with status code 206 for non-range requests.\n            // Content-Length does not specify the total size of the resource\n            // when the status code is 206 (see RFC 2616, section 14.16).\n            // In this case, extract the file size from the Content-Range\n            // header, which is defined to be \"bytes start-end/length\" for\n            // byte range requests.\n            // See https://github.com/mozilla/pdf.js/issues/5512 and\n            // https://code.google.com/p/chromium/issues/detail?id=442318\n            length = fullRequestXhr.getResponseHeader('Content-Range');\n            length = length && /bytes \\d+-\\d+\\/(\\d+)/.exec(length);\n            length = length && parseInt(length[1], 10);\n          }\n          if (!isInt(length)) {\n            return;\n          }\n          source.length = length;\n          if (length <= 2 * RANGE_CHUNK_SIZE) {\n            // The file size is smaller than the size of two chunks, so it does\n            // not make any sense to abort the request and retry with a range\n            // request.\n            return;\n          }\n\n          if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n            // We can continue fetching when progressive loading is enabled,\n            // and we don't need the autoFetch feature.\n            source.disableAutoFetch = true;\n          } else {\n            // NOTE: by cancelling the full request, and then issuing range\n            // requests, there will be an issue for sites where you can only\n            // request the pdf once. However, if this is the case, then the\n            // server should not be returning that it can support range\n            // requests.\n            networkManager.abortRequest(fullRequestXhrId);\n          }\n\n          try {\n            pdfManager = new NetworkPdfManager(source, handler);\n            pdfManagerCapability.resolve(pdfManager);\n          } catch (ex) {\n            pdfManagerCapability.reject(ex);\n          }\n        },\n\n        onProgressiveData: source.disableStream ? null :\n            function onProgressiveData(chunk) {\n          if (!pdfManager) {\n            cachedChunks.push(chunk);\n            return;\n          }\n          pdfManager.sendProgressiveData(chunk);\n        },\n\n        onDone: function onDone(args) {\n          if (pdfManager) {\n            return; // already processed\n          }\n\n          var pdfFile;\n          if (args === null) {\n            // TODO add some streaming manager, e.g. for unknown length files.\n            // The data was returned in the onProgressiveData, combining...\n            var pdfFileLength = 0, pos = 0;\n            cachedChunks.forEach(function (chunk) {\n              pdfFileLength += chunk.byteLength;\n            });\n            if (source.length && pdfFileLength !== source.length) {\n              warn('reported HTTP length is different from actual');\n            }\n            var pdfFileArray = new Uint8Array(pdfFileLength);\n            cachedChunks.forEach(function (chunk) {\n              pdfFileArray.set(new Uint8Array(chunk), pos);\n              pos += chunk.byteLength;\n            });\n            pdfFile = pdfFileArray.buffer;\n          } else {\n            pdfFile = args.chunk;\n          }\n\n          // the data is array, instantiating directly from it\n          try {\n            pdfManager = new LocalPdfManager(pdfFile, source.password);\n            pdfManagerCapability.resolve();\n          } catch (ex) {\n            pdfManagerCapability.reject(ex);\n          }\n        },\n\n        onError: function onError(status) {\n          var exception;\n          if (status === 404) {\n            exception = new MissingPDFException('Missing PDF \"' +\n                                                source.url + '\".');\n            handler.send('MissingPDF', exception);\n          } else {\n            exception = new UnexpectedResponseException(\n              'Unexpected server response (' + status +\n              ') while retrieving PDF \"' + source.url + '\".', status);\n            handler.send('UnexpectedResponse', exception);\n          }\n        },\n\n        onProgress: function onProgress(evt) {\n          handler.send('DocProgress', {\n            loaded: evt.loaded,\n            total: evt.lengthComputable ? evt.total : source.length\n          });\n        }\n      });\n\n      return pdfManagerCapability.promise;\n    }\n\n    handler.on('test', function wphSetupTest(data) {\n      // check if Uint8Array can be sent to worker\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', false);\n        return;\n      }\n      // making sure postMessage transfers are working\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      // check if the response property is supported by xhr\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      // check if the property is actually implemented\n      try {\n        var dummy = xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n\n      var onSuccess = function(doc) {\n        handler.send('GetDoc', { pdfInfo: doc });\n      };\n\n      var onFailure = function(e) {\n        if (e instanceof PasswordException) {\n          if (e.code === PasswordResponses.NEED_PASSWORD) {\n            handler.send('NeedPassword', e);\n          } else if (e.code === PasswordResponses.INCORRECT_PASSWORD) {\n            handler.send('IncorrectPassword', e);\n          }\n        } else if (e instanceof InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError',\n                       new UnknownErrorException(e.message, e.toString()));\n        }\n      };\n\n      PDFJS.maxImageSize = data.maxImageSize === undefined ?\n                           -1 : data.maxImageSize;\n      PDFJS.disableFontFace = data.disableFontFace;\n      PDFJS.disableCreateObjectURL = data.disableCreateObjectURL;\n      PDFJS.verbosity = data.verbosity;\n      PDFJS.cMapUrl = data.cMapUrl === undefined ?\n                           null : data.cMapUrl;\n      PDFJS.cMapPacked = data.cMapPacked === true;\n\n      getPdfManager(data).then(function () {\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function(stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(function pdfManagerReady() {\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          // Try again with recoveryMode == true\n          if (!(ex instanceof XRefParseException)) {\n            if (ex instanceof PasswordException) {\n              // after password exception prepare to receive a new password\n              // to repeat loading\n              pdfManager.passwordChanged().then(pdfManagerReady);\n            }\n\n            onFailure(ex);\n            return;\n          }\n\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function() {\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }, onFailure);\n    });\n\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function(page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var viewPromise = pdfManager.ensure(page, 'view');\n\n        return Promise.all([rotatePromise, refPromise, viewPromise]).then(\n            function(results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            view: results[2]\n          };\n        });\n      });\n    });\n\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n\n    handler.on('GetDestinations',\n      function wphSetupGetDestinations(data) {\n        return pdfManager.ensureCatalog('destinations');\n      }\n    );\n\n    handler.on('GetDestination',\n      function wphSetupGetDestination(data) {\n        return pdfManager.ensureCatalog('getDestination', [ data.id ]);\n      }\n    );\n\n    handler.on('GetAttachments',\n      function wphSetupGetAttachments(data) {\n        return pdfManager.ensureCatalog('attachments');\n      }\n    );\n\n    handler.on('GetJavaScript',\n      function wphSetupGetJavaScript(data) {\n        return pdfManager.ensureCatalog('javaScript');\n      }\n    );\n\n    handler.on('GetOutline',\n      function wphSetupGetOutline(data) {\n        return pdfManager.ensureCatalog('documentOutline');\n      }\n    );\n\n    handler.on('GetMetadata',\n      function wphSetupGetMetadata(data) {\n        return Promise.all([pdfManager.ensureDoc('documentInfo'),\n                            pdfManager.ensureCatalog('metadata')]);\n      }\n    );\n\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function(stream) {\n        return stream.bytes;\n      });\n    });\n\n    handler.on('GetStats',\n      function wphSetupGetStats(data) {\n        return pdfManager.pdfDocument.xref.stats;\n      }\n    );\n\n    handler.on('UpdatePassword', function wphSetupUpdatePassword(data) {\n      pdfManager.updatePassword(data);\n    });\n\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function(page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', []);\n      });\n    });\n\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      pdfManager.getPage(data.pageIndex).then(function(page) {\n\n        var pageNum = data.pageIndex + 1;\n        var start = Date.now();\n        // Pre compile the pdf page and fetch the fonts/images.\n        page.getOperatorList(handler, data.intent).then(function(operatorList) {\n\n          info('page=' + pageNum + ' - getOperatorList: time=' +\n               (Date.now() - start) + 'ms, len=' + operatorList.fnArray.length);\n\n        }, function(e) {\n\n          var minimumStackMessage =\n            'worker.js: while trying to getPage() and getOperatorList()';\n\n          var wrappedException;\n\n          // Turn the error into an obj that can be serialized\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if (typeof e === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e),\n              stack: minimumStackMessage\n            };\n          }\n\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n\n    handler.on('GetTextContent', function wphExtractText(data) {\n      return pdfManager.getPage(data.pageIndex).then(function(page) {\n        var pageNum = data.pageIndex + 1;\n        var start = Date.now();\n        return page.extractTextContent().then(function(textContent) {\n          info('text indexing: page=' + pageNum + ' - time=' +\n               (Date.now() - start) + 'ms');\n          return textContent;\n        });\n      });\n    });\n\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n\n    handler.on('Terminate', function wphTerminate(data) {\n      pdfManager.terminate();\n    });\n  }\n};\n\nvar consoleTimer = {};\n\nvar workerConsole = {\n  log: function log() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n      action: 'console_log',\n      data: args\n    });\n  },\n\n  error: function error() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n      action: 'console_error',\n      data: args\n    });\n    throw 'pdf.js execution error';\n  },\n\n  time: function time(name) {\n    consoleTimer[name] = Date.now();\n  },\n\n  timeEnd: function timeEnd(name) {\n    var time = consoleTimer[name];\n    if (!time) {\n      error('Unknown timer name ' + name);\n    }\n    this.log('Timer:', name, Date.now() - time);\n  }\n};\n\n\n// Worker thread?\nif (typeof window === 'undefined') {\n  if (!('console' in globalScope)) {\n    globalScope.console = workerConsole;\n  }\n\n  // Listen for unsupported features so we can pass them on to the main thread.\n  PDFJS.UnsupportedManager.listen(function (msg) {\n    globalScope.postMessage({\n      action: '_unsupported_feature',\n      data: msg\n    });\n  });\n\n  var handler = new MessageHandler('worker_processor', this);\n  WorkerMessageHandler.setup(handler);\n}\n\n\n/* This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nvar ArithmeticDecoder = (function ArithmeticDecoderClosure() {\n  // Table C-2\n  var QeTable = [\n    {qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1},\n    {qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0},\n    {qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0},\n    {qe: 0x0AC1, nmps: 4, nlps: 12, switchFlag: 0},\n    {qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0},\n    {qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0},\n    {qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1},\n    {qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0},\n    {qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0},\n    {qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0},\n    {qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0},\n    {qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0},\n    {qe: 0x1C01, nmps: 13, nlps: 20, switchFlag: 0},\n    {qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0},\n    {qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1},\n    {qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0},\n    {qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0},\n    {qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0},\n    {qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0},\n    {qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0},\n    {qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0},\n    {qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0},\n    {qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0},\n    {qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0},\n    {qe: 0x1C01, nmps: 25, nlps: 22, switchFlag: 0},\n    {qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0},\n    {qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0},\n    {qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0},\n    {qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0},\n    {qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0},\n    {qe: 0x0AC1, nmps: 31, nlps: 28, switchFlag: 0},\n    {qe: 0x09C1, nmps: 32, nlps: 29, switchFlag: 0},\n    {qe: 0x08A1, nmps: 33, nlps: 30, switchFlag: 0},\n    {qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0},\n    {qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0},\n    {qe: 0x02A1, nmps: 36, nlps: 33, switchFlag: 0},\n    {qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0},\n    {qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0},\n    {qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0},\n    {qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0},\n    {qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0},\n    {qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0},\n    {qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0},\n    {qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0},\n    {qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0},\n    {qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0},\n    {qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0}\n  ];\n\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xFFFF) | ((this.clow >> 9) & 0x7F);\n    this.clow = (this.clow << 7) & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  ArithmeticDecoder.prototype = {\n    // C.3.4 Compressed data input (BYTEIN)\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += (data[bp] << 9);\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? (data[bp] << 8) : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += (this.clow >> 16);\n        this.clow &= 0xFFFF;\n      }\n    },\n    // C.3.2 Decoding a decision (DECODE)\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      // contexts are packed into 1 byte:\n      // highest 7 bits carry cx.index, lowest bit carries cx.mps\n      var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n\n      if (this.chigh < qeIcx) {\n        // exchangeLps\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        // exchangeMps\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      // C.3.3 renormD;\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n\n        a <<= 1;\n        this.chigh = ((this.chigh << 1) & 0xFFFF) | ((this.clow >> 15) & 1);\n        this.clow = (this.clow << 1) & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n\n  return ArithmeticDecoder;\n})();\n\n\nvar JpegImage = (function jpegImage() {\n  var dctZigZag = new Uint8Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1  =  4017;   // cos(pi/16)\n  var dctSin1  =   799;   // sin(pi/16)\n  var dctCos3  =  3406;   // cos(3*pi/16)\n  var dctSin3  =  2276;   // sin(3*pi/16)\n  var dctCos6  =  1567;   // cos(6*pi/16)\n  var dctSin6  =  3784;   // sin(6*pi/16)\n  var dctSqrt2 =  5793;   // sqrt(2)\n  var dctSqrt1d2 = 2896;  // sqrt(2) / 2\n\n  function constructor() {\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0, code = [], i, j, length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({children: [], index: 0});\n    var p = code[0], q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {children: [], index: 0});\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {children: [], index: 0});\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n\n  function decodeScan(data, offset, frame, components, resetInterval,\n                      spectralStart, spectralEnd, successivePrev, successive) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH, maxV = frame.maxV;\n\n    var startOffset = offset, bitsData = 0, bitsCount = 0;\n\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw 'unexpected marker: ' +\n            ((bitsData << 8) | nextByte).toString(16);\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if (typeof node !== 'object') {\n          throw 'invalid huffman sequence';\n        }\n      }\n    }\n\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = (n << 1) | readBit();\n        length--;\n      }\n      return n;\n    }\n\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << (length - 1)) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = (component.pred += diff);\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n      component.blockData[offset] = (component.pred += diff);\n    }\n\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] =\n          receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n\n    var successiveACState = 0, successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw 'invalid ACn encoding';\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offset + z]) {\n            component.blockData[offset + z] += (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offset + z]) {\n            component.blockData[offset + z] += (readBit() << successive);\n          } else {\n            component.blockData[offset + z] =\n              successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offset + z]) {\n            component.blockData[offset + z] += (readBit() << successive);\n          }\n          break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0, marker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) {\n      resetInterval = mcuExpected;\n    }\n\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = (data[offset] << 8) | data[offset + 1];\n      if (marker <= 0xFF00) {\n        throw 'marker was not found';\n      }\n\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n\n    return offset - startOffset;\n  }\n\n  // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable, blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n\n    // inverse DCT on rows\n    for (var row = 0; row < 64; row += 8) {\n      // gather block data\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n\n      // dequant p0\n      p0 *= qt[row];\n\n      // check for all-zero AC coefficients\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = (dctSqrt2 * p0 + 512) >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      // dequant p1 ... p7\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n\n      // stage 4\n      v0 = (dctSqrt2 * p0 + 128) >> 8;\n      v1 = (dctSqrt2 * p4 + 128) >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n      v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n\n      // stage 3\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = v0 - v1;\n      t  = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n      v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n      v3 = t;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = v4 - v6;\n      v7 = (v7 + v5 + 1) >> 1;\n      v5 = v7 - v5;\n\n      // stage 2\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = v0 - v3;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = v1 - v2;\n      t  = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n      v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n      v7 = t;\n      t  = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n      v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n\n    // inverse DCT on columns\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col +  8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n\n      // check for all-zero AC coefficients\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = (dctSqrt2 * p0 + 8192) >> 14;\n        // convert to 8 bit\n        t = (t < -2040) ? 0 : (t >= 2024) ? 255 : (t + 2056) >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col +  8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n\n      // stage 4\n      v0 = (dctSqrt2 * p0 + 2048) >> 12;\n      v1 = (dctSqrt2 * p4 + 2048) >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n      v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n      v5 = p3;\n      v6 = p5;\n\n      // stage 3\n      // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n      // converting to UInt8 range later.\n      v0 = ((v0 + v1 + 1) >> 1) + 4112;\n      v1 = v0 - v1;\n      t  = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n      v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n      v3 = t;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = v4 - v6;\n      v7 = (v7 + v5 + 1) >> 1;\n      v5 = v7 - v5;\n\n      // stage 2\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = v0 - v3;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = v1 - v2;\n      t  = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n      v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n      v7 = t;\n      t  = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n      v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n\n      // convert to 8-bit integers\n      p0 = (p0 < 16) ? 0 : (p0 >= 4080) ? 255 : p0 >> 4;\n      p1 = (p1 < 16) ? 0 : (p1 >= 4080) ? 255 : p1 >> 4;\n      p2 = (p2 < 16) ? 0 : (p2 >= 4080) ? 255 : p2 >> 4;\n      p3 = (p3 < 16) ? 0 : (p3 >= 4080) ? 255 : p3 >> 4;\n      p4 = (p4 < 16) ? 0 : (p4 >= 4080) ? 255 : p4 >> 4;\n      p5 = (p5 < 16) ? 0 : (p5 >= 4080) ? 255 : p5 >> 4;\n      p6 = (p6 < 16) ? 0 : (p6 >= 4080) ? 255 : p6 >> 4;\n      p7 = (p7 < 16) ? 0 : (p7 >= 4080) ? 255 : p7 >> 4;\n\n      // store block data\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col +  8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n\n  function clamp0to255(a) {\n    return a <= 0 ? 0 : a >= 255 ? 255 : a;\n  }\n\n  constructor.prototype = {\n    parse: function parse(data) {\n\n      function readUint16() {\n        var value = (data[offset] << 8) | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) *\n                                        component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) *\n                                          component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n          var blocksBufferSize = 64 * blocksPerColumnForMcu *\n                                      (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n\n      var offset = 0, length = data.length;\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) { // SOI (Start of Image)\n        throw 'SOI not found';\n      }\n\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) { // EOI (End of image)\n        var i, j, l;\n        switch(fileMarker) {\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 &&\n                  appData[2] === 0x49 && appData[3] === 0x46 &&\n                  appData[4] === 0) { // 'JFIF\\x00'\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 +\n                                              3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 &&\n                  appData[2] === 0x6F && appData[3] === 0x62 &&\n                  appData[4] === 0x65) { // 'Adobe'\n                adobe = {\n                  version: (appData[5] << 8) | appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n\n          case 0xFFDB: // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw 'DQT: invalid table spec';\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n            if (frame) {\n              throw 'Only single frame JPEGs supported';\n            }\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = (fileMarker === 0xFFC1);\n            frame.progressive = (fileMarker === 0xFFC2);\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++], componentId;\n            var maxH = 0, maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationTable: quantizationTables[qId]\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n\n          case 0xFFC4: // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += (codeLengths[j] = data[offset]);\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n\n              ((huffmanTableSpec >> 4) === 0 ?\n                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xFFDD: // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n\n          case 0xFFDA: // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [], component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset,\n              frame, components, resetInterval,\n              spectralStart, spectralEnd,\n              successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n\n          case 0xFFFF: // Fill bytes\n            if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            if (data[offset - 3] === 0xFF &&\n                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n            throw 'unknown JPEG marker ' + fileMarker.toString(16);\n        }\n        fileMarker = readUint16();\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8Array(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = (component.blocksPerLine + 1) << 3;\n        // precalculate the xScaleBlockOffset\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        // linearize the blocks of the component\n        for (y = 0; y < height; y++) {\n          j = 0 | (y * componentScaleY);\n          index = blocksPerScanline * (j & mask3LSB) | ((j & 7) << 3);\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n\n      // decodeTransform contains pairs of multiplier (-256..256) and additive\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n\n    _isColorConversionNeeded: function isColorConversionNeeded() {\n      if (this.adobe && this.adobe.transformCode) {\n        // The adobe transform marker overrides any previous setting\n        return true;\n      } else if (this.numComponents === 3) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y  = data[i    ];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i    ] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n        data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n        data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n      }\n      return data;\n    },\n\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y  = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n\n        var r = -122.67195406894 +\n          Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr -\n                5.4080610064599e-5 * Y + 0.00048449797120281 * k -\n                0.154362151871126) +\n          Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y -\n                0.00477271405408747 * k + 1.53380253221734) +\n          Y * (0.000961250184130688 * Y - 0.00266257332283933 * k +\n               0.48357088451265) +\n          k * (-0.000336197177618394 * k + 0.484791561490776);\n\n        var g = 107.268039397724 +\n          Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr +\n                0.000659397001245577 * Y + 0.000426105652938837 * k -\n                0.176491792462875) +\n          Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y +\n                0.000770482631801132 * k - 0.151051492775562) +\n          Y * (0.00126935368114843 * Y - 0.00265090189010898 * k +\n               0.25802910206845) +\n          k * (-0.000318913117588328 * k - 0.213742400323665);\n\n        var b = -20.810012546947 +\n          Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr +\n                0.0020741088115012 * Y - 0.00288260236853442 * k +\n                0.814272968359295) +\n          Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y +\n                0.000560833691242812 * k - 0.195152027534049) +\n          Y * (0.00174418132927582 * Y - 0.00255243321439347 * k +\n               0.116935020465145) +\n          k * (-0.000343531996510555 * k + 0.24165260232407);\n\n        data[offset++] = clamp0to255(r);\n        data[offset++] = clamp0to255(g);\n        data[offset++] = clamp0to255(b);\n      }\n      return data;\n    },\n\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y  = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i    ] = clamp0to255(434.456 - Y - 1.402 * Cr);\n        data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n        data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n        // K in data[i + 3] is unchanged\n      }\n      return data;\n    },\n\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var min = -255 * 255 * 255;\n      var scale = 1 / 255 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i];\n        m = data[i + 1];\n        y = data[i + 2];\n        k = data[i + 3];\n\n        var r =\n          c * (-4.387332384609988 * c + 54.48615194189176 * m +\n               18.82290502165302 * y + 212.25662451639585 * k -\n               72734.4411664936) +\n          m * (1.7149763477362134 * m - 5.6096736904047315 * y -\n               17.873870861415444 * k - 1401.7366389350734) +\n          y * (-2.5217340131683033 * y - 21.248923337353073 * k +\n               4465.541406466231) -\n          k * (21.86122147463605 * k + 48317.86113160301);\n        var g =\n          c * (8.841041422036149 * c + 60.118027045597366 * m +\n               6.871425592049007 * y + 31.159100130055922 * k -\n               20220.756542821975) +\n          m * (-15.310361306967817 * m + 17.575251261109482 * y +\n               131.35250912493976 * k - 48691.05921601825) +\n          y * (4.444339102852739 * y + 9.8632861493405 * k -\n               6341.191035517494) -\n          k * (20.737325471181034 * k + 47890.15695978492);\n        var b =\n          c * (0.8842522430003296 * c + 8.078677503112928 * m +\n               30.89978309703729 * y - 0.23883238689178934 * k -\n               3616.812083916688) +\n          m * (10.49593273432072 * m + 63.02378494754052 * y +\n               50.606957656360734 * k - 28620.90484698408) +\n          y * (0.03296041114873217 * y + 115.60384449646641 * k -\n               49363.43385999684) -\n          k * (22.33816807309886 * k + 45932.16563550634);\n\n        data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n        data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n        data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n      }\n      return data;\n    },\n\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw 'Unsupported color mode';\n      }\n      // type of data: Uint8Array(width * height * numComponents)\n      var data = this._getLinearizedBlockData(width, height);\n\n      if (this.numComponents === 3) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          } else {\n            return this._convertYcckToCmyk(data);\n          }\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n\n  return constructor;\n})();\n\n\nvar JpxImage = (function JpxImageClosure() {\n  // Table E.1\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n\n      var head = readUint16(data, 0);\n      // No box header, immediate start of codestream (SOC)\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n\n      var position = 0, length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = readUint32(data, position);\n        var tbox = readUint32(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          // XLBox: read UInt64 according to spec.\n          // JavaScript's int precision of 53 bit should be sufficient here.\n          lbox = readUint32(data, position) * 4294967296 +\n                 readUint32(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new Error('JPX Error: Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268: // 'jp2h'\n            jumpDataLength = false; // parsing child boxes\n            break;\n          case 0x636F6C72: // 'colr'\n            // Colorspaces are not used, the CS from the PDF is used.\n            var method = data[position];\n            var precedence = data[position + 1];\n            var approximation = data[position + 2];\n            if (method === 1) {\n              // enumerated colorspace\n              var colorspace = readUint32(data, position + 3);\n              switch (colorspace) {\n                case 16: // this indicates a sRGB colorspace\n                case 17: // this indicates a grayscale colorspace\n                case 18: // this indicates a YUV colorspace\n                  break;\n                default:\n                  warn('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              info('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263: // 'jp2c'\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020: // 'jP\\024\\024'\n            if (0x0d0a870a !== readUint32(data, position)) {\n              warn('Invalid JP2 signature');\n            }\n            break;\n          // The following header types are valid but currently not used:\n          case 0x6A501A1A: // 'jP\\032\\032'\n          case 0x66747970: // 'ftyp'\n          case 0x72726571: // 'rreq'\n          case 0x72657320: // 'res '\n          case 0x69686472: // 'ihdr'\n            break;\n          default:\n            var headerType = String.fromCharCode((tbox >> 24) & 0xFF,\n                                                 (tbox >> 16) & 0xFF,\n                                                 (tbox >> 8) & 0xFF,\n                                                 tbox & 0xFF);\n            warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = (oldByte << 8) | newByte;\n        // Image and tile size (SIZ)\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0; // Byte 4\n          var Ysiz = stream.getInt32() >>> 0; // Byte 8\n          var XOsiz = stream.getInt32() >>> 0; // Byte 12\n          var YOsiz = stream.getInt32() >>> 0; // Byte 16\n          stream.skip(16);\n          var Csiz = stream.getUint16(); // Byte 36\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          // Results are always returned as Uint8Arrays\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new Error('JPX Error: No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      try {\n        var doNotRecover = false;\n        var position = start;\n        while (position + 1 < end) {\n          var code = readUint16(data, position);\n          position += 2;\n\n          var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n          switch (code) {\n            case 0xFF4F: // Start of codestream (SOC)\n              context.mainHeader = true;\n              break;\n            case 0xFFD9: // End of codestream (EOC)\n              break;\n            case 0xFF51: // Image and tile size (SIZ)\n              length = readUint16(data, position);\n              var siz = {};\n              siz.Xsiz = readUint32(data, position + 4);\n              siz.Ysiz = readUint32(data, position + 8);\n              siz.XOsiz = readUint32(data, position + 12);\n              siz.YOsiz = readUint32(data, position + 16);\n              siz.XTsiz = readUint32(data, position + 20);\n              siz.YTsiz = readUint32(data, position + 24);\n              siz.XTOsiz = readUint32(data, position + 28);\n              siz.YTOsiz = readUint32(data, position + 32);\n              var componentsCount = readUint16(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C: // Quantization default (QCD)\n              length = readUint16(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('JPX Error: Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = (spqcdSize === 8);\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D: // Quantization component (QCC)\n              length = readUint16(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = readUint16(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('JPX Error: Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = (spqcdSize === 8);\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < (length + position)) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = ((data[j] & 0x7) << 8) | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52: // Coding style default (COD)\n              length = readUint16(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = readUint16(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('JPX Error: Unsupported COD options (' +\n                                unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90: // Start of tile-part (SOT)\n              length = readUint16(data, position);\n              tile = {};\n              tile.index = readUint16(data, position + 2);\n              tile.length = readUint32(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                // reset component specific settings\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0); // clone of the global COC\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0); // clone of the global COC\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93: // Start of data (SOD)\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n\n              // moving to the end of the data\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55: // Tile-part lengths, main header (TLM)\n            case 0xFF57: // Packet length, main header (PLM)\n            case 0xFF58: // Packet length, tile-part header (PLT)\n            case 0xFF64: // Comment (COM)\n              length = readUint16(data, position);\n              // skipping content\n              break;\n            case 0xFF53: // Coding style component (COC)\n              throw new Error('JPX Error: Codestream code 0xFF53 (COC) is ' +\n                              'not implemented');\n            default:\n              throw new Error('JPX Error: Unknown codestream code: ' +\n                              code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw e;\n        } else {\n          warn('Trying to recover from ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    // Section B.2 Component mapping\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    // Section B.3 Division into tile and tile-components\n    var tile, tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    // calculate codeblock size as described in section B.7\n    result.xcb_ = (r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) :\n                   Math.min(codOrCoc.xcb, result.PPx));\n    result.ycb_ = (r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) :\n                   Math.min(codOrCoc.ycb, result.PPy));\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    // Section B.6 Division resolution to precincts\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    // Jasper introduces codeblock groups for mapping each subband codeblocks\n    // to precincts. Precinct partition divides a resolution according to width\n    // and height parameters. The subband that belongs to the resolution level\n    // has a different size than the level, unless it is the zero resolution.\n\n    // From Jasper documentation: jpeg2000.pdf, section K: Tier-2 coding:\n    // The precinct partitioning for a particular subband is derived from a\n    // partitioning of its parent LL band (i.e., the LL band at the next higher\n    // resolution level)... The LL band associated with each resolution level is\n    // divided into precincts... Each of the resulting precinct regions is then\n    // mapped into its child subbands (if any) at the next lower resolution\n    // level. This is accomplished by using the coordinate transformation\n    // (u, v) = (ceil(x/2), ceil(y/2)) where (x, y) and (u, v) are the\n    // coordinates of a point in the LL band and child subband, respectively.\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n    var precinctHeightInSubband = 1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n    var numprecinctswide = (resolution.trx1 > resolution.trx0 ?\n      Math.ceil(resolution.trx1 / precinctWidth) -\n      Math.floor(resolution.trx0 / precinctWidth) : 0);\n    var numprecinctshigh = (resolution.try1 > resolution.try0 ?\n      Math.ceil(resolution.try1 / precinctHeight) -\n      Math.floor(resolution.try0 / precinctHeight) : 0);\n    var numprecincts = numprecinctswide * numprecinctshigh;\n\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    // Section B.7 Division sub-band into code-blocks\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n    var cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\n        // Calculate precinct number for this codeblock, codeblock position\n        // should be relative to its subband, use actual dimension and position\n        // See comment about codeblock group width and height\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) /\n          precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) /\n          precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + (pj * precinctParameters.numprecinctswide);\n\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n\n        if (codeblock.tbx1_ <= codeblock.tbx0_ ||\n            codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        // building precinct for the sub-band\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    // Section B.10.8 Order of info in packet\n    var subbands = resolution.subbands;\n    // sub-bands already ordered in 'LL', 'HL', 'LH', and 'HH' sequence\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount,\n        tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n\n    var l = 0, r = 0, i = 0, k = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.1 Layer-resolution-component-position\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new Error('JPX Error: Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount,\n        tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n\n    var r = 0, l = 0, i = 0, k = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.2 Resolution-layer-component-position\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new Error('JPX Error: Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount,\n        component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(\n      maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts,\n            resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.3 Resolution-position-component-layer\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new Error('JPX Error: Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0, r = 0, c = 0, px = 0, py = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.4 Position-component-resolution-layer\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount =\n              component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale =\n                precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(\n                px,\n                py,\n                sizeInImageScale,\n                precinctsIterationSizes,\n                resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new Error('JPX Error: Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0, r = 0, c = 0, px = 0, py = 0;\n\n    this.nextPacket = function JpxImage_nextPacket() {\n      // Section B.12.1.5 Component-position-resolution-layer\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(\n                px,\n                py,\n                sizeInImageScale,\n                precinctsIterationSizes,\n                resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new Error('JPX Error: Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(\n    pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 ||\n        posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex =\n      (posY / sizeInImageScale.width) *\n      resolution.precinctParameters.numprecinctswide;\n    return (posX / sizeInImageScale.height) + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution =\n          scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution =\n          scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(\n          minWidthCurrentComponent,\n          widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(\n          minHeightCurrentComponent,\n          heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent,\n          resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent,\n          resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    // Creating resolutions and sub-bands for each component\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount =\n        component.codingStyleParameters.decompositionLevelsCount;\n      // Section B.5 Resolution levels and sub-bands\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << (decompositionLevelsCount - r);\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n\n        var subband;\n        if (r === 0) {\n          // one sub-band (LL) with last decomposition\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << (decompositionLevelsCount - r + 1);\n          var resolutionSubbands = [];\n          // three sub-bands (HL, LH and HH) with rest of decompositions\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    // Generate the packets sequence\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator =\n          new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator =\n          new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator =\n          new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator =\n          new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator =\n          new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new Error('JPX Error: Unsupported progression order ' +\n                        progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer, bufferSize = 0, skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = (buffer << 7) | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = (buffer << 8) | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return (buffer >>> bufferSize) & ((1 << count) - 1);\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF &&\n          data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF &&\n                 data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        // Skip also marker segment length and packet sequence ID\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [], codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          // reading inclusion tree\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            // building inclusion and zero bit-planes trees\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = log2(codingpasses);\n        // rounding down log2\n        var bits = ((codingpasses < (1 << codingpassesLog2)) ?\n          codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband,\n                            delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType,\n                              codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2; // first bit plane starts from cleanup\n\n      // collect data\n      var data = codeblock.data, totalLength = 0, codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      // decoding the item\n      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropogationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n\n      var offset = (codeblock.tbx0_ - x0) + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      // Do the interleaving of Section F.3.3 here, so we do not need\n      // to copy later. LL level is not interleaved, just copied.\n      var interleave = (subband.type !== 'LL');\n      for (j = 0; j < blockHeight; j++) {\n        var row = (offset / width) | 0; // row in the non-interleaved subband\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? (levelOffset + (offset << 1)) : offset;\n            if (reversible && (nb >= mb)) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << (mb - nb));\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount =\n      codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = (reversible ? new ReversibleTransform() :\n                                  new IrreversibleTransform());\n\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      // Allocate space for the whole sublevel.\n      var coefficients = new Float32Array(width * height);\n\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          // formula E-5\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n\n        // calulate quantization coefficient (Section E.1.1.1)\n        var delta = (reversible ? 1 :\n          Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048));\n        var mb = (guardBits + epsilon - 1);\n\n        // In the first resolution level, copyCoefficients will fill the\n        // whole array with coefficients. In the succeding passes,\n        // copyCoefficients will consecutively fill in the values that belong\n        // to the interleaved positions of the HL, LH, and HH coefficients.\n        // The LL coefficients will then be interleaved in Transform.iterate().\n        copyCoefficients(coefficients, width, height, subband, delta, mb,\n                         reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n\n    var result = transform.calculate(subbandCoefficients,\n                                     component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8Array(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n\n      // Section G.2.2 Inverse multi component transform\n      var shift, offset, max, min, maxK;\n      var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n\n        // HACK: The multiple component transform formulas below assume that\n        // all components have the same precision. With this in mind, we\n        // compute shift and offset only once.\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        max = 255 * (1 << shift);\n        maxK = max * 0.5;\n        min = -maxK;\n\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          // inverse irreversible multiple component transform\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            r = y0 + 1.402 * y2;\n            g = y0 - 0.34413 * y1 - 0.71414 * y2;\n            b = y0 + 1.772 * y1;\n            out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n            out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n            out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n          }\n        } else {\n          // inverse reversible multiple component transform\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            g = y0 - ((y2 + y1) >> 2);\n            r = g + y2;\n            b = g + y1;\n            out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n            out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n            out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            k = y3items[j];\n            out[pos] = k <= min ? 0 : k >= maxK ? 255 : (k + offset) >> shift;\n          }\n        }\n      } else { // no multi-component transform\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          max = (127.5 * (1 << shift));\n          min = -max;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            val = items[j];\n            out[pos] = val <= min ? 0 :\n                       val >= max ? 255 : (val + offset) >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = (context.currentTile.QCC[c] !== undefined ?\n        context.currentTile.QCC[c] : context.currentTile.QCD);\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = (context.currentTile.COC[c] !== undefined  ?\n        context.currentTile.COC[c] : context.currentTile.COD);\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n\n  // Section B.10.2 Tag trees\n  var TagTree = (function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0, value = 0, level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  })();\n\n  var InclusionTree = (function InclusionTreeClosure() {\n    function InclusionTree(width, height,  defaultValue) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n\n          if (value === 0xFF) {\n            break;\n          }\n\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            // already know about this one, propagating the value to top levels\n            this.propagateValues();\n            return false;\n          }\n\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  })();\n\n  // Section D. Coefficient bit modeling\n  var BitModel = (function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    // Table D-1\n    // The index is binary presentation: 0dddvvhh, ddd - sum of Di (0..4),\n    // vv - sum of Vi (0..2), and hh - sum of Hi (0..2)\n    var LLAndLHContextsLabel = new Uint8Array([\n      0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4,\n      7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6,\n      8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8\n    ]);\n    var HLContextLabel = new Uint8Array([\n      0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8,\n      8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3,\n      4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8\n    ]);\n    var HHContextLabel = new Uint8Array([\n      0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5,\n      5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8,\n      8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8\n    ]);\n\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n\n      this.contextLabelTable = (subband === 'HH' ? HHContextLabel :\n        (subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel));\n\n      var coefficientCount = width * height;\n\n      // coefficients outside the encoding region treated as insignificant\n      // add border state cells for significanceState\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) :\n                                  mb > 6 ? new Uint16Array(coefficientCount) :\n                                  new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n\n      this.reset();\n    }\n\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        // We have 17 contexts that are accessed via context labels,\n        // plus the uniform and runlength context.\n        this.contexts = new Int8Array(19);\n\n        // Contexts are packed into 1 byte:\n        // highest 7 bits carry the index, lowest bit carries mps\n        this.contexts[0] = (4 << 1) | 0;\n        this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n      },\n      setNeighborsSignificance:\n        function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width, height = this.height;\n        var left = (column > 0);\n        var right = (column + 1 < width);\n        var i;\n\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropogationPass:\n        function BitModel_runSignificancePropogationPass() {\n        var decoder = this.decoder;\n        var width = this.width, height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              // clear processed flag first\n              processingFlags[index] &= processedInverseMask;\n\n              if (coefficentsMagnitude[index] ||\n                  !neighborsSignificance[index]) {\n                continue;\n              }\n\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width, height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n\n        // calculate horizontal contribution\n        significance1 = (column > 0 && coefficentsMagnitude[index - 1] !== 0);\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n\n        // calculate vertical contribution and combine with the horizontal\n        significance1 = (row > 0 && coefficentsMagnitude[index - width] !== 0);\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass:\n        function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width, height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n\n              // significant but not those that have just become\n              if (!coefficentsMagnitude[index] ||\n                (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                // first refinement\n               var significance = neighborsSignificance[index] & 127;\n               contextLabel = significance === 0 ? 15 : 14;\n              }\n\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] =\n                (coefficentsMagnitude[index] << 1) | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width, height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            // using the property: labels[neighborsSignificance[index]] === 0\n            // when neighborsSignificance[index] === 0\n            var allEmpty = (checkAllEmpty &&\n              processingFlags[index0] === 0 &&\n              processingFlags[index0 + oneRowDown] === 0 &&\n              processingFlags[index0 + twoRowsDown] === 0 &&\n              processingFlags[index0 + threeRowsDown] === 0 &&\n              neighborsSignificance[index0] === 0 &&\n              neighborsSignificance[index0 + oneRowDown] === 0 &&\n              neighborsSignificance[index0 + twoRowsDown] === 0 &&\n              neighborsSignificance[index0 + threeRowsDown] === 0);\n            var i1 = 0, index = index0;\n            var i = i0, sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent =\n                decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue; // next column\n              }\n              i1 = (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                    decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] ||\n                (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n                     (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n                     (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                      decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new Error('JPX Error: Invalid segmentation symbol');\n        }\n      }\n    };\n\n    return BitModel;\n  })();\n\n  // Section F, Discrete wavelet transformation\n  var Transform = (function TransformClosure() {\n    function Transform() {}\n\n    Transform.prototype.calculate =\n      function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      // Section F.3.7 extending... using max extension of 4\n      var i1 = offset - 1, j1 = offset + 1;\n      var i2 = offset + size - 2, j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh,\n                                                             u0, v0) {\n      var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n\n      // Interleave LL according to Section F.3.3\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      // The LL band is not needed anymore.\n      llItems = ll.items = null;\n\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\n      // Section F.3.4 HOR_SR\n      if (width === 1) {\n        // if width = 1, when u0 even keep items as is, when odd divide by 2\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n\n          items.set(\n            rowBuffer.subarray(bufferPadding, bufferPadding + width),\n            k);\n        }\n      }\n\n      // Accesses to the items array can take long, because it may not fit into\n      // CPU cache and has to be fetched from main memory. Since subsequent\n      // accesses to the items array are not local when reading columns, we\n      // have a cache miss every time. To reduce cache misses, get up to\n      // 'numBuffers' items at a time and store them into the individual\n      // buffers. The colBuffers should be small enough to fit into CPU cache.\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b, currentBuffer = 0;\n      ll = bufferPadding + height;\n\n      // Section F.3.5 VER_SR\n      if (height === 1) {\n          // if height = 1, when v0 even keep items as is, when odd divide by 2\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          // if we ran out of buffers, copy several image columns at once\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n\n          // If this is last buffer in this group of buffers, flush all buffers.\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  })();\n\n  // Section 3.8.2 Irreversible 9-7 filter\n  var IrreversibleTransform = (function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter =\n      function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n\n      // step 1 is combined with step 3\n\n      // step 2\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n\n      // step 1 & 3\n      j = offset - 2;\n      current = delta * x[j -1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n\n      // step 4\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n\n      // step 5\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n\n      // step 6\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n\n    return IrreversibleTransform;\n  })();\n\n  // Section 3.8.1 Reversible 5-3 filter\n  var ReversibleTransform = (function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter =\n      function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n      }\n\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += (x[j - 1] + x[j + 1]) >> 1;\n      }\n    };\n\n    return ReversibleTransform;\n  })();\n\n  return JpxImage;\n})();\n\n\nvar Jbig2Image = (function Jbig2ImageClosure() {\n  // Utility data structures\n  function ContextCache() {}\n\n  ContextCache.prototype = {\n    getContexts: function(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return (this[id] = new Int8Array(1 << 16));\n    }\n  };\n\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n      return shadow(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return shadow(this, 'contextCache', cache);\n    }\n  };\n\n  // Annex A. Arithmetic Integer Decoding Procedure\n  // A.2 Procedure for decoding values\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = (prev < 256 ? (prev << 1) | bit :\n                (((prev << 1) | bit) & 511) | 256);\n        v = (v << 1) | bit;\n      }\n      return v >>> 0;\n    }\n\n    var sign = readBits(1);\n    var value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n    return (sign === 0 ? value : (value > 0 ? -value : null));\n  }\n\n  // A.3 The IAID decoding procedure\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = (prev << 1) | bit;\n    }\n    if (codeLength < 31) {\n      return prev & ((1 << codeLength) - 1);\n    }\n    return prev & 0x7FFFFFFF;\n  }\n\n  // 7.3 Segment types\n  var SegmentTypes = [\n    'SymbolDictionary', null, null, null, 'IntermediateTextRegion', null,\n    'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null,\n    null, null, null, null, null, 'patternDictionary', null, null, null,\n    'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion',\n    'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null,\n    null, null, null, null, null, 'IntermediateGenericRegion', null,\n    'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion',\n    'IntermediateGenericRefinementRegion', null,\n    'ImmediateGenericRefinementRegion',\n    'ImmediateLosslessGenericRefinementRegion', null, null, null, null,\n    'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles',\n    'Tables', null, null, null, null, null, null, null, null,\n    'Extension'\n  ];\n\n  var CodingTemplates = [\n    [{x: -1, y: -2}, {x: 0, y: -2}, {x: 1, y: -2}, {x: -2, y: -1},\n     {x: -1, y: -1}, {x: 0, y: -1}, {x: 1, y: -1}, {x: 2, y: -1},\n     {x: -4, y: 0}, {x: -3, y: 0}, {x: -2, y: 0}, {x: -1, y: 0}],\n    [{x: -1, y: -2}, {x: 0, y: -2}, {x: 1, y: -2}, {x: 2, y: -2},\n     {x: -2, y: -1}, {x: -1, y: -1}, {x: 0, y: -1}, {x: 1, y: -1},\n     {x: 2, y: -1}, {x: -3, y: 0}, {x: -2, y: 0}, {x: -1, y: 0}],\n    [{x: -1, y: -2}, {x: 0, y: -2}, {x: 1, y: -2}, {x: -2, y: -1},\n     {x: -1, y: -1}, {x: 0, y: -1}, {x: 1, y: -1}, {x: -2, y: 0},\n     {x: -1, y: 0}],\n    [{x: -3, y: -1}, {x: -2, y: -1}, {x: -1, y: -1}, {x: 0, y: -1},\n     {x: 1, y: -1}, {x: -4, y: 0}, {x: -3, y: 0}, {x: -2, y: 0}, {x: -1, y: 0}]\n  ];\n\n  var RefinementTemplates = [\n    {\n      coding: [{x: 0, y: -1}, {x: 1, y: -1}, {x: -1, y: 0}],\n      reference: [{x: 0, y: -1}, {x: 1, y: -1}, {x: -1, y: 0}, {x: 0, y: 0},\n                  {x: 1, y: 0}, {x: -1, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}]\n    },\n    {\n      coding: [{x: -1, y: -1}, {x: 0, y: -1}, {x: 1, y: -1}, {x: -1, y: 0}],\n      reference: [{x: 0, y: -1}, {x: -1, y: 0}, {x: 0, y: 0}, {x: 1, y: 0},\n                  {x: 0, y: 1}, {x: 1, y: 1}]\n    }\n  ];\n\n  // See 6.2.5.7 Decoding the bitmap.\n  var ReusedContexts = [\n    0x9B25, // 10011 0110010 0101\n    0x0795, // 0011 110010 101\n    0x00E5, // 001 11001 01\n    0x0195  // 011001 0101\n  ];\n\n  var RefinementReusedContexts = [\n    0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n    0x0008  // '0000' + '001000'\n  ];\n\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n\n    // ...ooooo....\n    // ..ooooooo... Context template for current pixel (X)\n    // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n    var OLD_PIXEL_MASK = 0x7BF7; // 01111 0111111 0111\n\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = (i < 1) ? row : bitmap[i - 1];\n      row2 = (i < 2) ? row : bitmap[i - 2];\n\n      // At the beginning of each row:\n      // Fill contextLabel with pixels that are above/right of (X)\n      contextLabel = (row2[0] << 13) | (row2[1] << 12) | (row2[2] << 11) |\n                     (row1[0] << 7) | (row1[1] << 6) | (row1[2] << 5) |\n                     (row1[3] << 4);\n\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n        // At each pixel: Clear contextLabel pixels that are shifted\n        // out of the context, then add new ones.\n        contextLabel = ((contextLabel & OLD_PIXEL_MASK) << 1) |\n                       (j + 3 < width ? row2[j + 3] << 11 : 0) |\n                       (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n\n    return bitmap;\n  }\n\n  // 6.2 Generic Region Decoding Procedure\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at,\n                        decodingContext) {\n    if (mmr) {\n      error('JBIG2 error: MMR encoding is not supported');\n    }\n\n    // Use optimized version for the most common case\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 &&\n        at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 &&\n        at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n\n    // Sorting is non-standard, and it is not required. But sorting increases\n    // the number of template bits that can be reused from the previous\n    // contextLabel in the main loop.\n    template.sort(function (a, b) {\n      return (a.y - b.y) || (a.x - b.x);\n    });\n\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n    var c, k;\n\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      // Check if the template pixel appears in two consecutive context labels,\n      // so it can be reused. Otherwise, we add it to the list of changing\n      // template entries.\n      if (k < templateLength - 1 &&\n          template[k].y === template[k + 1].y &&\n          template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << (templateLength - 1 - k);\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n    }\n\n    // Get the safe bounding box edges from the width, height, minX, maxX, minY\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n\n    var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row); // duplicate previous row\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        // Are we in the middle of a scanline, so we can reuse contextLabel\n        // bits?\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          // If yes, we can just shift the bits that are reusable and only\n          // fetch the remaining ones.\n          contextLabel = (contextLabel << 1) & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          // compute the contextLabel from scratch\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n\n  // 6.3.2 Generic Refinement Region Decoding Procedure\n  function decodeRefinement(width, height, templateIndex, referenceBitmap,\n                            offsetX, offsetY, prediction, at,\n                            decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          error('JBIG2 error: prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1; // out of bound pixel\n          } else {\n            contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] + offsetY;\n          j0 = j + referenceTemplateX[k] + offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 ||\n              j0 >= referenceWidth) {\n            contextLabel <<= 1; // out of bound pixel\n          } else {\n            contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n\n    return bitmap;\n  }\n\n  // 6.5.5 Decoding the symbol dictionary\n  function decodeSymbolDictionary(huffman, refinement, symbols,\n                                  numberOfNewSymbols, numberOfExportedSymbols,\n                                  huffmanTables, templateIndex, at,\n                                  refinementTemplateIndex, refinementAt,\n                                  decodingContext) {\n    if (huffman) {\n      error('JBIG2 error: huffman is not supported');\n    }\n\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder); // 6.5.6\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      var totalWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder); // 6.5.7\n        if (deltaWidth === null) {\n          break; // OOB\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement,\n                                      currentWidth, currentHeight, 0,\n                                      numberOfInstances, 1, //strip size\n                                      symbols.concat(newSymbols),\n                                      symbolCodeLength,\n                                      0, //transposed\n                                      0, //ds offset\n                                      1, //top left 7.4.3.1.1\n                                      0, //OR operator\n                                      huffmanTables,\n                                      refinementTemplateIndex, refinementAt,\n                                      decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder); // 6.4.11.3\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder); // 6.4.11.4\n            var symbol = (symbolId < symbols.length ? symbols[symbolId] :\n                          newSymbols[symbolId - symbols.length]);\n            bitmap = decodeRefinement(currentWidth, currentHeight,\n            refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt,\n            decodingContext);\n          }\n        } else {\n          // 6.5.8.1 Direct-coded symbol bitmap\n          bitmap = decodeBitmap(false, currentWidth, currentHeight,\n            templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    // 6.5.10 Exported symbols\n    var exportedSymbols = [];\n    var flags = [], currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n\n  function decodeTextRegion(huffman, refinement, width, height,\n                            defaultPixelValue, numberOfSymbolInstances,\n                            stripSize, inputSymbols, symbolCodeLength,\n                            transposed, dsOffset, referenceCorner,\n                            combinationOperator, huffmanTables,\n                            refinementTemplateIndex, refinementAt,\n                            decodingContext) {\n    if (huffman) {\n      error('JBIG2 error: huffman is not supported');\n    }\n\n    // Prepare bitmap\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder); // 6.4.6\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder); // 6.4.6\n      stripT += deltaT;\n\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder); // 6.4.7\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = (stripSize === 1 ? 0 :\n                        decodeInteger(contextCache, 'IAIT', decoder)); // 6.4.9\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = (refinement &&\n                               decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder); // 6.4.11.1\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder); // 6.4.11.2\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder); // 6.4.11.3\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder); // 6.4.11.4\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight,\n            refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx,\n            (rdh >> 1) + rdy, false, refinementAt,\n            decodingContext);\n        }\n        var offsetT = t - ((referenceCorner & 1) ? 0 : symbolHeight);\n        var offsetS = currentS - ((referenceCorner & 2) ? symbolWidth : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          // Place Symbol Bitmap from T1,S1\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            // To ignore Parts of Symbol bitmap which goes\n            // outside bitmap region\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0: // OR\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2: // XOR\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                error('JBIG2 error: operator ' + combinationOperator +\n                      ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0: // OR\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2: // XOR\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                error('JBIG2 error: operator ' + combinationOperator +\n                      ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder); // 6.4.8\n        if (deltaS === null) {\n          break; // OOB\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = readUint32(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      error('JBIG2 error: invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = (referredFlags >> 5) & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = (referredToCount + 7) >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      error('JBIG2 error: invalid referred-to flags');\n    }\n\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = (segmentHeader.number <= 256 ? 1 :\n      (segmentHeader.number <= 65536 ? 2 : 4));\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = (referredToSegmentNumberSize === 1 ? data[position] :\n        (referredToSegmentNumberSize === 2 ? readUint16(data, position) :\n        readUint32(data, position)));\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = readUint32(data, position);\n      position += 4;\n    }\n    segmentHeader.length = readUint32(data, position);\n    position += 4;\n\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      // 7.2.7 Segment data length, unknown segment length\n      if (segmentType === 38) { // ImmediateGenericRegion\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position +\n          RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        // searching for the segment end\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xFF;\n        searchPattern[3] = (genericRegionInfo.height >> 16) & 0xFF;\n        searchPattern[4] = (genericRegionInfo.height >> 8) & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          error('JBIG2 error: segment end was not found');\n        }\n      } else {\n        error('JBIG2 error: invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break; // end of file is found\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n\n  // 7.4.1 Region segment information field\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: readUint32(data, start),\n      height: readUint32(data, start + 4),\n      x: readUint32(data, start + 8),\n      y: readUint32(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n\n    var data = segment.data, position = segment.start, end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0: // SymbolDictionary\n        // 7.4.2 Symbol dictionary segment syntax\n        var dictionary = {};\n        var dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n        dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n        dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n        dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = (dictionaryFlags >> 10) & 3;\n        dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = readUint32(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = readUint32(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo,\n                data, position, end];\n        break;\n      case 6: // ImmediateTextRegion\n      case 7: // ImmediateLosslessTextRegion\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << ((textRegionSegmentFlags >> 2) & 3);\n        textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n        textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n        textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n        textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = readUint16(data, position);\n          position += 2;\n          textRegion.huffmanFS = (textRegionHuffmanFlags) & 3;\n          textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n          textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n          textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n          textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n          textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n          textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n          textRegion.huffmanRefinementSizeSelector =\n            !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = readUint32(data, position);\n        position += 4;\n        // TODO 7.4.3.1.7 Symbol ID Huffman table decoding\n        if (textRegion.huffman) {\n          error('JBIG2 error: huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 38: // ImmediateGenericRegion\n      case 39: // ImmediateLosslessGenericRegion\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: readInt8(data, position),\n              y: readInt8(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48: // PageInformation\n        var pageInfo = {\n          width: readUint32(data, position),\n          height: readUint32(data, position + 4),\n          resolutionX: readUint32(data, position + 8),\n          resolutionY: readUint32(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        var pageStripingInformatiom = readUint16(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n        pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49: // EndOfPage\n        break;\n      case 50: // EndOfStripe\n        break;\n      case 51: // EndOfFile\n        break;\n      case 62: // 7.4.15 defines 2 extension types which\n               // are comments and can be ignored.\n        break;\n      default:\n        error('JBIG2 error: segment type ' + header.typeName + '(' +\n              header.type + ') is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A ||\n        data[position + 2] !== 0x42 || data[position + 3] !== 0x32 ||\n        data[position + 4] !== 0x0D || data[position + 5] !== 0x0A ||\n        data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      error('JBIG2 error: invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n    }\n    var segments = readSegments(header, data, position, end);\n    error('Not implemented');\n    // processSegments(segments, new SimpleSegmentVisitor());\n  }\n\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n\n  function SimpleSegmentVisitor() {}\n\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = (info.width + 7) >> 3;\n      var buffer = new Uint8Array(rowSize * info.height);\n      // The contents of ArrayBuffers are initialized to 0.\n      // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width, height = regionInfo.height;\n      var rowSize = (pageInfo.width + 7) >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ?\n        regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 =  128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0: // OR\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n        break;\n        case 2: // XOR\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          error('JBIG2 error: operator ' + combinationOperator +\n                ' is not supported');\n      }\n    },\n    onImmediateGenericRegion:\n      function SimpleSegmentVisitor_onImmediateGenericRegion(region, data,\n                                                             start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height,\n                                region.template, region.prediction, null,\n                                region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion:\n      function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary:\n      function SimpleSegmentVisitor_onSymbolDictionary(dictionary,\n                                                       currentSegment,\n                                                       referredSegments,\n                                                       data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        error('JBIG2 error: huffman is not supported');\n      }\n\n      // Combines exported symbols from all referred segments\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman,\n        dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols,\n        dictionary.numberOfExportedSymbols, huffmanTables,\n        dictionary.template, dictionary.at,\n        dictionary.refinementTemplate, dictionary.refinementAt,\n        decodingContext);\n    },\n    onImmediateTextRegion:\n      function SimpleSegmentVisitor_onImmediateTextRegion(region,\n                                                          referredSegments,\n                                                          data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n\n      // Combines exported symbols from all referred segments\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = log2(inputSymbols.length);\n\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement,\n        regionInfo.width, regionInfo.height, region.defaultPixelValue,\n        region.numberOfSymbolInstances, region.stripSize, inputSymbols,\n        symbolCodeLength, region.transposed, region.dsOffset,\n        region.referenceCorner, region.combinationOperator, huffmanTables,\n        region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion:\n      function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    }\n  };\n\n  function Jbig2Image() {}\n\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n\n  return Jbig2Image;\n})();\n\n\nvar bidi = PDFJS.bidi = (function bidiClosure() {\n  // Character types for symbols from 0000 to 00FF.\n  var baseTypes = [\n    'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS',\n    'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN',\n    'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON',\n    'ON', 'ON', 'ON', 'ON', 'ON', 'CS', 'ON', 'CS', 'ON', 'EN', 'EN', 'EN',\n    'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'ON', 'ON', 'ON', 'ON', 'ON',\n    'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON',\n    'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN',\n    'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN',\n    'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN',\n    'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON',\n    'ON', 'ON', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON',\n    'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n    'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'\n  ];\n\n  // Character types for symbols from 0600 to 06FF\n  var arabicTypes = [\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM',\n    'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN',\n    'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM',\n    'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'ON', 'NSM',\n    'NSM', 'NSM', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL',\n    'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'\n  ];\n\n  function isOdd(i) {\n    return (i & 1) !== 0;\n  }\n\n  function isEven(i) {\n    return (i & 1) === 0;\n  }\n\n  function findUnequal(arr, start, value) {\n    for (var j = start, jj = arr.length; j < jj; ++j) {\n      if (arr[j] !== value) {\n        return j;\n      }\n    }\n    return j;\n  }\n\n  function setValues(arr, start, end, value) {\n    for (var j = start; j < end; ++j) {\n      arr[j] = value;\n    }\n  }\n\n  function reverseValues(arr, start, end) {\n    for (var i = start, j = end - 1; i < j; ++i, --j) {\n      var temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n\n  function createBidiText(str, isLTR, vertical) {\n    return {\n      str: str,\n      dir: (vertical ? 'ttb' : (isLTR ? 'ltr' : 'rtl'))\n    };\n  }\n\n  // These are used in bidi(), which is called frequently. We re-use them on\n  // each call to avoid unnecessary allocations.\n  var chars = [];\n  var types = [];\n\n  function bidi(str, startLevel, vertical) {\n    var isLTR = true;\n    var strLength = str.length;\n    if (strLength === 0 || vertical) {\n      return createBidiText(str, isLTR, vertical);\n    }\n\n    // Get types and fill arrays\n    chars.length = strLength;\n    types.length = strLength;\n    var numBidi = 0;\n\n    var i, ii;\n    for (i = 0; i < strLength; ++i) {\n      chars[i] = str.charAt(i);\n\n      var charCode = str.charCodeAt(i);\n      var charType = 'L';\n      if (charCode <= 0x00ff) {\n        charType = baseTypes[charCode];\n      } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n        charType = 'R';\n      } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n        charType = arabicTypes[charCode & 0xff];\n      } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n        charType = 'AL';\n      }\n      if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n        numBidi++;\n      }\n      types[i] = charType;\n    }\n\n    // Detect the bidi method\n    // - If there are no rtl characters then no bidi needed\n    // - If less than 30% chars are rtl then string is primarily ltr\n    // - If more than 30% chars are rtl then string is primarily rtl\n    if (numBidi === 0) {\n      isLTR = true;\n      return createBidiText(str, isLTR);\n    }\n\n    if (startLevel === -1) {\n      if ((strLength / numBidi) < 0.3) {\n        isLTR = true;\n        startLevel = 0;\n      } else {\n        isLTR = false;\n        startLevel = 1;\n      }\n    }\n\n    var levels = [];\n    for (i = 0; i < strLength; ++i) {\n      levels[i] = startLevel;\n    }\n\n    /*\n     X1-X10: skip most of this, since we are NOT doing the embeddings.\n     */\n    var e = (isOdd(startLevel) ? 'R' : 'L');\n    var sor = e;\n    var eor = sor;\n\n    /*\n     W1. Examine each non-spacing mark (NSM) in the level run, and change the\n     type of the NSM to the type of the previous character. If the NSM is at the\n     start of the level run, it will get the type of sor.\n     */\n    var lastType = sor;\n    for (i = 0; i < strLength; ++i) {\n      if (types[i] === 'NSM') {\n        types[i] = lastType;\n      } else {\n        lastType = types[i];\n      }\n    }\n\n    /*\n     W2. Search backwards from each instance of a European number until the\n     first strong type (R, L, AL, or sor) is found.  If an AL is found, change\n     the type of the European number to Arabic number.\n     */\n    lastType = sor;\n    var t;\n    for (i = 0; i < strLength; ++i) {\n      t = types[i];\n      if (t === 'EN') {\n        types[i] = (lastType === 'AL') ? 'AN' : 'EN';\n      } else if (t === 'R' || t === 'L' || t === 'AL') {\n        lastType = t;\n      }\n    }\n\n    /*\n     W3. Change all ALs to R.\n     */\n    for (i = 0; i < strLength; ++i) {\n      t = types[i];\n      if (t === 'AL') {\n        types[i] = 'R';\n      }\n    }\n\n    /*\n     W4. A single European separator between two European numbers changes to a\n     European number. A single common separator between two numbers of the same\n     type changes to that type:\n     */\n    for (i = 1; i < strLength - 1; ++i) {\n      if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n        types[i] = 'EN';\n      }\n      if (types[i] === 'CS' &&\n          (types[i - 1] === 'EN' || types[i - 1] === 'AN') &&\n          types[i + 1] === types[i - 1]) {\n        types[i] = types[i - 1];\n      }\n    }\n\n    /*\n     W5. A sequence of European terminators adjacent to European numbers changes\n     to all European numbers:\n     */\n    for (i = 0; i < strLength; ++i) {\n      if (types[i] === 'EN') {\n        // do before\n        var j;\n        for (j = i - 1; j >= 0; --j) {\n          if (types[j] !== 'ET') {\n            break;\n          }\n          types[j] = 'EN';\n        }\n        // do after\n        for (j = i + 1; j < strLength; --j) {\n          if (types[j] !== 'ET') {\n            break;\n          }\n          types[j] = 'EN';\n        }\n      }\n    }\n\n    /*\n     W6. Otherwise, separators and terminators change to Other Neutral:\n     */\n    for (i = 0; i < strLength; ++i) {\n      t = types[i];\n      if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n        types[i] = 'ON';\n      }\n    }\n\n    /*\n     W7. Search backwards from each instance of a European number until the\n     first strong type (R, L, or sor) is found. If an L is found,  then change\n     the type of the European number to L.\n     */\n    lastType = sor;\n    for (i = 0; i < strLength; ++i) {\n      t = types[i];\n      if (t === 'EN') {\n        types[i] = ((lastType === 'L') ? 'L' : 'EN');\n      } else if (t === 'R' || t === 'L') {\n        lastType = t;\n      }\n    }\n\n    /*\n     N1. A sequence of neutrals takes the direction of the surrounding strong\n     text if the text on both sides has the same direction. European and Arabic\n     numbers are treated as though they were R. Start-of-level-run (sor) and\n     end-of-level-run (eor) are used at level run boundaries.\n     */\n    for (i = 0; i < strLength; ++i) {\n      if (types[i] === 'ON') {\n        var end = findUnequal(types, i + 1, 'ON');\n        var before = sor;\n        if (i > 0) {\n          before = types[i - 1];\n        }\n\n        var after = eor;\n        if (end + 1 < strLength) {\n          after = types[end + 1];\n        }\n        if (before !== 'L') {\n          before = 'R';\n        }\n        if (after !== 'L') {\n          after = 'R';\n        }\n        if (before === after) {\n          setValues(types, i, end, before);\n        }\n        i = end - 1; // reset to end (-1 so next iteration is ok)\n      }\n    }\n\n    /*\n     N2. Any remaining neutrals take the embedding direction.\n     */\n    for (i = 0; i < strLength; ++i) {\n      if (types[i] === 'ON') {\n        types[i] = e;\n      }\n    }\n\n    /*\n     I1. For all characters with an even (left-to-right) embedding direction,\n     those of type R go up one level and those of type AN or EN go up two\n     levels.\n     I2. For all characters with an odd (right-to-left) embedding direction,\n     those of type L, EN or AN go up one level.\n     */\n    for (i = 0; i < strLength; ++i) {\n      t = types[i];\n      if (isEven(levels[i])) {\n        if (t === 'R') {\n          levels[i] += 1;\n        } else if (t === 'AN' || t === 'EN') {\n          levels[i] += 2;\n        }\n      } else { // isOdd\n        if (t === 'L' || t === 'AN' || t === 'EN') {\n          levels[i] += 1;\n        }\n      }\n    }\n\n    /*\n     L1. On each line, reset the embedding level of the following characters to\n     the paragraph embedding level:\n\n     segment separators,\n     paragraph separators,\n     any sequence of whitespace characters preceding a segment separator or\n     paragraph separator, and any sequence of white space characters at the end\n     of the line.\n     */\n\n    // don't bother as text is only single line\n\n    /*\n     L2. From the highest level found in the text to the lowest odd level on\n     each line, reverse any contiguous sequence of characters that are at that\n     level or higher.\n     */\n\n    // find highest level & lowest odd level\n    var highestLevel = -1;\n    var lowestOddLevel = 99;\n    var level;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      level = levels[i];\n      if (highestLevel < level) {\n        highestLevel = level;\n      }\n      if (lowestOddLevel > level && isOdd(level)) {\n        lowestOddLevel = level;\n      }\n    }\n\n    // now reverse between those limits\n    for (level = highestLevel; level >= lowestOddLevel; --level) {\n      // find segments to reverse\n      var start = -1;\n      for (i = 0, ii = levels.length; i < ii; ++i) {\n        if (levels[i] < level) {\n          if (start >= 0) {\n            reverseValues(chars, start, i);\n            start = -1;\n          }\n        } else if (start < 0) {\n          start = i;\n        }\n      }\n      if (start >= 0) {\n        reverseValues(chars, start, levels.length);\n      }\n    }\n\n    /*\n     L3. Combining marks applied to a right-to-left base character will at this\n     point precede their base character. If the rendering engine expects them to\n     follow the base characters in the final display process, then the ordering\n     of the marks and the base character must be reversed.\n     */\n\n    // don't bother for now\n\n    /*\n     L4. A character that possesses the mirrored property as specified by\n     Section 4.7, Mirrored, must be depicted by a mirrored glyph if the resolved\n     directionality of that character is R.\n     */\n\n    // don't mirror as characters are already mirrored in the pdf\n\n    // Finally, return string\n    var result = '';\n    for (i = 0, ii = chars.length; i < ii; ++i) {\n      var ch = chars[i];\n      if (ch !== '<' && ch !== '>') {\n        result += ch;\n      }\n    }\n    return createBidiText(result, isLTR);\n  }\n\n  return bidi;\n})();\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n/* globals Uint32ArrayView */\n\n'use strict';\n\nvar MurmurHash3_64 = (function MurmurHash3_64Closure (seed) {\n  // Workaround for missing math precison in JS.\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n\n  function MurmurHash3_64 (seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  var alwaysUseUint32ArrayView = false;\n  // old webkits have issues with non-aligned arrays\n  try {\n    new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n  } catch (e) {\n    alwaysUseUint32ArrayView = true;\n  }\n\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var useUint32ArrayView = alwaysUseUint32ArrayView;\n      var i;\n      if (typeof input === 'string') {\n        var data = new Uint8Array(input.length * 2);\n        var length = 0;\n        for (i = 0; i < input.length; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          }\n          else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if (input instanceof Uint8Array) {\n        data = input;\n        length = data.length;\n      } else if (typeof input === 'object' && ('length' in input)) {\n        // processing regular arrays as well, e.g. for IE9\n        data = input;\n        length = data.length;\n        useUint32ArrayView = true;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' +\n                        'Input must be a string or array.');\n      }\n\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      // we don't care about endianness here\n      var dataUint32 = useUint32ArrayView ?\n        new Uint32ArrayView(data, blockCounts) :\n        new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n\n      for (i = 0; i < blockCounts; i++) {\n        if (i & 1) {\n          k1 = dataUint32[i];\n          k1 = (k1 * C1 & MASK_HIGH) | (k1 * C1_LOW & MASK_LOW);\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = (k1 * C2 & MASK_HIGH) | (k1 * C2_LOW & MASK_LOW);\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[i];\n          k2 = (k2 * C1 & MASK_HIGH) | (k2 * C1_LOW & MASK_LOW);\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = (k2 * C2 & MASK_HIGH) | (k2 * C2_LOW & MASK_LOW);\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n\n      k1 = 0;\n\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n          /* falls through */\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n          /* falls through */\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          /* falls through */\n        k1 = (k1 * C1 & MASK_HIGH) | (k1 * C1_LOW & MASK_LOW);\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = (k1 * C2 & MASK_HIGH) | (k1 * C2_LOW & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n      }\n\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n\n    hexdigest: function MurmurHash3_64_hexdigest () {\n      var h1 = this.h1;\n      var h2 = this.h2;\n\n      h1 ^= h2 >>> 1;\n      h1 = (h1 * 0xed558ccd & MASK_HIGH) | (h1 * 0x8ccd & MASK_LOW);\n      h2 = (h2 * 0xff51afd7 & MASK_HIGH) |\n           (((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16);\n      h1 ^= h2 >>> 1;\n      h1 = (h1 * 0x1a85ec53 & MASK_HIGH) | (h1 * 0xec53 & MASK_LOW);\n      h2 = (h2 * 0xc4ceb9fe & MASK_HIGH) |\n           (((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16);\n      h1 ^= h2 >>> 1;\n\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n\n      return str;\n    }\n  };\n\n  return MurmurHash3_64;\n})();\n\n\n}).call((typeof window === 'undefined') ? this : window);\n\nif (!PDFJS.workerSrc && typeof document !== 'undefined') {\n  // workerSrc is not set -- using last script url to define default location\n  PDFJS.workerSrc = (function () {\n    'use strict';\n    var scriptTagContainer = document.body ||\n                             document.getElementsByTagName('head')[0];\n    var pdfjsSrc = scriptTagContainer.lastChild.src;\n    return pdfjsSrc && pdfjsSrc.replace(/\\.js$/i, '.worker.js');\n  })();\n}\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/pdf.worker.js\n// module id = 2gYF\n// module chunks = 4","<template>\n  <div>\n    <div class=\"right-content-body-topTitle\">\n      删除订货单\n    </div>\n    <div style=\"text-align: center;font-size: 17px;padding: 50px 17px;\">\n      <div style=\"text-align: center\">\n        <!--<i class=\"el-icon-warning\" style=\"margin-right: 7px;font-size: 27px;color: #007B98;\"></i>-->\n        <!--<span style=\"line-height: 29px\">确定删除该条收货信息吗？</span>-->\n        <div style=\"float:left;margin-left: 24%\">\n          <i class=\"el-icon-warning\" style=\"margin-right: 7px;font-size: 27px;color: #007B98;\"></i>\n        </div>\n        <div style=\"float:left\">\n          <span style=\"line-height: 29px\">确定删除该条收货信息吗？</span>\n        </div>\n      </div>\n\n    </div>\n    <div style=\"text-align: center;padding: 20px 10px\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"sure\">确定</el-button>\n      <el-button size=\"mini\" @click=\"cancel\">取消</el-button>\n    </div>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"DelMessageAlert\",\n    props:[\"id\"],\n    mounted(){\n\n    },\n    data(){\n      return{\n\n      }\n    },\n    methods:{\n      sure(){\n        this.$http.get(\"/ys-web-wms/recivingInspectionInfo/delReceiptBill?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            this.$message({\n              showClose:true,\n              message:\"删除成功\",\n              type:\"success\"\n            })\n            this.$router.push(\"/receivingInspection\")\n            this.$store.state.listDoAjax = this.$store.state.listDoAjax?false:true;\n          }else{\n            this.$message({\n              showClose:true,\n              message:result.data.message,\n              type:\"error\"\n            })\n          }\n        })\n      },\n      cancel(){\n        this.$router.push(\"/receivingInspection/detail/\"+this.id+\"/info\");\n      }\n    }\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-content-body-topTitle\"},[_vm._v(\"\\n    删除订货单\\n  \")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\",\"padding\":\"20px 10px\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.sure}},[_vm._v(\"确定\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.cancel}},[_vm._v(\"取消\")])],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"center\",\"font-size\":\"17px\",\"padding\":\"50px 17px\"}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\",\"margin-left\":\"24%\"}},[_c('i',{staticClass:\"el-icon-warning\",staticStyle:{\"margin-right\":\"7px\",\"font-size\":\"27px\",\"color\":\"#007B98\"}})]),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"left\"}},[_c('span',{staticStyle:{\"line-height\":\"29px\"}},[_vm._v(\"确定删除该条收货信息吗？\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e1f53cfc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e1f53cfc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DelMessageAlert.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DelMessageAlert.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DelMessageAlert.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e1f53cfc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DelMessageAlert.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteDel/DelMessageAlert.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"receiving-note-del\">\n    <div class=\"right-topTitle\">\n\n    </div>\n    <el-dialog title=\"\" :visible.sync=\"dialogVisible\" top=\"20vh\">\n      <del-alert :id=\"id\"></del-alert>\n    </el-dialog>\n    <div class=\"card-box right-content\">\n      <div class=\"right-content-body\">\n        <div style=\"padding: 5px;height: 172px\">\n          <span class=\"right-content-body-little-title\">\n            基本信息\n          </span>\n          <info  :id=\"id\"></info>\n        </div>\n        <div style=\"padding: 5px;\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n              明细信息\n          </span>\n          <detail-table :id=\"id\"></detail-table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import DelMessageAlert from \"./DelMessageAlert.vue\"\n  import Info from \"../receivingNoteInfo/Info.vue\"\n  import DetailTable from \"../receivingNoteInfo/DetailTable.vue\"\n  export default{\n    name:\"ReceivingNoteDetail\",\n    mounted(){\n      this.id = this.$route.params.id;\n    },\n    data(){\n      return{\n        id:\"\",\n        dialogVisible:true,\n      }\n    },\n    methods:{\n\n    },\n    components:{\n      \"del-alert\":DelMessageAlert,\n      \"info\":Info,\n      \"detail-table\":DetailTable\n    }\n  }\n</script>\n<style>\n  .receiving-note-del .el-dialog__header{padding: 0px}\n  .receiving-note-del .el-dialog__body{padding: 0px}\n  .receiving-note-del .el-dialog{width: 37%}\n  .receiving-note-del .el-dialog__close{display: none}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"receiving-note-del\"},[_c('div',{staticClass:\"right-topTitle\"}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"\",\"visible\":_vm.dialogVisible,\"top\":\"20vh\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('del-alert',{attrs:{\"id\":_vm.id}})],1),_vm._v(\" \"),_c('div',{staticClass:\"card-box right-content\"},[_c('div',{staticClass:\"right-content-body\"},[_c('div',{staticStyle:{\"padding\":\"5px\",\"height\":\"172px\"}},[_c('span',{staticClass:\"right-content-body-little-title\"},[_vm._v(\"\\n          基本信息\\n        \")]),_vm._v(\" \"),_c('info',{attrs:{\"id\":_vm.id}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n            明细信息\\n        \")]),_vm._v(\" \"),_c('detail-table',{attrs:{\"id\":_vm.id}})],1)])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6e7e14b6\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6e7e14b6\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingNoteDel.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteDel.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteDel.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6e7e14b6\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingNoteDel.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteDel/ReceivingNoteDel.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"card-box\">\n    <div class=\"card-box-inner\">\n    <div class=\"receivingSearchBar-main\">\n      <el-date-picker\n        style=\"width: 47%\"\n        size=\"small\"\n        v-model=\"searchParams.createDateBegin\"\n        align=\"right\"\n        type=\"date\"\n        placeholder=\"创建开始日期\"\n        :picker-options=\"pickerOptions\">\n      </el-date-picker>\n      <el-date-picker\n        style=\"width: 47%\"\n        size=\"small\"\n        v-model=\"searchParams.createDateEnd\"\n        align=\"right\"\n        type=\"date\"\n        placeholder=\"创建结束日期\"\n        value-format=\"yyyy-MM-dd 23:59:59\"\n        :picker-options=\"pickerOptions\">\n      </el-date-picker>\n      <el-input v-model=\"searchParams.receiptBillCode\" placeholder=\"单据号\" size=\"small\" style=\"width: 47%\"></el-input>\n      <el-select clearable v-model=\"searchParams.receiptBillSourceKey\" @change=\"billSourceChange\" placeholder=\"单据来源\" size=\"small\" style=\"width:47%\">\n        <el-option\n          v-for=\"item in billSource\"\n          :key=\"item.code\"\n          :label=\"item.name\"\n          :value=\"item.code\">\n        </el-option>\n      </el-select>\n      <el-select clearable v-model=\"searchParams.externalBillCode\" filterable placeholder=\"外来单号\" size=\"small\" style=\"width:47%\">\n        <el-option\n          v-for=\"item in externalCodeList\"\n          :key=\"item\"\n          :label=\"item\"\n          :value=\"item\">\n        </el-option>\n      </el-select>\n      <el-select clearable v-model=\"searchParams.receiptBillStatusKey\" filterable placeholder=\"单据状态\" size=\"small\" style=\"width:47%\">\n        <el-option\n          v-for=\"item in receiptBillStatus\"\n          :key=\"item.code\"\n          :label=\"item.name\"\n          :value=\"item.code\">\n        </el-option>\n      </el-select>\n\n      <div class=\"receivingSearchBar-foot\">\n        <el-button type=\"primary\" @click=\"search\" icon=\"search\" size=\"mini\">搜索</el-button>\n        <el-button type=\"success\" @click=\"toAddReceivingNote\" size=\"mini\" style=\"margin-left: 0px;\">新建收货单</el-button>\n      </div>\n    </div>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name:\"ReceivingSearchBar\",\n    props:{\n      params:Object\n    },\n    mounted(){\n\n    },\n    data(){\n      return {\n        searchParams: Object.assign({},this.params),\n        externalCodeList:[]\n      }\n    },\n    methods:{\n      billSourceChange(val){\n        let _this = this;\n        this.getExternalCodeList(val,function (result) {\n          _this.externalCodeList = result;\n        })\n      },\n      search(){\n//        if(this.searchParams.dateCreated == \"\" || this.searchParams.dateCreated == null){\n//          this.searchParams.createDateBegin = \"\";\n//          this.searchParams.createDateEnd = \"\";\n//        }else{\n//          this.searchParams.createDateBegin = this.searchParams.dateCreated[0];\n//          this.searchParams.createDateEnd = this.searchParams.dateCreated[1];\n//        }\n        this.$emit(\"search\",this.searchParams);\n      },\n      toAddReceivingNote(){\n        this.$router.push(\"/receivingInspection/receivingNoteAdd\");\n      }\n    },\n    computed:{\n      \"pickerOptions\":function () {\n        return this.$store.state.pickerOptions;\n      },\n      \"billSource\":function () {//收货单据来源\n        return this.$store.state.enumList.billSource;\n      },\n      \"receiptBillStatus\":function () {//收货单状态\n        return this.$store.state.enumList.receiptBillStatus;\n      }\n    },\n\n  }\n</script>\n<style>\n  .receivingSearchBar-main {padding: 7px;}\n  .receivingSearchBar-main .el-input{margin-bottom: 3px;}\n  .receivingSearchBar-main .el-select{margin-bottom: 3px;}\n  .receivingSearchBar-foot{ float:right; width: 40%;margin-bottom: 5px;}\n  .receivingSearchBar-foot .el-dialog__header{text-align: left;}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/ReceivingSearchBar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-box\"},[_c('div',{staticClass:\"card-box-inner\"},[_c('div',{staticClass:\"receivingSearchBar-main\"},[_c('el-date-picker',{staticStyle:{\"width\":\"47%\"},attrs:{\"size\":\"small\",\"align\":\"right\",\"type\":\"date\",\"placeholder\":\"创建开始日期\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.searchParams.createDateBegin),callback:function ($$v) {_vm.$set(_vm.searchParams, \"createDateBegin\", $$v)},expression:\"searchParams.createDateBegin\"}}),_vm._v(\" \"),_c('el-date-picker',{staticStyle:{\"width\":\"47%\"},attrs:{\"size\":\"small\",\"align\":\"right\",\"type\":\"date\",\"placeholder\":\"创建结束日期\",\"value-format\":\"yyyy-MM-dd 23:59:59\",\"picker-options\":_vm.pickerOptions},model:{value:(_vm.searchParams.createDateEnd),callback:function ($$v) {_vm.$set(_vm.searchParams, \"createDateEnd\", $$v)},expression:\"searchParams.createDateEnd\"}}),_vm._v(\" \"),_c('el-input',{staticStyle:{\"width\":\"47%\"},attrs:{\"placeholder\":\"单据号\",\"size\":\"small\"},model:{value:(_vm.searchParams.receiptBillCode),callback:function ($$v) {_vm.$set(_vm.searchParams, \"receiptBillCode\", $$v)},expression:\"searchParams.receiptBillCode\"}}),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"47%\"},attrs:{\"clearable\":\"\",\"placeholder\":\"单据来源\",\"size\":\"small\"},on:{\"change\":_vm.billSourceChange},model:{value:(_vm.searchParams.receiptBillSourceKey),callback:function ($$v) {_vm.$set(_vm.searchParams, \"receiptBillSourceKey\", $$v)},expression:\"searchParams.receiptBillSourceKey\"}},_vm._l((_vm.billSource),function(item){return _c('el-option',{key:item.code,attrs:{\"label\":item.name,\"value\":item.code}})})),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"47%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"外来单号\",\"size\":\"small\"},model:{value:(_vm.searchParams.externalBillCode),callback:function ($$v) {_vm.$set(_vm.searchParams, \"externalBillCode\", $$v)},expression:\"searchParams.externalBillCode\"}},_vm._l((_vm.externalCodeList),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})})),_vm._v(\" \"),_c('el-select',{staticStyle:{\"width\":\"47%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"单据状态\",\"size\":\"small\"},model:{value:(_vm.searchParams.receiptBillStatusKey),callback:function ($$v) {_vm.$set(_vm.searchParams, \"receiptBillStatusKey\", $$v)},expression:\"searchParams.receiptBillStatusKey\"}},_vm._l((_vm.receiptBillStatus),function(item){return _c('el-option',{key:item.code,attrs:{\"label\":item.name,\"value\":item.code}})})),_vm._v(\" \"),_c('div',{staticClass:\"receivingSearchBar-foot\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"search\",\"size\":\"mini\"},on:{\"click\":_vm.search}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"margin-left\":\"0px\"},attrs:{\"type\":\"success\",\"size\":\"mini\"},on:{\"click\":_vm.toAddReceivingNote}},[_vm._v(\"新建收货单\")])],1)],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-65837b9b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/ReceivingSearchBar.vue\n// module id = null\n// module chunks = ","<template>\n  <el-row style=\"height:100%\">\n    <el-col style=\"height:100%; background:#F9FAFC;\" id=\"leftMainBox\" :span=\"8\" class=\"left-main-box not-print\">\n      <search-bar @search=\"search\" :params=\"searchParams\"></search-bar>\n      <div class=\"receivingList-table\" style=\"height: 63%\">\n        <el-table :data=\"tableData\"  border :row-class-name=\"highlightCurrent\" @row-click=\"rowCurrentChange\" :height=\"tableHeight\" style=\"width: 100%\" >\n          <el-table-column label=\"创建日期\" prop=\"createDate\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n          <el-table-column label=\"单据号\" prop=\"receiptBillCode\"  align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n          <el-table-column label=\"外来单号\" prop=\"externalBillCode\" width=\"100\"  align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n          <el-table-column label=\"单据状态\" prop=\"buyProgressKey\"  align=\"center\" width=\"100\">\n            <template slot-scope=\"scope\">\n              <span>{{ scope.row.receiptBillStatusKey|enumtext(receiptBillStatus) }}</span>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n      <div class=\"pageBox\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"page.pageNo\"\n          :page-size=\"page.pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"count\">\n        </el-pagination>\n      </div>\n    </el-col>\n    <el-col id='rightMainBox' :span=\"16\" class=\"page-print\">\n      <slide-bar leftEl='#leftMainBox' rightEl='#rightMainBox' class=\"not-print\"></slide-bar>\n      <transition name=\"fade\">\n        <router-view></router-view>\n      </transition>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n  import SearchBar from './ReceivingSearchBar.vue'\n  import SlideBar from '../common/SlideBar'\n  export default {\n    name: 'ReceivingList',\n    mounted(){\n      this.tableHeight = document.body.clientHeight*0.6;\n      this.getList();\n    },\n    data () {\n      return {\n        tableHeight:\"\",\n        count:0,\n        searchParams:{\n          dateCreated:\"\",//创建日期\n          createDateBegin:\"\",//创建日期（起始值）\n          createDateEnd:\"\",//创建日期（结束值）\n          receiptBillCode:\"\",//单据号\n          receiptBillSourceKey:\"\",//单据来源\n          externalBillCode:\"\",//外来单号\n          receiptBillStatusKey:\"\",//单据状态\n          receiptBillId:\"\",//收货单id\n        },\n        page: {pageNo: 1, pageSize: 20},\n        tableData:[],\n        currentRow: {\n          receiptBillId:0,\n        }\n      }\n    },\n    methods:{\n      search(val){\n        this.searchParams = val;\n        this.page.pageNo = 1,\n        this.getList();\n      },\n      getList(){\n        if(this.$route.query.tourl){\n          this.searchParams.receiptBillId = this.$route.params.id\n        }else{\n          this.searchParams.receiptBillId = \"\";\n        }\n        let dataStr = JSON.stringify(this.searchParams)\n        let pageStr = JSON.stringify(this.page)\n        this.$http.post(\"/ys-web-wms/receivingInspectionList/getList\",{data:dataStr,page:pageStr}).then(function (result) {\n          if(result.data.state == 200){\n            this.tableData = result.data.data.list?result.data.data.list:[];\n            this.count = result.data.data.count;\n            if(this.tableData.length>0){\n              this.rowCurrentChange(this.tableData[0])\n            }\n          }else{\n            this.$notify.error({\n              title:\"收货单列表获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      },\n      handleSizeChange(val) {\n        console.log(`每页 ${val} 条`);\n      },\n      handleCurrentChange(val) {\n        this.page.pageNo = val;\n        this.getList();\n      },\n      rowCurrentChange(val){\n        if(!val){\n          return;\n        }\n        this.currentRow = val;\n        this.$store.commit('SET_RECEIVING_INFO',val)\n        let toPreurl  = \"/receivingInspection/detail/\" + val.receiptBillId+'/';\n        let modulePath = this.$route.query.tourl ? this.$route.query.tourl : \"info\";\n        this.$router.push(toPreurl+modulePath);\n      },\n      highlightCurrent({row, rowIndex}){\n        return (row.receiptBillId==this.currentRow.receiptBillId ? 'info-row' :'');\n      },\n    },\n    components:{\n      'search-bar':SearchBar,\n      SlideBar\n    },\n    watch: {\n      \"$route\": function(to,from) {\n        if(from.path.endsWith(\"/del\")){\n          this.getList();\n        }\n        if(to.path == \"/receivingInspection/receivingNoteAdd\"){\n          this.currentRow = {\n            receiptBillId:0\n          }\n        }\n      },\n      \"$store.state.purchase\":function (val) {\n        this.currentRow = val;\n      },\n      \"$store.state.listDoAjax\":function (val) {\n        this.getList();\n      }\n    },\n    computed:{\n      \"receiptBillStatus\":function () {//单据状态\n        return this.$store.state.enumList.receiptBillStatus;\n      }\n    },\n  }\n</script>\n\n<style>\n  .pageBox{ text-align: center; margin:15px auto;}\n  .el-table .info-row {\n    background: #c9e5f5;\n  }\n  .el-table td{ cursor: pointer; }\n  .receivingList-table .el-table__row .cell{padding:5px;}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/ReceivingList.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-65837b9b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingSearchBar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingSearchBar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingSearchBar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-65837b9b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingSearchBar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/ReceivingSearchBar.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',{staticStyle:{\"height\":\"100%\"}},[_c('el-col',{staticClass:\"left-main-box not-print\",staticStyle:{\"height\":\"100%\",\"background\":\"#F9FAFC\"},attrs:{\"id\":\"leftMainBox\",\"span\":8}},[_c('search-bar',{attrs:{\"params\":_vm.searchParams},on:{\"search\":_vm.search}}),_vm._v(\" \"),_c('div',{staticClass:\"receivingList-table\",staticStyle:{\"height\":\"63%\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"row-class-name\":_vm.highlightCurrent,\"height\":_vm.tableHeight},on:{\"row-click\":_vm.rowCurrentChange}},[_c('el-table-column',{attrs:{\"label\":\"创建日期\",\"prop\":\"createDate\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"单据号\",\"prop\":\"receiptBillCode\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"外来单号\",\"prop\":\"externalBillCode\",\"width\":\"100\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"单据状态\",\"prop\":\"buyProgressKey\",\"align\":\"center\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm._f(\"enumtext\")(scope.row.receiptBillStatusKey,_vm.receiptBillStatus)))])]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"pageBox\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.page.pageNo,\"page-size\":_vm.page.pageSize,\"layout\":\"total, prev, pager, next\",\"total\":_vm.count},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_vm._v(\" \"),_c('el-col',{staticClass:\"page-print\",attrs:{\"id\":\"rightMainBox\",\"span\":16}},[_c('slide-bar',{staticClass:\"not-print\",attrs:{\"leftEl\":\"#leftMainBox\",\"rightEl\":\"#rightMainBox\"}}),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('router-view')],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-83edfc5c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/ReceivingList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-83edfc5c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-83edfc5c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/ReceivingList.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"right-topTitle\">\n      单据号：{{receiptBillCode}}\n    </div>\n    <div class=\"card-box right-content\">\n      <div class=\"right-content-body\">\n        <div class=\"right-content-body-topTitle\">\n          修改收货单\n        </div>\n        <div style=\"padding: 5px;height: 140px\">\n          <span class=\"right-content-body-little-title\">\n            基本信息\n          </span>\n          <el-form ref=\"infoForm\" :model=\"formData\" label-width=\"130px\" :inline-message=\"true\" :rules=\"rules\" size=\"mini\" style=\"width: 100%\">\n            <el-form-item label=\"单据号:\" class=\"right-content-body-tableForm\">\n              {{receiptBillCode}}\n            </el-form-item>\n            <el-form-item label=\"单据来源:\" class=\"right-content-body-tableForm\" prop=\"receiptBillSourceKey\">\n              <el-select clearable v-model=\"formData.receiptBillSourceKey\" @change=\"billSourceChange\" filterable placeholder=\"单据来源\" size=\"mini\"  style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in billSource\"\n                  :key=\"item.code\"\n                  :label=\"item.name\"\n                  :value=\"item.code\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"入库仓库:\" class=\"right-content-body-tableForm\" prop=\"warehouseId\">\n              <el-select clearable v-model=\"formData.warehouseId\" filterable placeholder=\"入库仓库\" @change=\"warehouseChange\" size=\"mini\" style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in warehouseList\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item.id\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"外来单号:\" class=\"right-content-body-tableForm\">\n              <el-select clearable v-model=\"formData.externalBillCode\" filterable placeholder=\"外来单号\" size=\"mini\" style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in externalCodeList\"\n                  :key=\"item\"\n                  :label=\"item\"\n                  :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"到货日期:\" class=\"right-content-body-tableForm\">\n              <el-date-picker\n                style=\"width: 100%\"\n                size=\"mini\"\n                v-model=\"formData.arrivalDate\"\n                type=\"date\"\n                placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n          </el-form>\n        </div>\n        <div style=\"padding: 5px;\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n              明细信息\n          </span>\n          <el-button size=\"mini\" style=\"float: right;margin: 0px 7px 2px 0px\" type=\"primary\" @click=\"addDetail\">添加明细</el-button>\n          <el-form :model=\"formData\" ref=\"detailForm\" :inline-message=\"true\">\n            <el-table :data=\"formData.materialList\" border style=\"width:100%\" class=\"operation-table\">\n              <el-table-column label=\"物料类别\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.materialCategoryCode'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.materialCategoryCode\">\n                    <el-select v-model=\"scope.row.materialCategoryCode\" @change=\"materialCategoryCodeChange(scope.row)\" placeholder=\"物料类别\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in materialCategoryList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.materialCategoryName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"物料名称\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.materialCode'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.materialName\">\n                    <el-select v-model=\"scope.row.materialCode\" @change=\"materialChange(scope.row)\" placeholder=\"物料名称\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in scope.row.materialList\"\n                        :key=\"item.materialCode\"\n                        :label=\"item.materialName+'('+item.materialCode+')'\"\n                        :value=\"item.materialCode\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.materialName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"物料编码\" align=\"center\" prop=\"materialCode\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"型号\" align=\"center\" prop=\"modelType\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"规格\" align=\"center\" prop=\"specification\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"单位\" align=\"center\" prop=\"unitName\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"质检员\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.checkerId'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.checkerId\">\n                    <el-select v-model=\"scope.row.checkerId\" placeholder=\"质检员\" @change=\"checkerChange(scope.row)\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in checkerList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.checkerName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"到货数量\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.arrivalAmount'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.arrivalAmount\">\n                    <el-input size=\"mini\" v-model=\"scope.row.arrivalAmount\"></el-input>\n                  </el-form-item>\n                  <span v-else>{{scope.row.arrivalAmount}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" align=\"center\" width=\"87\">\n                <template slot-scope=\"scope\">\n                  <div v-if=\"scope.row.state=='edit'\">\n                    <el-button type=\"text\" size=\"mini\" @click=\"savelDetail(scope.row,scope.$index,'detailForm')\">保存</el-button>\n                    <el-button type=\"text\" size=\"mini\" @click=\"delDetail(scope.row,scope.$index)\">删除</el-button>\n                  </div>\n                  <div v-else>\n                    <el-button type=\"text\" size=\"mini\" @click=\"editDetail(scope.row,scope.$index)\">修改</el-button>\n                    <el-button type=\"text\" size=\"mini\" @click=\"delDetail(scope.row,scope.$index)\">删除</el-button>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-form>\n        </div>\n        <div style=\"text-align: right\" class=\"right-content-body-foot\">\n          <el-button size=\"mini\" @click=\"saveOrSubmit('save')\">保存</el-button>\n          <el-button size=\"mini\" type=\"primary\" @click=\"saveOrSubmit('submit')\">提交</el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"ReceivingNoteEdit\",\n    mounted(){\n      this.id = this.$route.params.id\n      this.getModifyInfo();\n    },\n    data(){\n      var _this = this;\n      var checkAmount = (rule, value, callback) => {\n        let isNum = _this.isNumber(value)\n        if (!isNum) {\n          callback(new Error('请填写正确的数值'));\n        } else {\n          if(value < 0 ){\n            callback(new Error('到货数量不能小于0'));\n          }\n          callback();\n        }\n      };\n      return{\n        id:\"\",\n        receiptBillCode:\"\",//单据号\n        materialCategoryList:[],//物理类别列表\n        externalCodeList:[],//外来单号列表\n        formData:{\n          receiptBillSourceKey:\"\",//单据来源\n          warehouseId:\"\",//入库仓库Id\n          externalBillCode:\"\",//外来单号\n          arrivalDate:new Date(),//到货日期\n          materialList:[],//明细信息\n        },\n        rules:{\n          receiptBillSourceKey:[\n            { required: true, message: '请选择单据来源', trigger: 'change' },\n          ],\n          warehouseId:[\n            { required: true, message: '请选择入库仓库', trigger: 'change' },\n          ],\n          materialCategoryCode: [\n            { required: true, message: '请选择物料类别', trigger: 'change' },\n          ],\n          materialCode: [\n            { required: true, message: '请输入物料编码', trigger: 'change' },\n          ],\n          materialName: [\n            { required: true, message: '请选择物料', trigger: 'change' },\n          ],\n          specification: [\n            { required: true, message: '请输入规格', trigger: 'change' },\n          ],\n          unitName: [\n            { required: true, message: '请输入单位', trigger: 'change' },\n          ],\n          checkerId: [\n            { required: true, message: '请选择质检员', trigger: 'change' },\n          ],\n          arrivalAmount: [\n            { required: true, message: '请输入到货数量', trigger: 'change' },\n            { validator: checkAmount, trigger: 'change' }\n          ],\n        }\n      }\n    },\n    methods:{\n      getModifyInfo(){\n        this.$http.get(\"/ys-web-wms/recivingInspectionInfo/getInfo?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            let data = result.data.data;\n            if(data){\n              this.receiptBillCode = data.receiptBillCode;\n              let materialList = data.details?data.details:[];\n              if(materialList.length > 0){\n                for(var i=0;i<materialList.length;i++){\n                  materialList[i].materialList = [];\n                  materialList[i].state = \"nomal\";\n                }\n              }\n              this.formData = {\n                receiptBillSourceKey:data.receiptBillSourceKey?data.receiptBillSourceKey:\"\",//单据来源\n                warehouseId:data.warehouseId?data.warehouseId:\"\",//入库仓库Id\n                externalBillCode:data.externalBillCode?data.externalBillCode:\"\",//外来单号\n                arrivalDate:data.arrivalDate?data.arrivalDate:\"\",//到货日期\n                materialList:Object.assign([],materialList),//明细信息\n              };\n              let _this = this;\n              this.getCategoryList(this.formData.warehouseId,function (res) {\n                _this.materialCategoryList = res;\n              });\n            }\n          }else{\n            this.$notify.error({\n              title:\"订货单信息获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      },\n      saveOrSubmit(type){\n        if(this.checkForm(\"infoForm\") && this.checkForm(\"detailForm\")) {\n          if(this.formData.materialList.length==0){\n            this.$message({\n              message:\"请添加明细\",\n              type:\"warning\",\n              showClose:true\n            })\n            return;\n          }\n          let list = this.formData.materialList;\n          for(var i=0;i<list.length;i++){\n            list[i].materialList = \"\";\n          }\n          let submitData = Object.assign({},this.formData);\n          submitData.materialList = list;\n          let dataStr = JSON.stringify(submitData);\n          let postUrl = \"/ys-web-wms/recivingInspectionInfo/modifiedReceiptBill\";\n          let message = type == 'save' ? \"保存\" : \"提交\";\n          this.$http.post(postUrl, {data: dataStr, type: type, id: this.id}).then(function (result) {\n            if (result.data.state == 200) {\n              this.$message({\n                showClose: true,\n                message: message + \"成功\",\n                type: \"success\"\n              })\n              if (\"submit\" == type) {\n                let _this = this;\n                this.getReceivingNoteStatus(this.id, function (status) {\n                  _this.$store.state.receivingInfo.receiptBillStatusKey = status\n                })\n              }\n              this.$router.push(\"/receivingInspection/detail/\" + this.id + \"/info\")\n            } else {\n              this.$notify.error({\n                title: message + \"失败\",\n                message: result.data.message\n              })\n            }\n          })\n        }\n      },\n      checkerChange(row){//质检员改变\n        this.getNameById(row.checkerId,this.checkerList,function (result) {\n          row.checkerName = result;\n        })\n      },\n      materialCategoryCodeChange(row){//物料类别改变\n        row.materialCode = \"\";\n        row.materialName = \"\";//名字\n        row.modelType = \"\";//型号\n        row.specification = \"\";//规格\n        row.unitName = \"\";//单位\n        this.getNameById(row.materialCategoryCode,this.materialCategoryList,function (result) {\n          row.materialCategoryName = result;\n        })\n        this.getMaterialInfoList(row.materialCategoryCode,function (res) {\n          row.materialList = res;\n        })\n      },\n      //物料选择时改变\n      materialChange(row){\n        let list = row.materialList;\n        for(var i=0;i<list.length;i++){\n          if(row.materialCode == list[i].materialCode){\n            row.materialName = list[i].materialName;//名字\n            row.modelType = list[i].modelType;//型号\n            row.specification = list[i].specification;//规格\n            row.unitName = list[i].unitName;//单位\n            return;\n          }\n        }\n      },\n      billSourceChange(val){\n        let _this = this;\n        this.getExternalCodeList(val,function (result) {\n          _this.externalCodeList = result;\n        })\n      },\n      //仓库改变时触发\n      warehouseChange(id){\n        let _this = this;\n        this.formData.materialList = [];\n        this.getCategoryList(id,function (res) {\n          _this.materialCategoryList = res;\n        });\n      },\n      editDetail(data,index){\n        this.getMaterialInfoList(data.materialCategoryCode,function (res) {\n          data.materialList = res;\n          data.state = \"edit\";\n        })\n\n      },\n      delDetail(data,index){\n        this.formData.materialList.splice(index, 1);\n      },\n      savelDetail(data,index,formName){\n        if(this.checkForm(formName)){\n          data.state = \"nomal\"\n        }\n      },\n      addDetail() {\n        if (this.checkForm(\"infoForm\")) {\n          this.formData.materialList.push({\n            materialList:[],//物料列表\n            materialCode:\"\",//物料编码\n            materialName:\"\",//物料名称\n            materialCategoryCode:\"\",//物料类别编码\n            materialCategoryName:\"\",//物料类别名称\n            modelType:\"\",//型号\n            specification:\"\",//规格\n            unitName:\"\",//单位\n            checkerName:'',//质检员名称\n            checkerId:'',//质检员id\n            arrivalAmount:'',//到货数量\n            state:\"edit\"\n          })\n        }else{\n          this.$message({\n            message:\"请先完善基本信息\",\n            type:\"warning\",\n            showClose:true\n          })\n        }\n      }\n    },\n    computed:{\n      \"billSource\":function () {//收货单据来源\n        return this.$store.state.enumList.billSource;\n      },\n      \"warehouseList\":function () {//仓库列表\n        return this.$store.state.selectList.warehouseList;\n      },\n      \"checkerList\":function () {//质检员列表\n        return this.$store.state.selectList.checkerList;\n      }\n    },\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-topTitle\"},[_vm._v(\"\\n    单据号：\"+_vm._s(_vm.receiptBillCode)+\"\\n  \")]),_vm._v(\" \"),_c('div',{staticClass:\"card-box right-content\"},[_c('div',{staticClass:\"right-content-body\"},[_c('div',{staticClass:\"right-content-body-topTitle\"},[_vm._v(\"\\n        修改收货单\\n      \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\",\"height\":\"140px\"}},[_c('span',{staticClass:\"right-content-body-little-title\"},[_vm._v(\"\\n          基本信息\\n        \")]),_vm._v(\" \"),_c('el-form',{ref:\"infoForm\",staticStyle:{\"width\":\"100%\"},attrs:{\"model\":_vm.formData,\"label-width\":\"130px\",\"inline-message\":true,\"rules\":_vm.rules,\"size\":\"mini\"}},[_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"单据号:\"}},[_vm._v(\"\\n            \"+_vm._s(_vm.receiptBillCode)+\"\\n          \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"单据来源:\",\"prop\":\"receiptBillSourceKey\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"单据来源\",\"size\":\"mini\"},on:{\"change\":_vm.billSourceChange},model:{value:(_vm.formData.receiptBillSourceKey),callback:function ($$v) {_vm.$set(_vm.formData, \"receiptBillSourceKey\", $$v)},expression:\"formData.receiptBillSourceKey\"}},_vm._l((_vm.billSource),function(item){return _c('el-option',{key:item.code,attrs:{\"label\":item.name,\"value\":item.code}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"入库仓库:\",\"prop\":\"warehouseId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"入库仓库\",\"size\":\"mini\"},on:{\"change\":_vm.warehouseChange},model:{value:(_vm.formData.warehouseId),callback:function ($$v) {_vm.$set(_vm.formData, \"warehouseId\", $$v)},expression:\"formData.warehouseId\"}},_vm._l((_vm.warehouseList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"外来单号:\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"外来单号\",\"size\":\"mini\"},model:{value:(_vm.formData.externalBillCode),callback:function ($$v) {_vm.$set(_vm.formData, \"externalBillCode\", $$v)},expression:\"formData.externalBillCode\"}},_vm._l((_vm.externalCodeList),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"到货日期:\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"100%\"},attrs:{\"size\":\"mini\",\"type\":\"date\",\"placeholder\":\"选择日期\"},model:{value:(_vm.formData.arrivalDate),callback:function ($$v) {_vm.$set(_vm.formData, \"arrivalDate\", $$v)},expression:\"formData.arrivalDate\"}})],1)],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n            明细信息\\n        \")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin\":\"0px 7px 2px 0px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.addDetail}},[_vm._v(\"添加明细\")]),_vm._v(\" \"),_c('el-form',{ref:\"detailForm\",attrs:{\"model\":_vm.formData,\"inline-message\":true}},[_c('el-table',{staticClass:\"operation-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.formData.materialList,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"物料类别\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.materialCategoryCode',\"rules\":_vm.rules.materialCategoryCode}},[_c('el-select',{attrs:{\"placeholder\":\"物料类别\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.materialCategoryCodeChange(scope.row)}},model:{value:(scope.row.materialCategoryCode),callback:function ($$v) {_vm.$set(scope.row, \"materialCategoryCode\", $$v)},expression:\"scope.row.materialCategoryCode\"}},_vm._l((_vm.materialCategoryList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.materialCategoryName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料名称\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.materialCode',\"rules\":_vm.rules.materialName}},[_c('el-select',{attrs:{\"placeholder\":\"物料名称\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.materialChange(scope.row)}},model:{value:(scope.row.materialCode),callback:function ($$v) {_vm.$set(scope.row, \"materialCode\", $$v)},expression:\"scope.row.materialCode\"}},_vm._l((scope.row.materialList),function(item){return _c('el-option',{key:item.materialCode,attrs:{\"label\":item.materialName+'('+item.materialCode+')',\"value\":item.materialCode}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.materialName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料编码\",\"align\":\"center\",\"prop\":\"materialCode\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"型号\",\"align\":\"center\",\"prop\":\"modelType\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"规格\",\"align\":\"center\",\"prop\":\"specification\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"单位\",\"align\":\"center\",\"prop\":\"unitName\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"质检员\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.checkerId',\"rules\":_vm.rules.checkerId}},[_c('el-select',{attrs:{\"placeholder\":\"质检员\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.checkerChange(scope.row)}},model:{value:(scope.row.checkerId),callback:function ($$v) {_vm.$set(scope.row, \"checkerId\", $$v)},expression:\"scope.row.checkerId\"}},_vm._l((_vm.checkerList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.checkerName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"到货数量\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.arrivalAmount',\"rules\":_vm.rules.arrivalAmount}},[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.arrivalAmount),callback:function ($$v) {_vm.$set(scope.row, \"arrivalAmount\", $$v)},expression:\"scope.row.arrivalAmount\"}})],1):_c('span',[_vm._v(_vm._s(scope.row.arrivalAmount))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"87\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('div',[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.savelDetail(scope.row,scope.$index,'detailForm')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.delDetail(scope.row,scope.$index)}}},[_vm._v(\"删除\")])],1):_c('div',[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.editDetail(scope.row,scope.$index)}}},[_vm._v(\"修改\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.delDetail(scope.row,scope.$index)}}},[_vm._v(\"删除\")])],1)]}}])})],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"right-content-body-foot\",staticStyle:{\"text-align\":\"right\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.saveOrSubmit('save')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.saveOrSubmit('submit')}}},[_vm._v(\"提交\")])],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4d27d360\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4d27d360\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingNoteEdit.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteEdit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteEdit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4d27d360\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingNoteEdit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteEdit/ReceivingNoteEdit.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"right-content-body-topTitle\">\n      上架信息\n    </div>\n    <div style=\"padding: 10px;\">\n    <el-table :data=\"tableData\" border style=\"width: 100%\">\n      <el-table-column prop=\"warehouseName\" align=\"center\" label=\"仓库\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"storeAreaName\" align=\"center\" label=\"库区\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"goodsAllocationCode\" align=\"center\" label=\"货位\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"alreadyUpAmount\" align=\"center\" label=\"上架数量\" :show-overflow-tooltip=\"true\"></el-table-column>\n    </el-table>\n    </div>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"PutawayInformationAlert\",\n    props:[\"tableData\"],\n    mounted(){\n\n    },\n    data(){\n      return{\n\n      }\n    },\n    methods:{\n\n    }\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-content-body-topTitle\"},[_vm._v(\"\\n    上架信息\\n  \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"10px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"warehouseName\",\"align\":\"center\",\"label\":\"仓库\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"storeAreaName\",\"align\":\"center\",\"label\":\"库区\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"goodsAllocationCode\",\"align\":\"center\",\"label\":\"货位\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"alreadyUpAmount\",\"align\":\"center\",\"label\":\"上架数量\",\"show-overflow-tooltip\":true}})],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1df8c6d4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1df8c6d4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PutawayInformationAlert.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PutawayInformationAlert.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PutawayInformationAlert.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1df8c6d4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PutawayInformationAlert.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <el-table :data=\"tableData\" border style=\"width:100%\" >\n      <el-table-column prop=\"materialCategoryName\" label=\"物料类别\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"materialCode\" label=\"物料编码\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"materialName\" label=\"物料名称\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"modelType\" label=\"型号\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"specification\" label=\"规格\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"unitName\" label=\"单位\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"checkerName\" label=\"质检员\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"checkDate\" label=\"质检日期\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"arrivalAmount\" label=\"到货数量\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"qualifiedAmount\" label=\"合格数量\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"unqualifiedAmount\" label=\"不合格数量\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"unqualifiedDesc\" label=\"不合格描述\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"introduction\" label=\"收货备注\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n    </el-table>\n\n  </div>\n</template>\n<script>\n  export default{\n    name:\"DetailTable\",\n    props:[\"id\"],\n    mounted(){\n      this.getDetailList();\n    },\n    data(){\n      return{\n        tableData:[],\n      }\n    },\n    methods:{\n      getDetailList(){\n        this.$http.get(\"/ys-web-wms/recivingInspectionInfo/getInfo?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            this.tableData = result.data.data?result.data.data.details?result.data.data.details:[]:[];\n            this.$emit(\"canDel\",true);\n          }else {\n            this.$notify.error({\n              title:\"收货单明细信息获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      }\n    },\n    components:{\n\n    },\n    watch:{\n      \"id\":function () {\n        this.getDetailList();\n      }\n    }\n\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteInfo/DetailTable.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"materialCategoryName\",\"label\":\"物料类别\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"materialCode\",\"label\":\"物料编码\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"materialName\",\"label\":\"物料名称\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"modelType\",\"label\":\"型号\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"specification\",\"label\":\"规格\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unitName\",\"label\":\"单位\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"checkerName\",\"label\":\"质检员\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"checkDate\",\"label\":\"质检日期\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"arrivalAmount\",\"label\":\"到货数量\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedAmount\",\"label\":\"合格数量\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedAmount\",\"label\":\"不合格数量\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedDesc\",\"label\":\"不合格描述\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"introduction\",\"label\":\"收货备注\",\"align\":\"center\",\"show-overflow-tooltip\":true}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7062942f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteInfo/DetailTable.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7062942f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DetailTable.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DetailTable.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DetailTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7062942f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DetailTable.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteInfo/DetailTable.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"navbtn-wrapper not-print\">\n      <router-link :to=\"info\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\" >详情</router-link>\n      <router-link :to=\"receiving\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\" v-if=\"roleInfo.receiptBillStatusKey!=1\">收货</router-link>\n      <router-link :to=\"edit\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\" v-if=\"receiptBillStatusKey==1\">修改</router-link>\n      <router-link :to=\"del\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\"  v-if=\"receiptBillStatusKey==1\">删除</router-link>\n      <router-link :to=\"tag\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\" >标签</router-link>\n      <router-link :to=\"print\" tag=\"button\" class=\"el-button el-button--mini\" active-class=\"el-button--primary\" >打印</router-link>\n    </div>\n</template>\n<script>\n    export default {\n      name:\"TopNavBtn\",\n      props:[\"id\"],\n      data(){\n        return{\n          allNo:false\n        }\n      },\n      computed:{\n        \"receiptBillStatusKey\":function () {\n          return this.$store.state.receivingInfo.receiptBillStatusKey?this.$store.state.receivingInfo.receiptBillStatusKey:\"\"\n        },\n        \"info\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/info\";\n        },\n        \"receiving\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/receiving\";\n        },\n        \"edit\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/edit\";\n        },\n        \"del\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/del\";\n        },\n        \"tag\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/tag\";\n        },\n        \"print\":function(){\n          return \"/receivingInspection/detail/\"+this.id+\"/print\";\n        },\n        roleInfo:function(){\n          return this.$store.state.roleInfo;\n        },\n      },\n    }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/TopNavBtn.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"navbtn-wrapper not-print\"},[_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.info,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"详情\")]),_vm._v(\" \"),(_vm.roleInfo.receiptBillStatusKey!=1)?_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.receiving,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"收货\")]):_vm._e(),_vm._v(\" \"),(_vm.receiptBillStatusKey==1)?_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.edit,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.receiptBillStatusKey==1)?_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.del,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"删除\")]):_vm._e(),_vm._v(\" \"),_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.tag,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"标签\")]),_vm._v(\" \"),_c('router-link',{staticClass:\"el-button el-button--mini\",attrs:{\"to\":_vm.print,\"tag\":\"button\",\"active-class\":\"el-button--primary\"}},[_vm._v(\"打印\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2ecfd9d2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/TopNavBtn.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"\">\n    <div class=\"\">\n        <top-nav :id=\"id\"></top-nav>\n        <router-view style=\"margin-top: -42px\"></router-view>\n    </div>\n  </div>\n</template>\n<script>\n  import NavBar from './TopNavBtn.vue'\n\n  export default {\n    name:\"ReceivingDetail\",\n    mounted:function(){\n      this.id = this.$route.params.id;\n    },\n    data(){\n      return {\n        id:0,\n      }\n    },\n    methods:{\n    },\n    components:{\n      \"top-nav\":NavBar,\n    },\n    watch:{\n      \"$route\": function(){\n        this.id = this.$route.params.id;\n        if(this.id == 0){\n          this.topHide = true;\n        }else{\n          this.topHide = false;\n        }\n        this.state = this.$route.params.state;\n      }\n    }\n  }\n</script>\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/ReceivingDetail.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2ecfd9d2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TopNavBtn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TopNavBtn.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./TopNavBtn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2ecfd9d2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./TopNavBtn.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/TopNavBtn.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('div',{},[_c('top-nav',{attrs:{\"id\":_vm.id}}),_vm._v(\" \"),_c('router-view',{staticStyle:{\"margin-top\":\"-42px\"}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7a2ba4b0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/ReceivingDetail.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7a2ba4b0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingDetail.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingDetail.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingDetail.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7a2ba4b0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingDetail.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7a2ba4b0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/ReceivingDetail.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n  <div class=\"right-topTitle-two\">\n    单据号：{{infoData.receiptBillCode}}\n  </div>\n    <el-form label-width=\"130px\" size=\"mini\" style=\"width: 100%\">\n      <el-form-item label=\"单据来源:\" class=\"right-content-body-tableForm\">\n        {{ infoData.receiptBillSourceKey|enumtext(billSource) }}\n        <!--{{ infoData.receiptBillSourceKey == 0?\"\":(infoData.receiptBillSourceKey|enumtext(billSource)) }}-->\n      </el-form-item>\n      <el-form-item label=\"外来单号:\" class=\"right-content-body-tableForm\">\n        {{infoData.externalBillCode}}\n      </el-form-item>\n      <el-form-item label=\"入库仓库:\" class=\"right-content-body-tableForm\">\n        {{infoData.warehouseName}}\n      </el-form-item>\n      <el-form-item label=\"单据状态:\" class=\"right-content-body-tableForm\">\n        {{ infoData.receiptBillStatusKey|enumtext(receiptBillStatus) }}\n      </el-form-item>\n      <el-form-item label=\"创建人:\" class=\"right-content-body-tableForm\">\n        {{infoData.creatorName}}\n      </el-form-item>\n      <el-form-item label=\"创建日期:\" class=\"right-content-body-tableForm\">\n        {{infoData.generateTime}}\n      </el-form-item>\n      <el-form-item label=\"到货日期:\" class=\"right-content-body-tableForm\">\n        {{infoData.arrivalDate}}\n      </el-form-item>\n      <el-form-item label=\"\" class=\"right-content-body-tableForm\" style=\"height: 32px;\">\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"Info\",\n    props:[\"id\"],\n    mounted(){\n      this.getInfo()\n    },\n    data(){\n      return{\n        infoData:{}\n      }\n    },\n    methods:{\n      getInfo(){\n        this.$http.get(\"/ys-web-wms/recivingInspectionInfo/getInfo?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            this.infoData = result.data.data?result.data.data:{};\n          }else {\n            this.$notify.error({\n              title:\"收货单详情获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      }\n    },\n    computed:{\n      \"billSource\":function () {//收货单据来源\n        return this.$store.state.enumList.billSource;\n      },\n      \"receiptBillStatus\":function () {//收货单状态\n        return this.$store.state.enumList.receiptBillStatus;\n      }\n    },\n    watch:{\n      \"id\":function () {\n        this.getInfo();\n      }\n    }\n\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteInfo/Info.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-topTitle-two\"},[_vm._v(\"\\n  单据号：\"+_vm._s(_vm.infoData.receiptBillCode)+\"\\n\")]),_vm._v(\" \"),_c('el-form',{staticStyle:{\"width\":\"100%\"},attrs:{\"label-width\":\"130px\",\"size\":\"mini\"}},[_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"单据来源:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm._f(\"enumtext\")(_vm.infoData.receiptBillSourceKey,_vm.billSource))+\"\\n      \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"外来单号:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.infoData.externalBillCode)+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"入库仓库:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.infoData.warehouseName)+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"单据状态:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm._f(\"enumtext\")(_vm.infoData.receiptBillStatusKey,_vm.receiptBillStatus))+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"创建人:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.infoData.creatorName)+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"创建日期:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.infoData.generateTime)+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",attrs:{\"label\":\"到货日期:\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.infoData.arrivalDate)+\"\\n    \")]),_vm._v(\" \"),_c('el-form-item',{staticClass:\"right-content-body-tableForm\",staticStyle:{\"height\":\"32px\"},attrs:{\"label\":\"\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4c1bc55e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteInfo/Info.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4c1bc55e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Info.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Info.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Info.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4c1bc55e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Info.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteInfo/Info.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"right-topTitle\">\n      单据号：{{receivingInfo.receiptBillCode?receivingInfo.receiptBillCode:\"\"}}\n    </div>\n    <div class=\"right-content\">\n      <div class=\"right-content-body\">\n        <div class=\"right-content-body-topTitle\">\n          收货\n        </div>\n        <div style=\"padding: 5px;\">\n          <span class=\"right-content-body-little-title\">明细信息</span>\n          <el-form :model=\"detailForm\" ref=\"detailForm\" :inline-message=\"true\">\n            <el-table :data=\"detailForm.tableData\" border style=\"width:100%\" class=\"operation-table\">\n              <el-table-column prop=\"materialCategoryName\" label=\"物料类别\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"materialCode\" label=\"物料编码\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"materialName\" label=\"物料名称\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"modelType\" label=\"型号\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"specification\" label=\"规格\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"unitName\" label=\"单位\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"checkerName\" label=\"质检员\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"arrivalAmount\" label=\"到货数量\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n              <el-table-column prop=\"qualifiedAmount\" label=\"合格数量\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.hasSubmit\">{{scope.row.qualifiedAmount}}</span>\n                  <el-form-item label=\"\" :prop=\"'tableData.'+scope.$index+'.qualifiedAmount'\" :rules=\"rules.qualifiedAmount\" v-else>\n                    <el-input size=\"mini\" v-model=\"scope.row.qualifiedAmount\"></el-input>\n                  </el-form-item>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"unqualifiedDesc\" label=\"不合格描述\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.hasSubmit\">{{scope.row.unqualifiedDesc?scope.row.unqualifiedDesc:\"\"}}</span>\n                  <el-form-item label=\"\" :prop=\"'tableData.'+scope.$index+'.unqualifiedDesc'\" v-else>\n                    <el-input size=\"mini\" v-model=\"scope.row.unqualifiedDesc\"></el-input>\n                  </el-form-item>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"date\" label=\"收货备注\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.hasSubmit\">{{scope.row.introduction?scope.row.introduction:\"\"}}</span>\n                  <el-form-item label=\"\" :prop=\"'tableData.'+scope.$index+'.introduction'\" v-else>\n                    <el-input size=\"mini\" v-model=\"scope.row.introduction\"></el-input>\n                  </el-form-item>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"arrivalAmount\" label=\"收货时间\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <span v-if=\"scope.row.checkDate\">{{scope.row.checkDate}}</span>\n                  <div v-else>\n                    <el-tag size=\"mini\">未收货</el-tag>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-form>\n          <div style=\"height: 50px\">\n            <el-button size=\"mini\" type=\"primary\" style=\"float: right;margin: 5px 17px 20px 0px;\" @click=\"submit\" v-if=\"$store.state.receivingInfo.receiptBillStatusKey == 2 && detailForm.tableData.length>0\">保存</el-button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"Receiving\",\n    mounted:function () {\n      this.id = this.$route.params.id;\n      this.getReceiptDetailList();\n    },\n    data(){\n      var _this = this;\n      var checkAmount = (rule, value, callback) => {\n        let isNum = _this.isNumber(value)\n        if(_this.isNull(value) || undefined == value){\n          callback();\n        }else{\n          if (!isNum) {\n            callback(new Error('请填写正确的数值'));\n          } else {\n            if(value < 0 ){\n              callback(new Error('到货数量不能小于0'));\n            }\n            callback();\n          }\n        }\n      };\n      return{\n        id:\"\",\n        detailForm:{\n          tableData:[]\n        },\n        rules:{\n          qualifiedAmount: [\n            { validator: checkAmount, trigger: 'change' }\n          ],\n        }\n      }\n    },\n    methods:{\n      getReceiptDetailList(){\n        this.$http.get(\"/ys-web-wms/receivingInspectionReceiving/getReceiptDetailList?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            let tableData = result.data.data?result.data.data:[];\n            if(tableData.length>0){\n              for(var i=0;i<tableData.length;i++){\n                if(tableData[i].qualifiedAmount){\n                  tableData[i].hasSubmit = true;\n                }\n              }\n            }\n            this.detailForm.tableData = tableData;\n          }else{\n            this.$notify.error({\n              title:\"收货明细获取失败\",\n              message:result.data.message\n            })\n          }\n        });\n      },\n      submit(){\n        if(!this.checkForm(\"detailForm\")){\n          return;\n        }\n        let submitData = [];\n        let tableData = this.detailForm.tableData;\n        if(tableData.length>0){\n          for(var i=0;i<tableData.length;i++){\n            if(!this.isNull(tableData[i].qualifiedAmount) && undefined != tableData[i].qualifiedAmount && !tableData[i].hasSubmit){\n              tableData[i].unqualifiedAmount = tableData[i].arrivalAmount - tableData[i].qualifiedAmount;\n              if(tableData[i].unqualifiedAmount<0){\n                this.$message({\n                  showClose:true,\n                  message:\"物料\"+tableData[i].materialName+\"合格数量不能超过\"+tableData[i].arrivalAmount,\n                  type:\"error\"\n                })\n                return;\n              }\n              submitData.push(tableData[i])\n            }\n          }\n          if(submitData.length>0){\n            this.doAjax(submitData);\n          }\n        }else{\n          this.$message({\n            showClose:true,\n            message:\"暂无无可收货物料\",\n            type:\"warning\"\n          });\n        }\n      },\n      doAjax(data){\n        let dataStr = JSON.stringify(data);\n        this.$http.post(\"/ys-web-wms/receivingInspectionReceiving/receiveCheck\",{data:dataStr,id:this.id}).then(function (result) {\n          if(result.data.state == 200){\n            this.$message({\n              message:\"保存成功\",\n              showClose:true,\n              type:\"success\"\n            })\n            this.getReceiptDetailList();\n            let _this = this;\n            this.getReceivingNoteStatus(this.id,function (status) {\n              _this.$store.state.receivingInfo.receiptBillStatusKey = status\n            })\n          }else{\n            this.$notify.error({\n              title:\"保存失败\",\n              message:result.data.message\n            })\n          }\n        })\n      }\n    },\n    components:{\n\n    },\n    computed:{\n      \"receivingInfo\":function () {\n        return this.$store.state.receivingInfo\n      }\n    }\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receiving/Receiving.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-topTitle\"},[_vm._v(\"\\n    单据号：\"+_vm._s(_vm.receivingInfo.receiptBillCode?_vm.receivingInfo.receiptBillCode:\"\")+\"\\n  \")]),_vm._v(\" \"),_c('div',{staticClass:\"right-content\"},[_c('div',{staticClass:\"right-content-body\"},[_c('div',{staticClass:\"right-content-body-topTitle\"},[_vm._v(\"\\n        收货\\n      \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticClass:\"right-content-body-little-title\"},[_vm._v(\"明细信息\")]),_vm._v(\" \"),_c('el-form',{ref:\"detailForm\",attrs:{\"model\":_vm.detailForm,\"inline-message\":true}},[_c('el-table',{staticClass:\"operation-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.detailForm.tableData,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"materialCategoryName\",\"label\":\"物料类别\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"materialCode\",\"label\":\"物料编码\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"materialName\",\"label\":\"物料名称\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"modelType\",\"label\":\"型号\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"specification\",\"label\":\"规格\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unitName\",\"label\":\"单位\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"checkerName\",\"label\":\"质检员\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"arrivalAmount\",\"label\":\"到货数量\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qualifiedAmount\",\"label\":\"合格数量\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.hasSubmit)?_c('span',[_vm._v(_vm._s(scope.row.qualifiedAmount))]):_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'tableData.'+scope.$index+'.qualifiedAmount',\"rules\":_vm.rules.qualifiedAmount}},[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.qualifiedAmount),callback:function ($$v) {_vm.$set(scope.row, \"qualifiedAmount\", $$v)},expression:\"scope.row.qualifiedAmount\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unqualifiedDesc\",\"label\":\"不合格描述\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.hasSubmit)?_c('span',[_vm._v(_vm._s(scope.row.unqualifiedDesc?scope.row.unqualifiedDesc:\"\"))]):_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'tableData.'+scope.$index+'.unqualifiedDesc'}},[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.unqualifiedDesc),callback:function ($$v) {_vm.$set(scope.row, \"unqualifiedDesc\", $$v)},expression:\"scope.row.unqualifiedDesc\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"date\",\"label\":\"收货备注\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.hasSubmit)?_c('span',[_vm._v(_vm._s(scope.row.introduction?scope.row.introduction:\"\"))]):_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'tableData.'+scope.$index+'.introduction'}},[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.introduction),callback:function ($$v) {_vm.$set(scope.row, \"introduction\", $$v)},expression:\"scope.row.introduction\"}})],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"arrivalAmount\",\"label\":\"收货时间\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.checkDate)?_c('span',[_vm._v(_vm._s(scope.row.checkDate))]):_c('div',[_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"未收货\")])],1)]}}])})],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"50px\"}},[(_vm.$store.state.receivingInfo.receiptBillStatusKey == 2 && _vm.detailForm.tableData.length>0)?_c('el-button',{staticStyle:{\"float\":\"right\",\"margin\":\"5px 17px 20px 0px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.submit}},[_vm._v(\"保存\")]):_vm._e()],1)],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-cf219c14\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receiving/Receiving.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-cf219c14\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Receiving.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receiving.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receiving.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cf219c14\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Receiving.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receiving/Receiving.vue\n// module id = null\n// module chunks = ","/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*jshint globalstrict: false */\n/* globals PDFJS */\n\n// Initializing PDFJS global object (if still undefined)\nif (typeof PDFJS === 'undefined') {\n  (typeof window !== 'undefined' ? window : this).PDFJS = {};\n}\n\nPDFJS.version = '1.1.9';\nPDFJS.build = 'c5eb34e';\n\n(function pdfjsWrapper() {\n  // Use strict in our context only - users might not want it\n  'use strict';\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals Cmd, ColorSpace, Dict, MozBlobBuilder, Name, PDFJS, Ref, URL,\n           Promise */\n\n'use strict';\n\nvar globalScope = (typeof window === 'undefined') ? this : window;\n\nvar isWorker = (typeof window === 'undefined');\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\n\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\n\nvar AnnotationType = {\n  WIDGET: 1,\n  TEXT: 2,\n  LINK: 3\n};\n\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\n\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\n\n// The global PDFJS object exposes the API\n// In production, it will be declared outside a global wrapper\n// In development, it will be declared here\nif (!globalScope.PDFJS) {\n  globalScope.PDFJS = {};\n}\n\nglobalScope.PDFJS.pdfBug = false;\n\nPDFJS.VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\n\n// All the possible operations for an operator list.\nvar OPS = PDFJS.OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (PDFJS.verbosity >= PDFJS.VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\n\n// Fatal errors that should trigger the fallback UI and halt execution by\n// throwing an exception.\nfunction error(msg) {\n  // If multiple arguments were passed, pass them all to the log function.\n  if (arguments.length > 1) {\n    var logArguments = ['Error:'];\n    logArguments.push.apply(logArguments, arguments);\n    console.log.apply(console, logArguments);\n    // Join the arguments into a single string for the lines below.\n    msg = [].join.call(arguments, ' ');\n  } else {\n    console.log('Error: ' + msg);\n  }\n  console.log(backtrace());\n  UnsupportedManager.notify(UNSUPPORTED_FEATURES.unknown);\n  throw new Error(msg);\n}\n\nfunction backtrace() {\n  try {\n    throw new Error();\n  } catch (e) {\n    return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n  }\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    error(msg);\n  }\n}\n\nvar UNSUPPORTED_FEATURES = PDFJS.UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\n\nvar UnsupportedManager = PDFJS.UnsupportedManager =\n  (function UnsupportedManagerClosure() {\n  var listeners = [];\n  return {\n    listen: function (cb) {\n      listeners.push(cb);\n    },\n    notify: function (featureId) {\n      warn('Unsupported feature \"' + featureId + '\"');\n      for (var i = 0, ii = listeners.length; i < ii; i++) {\n        listeners[i](featureId);\n      }\n    }\n  };\n})();\n\n// Combines two URLs. The baseUrl shall be absolute URL. If the url is an\n// absolute URL, it will be returned as is.\nfunction combineUrl(baseUrl, url) {\n  if (!url) {\n    return baseUrl;\n  }\n  if (/^[a-z][a-z0-9+\\-.]*:/i.test(url)) {\n    return url;\n  }\n  var i;\n  if (url.charAt(0) === '/') {\n    // absolute path\n    i = baseUrl.indexOf('://');\n    if (url.charAt(1) === '/') {\n      ++i;\n    } else {\n      i = baseUrl.indexOf('/', i + 3);\n    }\n    return baseUrl.substring(0, i) + url;\n  } else {\n    // relative path\n    var pathLength = baseUrl.length;\n    i = baseUrl.lastIndexOf('#');\n    pathLength = i >= 0 ? i : pathLength;\n    i = baseUrl.lastIndexOf('?', pathLength);\n    pathLength = i >= 0 ? i : pathLength;\n    var prefixLength = baseUrl.lastIndexOf('/', pathLength);\n    return baseUrl.substring(0, prefixLength + 1) + url;\n  }\n}\n\n// Validates if URL is safe and allowed, e.g. to avoid XSS.\nfunction isValidUrl(url, allowRelative) {\n  if (!url) {\n    return false;\n  }\n  // RFC 3986 (http://tools.ietf.org/html/rfc3986#section-3.1)\n  // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  var protocol = /^[a-z][a-z0-9+\\-.]*(?=:)/i.exec(url);\n  if (!protocol) {\n    return allowRelative;\n  }\n  protocol = protocol[0].toLowerCase();\n  switch (protocol) {\n    case 'http':\n    case 'https':\n    case 'ftp':\n    case 'mailto':\n    case 'tel':\n      return true;\n    default:\n      return false;\n  }\n}\nPDFJS.isValidUrl = isValidUrl;\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, { value: value,\n                                     enumerable: true,\n                                     configurable: true,\n                                     writable: false });\n  return value;\n}\nPDFJS.shadow = shadow;\n\nvar PasswordResponses = PDFJS.PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\n\nvar PasswordException = (function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n\n  return PasswordException;\n})();\nPDFJS.PasswordException = PasswordException;\n\nvar UnknownErrorException = (function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n\n  return UnknownErrorException;\n})();\nPDFJS.UnknownErrorException = UnknownErrorException;\n\nvar InvalidPDFException = (function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n\n  return InvalidPDFException;\n})();\nPDFJS.InvalidPDFException = InvalidPDFException;\n\nvar MissingPDFException = (function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n\n  return MissingPDFException;\n})();\nPDFJS.MissingPDFException = MissingPDFException;\n\nvar UnexpectedResponseException =\n    (function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n\n  return UnexpectedResponseException;\n})();\nPDFJS.UnexpectedResponseException = UnexpectedResponseException;\n\nvar NotImplementedException = (function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n\n  return NotImplementedException;\n})();\n\nvar MissingDataException = (function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n\n  return MissingDataException;\n})();\n\nvar XRefParseException = (function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n\n  return XRefParseException;\n})();\n\n\nfunction bytesToString(bytes) {\n  assert(bytes !== null && typeof bytes === 'object' &&\n         bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  return String.fromCharCode((value >> 24) & 0xff, (value >> 16) & 0xff,\n                             (value >> 8) & 0xff, value & 0xff);\n}\n\nfunction log2(x) {\n  var n = 1, i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\n\nfunction readInt8(data, start) {\n  return (data[start] << 24) >> 24;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return ((data[offset] << 24) | (data[offset + 1] << 16) |\n         (data[offset + 2] << 8) | data[offset + 3]) >>> 0;\n}\n\n// Lazy test the endianness of the platform\n// NOTE: This will be 'true' for simulated TypedArrays\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(2);\n  buffer8[0] = 1;\n  var buffer16 = new Uint16Array(buffer8.buffer);\n  return (buffer16[0] === 1);\n}\n\nObject.defineProperty(PDFJS, 'isLittleEndian', {\n  configurable: true,\n  get: function PDFJS_isLittleEndian() {\n    return shadow(PDFJS, 'isLittleEndian', isLittleEndian());\n  }\n});\n\n  // Lazy test if the userAgant support CanvasTypedArrays\nfunction hasCanvasTypedArrays() {\n  var canvas = document.createElement('canvas');\n  canvas.width = canvas.height = 1;\n  var ctx = canvas.getContext('2d');\n  var imageData = ctx.createImageData(1, 1);\n  return (typeof imageData.data.buffer !== 'undefined');\n}\n\nObject.defineProperty(PDFJS, 'hasCanvasTypedArrays', {\n  configurable: true,\n  get: function PDFJS_hasCanvasTypedArrays() {\n    return shadow(PDFJS, 'hasCanvasTypedArrays', hasCanvasTypedArrays());\n  }\n});\n\nvar Uint32ArrayView = (function Uint32ArrayViewClosure() {\n\n  function Uint32ArrayView(buffer, length) {\n    this.buffer = buffer;\n    this.byteLength = buffer.length;\n    this.length = length === undefined ? (this.byteLength >> 2) : length;\n    ensureUint32ArrayViewProps(this.length);\n  }\n  Uint32ArrayView.prototype = Object.create(null);\n\n  var uint32ArrayViewSetters = 0;\n  function createUint32ArrayProp(index) {\n    return {\n      get: function () {\n        var buffer = this.buffer, offset = index << 2;\n        return (buffer[offset] | (buffer[offset + 1] << 8) |\n          (buffer[offset + 2] << 16) | (buffer[offset + 3] << 24)) >>> 0;\n      },\n      set: function (value) {\n        var buffer = this.buffer, offset = index << 2;\n        buffer[offset] = value & 255;\n        buffer[offset + 1] = (value >> 8) & 255;\n        buffer[offset + 2] = (value >> 16) & 255;\n        buffer[offset + 3] = (value >>> 24) & 255;\n      }\n    };\n  }\n\n  function ensureUint32ArrayViewProps(length) {\n    while (uint32ArrayViewSetters < length) {\n      Object.defineProperty(Uint32ArrayView.prototype,\n        uint32ArrayViewSetters,\n        createUint32ArrayProp(uint32ArrayViewSetters));\n      uint32ArrayViewSetters++;\n    }\n  }\n\n  return Uint32ArrayView;\n})();\n\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n\nvar Util = PDFJS.Util = (function UtilClosure() {\n  function Util() {}\n\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n\n  // makeCssRgb() can be called thousands of times. Using |rgbBuf| avoids\n  // creating many intermediate strings.\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n\n  // Concatenates two transformation matrices together and returns the result.\n  Util.transform = function Util_transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n    ];\n  };\n\n  // For 2d affine transforms\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  Util.getAxialAlignedBoundingBox =\n    function Util_getAxialAlignedBoundingBox(r, m) {\n\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1])\n    ];\n  };\n\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n    ];\n  };\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  Util.singularValueDecompose2dScale =\n    function Util_singularValueDecompose2dScale(m) {\n\n    var transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if ((orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n        (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if ((orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n        (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n\n    return result;\n  };\n\n  Util.sign = function Util_sign(num) {\n    return num < 0 ? -1 : 1;\n  };\n\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict,\n                                                                     name) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return dict.get(name);\n  };\n\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function() {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n\n  return Util;\n})();\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n * @class\n * @alias PDFJS.PageViewport\n */\nvar PageViewport = PDFJS.PageViewport = (function PageViewportClosure() {\n  /**\n   * @constructor\n   * @private\n   * @param viewBox {Array} xMin, yMin, xMax and yMax coordinates.\n   * @param scale {number} scale of the viewport.\n   * @param rotation {number} rotations of the viewport in degrees.\n   * @param offsetX {number} offset X\n   * @param offsetY {number} offset Y\n   * @param dontFlip {boolean} if true, axis Y will not be flipped.\n   */\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1; rotateB = 0; rotateC = 0; rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0; rotateB = 1; rotateC = 1; rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0; rotateB = -1; rotateC = -1; rotateD = 0;\n        break;\n      //case 0:\n      default:\n        rotateA = 1; rotateB = 0; rotateC = 0; rotateD = -1;\n        break;\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC; rotateD = -rotateD;\n    }\n\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n    ];\n\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = /** @lends PDFJS.PageViewport.prototype */ {\n    /**\n     * Clones viewport with additional properties.\n     * @param args {Object} (optional) If specified, may contain the 'scale' or\n     * 'rotation' properties to override the corresponding properties in\n     * the cloned viewport.\n     * @returns {PDFJS.PageViewport} Cloned viewport.\n     */\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation,\n                              this.offsetX, this.offsetY, args.dontFlip);\n    },\n    /**\n     * Converts PDF point to the viewport coordinates. For examples, useful for\n     * converting PDF location into canvas pixel coordinates.\n     * @param x {number} X coordinate.\n     * @param y {number} Y coordinate.\n     * @returns {Object} Object that contains 'x' and 'y' properties of the\n     * point in the viewport coordinate space.\n     * @see {@link convertToPdfPoint}\n     * @see {@link convertToViewportRectangle}\n     */\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    /**\n     * Converts PDF rectangle to the viewport coordinates.\n     * @param rect {Array} xMin, yMin, xMax and yMax coordinates.\n     * @returns {Array} Contains corresponding coordinates of the rectangle\n     * in the viewport coordinate space.\n     * @see {@link convertToViewportPoint}\n     */\n    convertToViewportRectangle:\n      function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    /**\n     * Converts viewport coordinates to the PDF location. For examples, useful\n     * for converting canvas pixel location into PDF one.\n     * @param x {number} X coordinate.\n     * @param y {number} Y coordinate.\n     * @returns {Object} Object that contains 'x' and 'y' properties of the\n     * point in the PDF coordinate space.\n     * @see {@link convertToViewportPoint}\n     */\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n})();\n\nvar PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  var i, n = str.length, strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    // UTF16BE BOM\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(\n        (str.charCodeAt(i) << 8) | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isInt(v) {\n  return typeof v === 'number' && ((v | 0) === v);\n}\n\nfunction isNum(v) {\n  return typeof v === 'number';\n}\n\nfunction isString(v) {\n  return typeof v === 'string';\n}\n\nfunction isName(v) {\n  return v instanceof Name;\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  if (!(v instanceof Dict)) {\n    return false;\n  }\n  if (!type) {\n    return true;\n  }\n  var dictType = v.get('Type');\n  return isName(dictType) && dictType.name === type;\n}\n\nfunction isArray(v) {\n  return v instanceof Array;\n}\n\nfunction isStream(v) {\n  return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n}\n\nfunction isRef(v) {\n  return v instanceof Ref;\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A promise object.\n * @property {function} resolve - Fullfills the promise.\n * @property {function} reject - Rejects the promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias PDFJS.createPromiseCapability\n *\n * @return {PromiseCapability} A capability object contains:\n * - a Promise, resolve and reject methods.\n */\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\n\nPDFJS.createPromiseCapability = createPromiseCapability;\n\n/**\n * Polyfill for Promises:\n * The following promise implementation tries to generally implement the\n * Promise/A+ spec. Some notable differences from other promise libaries are:\n * - There currently isn't a seperate deferred and promise object.\n * - Unhandled rejections eventually show an error if they aren't handled.\n *\n * Based off of the work in:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=810490\n */\n(function PromiseClosure() {\n  if (globalScope.Promise) {\n    // Promises existing in the DOM/Worker, checking presence of all/resolve\n    if (typeof globalScope.Promise.all !== 'function') {\n      globalScope.Promise.all = function (iterable) {\n        var count = 0, results = [], resolve, reject;\n        var promise = new globalScope.Promise(function (resolve_, reject_) {\n          resolve = resolve_;\n          reject = reject_;\n        });\n        iterable.forEach(function (p, i) {\n          count++;\n          p.then(function (result) {\n            results[i] = result;\n            count--;\n            if (count === 0) {\n              resolve(results);\n            }\n          }, reject);\n        });\n        if (count === 0) {\n          resolve(results);\n        }\n        return promise;\n      };\n    }\n    if (typeof globalScope.Promise.resolve !== 'function') {\n      globalScope.Promise.resolve = function (value) {\n        return new globalScope.Promise(function (resolve) { resolve(value); });\n      };\n    }\n    if (typeof globalScope.Promise.reject !== 'function') {\n      globalScope.Promise.reject = function (reason) {\n        return new globalScope.Promise(function (resolve, reject) {\n          reject(reason);\n        });\n      };\n    }\n    if (typeof globalScope.Promise.prototype.catch !== 'function') {\n      globalScope.Promise.prototype.catch = function (onReject) {\n        return globalScope.Promise.prototype.then(undefined, onReject);\n      };\n    }\n    return;\n  }\n  var STATUS_PENDING = 0;\n  var STATUS_RESOLVED = 1;\n  var STATUS_REJECTED = 2;\n\n  // In an attempt to avoid silent exceptions, unhandled rejections are\n  // tracked and if they aren't handled in a certain amount of time an\n  // error is logged.\n  var REJECTION_TIMEOUT = 500;\n\n  var HandlerManager = {\n    handlers: [],\n    running: false,\n    unhandledRejections: [],\n    pendingRejectionCheck: false,\n\n    scheduleHandlers: function scheduleHandlers(promise) {\n      if (promise._status === STATUS_PENDING) {\n        return;\n      }\n\n      this.handlers = this.handlers.concat(promise._handlers);\n      promise._handlers = [];\n\n      if (this.running) {\n        return;\n      }\n      this.running = true;\n\n      setTimeout(this.runHandlers.bind(this), 0);\n    },\n\n    runHandlers: function runHandlers() {\n      var RUN_TIMEOUT = 1; // ms\n      var timeoutAt = Date.now() + RUN_TIMEOUT;\n      while (this.handlers.length > 0) {\n        var handler = this.handlers.shift();\n\n        var nextStatus = handler.thisPromise._status;\n        var nextValue = handler.thisPromise._value;\n\n        try {\n          if (nextStatus === STATUS_RESOLVED) {\n            if (typeof handler.onResolve === 'function') {\n              nextValue = handler.onResolve(nextValue);\n            }\n          } else if (typeof handler.onReject === 'function') {\n              nextValue = handler.onReject(nextValue);\n              nextStatus = STATUS_RESOLVED;\n\n              if (handler.thisPromise._unhandledRejection) {\n                this.removeUnhandeledRejection(handler.thisPromise);\n              }\n          }\n        } catch (ex) {\n          nextStatus = STATUS_REJECTED;\n          nextValue = ex;\n        }\n\n        handler.nextPromise._updateStatus(nextStatus, nextValue);\n        if (Date.now() >= timeoutAt) {\n          break;\n        }\n      }\n\n      if (this.handlers.length > 0) {\n        setTimeout(this.runHandlers.bind(this), 0);\n        return;\n      }\n\n      this.running = false;\n    },\n\n    addUnhandledRejection: function addUnhandledRejection(promise) {\n      this.unhandledRejections.push({\n        promise: promise,\n        time: Date.now()\n      });\n      this.scheduleRejectionCheck();\n    },\n\n    removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n      promise._unhandledRejection = false;\n      for (var i = 0; i < this.unhandledRejections.length; i++) {\n        if (this.unhandledRejections[i].promise === promise) {\n          this.unhandledRejections.splice(i);\n          i--;\n        }\n      }\n    },\n\n    scheduleRejectionCheck: function scheduleRejectionCheck() {\n      if (this.pendingRejectionCheck) {\n        return;\n      }\n      this.pendingRejectionCheck = true;\n      setTimeout(function rejectionCheck() {\n        this.pendingRejectionCheck = false;\n        var now = Date.now();\n        for (var i = 0; i < this.unhandledRejections.length; i++) {\n          if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n            var unhandled = this.unhandledRejections[i].promise._value;\n            var msg = 'Unhandled rejection: ' + unhandled;\n            if (unhandled.stack) {\n              msg += '\\n' + unhandled.stack;\n            }\n            warn(msg);\n            this.unhandledRejections.splice(i);\n            i--;\n          }\n        }\n        if (this.unhandledRejections.length) {\n          this.scheduleRejectionCheck();\n        }\n      }.bind(this), REJECTION_TIMEOUT);\n    }\n  };\n\n  function Promise(resolver) {\n    this._status = STATUS_PENDING;\n    this._handlers = [];\n    try {\n      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /**\n   * Builds a promise that is resolved when all the passed in promises are\n   * resolved.\n   * @param {array} array of data and/or promises to wait for.\n   * @return {Promise} New dependant promise.\n   */\n  Promise.all = function Promise_all(promises) {\n    var resolveAll, rejectAll;\n    var deferred = new Promise(function (resolve, reject) {\n      resolveAll = resolve;\n      rejectAll = reject;\n    });\n    var unresolved = promises.length;\n    var results = [];\n    if (unresolved === 0) {\n      resolveAll(results);\n      return deferred;\n    }\n    function reject(reason) {\n      if (deferred._status === STATUS_REJECTED) {\n        return;\n      }\n      results = [];\n      rejectAll(reason);\n    }\n    for (var i = 0, ii = promises.length; i < ii; ++i) {\n      var promise = promises[i];\n      var resolve = (function(i) {\n        return function(value) {\n          if (deferred._status === STATUS_REJECTED) {\n            return;\n          }\n          results[i] = value;\n          unresolved--;\n          if (unresolved === 0) {\n            resolveAll(results);\n          }\n        };\n      })(i);\n      if (Promise.isPromise(promise)) {\n        promise.then(resolve, reject);\n      } else {\n        resolve(promise);\n      }\n    }\n    return deferred;\n  };\n\n  /**\n   * Checks if the value is likely a promise (has a 'then' function).\n   * @return {boolean} true if value is thenable\n   */\n  Promise.isPromise = function Promise_isPromise(value) {\n    return value && typeof value.then === 'function';\n  };\n\n  /**\n   * Creates resolved promise\n   * @param value resolve value\n   * @returns {Promise}\n   */\n  Promise.resolve = function Promise_resolve(value) {\n    return new Promise(function (resolve) { resolve(value); });\n  };\n\n  /**\n   * Creates rejected promise\n   * @param reason rejection value\n   * @returns {Promise}\n   */\n  Promise.reject = function Promise_reject(reason) {\n    return new Promise(function (resolve, reject) { reject(reason); });\n  };\n\n  Promise.prototype = {\n    _status: null,\n    _value: null,\n    _handlers: null,\n    _unhandledRejection: null,\n\n    _updateStatus: function Promise__updateStatus(status, value) {\n      if (this._status === STATUS_RESOLVED ||\n          this._status === STATUS_REJECTED) {\n        return;\n      }\n\n      if (status === STATUS_RESOLVED &&\n          Promise.isPromise(value)) {\n        value.then(this._updateStatus.bind(this, STATUS_RESOLVED),\n                   this._updateStatus.bind(this, STATUS_REJECTED));\n        return;\n      }\n\n      this._status = status;\n      this._value = value;\n\n      if (status === STATUS_REJECTED && this._handlers.length === 0) {\n        this._unhandledRejection = true;\n        HandlerManager.addUnhandledRejection(this);\n      }\n\n      HandlerManager.scheduleHandlers(this);\n    },\n\n    _resolve: function Promise_resolve(value) {\n      this._updateStatus(STATUS_RESOLVED, value);\n    },\n\n    _reject: function Promise_reject(reason) {\n      this._updateStatus(STATUS_REJECTED, reason);\n    },\n\n    then: function Promise_then(onResolve, onReject) {\n      var nextPromise = new Promise(function (resolve, reject) {\n        this.resolve = resolve;\n        this.reject = reject;\n      });\n      this._handlers.push({\n        thisPromise: this,\n        onResolve: onResolve,\n        onReject: onReject,\n        nextPromise: nextPromise\n      });\n      HandlerManager.scheduleHandlers(this);\n      return nextPromise;\n    },\n\n    catch: function Promise_catch(onReject) {\n      return this.then(undefined, onReject);\n    }\n  };\n\n  globalScope.Promise = Promise;\n})();\n\nvar StatTimer = (function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = {};\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      // Remove timer from started so it can be called again.\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      // Find the longest name for padding purposes.\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n})();\n\nPDFJS.createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  // Blob builder is deprecated in FF14 and removed in FF18.\n  var bb = new MozBlobBuilder();\n  bb.append(data);\n  return bb.getBlob(contentType);\n};\n\nPDFJS.createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  var digits =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  return function createObjectURL(data, contentType) {\n    if (!PDFJS.disableCreateObjectURL &&\n        typeof URL !== 'undefined' && URL.createObjectURL) {\n      var blob = PDFJS.createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2, d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      var d3 = i + 1 < ii ? ((b2 & 0xF) << 2) | (b3 >> 6) : 64;\n      var d4 = i + 2 < ii ? (b3 & 0x3F) : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nfunction MessageHandler(name, comObj) {\n  this.name = name;\n  this.comObj = comObj;\n  this.callbackIndex = 1;\n  this.postMessageTransfers = true;\n  var callbacksCapabilities = this.callbacksCapabilities = {};\n  var ah = this.actionHandler = {};\n\n  ah['console_log'] = [function ahConsoleLog(data) {\n    console.log.apply(console, data);\n  }];\n  ah['console_error'] = [function ahConsoleError(data) {\n    console.error.apply(console, data);\n  }];\n  ah['_unsupported_feature'] = [function ah_unsupportedFeature(data) {\n    UnsupportedManager.notify(data);\n  }];\n\n  comObj.onmessage = function messageHandlerComObjOnMessage(event) {\n    var data = event.data;\n    if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(data.error);\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            isReply: true,\n            callbackId: data.callbackId,\n            error: reason\n          });\n        });\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      error('Unknown action from worker: ' + data.action);\n    }\n  };\n}\n\nMessageHandler.prototype = {\n  on: function messageHandlerOn(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {String} actionName Action to call.\n   * @param {JSON} data JSON data to send.\n   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers\n   */\n  send: function messageHandlerSend(actionName, data, transfers) {\n    var message = {\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that other side will callback with the response.\n   * @param {String} actionName Action to call.\n   * @param {JSON} data JSON data to send.\n   * @param {Array} [transfers] Optional list of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise:\n    function messageHandlerSendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackIndex++;\n    var message = {\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  /**\n   * Sends raw message to the comObj.\n   * @private\n   * @param message {Object} Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   */\n  postMessage: function (message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n};\n\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = (function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  });\n  img.onerror = (function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  });\n  img.src = imageUrl;\n}\n\n\n/**\n * The maximum allowed image size in total pixels e.g. width * height. Images\n * above this value will not be drawn. Use -1 for no limit.\n * @var {number}\n */\nPDFJS.maxImageSize = (PDFJS.maxImageSize === undefined ?\n                      -1 : PDFJS.maxImageSize);\n\n/**\n * The url of where the predefined Adobe CMaps are located. Include trailing\n * slash.\n * @var {string}\n */\nPDFJS.cMapUrl = (PDFJS.cMapUrl === undefined ? null : PDFJS.cMapUrl);\n\n/**\n * Specifies if CMaps are binary packed.\n * @var {boolean}\n */\nPDFJS.cMapPacked = PDFJS.cMapPacked === undefined ? false : PDFJS.cMapPacked;\n\n/**\n * By default fonts are converted to OpenType fonts and loaded via font face\n * rules. If disabled, the font will be rendered using a built in font renderer\n * that constructs the glyphs with primitive path commands.\n * @var {boolean}\n */\nPDFJS.disableFontFace = (PDFJS.disableFontFace === undefined ?\n                         false : PDFJS.disableFontFace);\n\n/**\n * Path for image resources, mainly for annotation icons. Include trailing\n * slash.\n * @var {string}\n */\nPDFJS.imageResourcesPath = (PDFJS.imageResourcesPath === undefined ?\n                            '' : PDFJS.imageResourcesPath);\n\n/**\n * Disable the web worker and run all code on the main thread. This will happen\n * automatically if the browser doesn't support workers or sending typed arrays\n * to workers.\n * @var {boolean}\n */\nPDFJS.disableWorker = (PDFJS.disableWorker === undefined ?\n                       false : PDFJS.disableWorker);\n\n/**\n * Path and filename of the worker file. Required when the worker is enabled in\n * development mode. If unspecified in the production build, the worker will be\n * loaded based on the location of the pdf.js file.\n * @var {string}\n */\nPDFJS.workerSrc = (PDFJS.workerSrc === undefined ? null : PDFJS.workerSrc);\n\n/**\n * Disable range request loading of PDF files. When enabled and if the server\n * supports partial content requests then the PDF will be fetched in chunks.\n * Enabled (false) by default.\n * @var {boolean}\n */\nPDFJS.disableRange = (PDFJS.disableRange === undefined ?\n                      false : PDFJS.disableRange);\n\n/**\n * Disable streaming of PDF file data. By default PDF.js attempts to load PDF\n * in chunks. This default behavior can be disabled.\n * @var {boolean}\n */\nPDFJS.disableStream = (PDFJS.disableStream === undefined ?\n                       false : PDFJS.disableStream);\n\n/**\n * Disable pre-fetching of PDF file data. When range requests are enabled PDF.js\n * will automatically keep fetching more data even if it isn't needed to display\n * the current page. This default behavior can be disabled.\n *\n * NOTE: It is also necessary to disable streaming, see above,\n *       in order for disabling of pre-fetching to work correctly.\n * @var {boolean}\n */\nPDFJS.disableAutoFetch = (PDFJS.disableAutoFetch === undefined ?\n                          false : PDFJS.disableAutoFetch);\n\n/**\n * Enables special hooks for debugging PDF.js.\n * @var {boolean}\n */\nPDFJS.pdfBug = (PDFJS.pdfBug === undefined ? false : PDFJS.pdfBug);\n\n/**\n * Enables transfer usage in postMessage for ArrayBuffers.\n * @var {boolean}\n */\nPDFJS.postMessageTransfers = (PDFJS.postMessageTransfers === undefined ?\n                              true : PDFJS.postMessageTransfers);\n\n/**\n * Disables URL.createObjectURL usage.\n * @var {boolean}\n */\nPDFJS.disableCreateObjectURL = (PDFJS.disableCreateObjectURL === undefined ?\n                                false : PDFJS.disableCreateObjectURL);\n\n/**\n * Disables WebGL usage.\n * @var {boolean}\n */\nPDFJS.disableWebGL = (PDFJS.disableWebGL === undefined ?\n                      true : PDFJS.disableWebGL);\n\n/**\n * Disables fullscreen support, and by extension Presentation Mode,\n * in browsers which support the fullscreen API.\n * @var {boolean}\n */\nPDFJS.disableFullscreen = (PDFJS.disableFullscreen === undefined ?\n                           false : PDFJS.disableFullscreen);\n\n/**\n * Enables CSS only zooming.\n * @var {boolean}\n */\nPDFJS.useOnlyCssZoom = (PDFJS.useOnlyCssZoom === undefined ?\n                        false : PDFJS.useOnlyCssZoom);\n\n/**\n * Controls the logging level.\n * The constants from PDFJS.VERBOSITY_LEVELS should be used:\n * - errors\n * - warnings [default]\n * - infos\n * @var {number}\n */\nPDFJS.verbosity = (PDFJS.verbosity === undefined ?\n                   PDFJS.VERBOSITY_LEVELS.warnings : PDFJS.verbosity);\n\n/**\n * The maximum supported canvas size in total pixels e.g. width * height.\n * The default value is 4096 * 4096. Use -1 for no limit.\n * @var {number}\n */\nPDFJS.maxCanvasPixels = (PDFJS.maxCanvasPixels === undefined ?\n                         16777216 : PDFJS.maxCanvasPixels);\n\n/**\n * Opens external links in a new window if enabled. The default behavior opens\n * external links in the PDF.js window.\n * @var {boolean}\n */\nPDFJS.openExternalLinksInNewWindow = (\n  PDFJS.openExternalLinksInNewWindow === undefined ?\n    false : PDFJS.openExternalLinksInNewWindow);\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     url   - The URL of the PDF.\n * @property {TypedArray|Array|string} data - Binary PDF data. Use typed arrays\n *   (Uint8Array) to improve the memory usage. If PDF data is BASE64-encoded,\n *   use atob() to convert it to a binary string first.\n * @property {Object}     httpHeaders - Basic authentication headers.\n * @property {boolean}    withCredentials - Indicates whether or not cross-site\n *   Access-Control requests should be made using credentials such as cookies\n *   or authorization headers. The default is false.\n * @property {string}     password - For decrypting password-protected PDFs.\n * @property {TypedArray} initialData - A typed array with the first portion or\n *   all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     length - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} range\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Array} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Array} fontTypes - Used font type in the document (an item is set\n *   to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n *\n * @param {PDFDataRangeTransport} pdfDataRangeTransport (deprecated) It is used\n * if you want to manually serve range requests for data in the PDF.\n *\n * @param {function} passwordCallback (deprecated) It is used to request a\n * password if wrong or no password was provided. The callback receives two\n * parameters: function that needs to be called with new password and reason\n * (see {PasswordResponses}).\n *\n * @param {function} progressCallback (deprecated) It is used to be able to\n * monitor the loading progress of the PDF file (necessary to implement e.g.\n * a loading bar). The callback receives an {Object} with the properties:\n * {number} loaded and {number} total.\n *\n * @return {PDFDocumentLoadingTask}\n */\nPDFJS.getDocument = function getDocument(src,\n                                         pdfDataRangeTransport,\n                                         passwordCallback,\n                                         progressCallback) {\n  var task = new PDFDocumentLoadingTask();\n\n  // Support of the obsolete arguments (for compatibility with API v1.0)\n  if (pdfDataRangeTransport) {\n    if (!(pdfDataRangeTransport instanceof PDFDataRangeTransport)) {\n      // Not a PDFDataRangeTransport instance, trying to add missing properties.\n      pdfDataRangeTransport = Object.create(pdfDataRangeTransport);\n      pdfDataRangeTransport.length = src.length;\n      pdfDataRangeTransport.initialData = src.initialData;\n    }\n    src = Object.create(src);\n    src.range = pdfDataRangeTransport;\n  }\n  task.onPassword = passwordCallback || null;\n  task.onProgress = progressCallback || null;\n\n  var workerInitializedCapability, transport;\n  var source;\n  if (typeof src === 'string') {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== 'object') {\n      error('Invalid parameter in getDocument, need either Uint8Array, ' +\n        'string or a parameter object');\n    }\n    if (!src.url && !src.data && !src.range) {\n      error('Invalid parameter object: need either .data, .range or .url');\n    }\n\n    source = src;\n  }\n\n  var params = {};\n  for (var key in source) {\n    if (key === 'url' && typeof window !== 'undefined') {\n      // The full path is required in the 'url' field.\n      params[key] = combineUrl(window.location.href, source[key]);\n      continue;\n    } else if (key === 'range') {\n      continue;\n    } else if (key === 'data' && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      var pdfBytes = source[key];\n      if (typeof pdfBytes === 'string') {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (typeof pdfBytes === 'object' && pdfBytes !== null &&\n                 !isNaN(pdfBytes.length)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        error('Invalid PDF binary data: either typed array, string or ' +\n              'array-like object is expected in the data property.');\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  workerInitializedCapability = createPromiseCapability();\n  transport = new WorkerTransport(workerInitializedCapability, source.range);\n  workerInitializedCapability.promise.then(function transportInitialized() {\n    transport.fetchDocument(task, params);\n  });\n\n  return task;\n};\n\n/**\n * PDF document loading operation.\n * @class\n */\nvar PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  /** @constructs PDFDocumentLoadingTask */\n  function PDFDocumentLoadingTask() {\n    this._capability = createPromiseCapability();\n\n    /**\n     * Callback to request a password if wrong or no password was provided.\n     * The callback receives two parameters: function that needs to be called\n     * with new password and reason (see {PasswordResponses}).\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar). The callback receives\n     * an {Object} with the properties: {number} loaded and {number} total.\n     */\n    this.onProgress = null;\n  }\n\n  PDFDocumentLoadingTask.prototype =\n      /** @lends PDFDocumentLoadingTask.prototype */ {\n    /**\n     * @return {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    },\n\n    // TODO add cancel or abort method\n\n    /**\n     * Registers callbacks to indicate the document loading completion.\n     *\n     * @param {function} onFulfilled The callback for the loading completion.\n     * @param {function} onRejected The callback for the loading failure.\n     * @return {Promise} A promise that is resolved after the onFulfilled or\n     *                   onRejected callback.\n     */\n    then: function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }\n  };\n\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @class\n */\nvar PDFDataRangeTransport = (function pdfDataRangeTransportClosure() {\n  /**\n   * @constructs PDFDataRangeTransport\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   */\n  function PDFDataRangeTransport(length, initialData) {\n    this.length = length;\n    this.initialData = initialData;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n  PDFDataRangeTransport.prototype =\n      /** @lends PDFDataRangeTransport.prototype */ {\n    addRangeListener:\n        function PDFDataRangeTransport_addRangeListener(listener) {\n      this._rangeListeners.push(listener);\n    },\n\n    addProgressListener:\n        function PDFDataRangeTransport_addProgressListener(listener) {\n      this._progressListeners.push(listener);\n    },\n\n    addProgressiveReadListener:\n        function PDFDataRangeTransport_addProgressiveReadListener(listener) {\n      this._progressiveReadListeners.push(listener);\n    },\n\n    onDataRange: function PDFDataRangeTransport_onDataRange(begin, chunk) {\n      var listeners = this._rangeListeners;\n      for (var i = 0, n = listeners.length; i < n; ++i) {\n        listeners[i](begin, chunk);\n      }\n    },\n\n    onDataProgress: function PDFDataRangeTransport_onDataProgress(loaded) {\n      this._readyCapability.promise.then(function () {\n        var listeners = this._progressListeners;\n        for (var i = 0, n = listeners.length; i < n; ++i) {\n          listeners[i](loaded);\n        }\n      }.bind(this));\n    },\n\n    onDataProgressiveRead:\n        function PDFDataRangeTransport_onDataProgress(chunk) {\n      this._readyCapability.promise.then(function () {\n        var listeners = this._progressiveReadListeners;\n        for (var i = 0, n = listeners.length; i < n; ++i) {\n          listeners[i](chunk);\n        }\n      }.bind(this));\n    },\n\n    transportReady: function PDFDataRangeTransport_transportReady() {\n      this._readyCapability.resolve();\n    },\n\n    requestDataRange:\n        function PDFDataRangeTransport_requestDataRange(begin, end) {\n      throw new Error('Abstract method PDFDataRangeTransport.requestDataRange');\n    }\n  };\n  return PDFDataRangeTransport;\n})();\n\nPDFJS.PDFDataRangeTransport = PDFDataRangeTransport;\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n * @class\n */\nvar PDFDocumentProxy = (function PDFDocumentProxyClosure() {\n  function PDFDocumentProxy(pdfInfo, transport) {\n    this.pdfInfo = pdfInfo;\n    this.transport = transport;\n  }\n  PDFDocumentProxy.prototype = /** @lends PDFDocumentProxy.prototype */ {\n    /**\n     * @return {number} Total number of pages the PDF contains.\n     */\n    get numPages() {\n      return this.pdfInfo.numPages;\n    },\n    /**\n     * @return {string} A unique ID to identify a PDF. Not guaranteed to be\n     * unique.\n     */\n    get fingerprint() {\n      return this.pdfInfo.fingerprint;\n    },\n    /**\n     * @param {number} pageNumber The page number to get. The first page is 1.\n     * @return {Promise} A promise that is resolved with a {@link PDFPageProxy}\n     * object.\n     */\n    getPage: function PDFDocumentProxy_getPage(pageNumber) {\n      return this.transport.getPage(pageNumber);\n    },\n    /**\n     * @param {{num: number, gen: number}} ref The page reference. Must have\n     *   the 'num' and 'gen' properties.\n     * @return {Promise} A promise that is resolved with the page index that is\n     * associated with the reference.\n     */\n    getPageIndex: function PDFDocumentProxy_getPageIndex(ref) {\n      return this.transport.getPageIndex(ref);\n    },\n    /**\n     * @return {Promise} A promise that is resolved with a lookup table for\n     * mapping named destinations to reference numbers.\n     *\n     * This can be slow for large documents: use getDestination instead\n     */\n    getDestinations: function PDFDocumentProxy_getDestinations() {\n      return this.transport.getDestinations();\n    },\n    /**\n     * @param {string} id The named destination to get.\n     * @return {Promise} A promise that is resolved with all information\n     * of the given named destination.\n     */\n    getDestination: function PDFDocumentProxy_getDestination(id) {\n      return this.transport.getDestination(id);\n    },\n    /**\n     * @return {Promise} A promise that is resolved with a lookup table for\n     * mapping named attachments to their content.\n     */\n    getAttachments: function PDFDocumentProxy_getAttachments() {\n      return this.transport.getAttachments();\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an array of all the\n     * JavaScript strings in the name tree.\n     */\n    getJavaScript: function PDFDocumentProxy_getJavaScript() {\n      return this.transport.getJavaScript();\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {Array} that is a\n     * tree outline (if it has one) of the PDF. The tree is in the format of:\n     * [\n     *  {\n     *   title: string,\n     *   bold: boolean,\n     *   italic: boolean,\n     *   color: rgb array,\n     *   dest: dest obj,\n     *   items: array of more items like this\n     *  },\n     *  ...\n     * ].\n     */\n    getOutline: function PDFDocumentProxy_getOutline() {\n      return this.transport.getOutline();\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {Object} that has\n     * info and metadata properties.  Info is an {Object} filled with anything\n     * available in the information dictionary and similarly metadata is a\n     * {Metadata} object with information from the metadata section of the PDF.\n     */\n    getMetadata: function PDFDocumentProxy_getMetadata() {\n      return this.transport.getMetadata();\n    },\n    /**\n     * @return {Promise} A promise that is resolved with a TypedArray that has\n     * the raw data from the PDF.\n     */\n    getData: function PDFDocumentProxy_getData() {\n      return this.transport.getData();\n    },\n    /**\n     * @return {Promise} A promise that is resolved when the document's data\n     * is loaded. It is resolved with an {Object} that contains the length\n     * property that indicates size of the PDF data in bytes.\n     */\n    getDownloadInfo: function PDFDocumentProxy_getDownloadInfo() {\n      return this.transport.downloadInfoCapability.promise;\n    },\n    /**\n     * @return {Promise} A promise this is resolved with current stats about\n     * document structures (see {@link PDFDocumentStats}).\n     */\n    getStats: function PDFDocumentProxy_getStats() {\n      return this.transport.getStats();\n    },\n    /**\n     * Cleans up resources allocated by the document, e.g. created @font-face.\n     */\n    cleanup: function PDFDocumentProxy_cleanup() {\n      this.transport.startCleanup();\n    },\n    /**\n     * Destroys current document instance and terminates worker.\n     */\n    destroy: function PDFDocumentProxy_destroy() {\n      this.transport.destroy();\n    }\n  };\n  return PDFDocumentProxy;\n})();\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyles} objects, indexed by font\n *                    name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PDFJS.PageViewport} viewport - Rendering viewport obtained by\n *                                calling of PDFPage.getViewport method.\n * @property {string} intent - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {Object} imageLayer - (optional) An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {function} continueCallback - (deprecated) A function that will be\n *                      called each time the rendering is paused.  To continue\n *                      rendering call the function that is the first argument\n *                      to the callback.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @class\n */\nvar PDFPageProxy = (function PDFPageProxyClosure() {\n  function PDFPageProxy(pageIndex, pageInfo, transport) {\n    this.pageIndex = pageIndex;\n    this.pageInfo = pageInfo;\n    this.transport = transport;\n    this.stats = new StatTimer();\n    this.stats.enabled = !!globalScope.PDFJS.enableStats;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this.cleanupAfterRender = false;\n    this.pendingDestroy = false;\n    this.intentStates = {};\n  }\n  PDFPageProxy.prototype = /** @lends PDFPageProxy.prototype */ {\n    /**\n     * @return {number} Page number of the page. First page is 1.\n     */\n    get pageNumber() {\n      return this.pageIndex + 1;\n    },\n    /**\n     * @return {number} The number of degrees the page is rotated clockwise.\n     */\n    get rotate() {\n      return this.pageInfo.rotate;\n    },\n    /**\n     * @return {Object} The reference that points to this page. It has 'num' and\n     * 'gen' properties.\n     */\n    get ref() {\n      return this.pageInfo.ref;\n    },\n    /**\n     * @return {Array} An array of the visible portion of the PDF page in the\n     * user space units - [x1, y1, x2, y2].\n     */\n    get view() {\n      return this.pageInfo.view;\n    },\n    /**\n     * @param {number} scale The desired scale of the viewport.\n     * @param {number} rotate Degrees to rotate the viewport. If omitted this\n     * defaults to the page rotation.\n     * @return {PDFJS.PageViewport} Contains 'width' and 'height' properties\n     * along with transforms required for rendering.\n     */\n    getViewport: function PDFPageProxy_getViewport(scale, rotate) {\n      if (arguments.length < 2) {\n        rotate = this.rotate;\n      }\n      return new PDFJS.PageViewport(this.view, scale, rotate, 0, 0);\n    },\n    /**\n     * @return {Promise} A promise that is resolved with an {Array} of the\n     * annotation objects.\n     */\n    getAnnotations: function PDFPageProxy_getAnnotations() {\n      if (this.annotationsPromise) {\n        return this.annotationsPromise;\n      }\n\n      var promise = this.transport.getAnnotations(this.pageIndex);\n      this.annotationsPromise = promise;\n      return promise;\n    },\n    /**\n     * Begins the process of rendering a page to the desired context.\n     * @param {RenderParameters} params Page render parameters.\n     * @return {RenderTask} An object that contains the promise, which\n     *                      is resolved when the page finishes rendering.\n     */\n    render: function PDFPageProxy_render(params) {\n      var stats = this.stats;\n      stats.time('Overall');\n\n      // If there was a pending destroy cancel it so no cleanup happens during\n      // this call to render.\n      this.pendingDestroy = false;\n\n      var renderingIntent = (params.intent === 'print' ? 'print' : 'display');\n\n      if (!this.intentStates[renderingIntent]) {\n        this.intentStates[renderingIntent] = {};\n      }\n      var intentState = this.intentStates[renderingIntent];\n\n      // If there's no displayReadyCapability yet, then the operatorList\n      // was never requested before. Make the request and create the promise.\n      if (!intentState.displayReadyCapability) {\n        intentState.receivingOperatorList = true;\n        intentState.displayReadyCapability = createPromiseCapability();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.stats.time('Page Request');\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageNumber - 1,\n          intent: renderingIntent\n        });\n      }\n\n      var internalRenderTask = new InternalRenderTask(complete, params,\n                                                      this.objs,\n                                                      this.commonObjs,\n                                                      intentState.operatorList,\n                                                      this.pageNumber);\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n      intentState.renderTasks.push(internalRenderTask);\n      var renderTask = internalRenderTask.task;\n\n      // Obsolete parameter support\n      if (params.continueCallback) {\n        renderTask.onContinue = params.continueCallback;\n      }\n\n      var self = this;\n      intentState.displayReadyCapability.promise.then(\n        function pageDisplayReadyPromise(transparency) {\n          if (self.pendingDestroy) {\n            complete();\n            return;\n          }\n          stats.time('Rendering');\n          internalRenderTask.initalizeGraphics(transparency);\n          internalRenderTask.operatorListChanged();\n        },\n        function pageDisplayReadPromiseError(reason) {\n          complete(reason);\n        }\n      );\n\n      function complete(error) {\n        var i = intentState.renderTasks.indexOf(internalRenderTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (self.cleanupAfterRender) {\n          self.pendingDestroy = true;\n        }\n        self._tryDestroy();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n        stats.timeEnd('Rendering');\n        stats.timeEnd('Overall');\n      }\n\n      return renderTask;\n    },\n\n    /**\n     * @return {Promise} A promise resolved with an {@link PDFOperatorList}\n     * object that represents page's operator list.\n     */\n    getOperatorList: function PDFPageProxy_getOperatorList() {\n      function operatorListChanged() {\n        if (intentState.operatorList.lastChunk) {\n          intentState.opListReadCapability.resolve(intentState.operatorList);\n        }\n      }\n\n      var renderingIntent = 'oplist';\n      if (!this.intentStates[renderingIntent]) {\n        this.intentStates[renderingIntent] = {};\n      }\n      var intentState = this.intentStates[renderingIntent];\n\n      if (!intentState.opListReadCapability) {\n        var opListTask = {};\n        opListTask.operatorListChanged = operatorListChanged;\n        intentState.receivingOperatorList = true;\n        intentState.opListReadCapability = createPromiseCapability();\n        intentState.renderTasks = [];\n        intentState.renderTasks.push(opListTask);\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        this.transport.messageHandler.send('RenderPageRequest', {\n          pageIndex: this.pageIndex,\n          intent: renderingIntent\n        });\n      }\n      return intentState.opListReadCapability.promise;\n    },\n\n    /**\n     * @return {Promise} That is resolved a {@link TextContent}\n     * object that represent the page text content.\n     */\n    getTextContent: function PDFPageProxy_getTextContent() {\n      return this.transport.messageHandler.sendWithPromise('GetTextContent', {\n        pageIndex: this.pageNumber - 1\n      });\n    },\n    /**\n     * Destroys resources allocated by the page.\n     */\n    destroy: function PDFPageProxy_destroy() {\n      this.pendingDestroy = true;\n      this._tryDestroy();\n    },\n    /**\n     * For internal use only. Attempts to clean up if rendering is in a state\n     * where that's possible.\n     * @ignore\n     */\n    _tryDestroy: function PDFPageProxy__destroy() {\n      if (!this.pendingDestroy ||\n          Object.keys(this.intentStates).some(function(intent) {\n            var intentState = this.intentStates[intent];\n            return (intentState.renderTasks.length !== 0 ||\n                    intentState.receivingOperatorList);\n          }, this)) {\n        return;\n      }\n\n      Object.keys(this.intentStates).forEach(function(intent) {\n        delete this.intentStates[intent];\n      }, this);\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this.pendingDestroy = false;\n    },\n    /**\n     * For internal use only.\n     * @ignore\n     */\n    _startRenderPage: function PDFPageProxy_startRenderPage(transparency,\n                                                            intent) {\n      var intentState = this.intentStates[intent];\n      // TODO Refactor RenderPageRequest to separate rendering\n      // and operator list logic\n      if (intentState.displayReadyCapability) {\n        intentState.displayReadyCapability.resolve(transparency);\n      }\n    },\n    /**\n     * For internal use only.\n     * @ignore\n     */\n    _renderPageChunk: function PDFPageProxy_renderPageChunk(operatorListChunk,\n                                                            intent) {\n      var intentState = this.intentStates[intent];\n      var i, ii;\n      // Add the new chunk to the current operator list.\n      for (i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        intentState.operatorList.argsArray.push(\n          operatorListChunk.argsArray[i]);\n      }\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      // Notify all the rendering tasks there are more operators to be consumed.\n      for (i = 0; i < intentState.renderTasks.length; i++) {\n        intentState.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        intentState.receivingOperatorList = false;\n        this._tryDestroy();\n      }\n    }\n  };\n  return PDFPageProxy;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nvar WorkerTransport = (function WorkerTransportClosure() {\n  function WorkerTransport(workerInitializedCapability, pdfDataRangeTransport) {\n    this.pdfDataRangeTransport = pdfDataRangeTransport;\n    this.workerInitializedCapability = workerInitializedCapability;\n    this.commonObjs = new PDFObjects();\n\n    this.loadingTask = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fullfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an Uint8Array\n    // as it arrives on the worker. Chrome added this with version 15.\n    if (!globalScope.PDFJS.disableWorker && typeof Worker !== 'undefined') {\n      var workerSrc = PDFJS.workerSrc;\n      if (!workerSrc) {\n        error('No PDFJS.workerSrc specified');\n      }\n\n      try {\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        var worker = new Worker(workerSrc);\n        var messageHandler = new MessageHandler('main', worker);\n        this.messageHandler = messageHandler;\n\n        messageHandler.on('test', function transportTest(data) {\n          var supportTypedArray = data && data.supportTypedArray;\n          if (supportTypedArray) {\n            this.worker = worker;\n            if (!data.supportTransfers) {\n              PDFJS.postMessageTransfers = false;\n            }\n            this.setupMessageHandler(messageHandler);\n            workerInitializedCapability.resolve();\n          } else {\n            this.setupFakeWorker();\n          }\n        }.bind(this));\n\n        var testObj = new Uint8Array([PDFJS.postMessageTransfers ? 255 : 0]);\n        // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n        // typed array. Also, checking if we can use transfers.\n        try {\n          messageHandler.send('test', testObj, [testObj.buffer]);\n        } catch (ex) {\n          info('Cannot use postMessage transfers');\n          testObj[0] = 0;\n          messageHandler.send('test', testObj);\n        }\n        return;\n      } catch (e) {\n        info('The worker has been disabled.');\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this.setupFakeWorker();\n  }\n  WorkerTransport.prototype = {\n    destroy: function WorkerTransport_destroy() {\n      this.pageCache = [];\n      this.pagePromises = [];\n      var self = this;\n      this.messageHandler.sendWithPromise('Terminate', null).then(function () {\n        FontLoader.clear();\n        if (self.worker) {\n          self.worker.terminate();\n        }\n      });\n    },\n\n    setupFakeWorker: function WorkerTransport_setupFakeWorker() {\n      globalScope.PDFJS.disableWorker = true;\n\n      if (!PDFJS.fakeWorkerFilesLoadedCapability) {\n        PDFJS.fakeWorkerFilesLoadedCapability = createPromiseCapability();\n        // In the developer build load worker_loader which in turn loads all the\n        // other files and resolves the promise. In production only the\n        // pdf.worker.js file is needed.\n        Util.loadScript(PDFJS.workerSrc, function() {\n          PDFJS.fakeWorkerFilesLoadedCapability.resolve();\n        });\n      }\n      PDFJS.fakeWorkerFilesLoadedCapability.promise.then(function () {\n        warn('Setting up fake worker.');\n        // If we don't use a worker, just post/sendMessage to the main thread.\n        var fakeWorker = {\n          postMessage: function WorkerTransport_postMessage(obj) {\n            fakeWorker.onmessage({data: obj});\n          },\n          terminate: function WorkerTransport_terminate() {}\n        };\n\n        var messageHandler = new MessageHandler('main', fakeWorker);\n        this.setupMessageHandler(messageHandler);\n\n        // If the main thread is our worker, setup the handling for the messages\n        // the main thread sends to it self.\n        PDFJS.WorkerMessageHandler.setup(messageHandler);\n\n        this.workerInitializedCapability.resolve();\n      }.bind(this));\n    },\n\n    setupMessageHandler:\n      function WorkerTransport_setupMessageHandler(messageHandler) {\n      this.messageHandler = messageHandler;\n\n      function updatePassword(password) {\n        messageHandler.send('UpdatePassword', password);\n      }\n\n      var pdfDataRangeTransport = this.pdfDataRangeTransport;\n      if (pdfDataRangeTransport) {\n        pdfDataRangeTransport.addRangeListener(function(begin, chunk) {\n          messageHandler.send('OnDataRange', {\n            begin: begin,\n            chunk: chunk\n          });\n        });\n\n        pdfDataRangeTransport.addProgressListener(function(loaded) {\n          messageHandler.send('OnDataProgress', {\n            loaded: loaded\n          });\n        });\n\n        pdfDataRangeTransport.addProgressiveReadListener(function(chunk) {\n          messageHandler.send('OnDataRange', {\n            chunk: chunk\n          });\n        });\n\n        messageHandler.on('RequestDataRange',\n          function transportDataRange(data) {\n            pdfDataRangeTransport.requestDataRange(data.begin, data.end);\n          }, this);\n      }\n\n      messageHandler.on('GetDoc', function transportDoc(data) {\n        var pdfInfo = data.pdfInfo;\n        this.numPages = data.pdfInfo.numPages;\n        var pdfDocument = new PDFDocumentProxy(pdfInfo, this);\n        this.pdfDocument = pdfDocument;\n        this.loadingTask._capability.resolve(pdfDocument);\n      }, this);\n\n      messageHandler.on('NeedPassword',\n                        function transportNeedPassword(exception) {\n        var loadingTask = this.loadingTask;\n        if (loadingTask.onPassword) {\n          return loadingTask.onPassword(updatePassword,\n                                        PasswordResponses.NEED_PASSWORD);\n        }\n        loadingTask._capability.reject(\n          new PasswordException(exception.message, exception.code));\n      }, this);\n\n      messageHandler.on('IncorrectPassword',\n                        function transportIncorrectPassword(exception) {\n        var loadingTask = this.loadingTask;\n        if (loadingTask.onPassword) {\n          return loadingTask.onPassword(updatePassword,\n                                        PasswordResponses.INCORRECT_PASSWORD);\n        }\n        loadingTask._capability.reject(\n          new PasswordException(exception.message, exception.code));\n      }, this);\n\n      messageHandler.on('InvalidPDF', function transportInvalidPDF(exception) {\n        this.loadingTask._capability.reject(\n          new InvalidPDFException(exception.message));\n      }, this);\n\n      messageHandler.on('MissingPDF', function transportMissingPDF(exception) {\n        this.loadingTask._capability.reject(\n          new MissingPDFException(exception.message));\n      }, this);\n\n      messageHandler.on('UnexpectedResponse',\n                        function transportUnexpectedResponse(exception) {\n        this.loadingTask._capability.reject(\n          new UnexpectedResponseException(exception.message, exception.status));\n      }, this);\n\n      messageHandler.on('UnknownError',\n                        function transportUnknownError(exception) {\n        this.loadingTask._capability.reject(\n          new UnknownErrorException(exception.message, exception.details));\n      }, this);\n\n      messageHandler.on('DataLoaded', function transportPage(data) {\n        this.downloadInfoCapability.resolve(data);\n      }, this);\n\n      messageHandler.on('PDFManagerReady', function transportPage(data) {\n        if (this.pdfDataRangeTransport) {\n          this.pdfDataRangeTransport.transportReady();\n        }\n      }, this);\n\n      messageHandler.on('StartRenderPage', function transportRender(data) {\n        var page = this.pageCache[data.pageIndex];\n\n        page.stats.timeEnd('Page Request');\n        page._startRenderPage(data.transparency, data.intent);\n      }, this);\n\n      messageHandler.on('RenderPageChunk', function transportRender(data) {\n        var page = this.pageCache[data.pageIndex];\n\n        page._renderPageChunk(data.operatorList, data.intent);\n      }, this);\n\n      messageHandler.on('commonobj', function transportObj(data) {\n        var id = data[0];\n        var type = data[1];\n        if (this.commonObjs.hasData(id)) {\n          return;\n        }\n\n        switch (type) {\n          case 'Font':\n            var exportedData = data[2];\n\n            var font;\n            if ('error' in exportedData) {\n              var error = exportedData.error;\n              warn('Error during font loading: ' + error);\n              this.commonObjs.resolve(id, error);\n              break;\n            } else {\n              font = new FontFaceObject(exportedData);\n            }\n\n            FontLoader.bind(\n              [font],\n              function fontReady(fontObjs) {\n                this.commonObjs.resolve(id, font);\n              }.bind(this)\n            );\n            break;\n          case 'FontPath':\n            this.commonObjs.resolve(id, data[2]);\n            break;\n          default:\n            error('Got unknown common object type ' + type);\n        }\n      }, this);\n\n      messageHandler.on('obj', function transportObj(data) {\n        var id = data[0];\n        var pageIndex = data[1];\n        var type = data[2];\n        var pageProxy = this.pageCache[pageIndex];\n        var imageData;\n        if (pageProxy.objs.hasData(id)) {\n          return;\n        }\n\n        switch (type) {\n          case 'JpegStream':\n            imageData = data[3];\n            loadJpegStream(id, imageData, pageProxy.objs);\n            break;\n          case 'Image':\n            imageData = data[3];\n            pageProxy.objs.resolve(id, imageData);\n\n            // heuristics that will allow not to store large data\n            var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n            if (imageData && 'data' in imageData &&\n                imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n              pageProxy.cleanupAfterRender = true;\n            }\n            break;\n          default:\n            error('Got unknown object type ' + type);\n        }\n      }, this);\n\n      messageHandler.on('DocProgress', function transportDocProgress(data) {\n        var loadingTask = this.loadingTask;\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.loaded,\n            total: data.total\n          });\n        }\n      }, this);\n\n      messageHandler.on('PageError', function transportError(data) {\n        var page = this.pageCache[data.pageNum - 1];\n        var intentState = page.intentStates[data.intent];\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(data.error);\n        } else {\n          error(data.error);\n        }\n      }, this);\n\n      messageHandler.on('JpegDecode', function(data) {\n        var imageUrl = data[0];\n        var components = data[1];\n        if (components !== 3 && components !== 1) {\n          return Promise.reject(\n            new Error('Only 3 components or 1 component can be returned'));\n        }\n\n        return new Promise(function (resolve, reject) {\n          var img = new Image();\n          img.onload = function () {\n            var width = img.width;\n            var height = img.height;\n            var size = width * height;\n            var rgbaLength = size * 4;\n            var buf = new Uint8Array(size * components);\n            var tmpCanvas = createScratchCanvas(width, height);\n            var tmpCtx = tmpCanvas.getContext('2d');\n            tmpCtx.drawImage(img, 0, 0);\n            var data = tmpCtx.getImageData(0, 0, width, height).data;\n            var i, j;\n\n            if (components === 3) {\n              for (i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\n                buf[j] = data[i];\n                buf[j + 1] = data[i + 1];\n                buf[j + 2] = data[i + 2];\n              }\n            } else if (components === 1) {\n              for (i = 0, j = 0; i < rgbaLength; i += 4, j++) {\n                buf[j] = data[i];\n              }\n            }\n            resolve({ data: buf, width: width, height: height});\n          };\n          img.onerror = function () {\n            reject(new Error('JpegDecode failed to load image'));\n          };\n          img.src = imageUrl;\n        });\n      });\n    },\n\n    fetchDocument: function WorkerTransport_fetchDocument(loadingTask, source) {\n      this.loadingTask = loadingTask;\n\n      source.disableAutoFetch = PDFJS.disableAutoFetch;\n      source.disableStream = PDFJS.disableStream;\n      source.chunkedViewerLoading = !!this.pdfDataRangeTransport;\n      if (this.pdfDataRangeTransport) {\n        source.length = this.pdfDataRangeTransport.length;\n        source.initialData = this.pdfDataRangeTransport.initialData;\n      }\n      this.messageHandler.send('GetDocRequest', {\n        source: source,\n        disableRange: PDFJS.disableRange,\n        maxImageSize: PDFJS.maxImageSize,\n        cMapUrl: PDFJS.cMapUrl,\n        cMapPacked: PDFJS.cMapPacked,\n        disableFontFace: PDFJS.disableFontFace,\n        disableCreateObjectURL: PDFJS.disableCreateObjectURL,\n        verbosity: PDFJS.verbosity\n      });\n    },\n\n    getData: function WorkerTransport_getData() {\n      return this.messageHandler.sendWithPromise('GetData', null);\n    },\n\n    getPage: function WorkerTransport_getPage(pageNumber, capability) {\n      if (pageNumber <= 0 || pageNumber > this.numPages ||\n          (pageNumber|0) !== pageNumber) {\n        return Promise.reject(new Error('Invalid page request'));\n      }\n\n      var pageIndex = pageNumber - 1;\n      if (pageIndex in this.pagePromises) {\n        return this.pagePromises[pageIndex];\n      }\n      var promise = this.messageHandler.sendWithPromise('GetPage', {\n        pageIndex: pageIndex\n      }).then(function (pageInfo) {\n        var page = new PDFPageProxy(pageIndex, pageInfo, this);\n        this.pageCache[pageIndex] = page;\n        return page;\n      }.bind(this));\n      this.pagePromises[pageIndex] = promise;\n      return promise;\n    },\n\n    getPageIndex: function WorkerTransport_getPageIndexByRef(ref) {\n      return this.messageHandler.sendWithPromise('GetPageIndex', { ref: ref });\n    },\n\n    getAnnotations: function WorkerTransport_getAnnotations(pageIndex) {\n      return this.messageHandler.sendWithPromise('GetAnnotations',\n        { pageIndex: pageIndex });\n    },\n\n    getDestinations: function WorkerTransport_getDestinations() {\n      return this.messageHandler.sendWithPromise('GetDestinations', null);\n    },\n\n    getDestination: function WorkerTransport_getDestination(id) {\n      return this.messageHandler.sendWithPromise('GetDestination', { id: id } );\n    },\n\n    getAttachments: function WorkerTransport_getAttachments() {\n      return this.messageHandler.sendWithPromise('GetAttachments', null);\n    },\n\n    getJavaScript: function WorkerTransport_getJavaScript() {\n      return this.messageHandler.sendWithPromise('GetJavaScript', null);\n    },\n\n    getOutline: function WorkerTransport_getOutline() {\n      return this.messageHandler.sendWithPromise('GetOutline', null);\n    },\n\n    getMetadata: function WorkerTransport_getMetadata() {\n      return this.messageHandler.sendWithPromise('GetMetadata', null).\n        then(function transportMetadata(results) {\n        return {\n          info: results[0],\n          metadata: (results[1] ? new PDFJS.Metadata(results[1]) : null)\n        };\n      });\n    },\n\n    getStats: function WorkerTransport_getStats() {\n      return this.messageHandler.sendWithPromise('GetStats', null);\n    },\n\n    startCleanup: function WorkerTransport_startCleanup() {\n      this.messageHandler.sendWithPromise('Cleanup', null).\n        then(function endCleanup() {\n        for (var i = 0, ii = this.pageCache.length; i < ii; i++) {\n          var page = this.pageCache[i];\n          if (page) {\n            page.destroy();\n          }\n        }\n        this.commonObjs.clear();\n        FontLoader.clear();\n      }.bind(this));\n    }\n  };\n  return WorkerTransport;\n\n})();\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects\n * for fonts, images, rendering code and such. These objects might get processed\n * inside of a worker. The `PDFObjects` implements some basic functions to\n * manage these objects.\n * @ignore\n */\nvar PDFObjects = (function PDFObjectsClosure() {\n  function PDFObjects() {\n    this.objs = {};\n  }\n\n  PDFObjects.prototype = {\n    /**\n     * Internal function.\n     * Ensures there is an object defined for `objId`.\n     */\n    ensureObj: function PDFObjects_ensureObj(objId) {\n      if (this.objs[objId]) {\n        return this.objs[objId];\n      }\n\n      var obj = {\n        capability: createPromiseCapability(),\n        data: null,\n        resolved: false\n      };\n      this.objs[objId] = obj;\n\n      return obj;\n    },\n\n    /**\n     * If called *without* callback, this returns the data of `objId` but the\n     * object needs to be resolved. If it isn't, this function throws.\n     *\n     * If called *with* a callback, the callback is called with the data of the\n     * object once the object is resolved. That means, if you call this\n     * function and the object is already resolved, the callback gets called\n     * right away.\n     */\n    get: function PDFObjects_get(objId, callback) {\n      // If there is a callback, then the get can be async and the object is\n      // not required to be resolved right now\n      if (callback) {\n        this.ensureObj(objId).capability.promise.then(callback);\n        return null;\n      }\n\n      // If there isn't a callback, the user expects to get the resolved data\n      // directly.\n      var obj = this.objs[objId];\n\n      // If there isn't an object yet or the object isn't resolved, then the\n      // data isn't ready yet!\n      if (!obj || !obj.resolved) {\n        error('Requesting object that isn\\'t resolved yet ' + objId);\n      }\n\n      return obj.data;\n    },\n\n    /**\n     * Resolves the object `objId` with optional `data`.\n     */\n    resolve: function PDFObjects_resolve(objId, data) {\n      var obj = this.ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.capability.resolve(data);\n    },\n\n    isResolved: function PDFObjects_isResolved(objId) {\n      var objs = this.objs;\n\n      if (!objs[objId]) {\n        return false;\n      } else {\n        return objs[objId].resolved;\n      }\n    },\n\n    hasData: function PDFObjects_hasData(objId) {\n      return this.isResolved(objId);\n    },\n\n    /**\n     * Returns the data of `objId` if object exists, null otherwise.\n     */\n    getData: function PDFObjects_getData(objId) {\n      var objs = this.objs;\n      if (!objs[objId] || !objs[objId].resolved) {\n        return null;\n      } else {\n        return objs[objId].data;\n      }\n    },\n\n    clear: function PDFObjects_clear() {\n      this.objs = {};\n    }\n  };\n  return PDFObjects;\n})();\n\n/**\n * Allows controlling of the rendering tasks.\n * @class\n */\nvar RenderTask = (function RenderTaskClosure() {\n  function RenderTask(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  RenderTask.prototype = /** @lends RenderTask.prototype */ {\n    /**\n     * Promise for rendering task completion.\n     * @return {Promise}\n     */\n    get promise() {\n      return this._internalRenderTask.capability.promise;\n    },\n\n    /**\n     * Cancels the rendering task. If the task is currently rendering it will\n     * not be cancelled until graphics pauses with a timeout. The promise that\n     * this object extends will resolved when cancelled.\n     */\n    cancel: function RenderTask_cancel() {\n      this._internalRenderTask.cancel();\n    },\n\n    /**\n     * Registers callbacks to indicate the rendering task completion.\n     *\n     * @param {function} onFulfilled The callback for the rendering completion.\n     * @param {function} onRejected The callback for the rendering failure.\n     * @return {Promise} A promise that is resolved after the onFulfilled or\n     *                   onRejected callback.\n     */\n    then: function RenderTask_then(onFulfilled, onRejected) {\n      return this.promise.then.apply(this.promise, arguments);\n    }\n  };\n\n  return RenderTask;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nvar InternalRenderTask = (function InternalRenderTaskClosure() {\n\n  function InternalRenderTask(callback, params, objs, commonObjs, operatorList,\n                              pageNumber) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this.pageNumber = pageNumber;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n  }\n\n  InternalRenderTask.prototype = {\n\n    initalizeGraphics:\n        function InternalRenderTask_initalizeGraphics(transparency) {\n\n      if (this.cancelled) {\n        return;\n      }\n      if (PDFJS.pdfBug && 'StepperManager' in globalScope &&\n          globalScope.StepperManager.enabled) {\n        this.stepper = globalScope.StepperManager.create(this.pageNumber - 1);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n\n      var params = this.params;\n      this.gfx = new CanvasGraphics(params.canvasContext, this.commonObjs,\n                                    this.objs, params.imageLayer);\n\n      this.gfx.beginDrawing(params.viewport, transparency);\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    },\n\n    cancel: function InternalRenderTask_cancel() {\n      this.running = false;\n      this.cancelled = true;\n      this.callback('cancelled');\n    },\n\n    operatorListChanged: function InternalRenderTask_operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    },\n\n    _continue: function InternalRenderTask__continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue.call(this.task, this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    },\n\n    _scheduleNext: function InternalRenderTask__scheduleNext() {\n      window.requestAnimationFrame(this._nextBound);\n    },\n\n    _next: function InternalRenderTask__next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList,\n                                        this.operatorListIdx,\n                                        this._continueBound,\n                                        this.stepper);\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          this.callback();\n        }\n      }\n    }\n\n  };\n\n  return InternalRenderTask;\n})();\n\n\nvar Metadata = PDFJS.Metadata = (function MetadataClosure() {\n  function fixMetadata(meta) {\n    return meta.replace(/>\\\\376\\\\377([^<]+)/g, function(all, codes) {\n      var bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g,\n                                function(code, d1, d2, d3) {\n        return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n      });\n      var chars = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n        chars += code >= 32 && code < 127 && code !== 60 && code !== 62 &&\n          code !== 38 && false ? String.fromCharCode(code) :\n          '&#x' + (0x10000 + code).toString(16).substring(1) + ';';\n      }\n      return '>' + chars;\n    });\n  }\n\n  function Metadata(meta) {\n    if (typeof meta === 'string') {\n      // Ghostscript produces invalid metadata\n      meta = fixMetadata(meta);\n\n      var parser = new DOMParser();\n      meta = parser.parseFromString(meta, 'application/xml');\n    } else if (!(meta instanceof Document)) {\n      error('Metadata: Invalid metadata object');\n    }\n\n    this.metaDocument = meta;\n    this.metadata = {};\n    this.parse();\n  }\n\n  Metadata.prototype = {\n    parse: function Metadata_parse() {\n      var doc = this.metaDocument;\n      var rdf = doc.documentElement;\n\n      if (rdf.nodeName.toLowerCase() !== 'rdf:rdf') { // Wrapped in <xmpmeta>\n        rdf = rdf.firstChild;\n        while (rdf && rdf.nodeName.toLowerCase() !== 'rdf:rdf') {\n          rdf = rdf.nextSibling;\n        }\n      }\n\n      var nodeName = (rdf) ? rdf.nodeName.toLowerCase() : null;\n      if (!rdf || nodeName !== 'rdf:rdf' || !rdf.hasChildNodes()) {\n        return;\n      }\n\n      var children = rdf.childNodes, desc, entry, name, i, ii, length, iLength;\n      for (i = 0, length = children.length; i < length; i++) {\n        desc = children[i];\n        if (desc.nodeName.toLowerCase() !== 'rdf:description') {\n          continue;\n        }\n\n        for (ii = 0, iLength = desc.childNodes.length; ii < iLength; ii++) {\n          if (desc.childNodes[ii].nodeName.toLowerCase() !== '#text') {\n            entry = desc.childNodes[ii];\n            name = entry.nodeName.toLowerCase();\n            this.metadata[name] = entry.textContent.trim();\n          }\n        }\n      }\n    },\n\n    get: function Metadata_get(name) {\n      return this.metadata[name] || null;\n    },\n\n    has: function Metadata_has(name) {\n      return typeof this.metadata[name] !== 'undefined';\n    }\n  };\n\n  return Metadata;\n})();\n\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction createScratchCanvas(width, height) {\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based on.\n  if (!ctx.mozCurrentTransform) {\n    // Store the original context\n    ctx._scaleX = ctx._scaleX || 1.0;\n    ctx._scaleY = ctx._scaleY || 1.0;\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = [ctx._scaleX, 0, 0, ctx._scaleY, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, 'mozCurrentTransform', {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      }\n    });\n\n    Object.defineProperty(ctx, 'mozCurrentTransformInverse', {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc\n        ];\n      }\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5]\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * (-sinValue) + m[2] * cosValue,\n        m[1] * (-sinValue) + m[3] * cosValue,\n        m[4],\n        m[5]\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  var cache = {};\n  return {\n    getCanvas: function CachedCanvases_getCanvas(id, width, height,\n                                                 trackTransform) {\n      var canvasEntry;\n      if (cache[id] !== undefined) {\n        canvasEntry = cache[id];\n        canvasEntry.canvas.width = width;\n        canvasEntry.canvas.height = height;\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        var canvas = createScratchCanvas(width, height);\n        var ctx = canvas.getContext('2d');\n        if (trackTransform) {\n          addContextCurrentTransform(ctx);\n        }\n        cache[id] = canvasEntry = {canvas: canvas, context: ctx};\n      }\n      return canvasEntry;\n    },\n    clear: function () {\n      for (var id in cache) {\n        var canvasEntry = cache[id];\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        canvasEntry.canvas.width = 0;\n        canvasEntry.canvas.height = 0;\n        delete cache[id];\n      }\n    }\n  };\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width, height = imgData.height;\n  var i, j, j0, width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7, data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height), pos = 0, ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128, elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = (elem & mask) ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding iteresting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) +\n            (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p], p0 = p, pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else { // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2 | type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n      --count;\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function(c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\n      var o = outlines[i];\n      c.moveTo(o[0], o[1]);\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\n        c.lineTo(o[j], o[j+1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  function CanvasExtraState(old) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = '#000000';\n    this.strokeColor = '#000000';\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null; // nonclonable field (see the save method below)\n\n    this.old = old;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  function CanvasGraphics(canvasCtx, commonObjs, objs, imageLayer) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    if (canvasCtx) {\n      addContextCurrentTransform(canvasCtx);\n    }\n    this.cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== 'undefined' && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height, width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0, destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = PDFJS.hasCanvasTypedArrays ? new Uint32Array(dest.buffer) :\n        new Uint32ArrayView(dest);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xFFFFFFFF;\n      var black = (PDFJS.isLittleEndian || !PDFJS.hasCanvasTypedArrays) ?\n        0xFF000000 : 0x000000FF;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          (i < fullChunks) ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = (srcDiff > fullSrcDiff) ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = (srcByte & 128) ? white : black;\n            dest32[destPos++] = (srcByte & 64) ? white : black;\n            dest32[destPos++] = (srcByte & 32) ? white : black;\n            dest32[destPos++] = (srcByte & 16) ? white : black;\n            dest32[destPos++] = (srcByte & 8) ? white : black;\n            dest32[destPos++] = (srcByte & 4) ? white : black;\n            dest32[destPos++] = (srcByte & 2) ? white : black;\n            dest32[destPos++] = (srcByte & 1) ? white : black;\n          }\n          for (; k < kEnd; k++) {\n             if (mask === 0) {\n               srcByte = src[srcPos++];\n               mask = 128;\n             }\n\n            dest32[destPos++] = (srcByte & mask) ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--;) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      error('bad image kind: ' + imgData.kind);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height, width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        (i < fullChunks) ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = (elem & mask) ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = ['strokeStyle', 'fillStyle', 'fillRule', 'globalAlpha',\n                      'lineWidth', 'lineCap', 'lineJoin', 'miterLimit',\n                      'globalCompositeOperation', 'font'];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset =  sourceCtx.lineDashOffset;\n    } else if (sourceCtx.mozDashOffset !== undefined) {\n      destCtx.mozDash = sourceCtx.mozDash;\n      destCtx.mozDashOffset = sourceCtx.mozDashOffset;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y = (maskData[i - 3] * 77) +  // * 0.3 / 255 * 0x10000\n              (maskData[i - 2] * 152) + // * 0.59 ....\n              (maskData[i - 1] * 28);   // * 0.11 ....\n      layerData[i] = (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(maskCtx, layerCtx, width, height,\n                               subtype, backdrop) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === 'Luminosity') {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY,\n                     smask.offsetX, smask.offsetY);\n\n    var backdrop = smask.backdrop || null;\n    if (WebGLUtils.isEnabled) {\n      var composed = WebGLUtils.composeSMask(layerCtx.canvas, mask,\n        {subtype: smask.subtype, backdrop: backdrop});\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height,\n                        smask.subtype, backdrop);\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = ['butt', 'round', 'square'];\n  var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n\n    beginDrawing: function CanvasGraphics_beginDrawing(viewport, transparency) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, so we fill with white if\n      // we can.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n      if (transparency) {\n        this.ctx.clearRect(0, 0, width, height);\n      } else {\n        this.ctx.mozOpaque = true;\n        this.ctx.save();\n        this.ctx.fillStyle = 'rgb(255, 255, 255)';\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.restore();\n      }\n\n      var transform = viewport.transform;\n\n      this.ctx.save();\n      this.ctx.transform.apply(this.ctx, transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n                                    operatorList,\n                                    executionStartIdx, continueCallback,\n                                    stepper) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations = (argsArrayLen - i > EXECUTION_STEPS &&\n                             typeof continueCallback === 'function');\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          var deps = argsArray[i];\n          for (var n = 0, nn = deps.length; n < nn; n++) {\n            var depObjId = deps[n];\n            var common = depObjId[0] === 'g' && depObjId[1] === '_';\n            var objsPool = common ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.isResolved(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      this.ctx.restore();\n      CachedCanvases.clear();\n      WebGLUtils.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      } else {\n        ctx.mozDash = dashArray;\n        ctx.mozDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent: function CanvasGraphics_setRenderingIntent(intent) {\n      // Maybe if we one day fully support color spaces this will be important\n      // for now we can ignore.\n      // TODO set rendering intent?\n    },\n    setFlatness: function CanvasGraphics_setFlatness(flatness) {\n      // There's no way to control this with canvas, but we can safely ignore.\n      // TODO set flatness?\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case 'LW':\n            this.setLineWidth(value);\n            break;\n          case 'LC':\n            this.setLineCap(value);\n            break;\n          case 'LJ':\n            this.setLineJoin(value);\n            break;\n          case 'ML':\n            this.setMiterLimit(value);\n            break;\n          case 'D':\n            this.setDash(value[0], value[1]);\n            break;\n          case 'RI':\n            this.setRenderingIntent(value);\n            break;\n          case 'FL':\n            this.setFlatness(value);\n            break;\n          case 'Font':\n            this.setFont(value[0], value[1]);\n            break;\n          case 'CA':\n            this.current.strokeAlpha = state[1];\n            break;\n          case 'ca':\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case 'BM':\n            if (value && value.name && (value.name !== 'Normal')) {\n              var mode = value.name.replace(/([A-Z])/g,\n                function(c) {\n                  return '-' + c.toLowerCase();\n                }\n              ).substring(1);\n              this.ctx.globalCompositeOperation = mode;\n              if (this.ctx.globalCompositeOperation !== mode) {\n                warn('globalCompositeOperation \"' + mode +\n                     '\" is not supported');\n              }\n            } else {\n              this.ctx.globalCompositeOperation = 'source-over';\n            }\n            break;\n          case 'SMask':\n            if (this.current.activeSMask) {\n              this.endSMaskGroup();\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = 'smaskGroupAt' + this.groupLevel;\n      var scratchCanvas = CachedCanvases.getCanvas(\n        cacheId, drawnWidth, drawnHeight, true);\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        ['BM', 'Normal'],\n        ['ca', 1],\n        ['CA', 1]\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.activeSMask = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      if (this.stateStack.length !== 0) {\n        if (this.current.activeSMask !== null) {\n          this.endSMaskGroup();\n        }\n\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        this.cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this.cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x, y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3],\n                              x, y);\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(x, y, args[j], args[j + 1],\n                              args[j + 2], args[j + 3]);\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // Prevent drawing too thin lines by enforcing a minimum line width.\n      ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n                               this.current.lineWidth);\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (strokeColor && strokeColor.hasOwnProperty('type') &&\n          strokeColor.type === 'Pattern') {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        if (ctx.mozFillRule !== undefined) {\n          ctx.mozFillRule = 'evenodd';\n          ctx.fill();\n          ctx.mozFillRule = 'nonzero';\n        } else {\n          try {\n            ctx.fill('evenodd');\n          } catch (ex) {\n            // shouldn't really happen, but browsers might think differently\n            ctx.fill();\n          }\n        }\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        error('Can\\'t find font for ' + fontRefName);\n      }\n\n      current.fontMatrix = (fontObj.fontMatrix ?\n                            fontObj.fontMatrix : FONT_IDENTITY_MATRIX);\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 ||\n          current.fontMatrix[3] === 0) {\n        warn('Invalid font matrix for font ' + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || 'sans-serif';\n      var bold = fontObj.black ? (fontObj.bold ? 'bolder' : 'bold') :\n                                 (fontObj.bold ? 'bold' : 'normal');\n\n      var italic = fontObj.italic ? 'italic' : 'normal';\n      var typeface = '\"' + name + '\", ' + fontObj.fallbackName;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      var browserFontSize = size < MIN_FONT_SIZE ? MIN_FONT_SIZE :\n                            size > MAX_FONT_SIZE ? MAX_FONT_SIZE : size;\n      this.current.fontSizeScale = size / browserFontSize;\n\n      var rule = italic + ' ' + bold + ' ' + browserFontSize + 'px ' + typeface;\n      this.ctx.font = rule;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar: function CanvasGraphics_paintChar(character, x, y) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode = textRenderingMode &\n        TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(textRenderingMode &\n        TextRenderingMode.ADD_TO_PATH_FLAG);\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (fillStrokeMode === TextRenderingMode.FILL ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.fill();\n        }\n        if (fillStrokeMode === TextRenderingMode.STROKE ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (fillStrokeMode === TextRenderingMode.FILL ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.fillText(character, x, y);\n        }\n        if (fillStrokeMode === TextRenderingMode.STROKE ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x: x,\n          y: y,\n          fontSize: fontSize,\n          addToPath: addToPath\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      var ctx = document.createElement('canvas').getContext('2d');\n      ctx.scale(1.5, 1);\n      ctx.fillText('I', 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, 'isFontSubpixelAAEnabled', enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode = current.textRenderingMode &\n          TextRenderingMode.FILL_STROKE_MASK;\n        if (fillStrokeMode === TextRenderingMode.STROKE ||\n            fillStrokeMode === TextRenderingMode.FILL_STROKE) {\n          this.cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0, i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (glyph === null) {\n          // word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0 && this.isFontSubpixelAAEnabled) {\n          // some standard fonts may not have the exact width, trying to\n          // rescale per character\n          var measuredWidth = ctx.measureText(character).width * 1000 /\n            fontSize * fontSizeScale;\n          var characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        }\n\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY);\n          if (accent) {\n            scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n            scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n            this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY);\n          }\n        }\n\n        var charWidth = width * widthAdvanceScale + charSpacing * fontDirection;\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (glyph === null) {\n          // word break\n          this.ctx.translate(wordSpacing, 0);\n          current.x += wordSpacing * textHScale;\n          continue;\n        } else if (isNum(glyph)) {\n          var spacingLength = -glyph * 0.001 * fontSize;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn('Type3 character \\\"' + glyph.operatorListId +\n               '\\\" is not available');\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + charSpacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth,\n                                                                        yWidth,\n                                                                        llx,\n                                                                        lly,\n                                                                        urx,\n                                                                        ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === 'TilingPattern') {\n        var color = IR[1];\n        pattern = new TilingPattern(IR, color, this.ctx, this.objs,\n                                    this.commonObjs, this.baseTransform);\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN(/*...*/) {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN(/*...*/) {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      error('Should not call beginInlineImage');\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      error('Should not call beginImageData');\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix,\n                                                                        bbox) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (isArray(matrix) && 6 === matrix.length) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (isArray(bbox) && 4 === bbox.length) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implmenting:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info('TODO: Support non-isolated groups.');\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn('Knockout groups not supported.');\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      assert(group.bbox, 'Bounding box is required.');\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n                    group.bbox,\n                    currentCtx.mozCurrentTransform);\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [0,\n                          0,\n                          currentCtx.canvas.width,\n                          currentCtx.canvas.height];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1, scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = 'groupAt' + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId +=  '_smask_' + ((this.smaskCounter++) % 2);\n      }\n      var scratchCanvas = CachedCanvases.getCanvas(\n        cacheId, drawnWidth, drawnHeight, true);\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX: offsetX,\n          offsetY: offsetY,\n          scaleX: scaleX,\n          scaleY: scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        ['BM', 'Normal'],\n        ['ca', 1],\n        ['CA', 1]\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      this.current = new CanvasExtraState();\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform,\n                                                             matrix) {\n      this.save();\n\n      if (isArray(rect) && 4 === rect.length) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\n      var domImage = this.objs.get(objId);\n      if (!domImage) {\n        warn('Dependent image isn\\'t ready yet');\n        return;\n      }\n\n      this.save();\n\n      var ctx = this.ctx;\n      // scale the image to the unit square\n      ctx.scale(1 / w, -1 / h);\n\n      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height,\n                    0, -h, w, h);\n      if (this.imageLayer) {\n        var currentTransform = ctx.mozCurrentTransformInverse;\n        var position = this.getCanvasPosition(0, 0);\n        this.imageLayer.appendImage({\n          objId: objId,\n          left: position[0],\n          top: position[1],\n          width: w / currentTransform[0],\n          height: h / currentTransform[3]\n        });\n      }\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width, height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled =\n            compileType3Glyph({data: img.data, width: width, height: height});\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = CachedCanvases.getCanvas('maskCanvas', width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = 'source-in';\n\n      maskCtx.fillStyle = isPatternFill ?\n                          fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat:\n      function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX,\n                                                          scaleY, positions) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = CachedCanvases.getCanvas('maskCanvas', width, height);\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = 'source-in';\n\n      maskCtx.fillStyle = isPatternFill ?\n                          fillColor.getPattern(maskCtx, this) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height,\n          0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup:\n      function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width, height = image.height;\n\n        var maskCanvas = CachedCanvases.getCanvas('maskCanvas', width, height);\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = 'source-in';\n\n        maskCtx.fillStyle = isPatternFill ?\n                            fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height,\n                      0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      var imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn('Dependent image isn\\'t ready yet');\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat:\n      function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY,\n                                                          positions) {\n      var imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn('Dependent image isn\\'t ready yet');\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({transform: [scaleX, 0, 0, scaleY, positions[i],\n                 positions[i + 1]], x: 0, y: 0, w: width, h: height});\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject:\n      function CanvasGraphics_paintInlineImageXObject(imgData) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0], b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2], d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // instanceof HTMLElement does not work in jsdom node.js module\n      if (imgData instanceof HTMLElement || !imgData.data) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = CachedCanvases.getCanvas('inlineImage', width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width, paintHeight = height;\n      var tmpCanvasId = 'prescale1';\n      // Vertial or horizontal scaling shall not be more than 2 to not loose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size\n      while ((widthScale > 2 && paintWidth > 1) ||\n             (heightScale > 2 && paintHeight > 1)) {\n        var newWidth = paintWidth, newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = CachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight,\n                                     0, 0, newWidth, newHeight);\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === 'prescale1' ? 'prescale2' : 'prescale1';\n      }\n      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight,\n                                0, -height, width, height);\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData: imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3]\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup:\n      function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = CachedCanvases.getCanvas('inlineImage', w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h,\n                      0, -1, 1, 1);\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData: imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask:\n      function CanvasGraphics_paintSolidColorImageMask() {\n        this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n                                        tag, properties) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          if (ctx.mozFillRule !== undefined) {\n            ctx.mozFillRule = 'evenodd';\n            ctx.clip();\n            ctx.mozFillRule = 'nonzero';\n          } else {\n            try {\n              ctx.clip('evenodd');\n            } catch (ex) {\n              // shouldn't really happen, but browsers might think differently\n              ctx.clip();\n            }\n          }\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth: function CanvasGraphics_getSinglePixelWidth(scale) {\n      if (this.cachedGetSinglePixelWidth === null) {\n        var inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this.cachedGetSinglePixelWidth = Math.sqrt(Math.max(\n          (inverse[0] * inverse[0] + inverse[1] * inverse[1]),\n          (inverse[2] * inverse[2] + inverse[3] * inverse[3])));\n      }\n      return this.cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n        var transform = this.ctx.mozCurrentTransform;\n        return [\n          transform[0] * x + transform[2] * y + transform[4],\n          transform[1] * x + transform[3] * y + transform[5]\n        ];\n    }\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error('Error during shader compilation: ' + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error('Error during program linking: ' + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n    currentCanvas = document.createElement('canvas');\n    currentGL = currentCanvas.getContext('webgl',\n      { premultipliedalpha: false });\n  }\n\n  var smaskVertexShaderCode = '\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             ';\n\n  var smaskFragmentShaderCode = '\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             ';\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');\n    cache.positionLocation = gl.getAttribLocation(program, 'a_position');\n    cache.backdropLocation = gl.getUniformLocation(program, 'u_backdrop');\n    cache.subtypeLocation = gl.getUniformLocation(program, 'u_subtype');\n\n    var texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n    var texLayerLocation = gl.getUniformLocation(program, 'u_image');\n    var texMaskLocation = gl.getUniformLocation(program, 'u_mask');\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0,  0.0,\n      1.0,  0.0,\n      0.0,  1.0,\n      0.0,  1.0,\n      1.0,  0.0,\n      1.0,  1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width, height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,canvas = cache.canvas, gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0],\n                   properties.backdrop[1], properties.backdrop[2], 1);\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(cache.subtypeLocation,\n                 properties.subtype === 'Luminosity' ? 1 : 0);\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode = '\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             ';\n\n  var figuresFragmentShaderCode = '\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             ';\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');\n    cache.scaleLocation = gl.getUniformLocation(program, 'u_scale');\n    cache.offsetLocation = gl.getUniformLocation(program, 'u_offset');\n    cache.positionLocation = gl.getAttribLocation(program, 'a_position');\n    cache.colorLocation = gl.getAttribLocation(program, 'a_color');\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache, canvas = cache.canvas, gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case 'lattice':\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case 'triangles':\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords, colorsMap = context.colors;\n    var pIndex = 0, cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i], ps = figure.coords, cs = figure.colors;\n      switch (figure.type) {\n        case 'lattice':\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case 'triangles':\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[i]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255,\n                    backgroundColor[2] / 255, 1.0);\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false,\n                           0, 0);\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  function cleanup() {\n    if (smaskCache && smaskCache.canvas) {\n      smaskCache.canvas.width = 0;\n      smaskCache.canvas.height = 0;\n    }\n    if (figuresCache && figuresCache.canvas) {\n      figuresCache.canvas.width = 0;\n      figuresCache.canvas.height = 0;\n    }\n    smaskCache = null;\n    figuresCache = null;\n  }\n\n  return {\n    get isEnabled() {\n      if (PDFJS.disableWebGL) {\n        return false;\n      }\n      var enabled = false;\n      try {\n        generateGL();\n        enabled = !!currentGL;\n      } catch (e) { }\n      return shadow(this, 'isEnabled', enabled);\n    },\n    composeSMask: composeSMask,\n    drawFigures: drawFigures,\n    clear: cleanup\n  };\n})();\n\n\nvar ShadingIRs = {};\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var colorStops = raw[2];\n    var p0 = raw[3];\n    var p1 = raw[4];\n    var r0 = raw[5];\n    var r1 = raw[6];\n    return {\n      type: 'Pattern',\n      getPattern: function RadialAxial_getPattern(ctx) {\n        var grad;\n        if (type === 'axial') {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === 'radial') {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      }\n    };\n  }\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords, colors = context.colors;\n    var bytes = data.data, rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1; p1 = p2; p2 = tmp; tmp = c1; c1 = c2; c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2; p2 = p3; p3 = tmp; tmp = c2; c2 = c3; c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1; p1 = p2; p2 = tmp; tmp = c1; c1 = c2; c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1], c1g = colors[c1 + 1], c1b = colors[c1 + 2];\n    var c2r = colors[c2], c2g = colors[c2 + 1], c2b = colors[c2 + 2];\n    var c3r = colors[c3], c3g = colors[c3 + 1], c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1), maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    var k;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        k = y < y1 ? 0 : y1 === y2 ? 1 : (y1 - y) / (y1 - y2);\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        k = y > y3 ? 1 : y2 === y3 ? 0 : (y2 - y) / (y2 - y3);\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n      k = y < y1 ? 0 : y > y3 ? 1 : (y1 - y) / (y1 - y3);\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        k = k < 0 ? 0 : k > 1 ? 1 : k;\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case 'lattice':\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(data, context,\n              ps[q], ps[q + 1], ps[q + verticesPerRow],\n              cs[q], cs[q + 1], cs[q + verticesPerRow]);\n            drawTriangle(data, context,\n              ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n          }\n        }\n        break;\n      case 'triangles':\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(data, context,\n            ps[i], ps[i + 1], ps[i + 2],\n            cs[i], cs[i + 1], cs[i + 2]);\n        }\n        break;\n      default:\n        error('illigal figure');\n        break;\n    }\n  }\n\n  function createMeshCanvas(bounds, combinesScale, coords, colors, figures,\n                            backgroundColor) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] *\n      EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] *\n      EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords: coords,\n      colors: colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n\n    var canvas, tmpCanvas, i, ii;\n    if (WebGLUtils.isEnabled) {\n      canvas = WebGLUtils.drawFigures(width, height, backgroundColor,\n                                      figures, context);\n\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = CachedCanvases.getCanvas('mesh', width, height, false);\n      tmpCanvas.context.drawImage(canvas, 0, 0);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = CachedCanvases.getCanvas('mesh', width, height, false);\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, 0, 0);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {canvas: canvas, offsetX: offsetX, offsetY: offsetY,\n            scaleX: scaleX, scaleY: scaleY};\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    //var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    //var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: 'Pattern',\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0],\n                     scale[1] * matrixScale[1]];\n          }\n        }\n\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords,\n          colors, figures, shadingFill ? null : background);\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(temporaryPatternCanvas.offsetX,\n                      temporaryPatternCanvas.offsetY);\n        ctx.scale(temporaryPatternCanvas.scaleX,\n                  temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, 'no-repeat');\n      }\n    };\n  }\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: 'Pattern',\n      getPattern: function Dummy_fromIR_getPattern() {\n        return 'hotpink';\n      }\n    };\n  }\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    error('Unknown IR type: ' + raw[0]);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  function TilingPattern(IR, color, ctx, objs, commonObjs, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.baseTransform = baseTransform;\n    this.type = 'Pattern';\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var objs = this.objs;\n      var commonObjs = this.commonObjs;\n\n      info('TilingType: ' + tilingType);\n\n      var x0 = bbox[0], y0 = bbox[1], x1 = bbox[2], y1 = bbox[3];\n\n      var topLeft = [x0, y0];\n      // we want the canvas to be as large as the step size\n      var botRight = [x0 + xstep, y0 + ystep];\n\n      var width = botRight[0] - topLeft[0];\n      var height = botRight[1] - topLeft[1];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform);\n      var combinedScale = [matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1]];\n\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      width = Math.min(Math.ceil(Math.abs(width * combinedScale[0])),\n        MAX_PATTERN_SIZE);\n\n      height = Math.min(Math.ceil(Math.abs(height * combinedScale[1])),\n        MAX_PATTERN_SIZE);\n\n      var tmpCanvas = CachedCanvases.getCanvas('pattern', width, height, true);\n      var tmpCtx = tmpCanvas.context;\n      var graphics = new CanvasGraphics(tmpCtx, commonObjs, objs);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(tmpCtx, paintType, color);\n\n      this.setScale(width, height, xstep, ystep);\n      this.transformToScale(graphics);\n\n      // transform coordinates to pattern space\n      var tmpTranslate = [1, 0, 0, 1, -topLeft[0], -topLeft[1]];\n      graphics.transform.apply(graphics, tmpTranslate);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n      return tmpCanvas.canvas;\n    },\n\n    setScale: function TilingPattern_setScale(width, height, xstep, ystep) {\n      this.scale = [width / xstep, height / ystep];\n    },\n\n    transformToScale: function TilingPattern_transformToScale(graphics) {\n      var scale = this.scale;\n      var tmpScale = [scale[0], 0, 0, scale[1], 0, 0];\n      graphics.transform.apply(graphics, tmpScale);\n    },\n\n    scaleToContext: function TilingPattern_scaleToContext() {\n      var scale = this.scale;\n      this.ctx.scale(1 / scale[0], 1 / scale[1]);\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (bbox && isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext:\n      function setFillAndStrokeStyleToContext(context, paintType, color) {\n        switch (paintType) {\n          case PaintType.COLORED:\n            var ctx = this.ctx;\n            context.fillStyle = ctx.fillStyle;\n            context.strokeStyle = ctx.strokeStyle;\n            break;\n          case PaintType.UNCOLORED:\n            var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n            context.fillStyle = cssColor;\n            context.strokeStyle = cssColor;\n            break;\n          default:\n            error('Unsupported paint type: ' + paintType);\n        }\n      },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      ctx = this.ctx;\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n      this.scaleToContext();\n\n      return ctx.createPattern(temporaryPatternCanvas, 'repeat');\n    }\n  };\n\n  return TilingPattern;\n})();\n\n\nPDFJS.disableFontFace = false;\n\nvar FontLoader = {\n  insertRule: function fontLoaderInsertRule(rule) {\n    var styleElement = document.getElementById('PDFJS_FONT_STYLE_TAG');\n    if (!styleElement) {\n      styleElement = document.createElement('style');\n      styleElement.id = 'PDFJS_FONT_STYLE_TAG';\n      document.documentElement.getElementsByTagName('head')[0].appendChild(\n        styleElement);\n    }\n\n    var styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  },\n\n  clear: function fontLoaderClear() {\n    var styleElement = document.getElementById('PDFJS_FONT_STYLE_TAG');\n    if (styleElement) {\n      styleElement.parentNode.removeChild(styleElement);\n    }\n    this.nativeFontFaces.forEach(function(nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n  },\n  get loadTestFont() {\n    // This is a CFF font with 1 glyph for '.' that fills its entire width and\n    // height.\n    return shadow(this, 'loadTestFont', atob(\n      'T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQ' +\n      'AABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwA' +\n      'AAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbm' +\n      'FtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAA' +\n      'AADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6A' +\n      'ABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAA' +\n      'MQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAA' +\n      'AAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAA' +\n      'AAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQ' +\n      'AAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMA' +\n      'AQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAA' +\n      'EAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAA' +\n      'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' +\n      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAA' +\n      'AAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgc' +\n      'A/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF' +\n      'hYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQA' +\n      'AAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAg' +\n      'ABAAAAAAAAAAAD6AAAAAAAAA=='\n    ));\n  },\n\n  loadTestFontId: 0,\n\n  loadingContext: {\n    requests: [],\n    nextRequestId: 0\n  },\n\n  isSyncFontLoadingSupported: (function detectSyncFontLoadingSupport() {\n    if (isWorker) {\n      return false;\n    }\n\n    // User agent string sniffing is bad, but there is no reliable way to tell\n    // if font is fully loaded and ready to be used with canvas.\n    var userAgent = window.navigator.userAgent;\n    var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(userAgent);\n    if (m && m[1] >= 14) {\n      return true;\n    }\n    // TODO other browsers\n    if (userAgent === 'node') {\n      return true;\n    }\n    return false;\n  })(),\n\n  nativeFontFaces: [],\n\n  isFontLoadingAPISupported: (!isWorker && typeof document !== 'undefined' &&\n                              !!document.fonts),\n\n  addNativeFontFace: function fontLoader_addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  },\n\n  bind: function fontLoaderBind(fonts, callback) {\n    assert(!isWorker, 'bind() shall be called from main thread');\n\n    var rules = [];\n    var fontsToLoad = [];\n    var fontLoadPromises = [];\n    for (var i = 0, ii = fonts.length; i < ii; i++) {\n      var font = fonts[i];\n\n      // Add the font to the DOM only once or skip if the font\n      // is already loaded.\n      if (font.attached || font.loading === false) {\n        continue;\n      }\n      font.attached = true;\n\n      if (this.isFontLoadingAPISupported) {\n        var nativeFontFace = font.createNativeFontFace();\n        if (nativeFontFace) {\n          fontLoadPromises.push(nativeFontFace.loaded);\n        }\n      } else {\n        var rule = font.bindDOM();\n        if (rule) {\n          rules.push(rule);\n          fontsToLoad.push(font);\n        }\n      }\n    }\n\n    var request = FontLoader.queueLoadingCallback(callback);\n    if (this.isFontLoadingAPISupported) {\n      Promise.all(fontsToLoad).then(function() {\n        request.complete();\n      });\n    } else if (rules.length > 0 && !this.isSyncFontLoadingSupported) {\n      FontLoader.prepareFontLoadEvent(rules, fontsToLoad, request);\n    } else {\n      request.complete();\n    }\n  },\n\n  queueLoadingCallback: function FontLoader_queueLoadingCallback(callback) {\n    function LoadLoader_completeRequest() {\n      assert(!request.end, 'completeRequest() cannot be called twice');\n      request.end = Date.now();\n\n      // sending all completed requests in order how they were queued\n      while (context.requests.length > 0 && context.requests[0].end) {\n        var otherRequest = context.requests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    var context = FontLoader.loadingContext;\n    var requestId = 'pdfjs-font-loading-' + (context.nextRequestId++);\n    var request = {\n      id: requestId,\n      complete: LoadLoader_completeRequest,\n      callback: callback,\n      started: Date.now()\n    };\n    context.requests.push(request);\n    return request;\n  },\n\n  prepareFontLoadEvent: function fontLoaderPrepareFontLoadEvent(rules,\n                                                                fonts,\n                                                                request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is\n      // ready. It's assumed fonts are loaded in order, so add a known test\n      // font after the desired fonts and then test for the loading of that\n      // test font.\n\n      function int32(data, offset) {\n        return (data.charCodeAt(offset) << 24) |\n               (data.charCodeAt(offset + 1) << 16) |\n               (data.charCodeAt(offset + 2) << 8) |\n               (data.charCodeAt(offset + 3) & 0xff);\n      }\n\n      function spliceString(s, offset, remove, insert) {\n        var chunk1 = s.substr(0, offset);\n        var chunk2 = s.substr(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n\n      var i, ii;\n\n      var canvas = document.createElement('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n\n      var called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if(called > 30) {\n          warn('Load test font never loaded.');\n          callback();\n          return;\n        }\n        ctx.font = '30px ' + name;\n        ctx.fillText('.', 0, 20);\n        var imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      var loadTestFontId = 'lt' + Date.now() + this.loadTestFontId++;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      var data = this.loadTestFont;\n      var COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length,\n                          loadTestFontId);\n      // CFF checksum is important for IE, adjusting it\n      var CFF_CHECKSUM_OFFSET = 16;\n      var XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) { // align to 4 bytes boundary\n        checksum = (checksum - XXXX_VALUE +\n                    int32(loadTestFontId + 'XXX', i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      var url = 'url(data:font/opentype;base64,' + btoa(data) + ');';\n      var rule = '@font-face { font-family:\"' + loadTestFontId + '\";src:' +\n                 url + '}';\n      FontLoader.insertRule(rule);\n\n      var names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      var div = document.createElement('div');\n      div.setAttribute('style',\n                       'visibility: hidden;' +\n                       'width: 10px; height: 10px;' +\n                       'position: absolute; top: 0px; left: 0px;');\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        var span = document.createElement('span');\n        span.textContent = 'Hi';\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function() {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n  }\n};\n\nvar FontFaceObject = (function FontFaceObjectClosure() {\n  function FontFaceObject(name, file, properties) {\n    this.compiledGlyphs = {};\n    if (arguments.length === 1) {\n      // importing translated data\n      var data = arguments[0];\n      for (var i in data) {\n        this[i] = data[i];\n      }\n      return;\n    }\n  }\n  FontFaceObject.prototype = {\n    createNativeFontFace: function FontFaceObject_createNativeFontFace() {\n      if (!this.data) {\n        return null;\n      }\n\n      if (PDFJS.disableFontFace) {\n        this.disableFontFace = true;\n        return null;\n      }\n\n      var nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n      FontLoader.addNativeFontFace(nativeFontFace);\n\n      if (PDFJS.pdfBug && 'FontInspector' in globalScope &&\n          globalScope['FontInspector'].enabled) {\n        globalScope['FontInspector'].fontAdded(this);\n      }\n      return nativeFontFace;\n    },\n\n    bindDOM: function FontFaceObject_bindDOM() {\n      if (!this.data) {\n        return null;\n      }\n\n      if (PDFJS.disableFontFace) {\n        this.disableFontFace = true;\n        return null;\n      }\n\n      var data = bytesToString(new Uint8Array(this.data));\n      var fontName = this.loadedName;\n\n      // Add the font-face rule to the document\n      var url = ('url(data:' + this.mimetype + ';base64,' +\n                 window.btoa(data) + ');');\n      var rule = '@font-face { font-family:\"' + fontName + '\";src:' + url + '}';\n      FontLoader.insertRule(rule);\n\n      if (PDFJS.pdfBug && 'FontInspector' in globalScope &&\n          globalScope['FontInspector'].enabled) {\n        globalScope['FontInspector'].fontAdded(this, url);\n      }\n\n      return rule;\n    },\n\n    getPathGenerator: function FontLoader_getPathGenerator(objs, character) {\n      if (!(character in this.compiledGlyphs)) {\n        var js = objs.get(this.loadedName + '_path_' + character);\n        /*jshint -W054 */\n        this.compiledGlyphs[character] = new Function('c', 'size', js);\n      }\n      return this.compiledGlyphs[character];\n    }\n  };\n  return FontFaceObject;\n})();\n\n\nvar ANNOT_MIN_SIZE = 10; // px\n\nvar AnnotationUtils = (function AnnotationUtilsClosure() {\n  // TODO(mack): This dupes some of the logic in CanvasGraphics.setFont()\n  function setTextStyles(element, item, fontObj) {\n\n    var style = element.style;\n    style.fontSize = item.fontSize + 'px';\n    style.direction = item.fontDirection < 0 ? 'rtl': 'ltr';\n\n    if (!fontObj) {\n      return;\n    }\n\n    style.fontWeight = fontObj.black ?\n      (fontObj.bold ? 'bolder' : 'bold') :\n      (fontObj.bold ? 'bold' : 'normal');\n    style.fontStyle = fontObj.italic ? 'italic' : 'normal';\n\n    var fontName = fontObj.loadedName;\n    var fontFamily = fontName ? '\"' + fontName + '\", ' : '';\n    // Use a reasonable default font if the font doesn't specify a fallback\n    var fallbackName = fontObj.fallbackName || 'Helvetica, sans-serif';\n    style.fontFamily = fontFamily + fallbackName;\n  }\n\n  function initContainer(item, drawBorder) {\n    var container = document.createElement('section');\n    var cstyle = container.style;\n    var width = item.rect[2] - item.rect[0];\n    var height = item.rect[3] - item.rect[1];\n\n    var bWidth = item.borderWidth || 0;\n    if (bWidth) {\n      width = width - 2 * bWidth;\n      height = height - 2 * bWidth;\n      cstyle.borderWidth = bWidth + 'px';\n      var color = item.color;\n      if (drawBorder && color) {\n        cstyle.borderStyle = 'solid';\n        cstyle.borderColor = Util.makeCssRgb(Math.round(color[0] * 255),\n                                             Math.round(color[1] * 255),\n                                             Math.round(color[2] * 255));\n      }\n    }\n    cstyle.width = width + 'px';\n    cstyle.height = height + 'px';\n    return container;\n  }\n\n  function getHtmlElementForTextWidgetAnnotation(item, commonObjs) {\n    var element = document.createElement('div');\n    var width = item.rect[2] - item.rect[0];\n    var height = item.rect[3] - item.rect[1];\n    element.style.width = width + 'px';\n    element.style.height = height + 'px';\n    element.style.display = 'table';\n\n    var content = document.createElement('div');\n    content.textContent = item.fieldValue;\n    var textAlignment = item.textAlignment;\n    content.style.textAlign = ['left', 'center', 'right'][textAlignment];\n    content.style.verticalAlign = 'middle';\n    content.style.display = 'table-cell';\n\n    var fontObj = item.fontRefName ?\n      commonObjs.getData(item.fontRefName) : null;\n    setTextStyles(content, item, fontObj);\n\n    element.appendChild(content);\n\n    return element;\n  }\n\n  function getHtmlElementForTextAnnotation(item) {\n    var rect = item.rect;\n\n    // sanity check because of OOo-generated PDFs\n    if ((rect[3] - rect[1]) < ANNOT_MIN_SIZE) {\n      rect[3] = rect[1] + ANNOT_MIN_SIZE;\n    }\n    if ((rect[2] - rect[0]) < ANNOT_MIN_SIZE) {\n      rect[2] = rect[0] + (rect[3] - rect[1]); // make it square\n    }\n\n    var container = initContainer(item, false);\n    container.className = 'annotText';\n\n    var image  = document.createElement('img');\n    image.style.height = container.style.height;\n    image.style.width = container.style.width;\n    var iconName = item.name;\n    image.src = PDFJS.imageResourcesPath + 'annotation-' +\n      iconName.toLowerCase() + '.svg';\n    image.alt = '[{{type}} Annotation]';\n    image.dataset.l10nId = 'text_annotation_type';\n    image.dataset.l10nArgs = JSON.stringify({type: iconName});\n\n    var contentWrapper = document.createElement('div');\n    contentWrapper.className = 'annotTextContentWrapper';\n    contentWrapper.style.left = Math.floor(rect[2] - rect[0] + 5) + 'px';\n    contentWrapper.style.top = '-10px';\n\n    var content = document.createElement('div');\n    content.className = 'annotTextContent';\n    content.setAttribute('hidden', true);\n\n    var i, ii;\n    if (item.hasBgColor) {\n      var color = item.color;\n\n      // Enlighten the color (70%)\n      var BACKGROUND_ENLIGHT = 0.7;\n      var r = BACKGROUND_ENLIGHT * (1.0 - color[0]) + color[0];\n      var g = BACKGROUND_ENLIGHT * (1.0 - color[1]) + color[1];\n      var b = BACKGROUND_ENLIGHT * (1.0 - color[2]) + color[2];\n      content.style.backgroundColor = Util.makeCssRgb((r * 255) | 0,\n                                                      (g * 255) | 0,\n                                                      (b * 255) | 0);\n    }\n\n    var title = document.createElement('h1');\n    var text = document.createElement('p');\n    title.textContent = item.title;\n\n    if (!item.content && !item.title) {\n      content.setAttribute('hidden', true);\n    } else {\n      var e = document.createElement('span');\n      var lines = item.content.split(/(?:\\r\\n?|\\n)/);\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        var line = lines[i];\n        e.appendChild(document.createTextNode(line));\n        if (i < (ii - 1)) {\n          e.appendChild(document.createElement('br'));\n        }\n      }\n      text.appendChild(e);\n\n      var pinned = false;\n\n      var showAnnotation = function showAnnotation(pin) {\n        if (pin) {\n          pinned = true;\n        }\n        if (content.hasAttribute('hidden')) {\n          container.style.zIndex += 1;\n          content.removeAttribute('hidden');\n        }\n      };\n\n      var hideAnnotation = function hideAnnotation(unpin) {\n        if (unpin) {\n          pinned = false;\n        }\n        if (!content.hasAttribute('hidden') && !pinned) {\n          container.style.zIndex -= 1;\n          content.setAttribute('hidden', true);\n        }\n      };\n\n      var toggleAnnotation = function toggleAnnotation() {\n        if (pinned) {\n          hideAnnotation(true);\n        } else {\n          showAnnotation(true);\n        }\n      };\n\n      image.addEventListener('click', function image_clickHandler() {\n        toggleAnnotation();\n      }, false);\n      image.addEventListener('mouseover', function image_mouseOverHandler() {\n        showAnnotation();\n      }, false);\n      image.addEventListener('mouseout', function image_mouseOutHandler() {\n        hideAnnotation();\n      }, false);\n\n      content.addEventListener('click', function content_clickHandler() {\n        hideAnnotation(true);\n      }, false);\n    }\n\n    content.appendChild(title);\n    content.appendChild(text);\n    contentWrapper.appendChild(content);\n    container.appendChild(image);\n    container.appendChild(contentWrapper);\n\n    return container;\n  }\n\n  function getHtmlElementForLinkAnnotation(item) {\n    var container = initContainer(item, true);\n    container.className = 'annotLink';\n\n    var link = document.createElement('a');\n    link.href = link.title = item.url || '';\n    if (item.url && PDFJS.openExternalLinksInNewWindow) {\n      link.target = '_blank';\n    }\n\n    container.appendChild(link);\n\n    return container;\n  }\n\n  function getHtmlElement(data, objs) {\n    switch (data.annotationType) {\n      case AnnotationType.WIDGET:\n        return getHtmlElementForTextWidgetAnnotation(data, objs);\n      case AnnotationType.TEXT:\n        return getHtmlElementForTextAnnotation(data);\n      case AnnotationType.LINK:\n        return getHtmlElementForLinkAnnotation(data);\n      default:\n        throw new Error('Unsupported annotationType: ' + data.annotationType);\n    }\n  }\n\n  return {\n    getHtmlElement: getHtmlElement\n  };\n})();\nPDFJS.AnnotationUtils = AnnotationUtils;\n\n\nvar SVG_DEFAULTS = {\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  fillColor: '#000000'\n};\n\nvar convertImgDataToPng = (function convertImgDataToPngClosure() {\n  var PNG_HEADER =\n    new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n\n  var CHUNK_WRAPPER_SIZE = 12;\n\n  var crcTable = new Int32Array(256);\n  for (var i = 0; i < 256; i++) {\n    var c = i;\n    for (var h = 0; h < 8; h++) {\n      if (c & 1) {\n        c = 0xedB88320 ^ ((c >> 1) & 0x7fffffff);\n      } else {\n        c = (c >> 1) & 0x7fffffff;\n      }\n    }\n    crcTable[i] = c;\n  }\n\n  function crc32(data, start, end) {\n    var crc = -1;\n    for (var i = start; i < end; i++) {\n      var a = (crc ^ data[i]) & 0xff;\n      var b = crcTable[a];\n      crc = (crc >>> 8) ^ b;\n    }\n    return crc ^ -1;\n  }\n\n  function writePngChunk(type, body, data, offset) {\n    var p = offset;\n    var len = body.length;\n\n    data[p] = len >> 24 & 0xff;\n    data[p + 1] = len >> 16 & 0xff;\n    data[p + 2] = len >> 8 & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n\n    data.set(body, p);\n    p += body.length;\n\n    var crc = crc32(data, offset + 4, p);\n\n    data[p] = crc >> 24 & 0xff;\n    data[p + 1] = crc >> 16 & 0xff;\n    data[p + 2] = crc >> 8 & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n\n  function adler32(data, start, end) {\n    var a = 1;\n    var b = 0;\n    for (var i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return (b << 16) | a;\n  }\n\n  function encode(imgData, kind) {\n    var width = imgData.width;\n    var height = imgData.height;\n    var bitDepth, colorType, lineSize;\n    var bytes = imgData.data;\n\n    switch (kind) {\n      case ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = (width + 7) >> 3;\n        break;\n      case ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error('invalid format');\n    }\n\n    // prefix every row with predictor 0\n    var literals = new Uint8Array((1 + lineSize) * height);\n    var offsetLiterals = 0, offsetBytes = 0;\n    var y, i;\n    for (y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0; // no prediction\n      literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize),\n                   offsetLiterals);\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n\n    if (kind === ImageKind.GRAYSCALE_1BPP) {\n      // inverting for B/W\n      offsetLiterals = 0;\n      for (y = 0; y < height; y++) {\n        offsetLiterals++; // skipping predictor\n        for (i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xFF;\n        }\n      }\n    }\n\n    var ihdr = new Uint8Array([\n      width >> 24 & 0xff,\n      width >> 16 & 0xff,\n      width >> 8 & 0xff,\n      width & 0xff,\n      height >> 24 & 0xff,\n      height >> 16 & 0xff,\n      height >> 8 & 0xff,\n      height & 0xff,\n      bitDepth, // bit depth\n      colorType, // color type\n      0x00, // compression method\n      0x00, // filter method\n      0x00 // interlace method\n    ]);\n\n    var len = literals.length;\n    var maxBlockLength = 0xFFFF;\n\n    var deflateBlocks = Math.ceil(len / maxBlockLength);\n    var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    var pi = 0;\n    idat[pi++] = 0x78; // compression method and flags\n    idat[pi++] = 0x9c; // flags\n\n    var pos = 0;\n    while (len > maxBlockLength) {\n      // writing non-final DEFLATE blocks type 0 and length of 65535\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n\n    // writing non-final DEFLATE blocks type 0\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = len >> 8 & 0xff;\n    idat[pi++] = (~len & 0xffff) & 0xff;\n    idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n\n    var adler = adler32(literals, 0, literals.length); // checksum\n    idat[pi++] = adler >> 24 & 0xff;\n    idat[pi++] = adler >> 16 & 0xff;\n    idat[pi++] = adler >> 8 & 0xff;\n    idat[pi++] = adler & 0xff;\n\n    // PNG will consists: header, IHDR+data, IDAT+data, and IEND.\n    var pngLength = PNG_HEADER.length + (CHUNK_WRAPPER_SIZE * 3) +\n                    ihdr.length + idat.length;\n    var data = new Uint8Array(pngLength);\n    var offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk('IHDR', ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk('IDATA', idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk('IEND', new Uint8Array(0), data, offset);\n\n    return PDFJS.createObjectURL(data, 'image/png');\n  }\n\n  return function convertImgDataToPng(imgData) {\n    var kind = (imgData.kind === undefined ?\n                ImageKind.GRAYSCALE_1BPP : imgData.kind);\n    return encode(imgData, kind);\n  };\n})();\n\nvar SVGExtraState = (function SVGExtraStateClosure() {\n  function SVGExtraState() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n\n    // Default foreground and background colors\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = '#000000';\n\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = '';\n    this.lineCap = '';\n    this.miterLimit = 0;\n\n    this.dashArray = [];\n    this.dashPhase = 0;\n\n    this.dependencies = [];\n\n    // Clipping\n    this.clipId = '';\n    this.pendingClip = false;\n\n    this.maskId = '';\n  }\n\n  SVGExtraState.prototype = {\n    clone: function SVGExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function SVGExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  };\n  return SVGExtraState;\n})();\n\nvar SVGGraphics = (function SVGGraphicsClosure() {\n  function createScratchSVG(width, height) {\n    var NS = 'http://www.w3.org/2000/svg';\n    var svg = document.createElementNS(NS, 'svg:svg');\n    svg.setAttributeNS(null, 'version', '1.1');\n    svg.setAttributeNS(null, 'width', width + 'px');\n    svg.setAttributeNS(null, 'height', height + 'px');\n    svg.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n    return svg;\n  }\n\n  function opListToTree(opList) {\n    var opTree = [];\n    var tmp = [];\n    var opListLen = opList.length;\n\n    for (var x = 0; x < opListLen; x++) {\n      if (opList[x].fn === 'save') {\n        opTree.push({'fnId': 92, 'fn': 'group', 'items': []});\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if(opList[x].fn === 'restore') {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opList[x]);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Formats float number.\n   * @param value {number} number to format.\n   * @returns {string}\n   */\n  function pf(value) {\n    if (value === (value | 0)) { // integer number\n      return value.toString();\n    }\n    var s = value.toFixed(10);\n    var i = s.length - 1;\n    if (s[i] !== '0') {\n      return s;\n    }\n    // removing trailing zeros\n    do {\n      i--;\n    } while (s[i] === '0');\n    return s.substr(0, s[i] === '.' ? i : i + 1);\n  }\n\n  /**\n   * Formats transform matrix. The standard rotation, scale and translate\n   * matrices are replaced by their shorter forms, and for identity matrix\n   * returns empty string to save the memory.\n   * @param m {Array} matrix to format.\n   * @returns {string}\n   */\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return '';\n        }\n        return 'scale(' + pf(m[0]) + ' ' + pf(m[3]) + ')';\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        var a = Math.acos(m[0]) * 180 / Math.PI;\n        return 'rotate(' + pf(a) + ')';\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return 'translate(' + pf(m[4]) + ' ' + pf(m[5]) + ')';\n      }\n    }\n    return 'matrix(' + pf(m[0]) + ' ' + pf(m[1]) + ' ' + pf(m[2]) + ' ' +\n      pf(m[3]) + ' ' + pf(m[4]) + ' ' + pf(m[5]) + ')';\n  }\n\n  function SVGGraphics(commonObjs, objs) {\n    this.current = new SVGExtraState();\n    this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingEOFill = false;\n\n    this.embedFonts = false;\n    this.embeddedFonts = {};\n    this.cssStyle = null;\n  }\n\n  var NS = 'http://www.w3.org/2000/svg';\n  var XML_NS = 'http://www.w3.org/XML/1998/namespace';\n  var XLINK_NS = 'http://www.w3.org/1999/xlink';\n  var LINE_CAP_STYLES = ['butt', 'round', 'square'];\n  var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];\n  var clipCount = 0;\n  var maskCount = 0;\n\n  SVGGraphics.prototype = {\n    save: function SVGGraphics_save() {\n      this.transformStack.push(this.transformMatrix);\n      var old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    },\n\n    restore: function SVGGraphics_restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n\n      this.tgrp = document.createElementNS(NS, 'svg:g');\n      this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n      this.pgrp.appendChild(this.tgrp);\n    },\n\n    group: function SVGGraphics_group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    },\n\n    loadDependencies: function SVGGraphics_loadDependencies(operatorList) {\n      var fnArray = operatorList.fnArray;\n      var fnArrayLen = fnArray.length;\n      var argsArray = operatorList.argsArray;\n\n      var self = this;\n      for (var i = 0; i < fnArrayLen; i++) {\n        if (OPS.dependency === fnArray[i]) {\n          var deps = argsArray[i];\n          for (var n = 0, nn = deps.length; n < nn; n++) {\n            var obj = deps[n];\n            var common = obj.substring(0, 2) === 'g_';\n            var promise;\n            if (common) {\n              promise = new Promise(function(resolve) {\n                self.commonObjs.get(obj, resolve);\n              });\n            } else {\n              promise = new Promise(function(resolve) {\n                self.objs.get(obj, resolve);\n              });\n            }\n            this.current.dependencies.push(promise);\n          }\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    },\n\n    transform: function SVGGraphics_transform(a, b, c, d, e, f) {\n      var transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = PDFJS.Util.transform(this.transformMatrix,\n                                                  transformMatrix);\n\n      this.tgrp = document.createElementNS(NS, 'svg:g');\n      this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n    },\n\n    getSVG: function SVGGraphics_getSVG(operatorList, viewport) {\n      this.svg = createScratchSVG(viewport.width, viewport.height);\n      this.viewport = viewport;\n\n      return this.loadDependencies(operatorList).then(function () {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.pgrp = document.createElementNS(NS, 'svg:g'); // Parent group\n        this.pgrp.setAttributeNS(null, 'transform', pm(viewport.transform));\n        this.tgrp = document.createElementNS(NS, 'svg:g'); // Transform group\n        this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n        this.defs = document.createElementNS(NS, 'svg:defs');\n        this.pgrp.appendChild(this.defs);\n        this.pgrp.appendChild(this.tgrp);\n        this.svg.appendChild(this.pgrp);\n        var opTree = this.convertOpList(operatorList);\n        this.executeOpTree(opTree);\n        return this.svg;\n      }.bind(this));\n    },\n\n    convertOpList: function SVGGraphics_convertOpList(operatorList) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var fnArrayLen  = fnArray.length;\n      var REVOPS = [];\n      var opList = [];\n\n      for (var op in OPS) {\n        REVOPS[OPS[op]] = op;\n      }\n\n      for (var x = 0; x < fnArrayLen; x++) {\n        var fnId = fnArray[x];\n        opList.push({'fnId' : fnId, 'fn': REVOPS[fnId], 'args': argsArray[x]});\n      }\n      return opListToTree(opList);\n    },\n\n    executeOpTree: function SVGGraphics_executeOpTree(opTree) {\n      var opTreeLen = opTree.length;\n      for(var x = 0; x < opTreeLen; x++) {\n        var fn = opTree[x].fn;\n        var fnId = opTree[x].fnId;\n        var args = opTree[x].args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(args[0], args[1], args[2],\n                               args[3], args[4], args[5]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip('nonzero');\n            break;\n          case OPS.eoClip:\n            this.clip('evenodd');\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintJpegXObject:\n            this.paintJpegXObject(args[0], args[1], args[2]);\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(args[0], args[1], args[2], args[3],\n                           args[4], args[5]);\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTree[x].items);\n            break;\n          default:\n            warn('Unimplemented method '+ fn);\n            break;\n        }\n      }\n    },\n\n    setWordSpacing: function SVGGraphics_setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    },\n\n    setCharSpacing: function SVGGraphics_setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    },\n\n    nextLine: function SVGGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    setTextMatrix: function SVGGraphics_setTextMatrix(a, b, c, d, e, f) {\n      var current = this.current;\n      this.current.textMatrix = this.current.lineMatrix = [a, b, c, d, e, f];\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n\n      current.xcoords = [];\n      current.tspan = document.createElementNS(NS, 'svg:tspan');\n      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\n      current.tspan.setAttributeNS(null, 'font-size',\n                                   pf(current.fontSize) + 'px');\n      current.tspan.setAttributeNS(null, 'y', pf(-current.y));\n\n      current.txtElement = document.createElementNS(NS, 'svg:text');\n      current.txtElement.appendChild(current.tspan);\n    },\n\n    beginText: function SVGGraphics_beginText() {\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.lineMatrix = IDENTITY_MATRIX;\n      this.current.tspan = document.createElementNS(NS, 'svg:tspan');\n      this.current.txtElement = document.createElementNS(NS, 'svg:text');\n      this.current.txtgrp = document.createElementNS(NS, 'svg:g');\n      this.current.xcoords = [];\n    },\n\n    moveText: function SVGGraphics_moveText(x, y) {\n      var current = this.current;\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n\n      current.xcoords = [];\n      current.tspan = document.createElementNS(NS, 'svg:tspan');\n      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\n      current.tspan.setAttributeNS(null, 'font-size',\n                                   pf(current.fontSize) + 'px');\n      current.tspan.setAttributeNS(null, 'y', pf(-current.y));\n    },\n\n    showText: function SVGGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return;\n      }\n\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var x = 0, i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (glyph === null) {\n          // word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += -glyph * fontSize * 0.001;\n          continue;\n        }\n        current.xcoords.push(current.x + x * textHScale);\n\n        var width = glyph.width;\n        var character = glyph.fontChar;\n        var charWidth = width * widthAdvanceScale + charSpacing * fontDirection;\n        x += charWidth;\n\n        current.tspan.textContent += character;\n      }\n      if (vertical) {\n        current.y -= x * textHScale;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, 'x',\n                                   current.xcoords.map(pf).join(' '));\n      current.tspan.setAttributeNS(null, 'y', pf(-current.y));\n      current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\n      current.tspan.setAttributeNS(null, 'font-size',\n                                   pf(current.fontSize) + 'px');\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, 'font-style', current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, 'font-weight', current.fontWeight);\n      }\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, 'fill', current.fillColor);\n      }\n\n      current.txtElement.setAttributeNS(null, 'transform',\n                                        pm(current.textMatrix) +\n                                        ' scale(1, -1)' );\n      current.txtElement.setAttributeNS(XML_NS, 'xml:space', 'preserve');\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this.tgrp.appendChild(current.txtElement);\n\n    },\n\n    setLeadingMoveText: function SVGGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n\n    addFontStyle: function SVGGraphics_addFontStyle(fontObj) {\n      if (!this.cssStyle) {\n        this.cssStyle = document.createElementNS(NS, 'svg:style');\n        this.cssStyle.setAttributeNS(null, 'type', 'text/css');\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      var url = PDFJS.createObjectURL(fontObj.data, fontObj.mimetype);\n      this.cssStyle.textContent +=\n        '@font-face { font-family: \"' + fontObj.loadedName + '\";' +\n        ' src: url(' + url + '); }\\n';\n    },\n\n    setFont: function SVGGraphics_setFont(details) {\n      var current = this.current;\n      var fontObj = this.commonObjs.get(details[0]);\n      var size = details[1];\n      this.current.font = fontObj;\n\n      if (this.embedFonts && fontObj.data &&\n          !this.embeddedFonts[fontObj.loadedName]) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = (fontObj.fontMatrix ?\n                            fontObj.fontMatrix : FONT_IDENTITY_MATRIX);\n\n      var bold = fontObj.black ? (fontObj.bold ? 'bolder' : 'bold') :\n                                 (fontObj.bold ? 'bold' : 'normal');\n      var italic = fontObj.italic ? 'italic' : 'normal';\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = document.createElementNS(NS, 'svg:tspan');\n      current.tspan.setAttributeNS(null, 'y', pf(-current.y));\n      current.xcoords = [];\n    },\n\n    endText: function SVGGraphics_endText() {\n      if (this.current.pendingClip) {\n        this.cgrp.appendChild(this.tgrp);\n        this.pgrp.appendChild(this.cgrp);\n      } else {\n        this.pgrp.appendChild(this.tgrp);\n      }\n      this.tgrp = document.createElementNS(NS, 'svg:g');\n      this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n    },\n\n    // Path properties\n    setLineWidth: function SVGGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n    },\n    setLineCap: function SVGGraphics_setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function SVGGraphics_setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function SVGGraphics_setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    },\n    setStrokeRGBColor: function SVGGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function SVGGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.current.fillColor = color;\n      this.current.tspan = document.createElementNS(NS, 'svg:tspan');\n      this.current.xcoords = [];\n    },\n    setDash: function SVGGraphics_setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    },\n\n    constructPath: function SVGGraphics_constructPath(ops, args) {\n      var current = this.current;\n      var x = current.x, y = current.y;\n      current.path = document.createElementNS(NS, 'svg:path');\n      var d = [];\n      var opLength = ops.length;\n\n      for (var i = 0, j = 0; i < opLength; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            var xw = x + width;\n            var yh = y + height;\n            d.push('M', pf(x), pf(y), 'L', pf(xw) , pf(y), 'L', pf(xw), pf(yh),\n                   'L', pf(x), pf(yh), 'Z');\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push('M', pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push('L', pf(x) , pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push('C', pf(args[j]), pf(args[j + 1]), pf(args[j + 2]),\n                   pf(args[j + 3]), pf(x), pf(y));\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push('C', pf(x), pf(y), pf(args[j]), pf(args[j + 1]),\n                   pf(args[j + 2]), pf(args[j + 3]));\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push('C', pf(args[j]), pf(args[j + 1]), pf(x), pf(y),\n                   pf(x), pf(y));\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push('Z');\n            break;\n        }\n      }\n      current.path.setAttributeNS(null, 'd', d.join(' '));\n      current.path.setAttributeNS(null, 'stroke-miterlimit',\n                                  pf(current.miterLimit));\n      current.path.setAttributeNS(null, 'stroke-linecap', current.lineCap);\n      current.path.setAttributeNS(null, 'stroke-linejoin', current.lineJoin);\n      current.path.setAttributeNS(null, 'stroke-width',\n                                  pf(current.lineWidth) + 'px');\n      current.path.setAttributeNS(null, 'stroke-dasharray',\n                                  current.dashArray.map(pf).join(' '));\n      current.path.setAttributeNS(null, 'stroke-dashoffset',\n                                  pf(current.dashPhase) + 'px');\n      current.path.setAttributeNS(null, 'fill', 'none');\n\n      this.tgrp.appendChild(current.path);\n      if (current.pendingClip) {\n        this.cgrp.appendChild(this.tgrp);\n        this.pgrp.appendChild(this.cgrp);\n      } else {\n        this.pgrp.appendChild(this.tgrp);\n      }\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    },\n\n    endPath: function SVGGraphics_endPath() {\n      var current = this.current;\n      if (current.pendingClip) {\n        this.cgrp.appendChild(this.tgrp);\n        this.pgrp.appendChild(this.cgrp);\n      } else {\n        this.pgrp.appendChild(this.tgrp);\n      }\n      this.tgrp = document.createElementNS(NS, 'svg:g');\n      this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n    },\n\n    clip: function SVGGraphics_clip(type) {\n      var current = this.current;\n      // Add current path to clipping path\n      current.clipId = 'clippath' + clipCount;\n      clipCount++;\n      this.clippath = document.createElementNS(NS, 'svg:clipPath');\n      this.clippath.setAttributeNS(null, 'id', current.clipId);\n      var clipElement = current.element.cloneNode();\n      if (type === 'evenodd') {\n        clipElement.setAttributeNS(null, 'clip-rule', 'evenodd');\n      } else {\n        clipElement.setAttributeNS(null, 'clip-rule', 'nonzero');\n      }\n      this.clippath.setAttributeNS(null, 'transform', pm(this.transformMatrix));\n      this.clippath.appendChild(clipElement);\n      this.defs.appendChild(this.clippath);\n\n      // Create a new group with that attribute\n      current.pendingClip = true;\n      this.cgrp = document.createElementNS(NS, 'svg:g');\n      this.cgrp.setAttributeNS(null, 'clip-path',\n                               'url(#' + current.clipId + ')');\n      this.pgrp.appendChild(this.cgrp);\n    },\n\n    closePath: function SVGGraphics_closePath() {\n      var current = this.current;\n      var d = current.path.getAttributeNS(null, 'd');\n      d += 'Z';\n      current.path.setAttributeNS(null, 'd', d);\n    },\n\n    setLeading: function SVGGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n\n    setTextRise: function SVGGraphics_setTextRise(textRise) {\n      this.current.textRise = textRise;\n    },\n\n    setHScale: function SVGGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n\n    setGState: function SVGGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case 'LW':\n            this.setLineWidth(value);\n            break;\n          case 'LC':\n            this.setLineCap(value);\n            break;\n          case 'LJ':\n            this.setLineJoin(value);\n            break;\n          case 'ML':\n            this.setMiterLimit(value);\n            break;\n          case 'D':\n            this.setDash(value[0], value[1]);\n            break;\n          case 'RI':\n            break;\n          case 'FL':\n            break;\n          case 'Font':\n            this.setFont(value);\n            break;\n          case 'CA':\n            break;\n          case 'ca':\n            break;\n          case 'BM':\n            break;\n          case 'SMask':\n            break;\n        }\n      }\n    },\n\n    fill: function SVGGraphics_fill() {\n      var current = this.current;\n      current.element.setAttributeNS(null, 'fill', current.fillColor);\n    },\n\n    stroke: function SVGGraphics_stroke() {\n      var current = this.current;\n      current.element.setAttributeNS(null, 'stroke', current.strokeColor);\n      current.element.setAttributeNS(null, 'fill', 'none');\n    },\n\n    eoFill: function SVGGraphics_eoFill() {\n      var current = this.current;\n      current.element.setAttributeNS(null, 'fill', current.fillColor);\n      current.element.setAttributeNS(null, 'fill-rule', 'evenodd');\n    },\n\n    fillStroke: function SVGGraphics_fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    },\n\n    eoFillStroke: function SVGGraphics_eoFillStroke() {\n      this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');\n      this.fillStroke();\n    },\n\n    closeStroke: function SVGGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n\n    closeFillStroke: function SVGGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n\n    paintSolidColorImageMask:\n        function SVGGraphics_paintSolidColorImageMask() {\n      var current = this.current;\n      var rect = document.createElementNS(NS, 'svg:rect');\n      rect.setAttributeNS(null, 'x', '0');\n      rect.setAttributeNS(null, 'y', '0');\n      rect.setAttributeNS(null, 'width', '1px');\n      rect.setAttributeNS(null, 'height', '1px');\n      rect.setAttributeNS(null, 'fill', current.fillColor);\n      this.tgrp.appendChild(rect);\n    },\n\n    paintJpegXObject: function SVGGraphics_paintJpegXObject(objId, w, h) {\n      var current = this.current;\n      var imgObj = this.objs.get(objId);\n      var imgEl = document.createElementNS(NS, 'svg:image');\n      imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgObj.src);\n      imgEl.setAttributeNS(null, 'width', imgObj.width + 'px');\n      imgEl.setAttributeNS(null, 'height', imgObj.height + 'px');\n      imgEl.setAttributeNS(null, 'x', '0');\n      imgEl.setAttributeNS(null, 'y', pf(-h));\n      imgEl.setAttributeNS(null, 'transform',\n                           'scale(' + pf(1 / w) + ' ' + pf(-1 / h) + ')');\n\n      this.tgrp.appendChild(imgEl);\n      if (current.pendingClip) {\n        this.cgrp.appendChild(this.tgrp);\n        this.pgrp.appendChild(this.cgrp);\n      } else {\n        this.pgrp.appendChild(this.tgrp);\n      }\n    },\n\n    paintImageXObject: function SVGGraphics_paintImageXObject(objId) {\n      var imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn('Dependent image isn\\'t ready yet');\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintInlineImageXObject:\n        function SVGGraphics_paintInlineImageXObject(imgData, mask) {\n      var current = this.current;\n      var width = imgData.width;\n      var height = imgData.height;\n\n      var imgSrc = convertImgDataToPng(imgData);\n      var cliprect = document.createElementNS(NS, 'svg:rect');\n      cliprect.setAttributeNS(null, 'x', '0');\n      cliprect.setAttributeNS(null, 'y', '0');\n      cliprect.setAttributeNS(null, 'width', pf(width));\n      cliprect.setAttributeNS(null, 'height', pf(height));\n      current.element = cliprect;\n      this.clip('nonzero');\n      var imgEl = document.createElementNS(NS, 'svg:image');\n      imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgSrc);\n      imgEl.setAttributeNS(null, 'x', '0');\n      imgEl.setAttributeNS(null, 'y', pf(-height));\n      imgEl.setAttributeNS(null, 'width', pf(width) + 'px');\n      imgEl.setAttributeNS(null, 'height', pf(height) + 'px');\n      imgEl.setAttributeNS(null, 'transform',\n                           'scale(' + pf(1 / width) + ' ' +\n                           pf(-1 / height) + ')');\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this.tgrp.appendChild(imgEl);\n      }\n      if (current.pendingClip) {\n        this.cgrp.appendChild(this.tgrp);\n        this.pgrp.appendChild(this.cgrp);\n      } else {\n        this.pgrp.appendChild(this.tgrp);\n      }\n    },\n\n    paintImageMaskXObject:\n        function SVGGraphics_paintImageMaskXObject(imgData) {\n      var current = this.current;\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = current.fillColor;\n\n      current.maskId = 'mask' + maskCount++;\n      var mask = document.createElementNS(NS, 'svg:mask');\n      mask.setAttributeNS(null, 'id', current.maskId);\n\n      var rect = document.createElementNS(NS, 'svg:rect');\n      rect.setAttributeNS(null, 'x', '0');\n      rect.setAttributeNS(null, 'y', '0');\n      rect.setAttributeNS(null, 'width', pf(width));\n      rect.setAttributeNS(null, 'height', pf(height));\n      rect.setAttributeNS(null, 'fill', fillColor);\n      rect.setAttributeNS(null, 'mask', 'url(#' + current.maskId +')');\n      this.defs.appendChild(mask);\n      this.tgrp.appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    },\n\n    paintFormXObjectBegin:\n        function SVGGraphics_paintFormXObjectBegin(matrix, bbox) {\n      this.save();\n\n      if (isArray(matrix) && matrix.length === 6) {\n        this.transform(matrix[0], matrix[1], matrix[2],\n                       matrix[3], matrix[4], matrix[5]);\n      }\n\n      if (isArray(bbox) && bbox.length === 4) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n\n        var cliprect = document.createElementNS(NS, 'svg:rect');\n        cliprect.setAttributeNS(null, 'x', bbox[0]);\n        cliprect.setAttributeNS(null, 'y', bbox[1]);\n        cliprect.setAttributeNS(null, 'width', pf(width));\n        cliprect.setAttributeNS(null, 'height', pf(height));\n        this.current.element = cliprect;\n        this.clip('nonzero');\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd:\n        function SVGGraphics_paintFormXObjectEnd() {\n      this.restore();\n    }\n  };\n  return SVGGraphics;\n})();\n\nPDFJS.SVGGraphics = SVGGraphics;\n\n\n}).call((typeof window === 'undefined') ? this : window);\n\nif (!PDFJS.workerSrc && typeof document !== 'undefined') {\n  // workerSrc is not set -- using last script url to define default location\n  PDFJS.workerSrc = (function () {\n    'use strict';\n    var scriptTagContainer = document.body ||\n                             document.getElementsByTagName('head')[0];\n    var pdfjsSrc = scriptTagContainer.lastChild.src;\n    return pdfjsSrc && pdfjsSrc.replace(/\\.js$/i, '.worker.js');\n  })();\n}\n\nexport default PDFJS;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/pdf.js\n// module id = null\n// module chunks = ","<template>\n  <div class=\"cpdf\">\n    <div class=\"center\" style=\"overflow: hidden;\">\n      <div class=\"contor not-print\" style=\"text-align: center\">\n        <el-button @click=\"print\" size=\"mini\">打印</el-button>\n        <el-button @click=\"prev\" size=\"mini\">上一页</el-button>\n        <el-button @click=\"next\" size=\"mini\">下一页</el-button>\n        <span>Page: <span v-text=\"page_num\"></span> / <span v-text=\"page_count\"></span></span>\n\n        <el-button @click=\"addscale\" icon=\"el-icon-plus\" size=\"mini\"></el-button>\n        <el-button @click=\"minus\" icon=\"el-icon-minus\" size=\"mini\"></el-button>\n        <el-button id=\"prev\" @click=\"closepdf\" size=\"mini\">关闭</el-button>\n      </div>\n      <div style=\"padding: 5px;overflow-y: auto\">\n        <canvas class=\"canvasstyle\" id=\"the-canvas\"></canvas>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import PDFJS from '../../../../static/js/pdf.js'\n  import PDFWORKER from '../../../../static/js/pdf.worker'\n  import {\n    mapActions,\n    mapGetters\n  } from 'vuex';\n  export default {\n    name: 'PdfPrint',\n    props: ['pdfurl'],\n    mounted() {\n      let vm = this\n      PDFJS.workerSrc = \"../../../../static/js/pdf.worker.js\"\n      PDFJS.getDocument({data:vm.pdfurl}).then(function(pdfDoc_) { //初始化pdf\n        vm.pdfDoc = pdfDoc_;\n        vm.page_count = vm.pdfDoc.numPages\n        vm.renderPage(vm.pageNum);\n      });\n    },\n    data() {\n      return {\n        pdfDoc: null, //pdfjs 生成的对象\n        pageNum: 1,//\n        pageRendering: false,\n        pageNumPending: null,\n        scale: 1.2,//放大倍数\n        page_num: 0,//当前页数\n        page_count: 0,//总页数\n        maxscale: 2,//最大放大倍数\n        minscale: 0.8//最小放大倍数\n      }\n    },\n    methods: {\n      print(){\n        var canvas=document.getElementById(\"the-canvas\");\n        var ctx=canvas.getContext(\"2d\");\n        ctx.fillStyle=\"gold\";\n        ctx.strokeStyle=\"blue\";\n        ctx.lineWidth=5;\n        ctx.rect(50,50,100,100);\n        ctx.fill();\n        ctx.stroke();\n        var win=window.open();\n        console.log(canvas.toDataURL())\n        win.document.write(\"<br><img src='\"+canvas.toDataURL()+\"'/>\");\n        win.print();\n        win.location.reload();\n      },\n      renderPage(num) { //渲染pdf\n        let vm = this\n        this.pageRendering = true;\n        let canvas = document.getElementById('the-canvas')\n        // Using promise to fetch the page\n        this.pdfDoc.getPage(num).then(function(page) {\n          var viewport = page.getViewport(vm.scale);\n          //alert(vm.canvas.height)\n          canvas.height = viewport.height;\n          canvas.width = viewport.width;\n\n          // Render PDF page into canvas context\n          var renderContext = {\n            canvasContext: vm.ctx,\n            viewport: viewport\n          };\n          var renderTask = page.render(renderContext);\n\n          // Wait for rendering to finish\n          renderTask.promise.then(function() {\n            vm.pageRendering = false;\n            if(vm.pageNumPending !== null) {\n              // New page rendering is pending\n              vm.renderPage(vm.pageNumPending);\n              vm.pageNumPending = null;\n            }\n          });\n        });\n        vm.page_num = vm.pageNum;\n\n      },\n      addscale() {//放大\n        if(this.scale >= this.maxscale) {\n          return\n        }\n        this.scale += 0.1;\n        this.queueRenderPage(this.pageNum)\n      },\n      minus() {//缩小\n        if(this.scale <= this.minscale) {\n          return\n        }\n        this.scale -= 0.1;\n        this.queueRenderPage(this.pageNum)\n      },\n      prev() {//上一页\n        let vm = this\n        if(vm.pageNum <= 1) {\n          return;\n        }\n        vm.pageNum--;\n        vm.queueRenderPage(vm.pageNum);\n      },\n      next() {//下一页\n        let vm = this\n        if(vm.pageNum >= vm.page_count) {\n          return;\n        }\n        vm.pageNum++;\n        vm.queueRenderPage(vm.pageNum);\n      },\n      closepdf() {//关闭PDF\n        this.$emit('closepdf')\n      },\n      queueRenderPage(num) {\n        if(this.pageRendering) {\n          this.pageNumPending = num;\n        } else {\n          this.renderPage(num);\n        }\n      }\n    },\n    computed: {\n      ctx() {\n        let id = document.getElementById('the-canvas')\n        return id.getContext('2d');\n      }\n    },\n  }\n</script>\n<style>\n  .cpdf {\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, .5);\n    width: 100%;\n    /*height: 100%;*/\n    z-index: 99999;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  .center {\n    text-align: center;\n    height: 100%;\n    overflow: auto;\n    padding-top: 20px;\n  .contor {\n    margin-bottom: 10px;\n  }\n  }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/common/pdfPrint/PdfPrint.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cpdf\"},[_c('div',{staticClass:\"center\",staticStyle:{\"overflow\":\"hidden\"}},[_c('div',{staticClass:\"contor not-print\",staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.print}},[_vm._v(\"打印\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.prev}},[_vm._v(\"上一页\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.next}},[_vm._v(\"下一页\")]),_vm._v(\" \"),_c('span',[_vm._v(\"Page: \"),_c('span',{domProps:{\"textContent\":_vm._s(_vm.page_num)}}),_vm._v(\" / \"),_c('span',{domProps:{\"textContent\":_vm._s(_vm.page_count)}})]),_vm._v(\" \"),_c('el-button',{attrs:{\"icon\":\"el-icon-plus\",\"size\":\"mini\"},on:{\"click\":_vm.addscale}}),_vm._v(\" \"),_c('el-button',{attrs:{\"icon\":\"el-icon-minus\",\"size\":\"mini\"},on:{\"click\":_vm.minus}}),_vm._v(\" \"),_c('el-button',{attrs:{\"id\":\"prev\",\"size\":\"mini\"},on:{\"click\":_vm.closepdf}},[_vm._v(\"关闭\")])],1),_vm._v(\" \"),_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"padding\":\"5px\",\"overflow-y\":\"auto\"}},[_c('canvas',{staticClass:\"canvasstyle\",attrs:{\"id\":\"the-canvas\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7bf70bba\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/pdfPrint/PdfPrint.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7bf70bba\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PdfPrint.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PdfPrint.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PdfPrint.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7bf70bba\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PdfPrint.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/common/pdfPrint/PdfPrint.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"receiving-note-print page-print\">\n    <div class=\"right-topTitle\">\n\n    </div>\n    <div class=\"card-box right-content\">\n      <div class=\"right-content-body\" id=\"receivingNotePrint\">\n        <div class=\"receiving-note-print-title\">\n          收货单\n        </div>\n        <div style=\"padding: 5px;height: 160px\">\n          <info :id=\"id\"></info>\n        </div>\n        <div style=\"padding: 5px;margin-top: 7px\">\n          <detail-table :id=\"id\"></detail-table>\n        </div>\n        <div style=\"height: 45px\" class=\"not-print\">\n          <el-button size=\"mini\" type=\"primary\" style=\"float: right;margin: 7px 17px 17px 7px\" @click=\"print\">打印</el-button>\n        </div>\n        <!--<pdf-print @closepdf=\"isShow=false\" :pdfurl=\"pdfData\" v-if=\"isShow\"></pdf-print>-->\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import Info from \"../receivingNoteInfo/Info.vue\"\n  import DetailTable from \"../receivingNoteInfo/DetailTable.vue\"\n  import PdfPrint from \"../../common/pdfPrint/PdfPrint.vue\"\n  export default{\n    name:\"ReceivingNoteDetail\",\n    mounted(){\n      this.id = this.$route.params.id;\n    },\n    data(){\n      return{\n        id:\"\",\n        isShow:false,\n        pdfData:\"\",\n      }\n    },\n    methods:{\n      print(){\n//        this.getPdf(\"#receivingNotePrint\",\"收货单\",function (doc,blob) {\n//          var url = window.URL.createObjectURL(blob)\n//          var win = window.open(url)\n//          win.print();\n//          win.location.reload();\n//        })\n        window.print();\n      },\n\n    },\n    components:{\n      \"info\":Info,\n      \"detail-table\":DetailTable,\n      \"pdf-print\":PdfPrint\n    }\n  }\n</script>\n<style>\n  .receiving-note-print-title{\n    text-align: center;\n    padding: 20px 10px;\n    font-family: '微软雅黑 Bold', '微软雅黑 Regular', '微软雅黑';\n    font-weight: 700;\n    font-style: normal;\n    font-size: 20px;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"receiving-note-print page-print\"},[_c('div',{staticClass:\"right-topTitle\"}),_vm._v(\" \"),_c('div',{staticClass:\"card-box right-content\"},[_c('div',{staticClass:\"right-content-body\",attrs:{\"id\":\"receivingNotePrint\"}},[_c('div',{staticClass:\"receiving-note-print-title\"},[_vm._v(\"\\n        收货单\\n      \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\",\"height\":\"160px\"}},[_c('info',{attrs:{\"id\":_vm.id}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\",\"margin-top\":\"7px\"}},[_c('detail-table',{attrs:{\"id\":_vm.id}})],1),_vm._v(\" \"),_c('div',{staticClass:\"not-print\",staticStyle:{\"height\":\"45px\"}},[_c('el-button',{staticStyle:{\"float\":\"right\",\"margin\":\"7px 17px 17px 7px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.print}},[_vm._v(\"打印\")])],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d6a30c0e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-d6a30c0e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingNotePrint.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNotePrint.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNotePrint.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d6a30c0e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingNotePrint.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNotePrint/ReceivingNotePrint.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"right-topTitle\">\n    </div>\n    <div class=\"card-box right-content\">\n      <div class=\"right-content-body\">\n        <div style=\"padding: 5px;height: 180px\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n            基本信息\n          </span>\n          <info :id=\"id\"></info>\n        </div>\n        <div style=\"padding: 5px;\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n              明细信息\n          </span>\n          <detail-table :id=\"id\" ></detail-table>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import Info from \"./Info.vue\"\n  import DetailTable from \"./DetailTable.vue\"\n  import PutawayInformationAlert from \"./../../putInStorageManage/godownEntryInfo/PutawayInformationAlert.vue\"\n  export default{\n    name:\"ReceivingNoteDetail\",\n    mounted(){\n      this.id = this.$route.params.id\n    },\n    data(){\n      return{\n        id:\"\",\n        detailForm:{\n          titleData:[\n            {date:{name:\"测试1\",value:\"name\",show:true},date2:{name:\"测试2\",value:\"898\",show:true},state:\"nomal\"},\n            {date:{name:\"测试2\",value:\"code\",show:true},date2:{name:\"测试2\",value:\"898\",show:true},state:\"nomal\"},\n          ],\n          tableData:[\n            {date:\"123\",name:\"123\",code:\"456\"}\n          ]\n        },\n      }\n    },\n    methods:{\n      getInfo(){\n        this.$http.get(\"/ys-web-wms/recivingInspectionInfo/getInfo?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n\n          }else {\n            this.$notify.error({\n              title:\"收货单详情获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      }\n    },\n    components:{\n      \"info\":Info,\n      \"detail-table\":DetailTable,\n      \"putaway-information\":PutawayInformationAlert\n    },\n    watch:{\n      \"$route\":function () {\n        this.id = this.$route.params.id\n      }\n    }\n  }\n</script>\n<style>\n  .receiving-note-info-body .receiving-note-info-form{margin-bottom: -1px;}\n .receiving-note-info-form .el-form-item__label{  font-family: '微软雅黑';font-weight: 400;color:#333333}\n .receiving-note-info-form .el-form-item__content{padding: 2px 5px;border-left: 1px solid #e7e5e2}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-topTitle\"}),_vm._v(\" \"),_c('div',{staticClass:\"card-box right-content\"},[_c('div',{staticClass:\"right-content-body\"},[_c('div',{staticStyle:{\"padding\":\"5px\",\"height\":\"180px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n          基本信息\\n        \")]),_vm._v(\" \"),_c('info',{attrs:{\"id\":_vm.id}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n            明细信息\\n        \")]),_vm._v(\" \"),_c('detail-table',{attrs:{\"id\":_vm.id}})],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-21bb7e8a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-21bb7e8a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingNoteInfo.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteInfo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteInfo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-21bb7e8a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingNoteInfo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteInfo/ReceivingNoteInfo.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"receiving-note-add-top\">\n\n    </div>\n    <div class=\"card-box receiving-note-add-content\">\n      <div class=\"receiving-note-add-body\">\n        <div class=\"receiving-note-add-body-title\">\n          新建收货单\n        </div>\n        <div style=\"padding: 5px;height: 100px\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n            基本信息\n          </span>\n          <el-form ref=\"infoForm\" :model=\"formData\" :inline-message=\"true\" label-width=\"130px\" :rules=\"rules\" size=\"mini\" style=\"width: 100%\">\n            <!--<el-form-item label=\"单据号:\" class=\"receiving-note-add-form\" style=\"height:33px\">-->\n              <!--系统自动生成-->\n            <!--</el-form-item>-->\n            <el-form-item label=\"单据来源:\" class=\"receiving-note-add-form\" prop=\"receiptBillSourceKey\">\n              <el-select clearable v-model=\"formData.receiptBillSourceKey\" @change=\"billSourceChange\" filterable placeholder=\"单据来源\" size=\"mini\"  style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in billSource\"\n                  :key=\"item.code\"\n                  :label=\"item.name\"\n                  :value=\"item.code\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"入库仓库:\" class=\"receiving-note-add-form\" prop=\"warehouseId\">\n              <el-select clearable v-model=\"formData.warehouseId\" filterable placeholder=\"入库仓库\" @change=\"warehouseChange\" size=\"mini\" style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in warehouseList\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item.id\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"外来单号:\" class=\"receiving-note-add-form\">\n              <el-select clearable v-model=\"formData.externalBillCode\" filterable placeholder=\"外来单号\" size=\"mini\" style=\"width: 100%\">\n                <el-option\n                  v-for=\"item in externalCodeList\"\n                  :key=\"item\"\n                  :label=\"item\"\n                  :value=\"item\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"到货日期:\" class=\"receiving-note-add-form\">\n              <el-date-picker\n                style=\"width: 100%\"\n                size=\"mini\"\n                v-model=\"formData.arrivalDate\"\n                type=\"date\"\n                placeholder=\"选择日期\">\n              </el-date-picker>\n            </el-form-item>\n\n          </el-form>\n        </div>\n        <div style=\"padding: 5px;\">\n          <span style=\"font-style: normal;font-size: 12px;color: #2B7C9F;font-weight: bold;margin-left: 7px;\">\n              明细信息\n          </span>\n          <el-button size=\"mini\" style=\"float: right;margin: 0px 7px 2px 0px\" type=\"primary\" @click=\"addDetail\">添加明细</el-button>\n          <el-form :model=\"formData\" ref=\"detailForm\" :inline-message=\"true\">\n            <el-table :data=\"formData.materialList\" border style=\"width:100%\" class=\"operation-table\">\n              <el-table-column label=\"物料类别\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.materialCategoryCode'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.materialCategoryCode\">\n                    <el-select v-model=\"scope.row.materialCategoryCode\" @change=\"materialCategoryCodeChange(scope.row)\" placeholder=\"物料类别\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in materialCategoryList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.materialCategoryName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"物料名称\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.materialCode'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.materialName\">\n                    <el-select v-model=\"scope.row.materialCode\" @change=\"materialChange(scope.row)\" placeholder=\"物料名称\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in scope.row.materialList\"\n                        :key=\"item.materialCode\"\n                        :label=\"item.materialName+'('+item.materialCode+')'\"\n                        :value=\"item.materialCode\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.materialName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"物料编码\" align=\"center\" prop=\"materialCode\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"型号\" align=\"center\" prop=\"modelType\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"规格\" align=\"center\" prop=\"specification\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"单位\" align=\"center\" prop=\"unitName\" :show-overflow-tooltip=\"true\">\n              </el-table-column>\n              <el-table-column label=\"质检员\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.checkerId'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.checkerId\">\n                    <el-select v-model=\"scope.row.checkerId\" placeholder=\"质检员\" @change=\"checkerChange(scope.row)\" size=\"mini\">\n                      <el-option\n                        v-for=\"item in checkerList\"\n                        :key=\"item.id\"\n                        :label=\"item.name\"\n                        :value=\"item.id\">\n                      </el-option>\n                    </el-select>\n                  </el-form-item>\n                  <span v-else>{{scope.row.checkerName}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"到货数量\" align=\"center\" :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                  <el-form-item label=\"\" :prop=\"'materialList.'+scope.$index+'.arrivalAmount'\" v-if=\"scope.row.state=='edit'\" :rules=\"rules.arrivalAmount\">\n                    <el-input size=\"mini\" v-model=\"scope.row.arrivalAmount\"></el-input>\n                  </el-form-item>\n                  <span v-else>{{scope.row.arrivalAmount}}</span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"操作\" align=\"center\" width=\"87\">\n                <template slot-scope=\"scope\">\n                  <div v-if=\"scope.row.state=='edit'\">\n                    <el-button type=\"text\" size=\"mini\" @click=\"savelDetail(scope.row,scope.$index,'detailForm')\">保存</el-button>\n                    <el-button type=\"text\" size=\"mini\" @click=\"delDetail(scope.row,scope.$index)\">删除</el-button>\n                  </div>\n                  <div v-else>\n                    <el-button type=\"text\" size=\"mini\" @click=\"editDetail(scope.row,scope.$index)\">修改</el-button>\n                    <el-button type=\"text\" size=\"mini\" @click=\"delDetail(scope.row,scope.$index)\">删除</el-button>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-form>\n        </div>\n        <div style=\"text-align: right\" class=\"receiving-note-add-body-foot\">\n          <el-button size=\"mini\" @click=\"saveOrSubmit('save')\">保存</el-button>\n          <el-button size=\"mini\" type=\"primary\" @click=\"saveOrSubmit('submit')\">提交</el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  export default{\n    name:\"ReceivingNoteDetail\",\n    mounted(){\n\n    },\n    data(){\n      var _this = this;\n      var checkAmount = (rule, value, callback) => {\n        let isNum = _this.isNumber(value)\n        if (!isNum) {\n          callback(new Error('请填写正确的数值'));\n        } else {\n          if(value < 0 ){\n            callback(new Error('到货数量不能小于0'));\n          }\n          callback();\n        }\n      };\n      return{\n        materialCategoryList:[],//物料类别列表\n        externalCodeList:[],//外来单号列表\n        index:\"\",\n        formData:{\n          receiptBillSourceKey:\"\",//单据来源\n          warehouseId:\"\",//入库仓库Id\n          externalBillCode:\"\",//外来单号\n          arrivalDate:new Date(),//到货日期\n          materialList:[],//明细信息\n        },\n        rules:{\n          receiptBillSourceKey:[\n            { required: true, message: '请选择单据来源', trigger: 'change' },\n          ],\n          warehouseId:[\n            { required: true, message: '请选择入库仓库', trigger: 'change' },\n          ],\n          materialCategoryCode: [\n            { required: true, message: '请选择物料类别', trigger: 'change' },\n          ],\n          materialCode: [\n            { required: true, message: '请输入物料编码', trigger: 'change' },\n          ],\n          materialName: [\n            { required: true, message: '请选择物料', trigger: 'change' },\n          ],\n          specification: [\n            { required: true, message: '请输入规格', trigger: 'change' },\n          ],\n          unitName: [\n            { required: true, message: '请输入单位', trigger: 'change' },\n          ],\n          checkerId: [\n            { required: true, message: '请选择质检员', trigger: 'change' },\n          ],\n          arrivalAmount: [\n            { required: true, message: '请输入到货数量', trigger: 'change' },\n            { validator: checkAmount, trigger: 'change' }\n          ],\n        }\n      }\n    },\n    methods:{\n      saveOrSubmit(type){\n        if(this.checkForm(\"infoForm\") && this.checkForm(\"detailForm\")) {\n          if(this.formData.materialList.length==0){\n            this.$message({\n              message:\"请添加明细\",\n              type:\"warning\",\n              showClose:true\n            })\n            return;\n          }\n          let list = this.formData.materialList;\n          for(var i=0;i<list.length;i++){\n            list[i].materialList = \"\";\n          }\n          let submitData = Object.assign({},this.formData);\n          submitData.materialList = list;\n          let dataStr = JSON.stringify(submitData);\n          let postUrl = \"/ys-web-wms/recivingInspectionInfo/saveOrSubmitReceiptBill\";\n          let message = type == 'save' ? \"保存\" : \"提交\";\n          this.$http.post(postUrl, {data: dataStr, type: type}).then(function (result) {\n            if (result.data.state == 200) {\n              this.$message({\n                showClose: true,\n                message: message + \"成功\",\n                type: \"success\"\n              })\n              this.$router.push(\"/receivingInspection\")\n              this.$store.state.listDoAjax = this.$store.state.listDoAjax?false:true;\n            } else {\n              this.$notify.error({\n                title: message + \"失败\",\n                message: result.data.message\n              })\n            }\n          })\n        }\n      },\n      checkerChange(row){//质检员改变\n        this.getNameById(row.checkerId,this.checkerList,function (result) {\n          row.checkerName = result;\n        })\n      },\n      materialCategoryCodeChange(row){//物料类别改变\n        row.materialCode = \"\";\n        row.materialName = \"\";//名字\n        row.modelType = \"\";//型号\n        row.specification = \"\";//规格\n        row.unitName = \"\";//单位\n        this.getNameById(row.materialCategoryCode,this.materialCategoryList,function (result) {\n          row.materialCategoryName = result;\n        })\n        this.getMaterialInfoList(row.materialCategoryCode,function (res) {\n          row.materialList = res;\n        })\n      },\n      //物料选择时改变\n      materialChange(row){\n        let list = row.materialList;\n        for(var i=0;i<list.length;i++){\n          if(row.materialCode == list[i].materialCode){\n            row.materialName = list[i].materialName;//名字\n            row.modelType = list[i].modelType;//型号\n            row.specification = list[i].specification;//规格\n            row.unitName = list[i].unitName;//单位\n            return;\n          }\n        }\n      },\n      billSourceChange(val){\n        let _this = this;\n        this.getExternalCodeList(val,function (result) {\n          _this.externalCodeList = result;\n        })\n      },\n      //仓库改变时触发\n      warehouseChange(id){\n        let _this = this;\n        this.formData.materialList = [];\n        this.getCategoryList(id,function (res) {\n          _this.materialCategoryList = res;\n        });\n      },\n      editDetail(data,index){\n        data.state = \"edit\";\n      },\n      delDetail(data,index){\n        this.formData.materialList.splice(index, 1);\n      },\n      savelDetail(data,index,formName){\n        if(this.checkForm(formName)){\n          data.state = \"nomal\"\n        }\n      },\n      addDetail() {\n        if (this.checkForm(\"infoForm\")) {\n          this.formData.materialList.push({\n            materialList:[],//物料列表\n            materialCode: \"\",//物料编码\n            materialName: \"\",//物料名称\n            materialCategoryCode: \"\",//物料类别编码\n            materialCategoryName: \"\",//物料类别名称\n            modelType: \"\",//型号\n            specification: \"\",//规格\n            unitName: \"\",//单位\n            checkerName: '',//质检员名称\n            checkerId: '',//质检员id\n            arrivalAmount: '',//到货数量\n            state: \"edit\"\n          })\n        }else{\n          this.$message({\n            message:\"请先完善基本信息\",\n            type:\"warning\",\n            showClose:true\n          })\n        }\n      }\n    },\n    computed:{\n      \"billSource\":function () {//收货单据来源\n        return this.$store.state.enumList.billSource;\n      },\n      \"warehouseList\":function () {//仓库列表\n        return this.$store.state.selectList.warehouseList;\n      },\n      \"checkerList\":function () {//质检员列表\n        return this.$store.state.selectList.checkerList;\n      }\n    }\n  }\n</script>\n<style>\n  .receiving-note-add-body-foot{text-align: right;padding:7px 7px 17px 0px}\n .receiving-note-add-top{font-family: '微软雅黑';  font-weight: 400;  margin-left:12px;font-style: normal; color: #333333;  font-size:16px;ext-align: left;  line-height: 46px;height: 46px;}\n .receiving-note-add-content{padding: 5px 10px;background-color: #f9fafc;border-top: 1px solid #e7e5e2}\n .receiving-note-add-body{border: 1px solid #e7e5e2;background-color: white}\n  .receiving-note-add-body-title{\n    height: 32px;\n    font-family: '微软雅黑 Bold', '微软雅黑 Regular', '微软雅黑';\n    line-height: 32px;\n    background-color: #ebf8fa;\n    padding-left: 12px;\n    font-weight: 700;\n    font-style: normal;\n    font-size: 14px;\n    color: #2B7C9F;\n    text-align: left;\n  }\n  .receiving-note-add-form{height:35px;width: 49%;float: left;border: 1px solid #e7e5e2;margin-bottom: -1px;margin-left: -1px;}\n  .receiving-note-add-body .receiving-note-add-form{margin-bottom: -1px;}\n .receiving-note-add-form .el-form-item__label{  font-family: '微软雅黑';font-weight: 400;color:#333333}\n .receiving-note-add-form .el-form-item__content{padding: 2px 5px;border-left: 1px solid #e7e5e2}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"receiving-note-add-top\"}),_vm._v(\" \"),_c('div',{staticClass:\"card-box receiving-note-add-content\"},[_c('div',{staticClass:\"receiving-note-add-body\"},[_c('div',{staticClass:\"receiving-note-add-body-title\"},[_vm._v(\"\\n        新建收货单\\n      \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\",\"height\":\"100px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n          基本信息\\n        \")]),_vm._v(\" \"),_c('el-form',{ref:\"infoForm\",staticStyle:{\"width\":\"100%\"},attrs:{\"model\":_vm.formData,\"inline-message\":true,\"label-width\":\"130px\",\"rules\":_vm.rules,\"size\":\"mini\"}},[_c('el-form-item',{staticClass:\"receiving-note-add-form\",attrs:{\"label\":\"单据来源:\",\"prop\":\"receiptBillSourceKey\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"单据来源\",\"size\":\"mini\"},on:{\"change\":_vm.billSourceChange},model:{value:(_vm.formData.receiptBillSourceKey),callback:function ($$v) {_vm.$set(_vm.formData, \"receiptBillSourceKey\", $$v)},expression:\"formData.receiptBillSourceKey\"}},_vm._l((_vm.billSource),function(item){return _c('el-option',{key:item.code,attrs:{\"label\":item.name,\"value\":item.code}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"receiving-note-add-form\",attrs:{\"label\":\"入库仓库:\",\"prop\":\"warehouseId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"入库仓库\",\"size\":\"mini\"},on:{\"change\":_vm.warehouseChange},model:{value:(_vm.formData.warehouseId),callback:function ($$v) {_vm.$set(_vm.formData, \"warehouseId\", $$v)},expression:\"formData.warehouseId\"}},_vm._l((_vm.warehouseList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"receiving-note-add-form\",attrs:{\"label\":\"外来单号:\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"clearable\":\"\",\"filterable\":\"\",\"placeholder\":\"外来单号\",\"size\":\"mini\"},model:{value:(_vm.formData.externalBillCode),callback:function ($$v) {_vm.$set(_vm.formData, \"externalBillCode\", $$v)},expression:\"formData.externalBillCode\"}},_vm._l((_vm.externalCodeList),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}))],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"receiving-note-add-form\",attrs:{\"label\":\"到货日期:\"}},[_c('el-date-picker',{staticStyle:{\"width\":\"100%\"},attrs:{\"size\":\"mini\",\"type\":\"date\",\"placeholder\":\"选择日期\"},model:{value:(_vm.formData.arrivalDate),callback:function ($$v) {_vm.$set(_vm.formData, \"arrivalDate\", $$v)},expression:\"formData.arrivalDate\"}})],1)],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticStyle:{\"font-style\":\"normal\",\"font-size\":\"12px\",\"color\":\"#2B7C9F\",\"font-weight\":\"bold\",\"margin-left\":\"7px\"}},[_vm._v(\"\\n            明细信息\\n        \")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin\":\"0px 7px 2px 0px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.addDetail}},[_vm._v(\"添加明细\")]),_vm._v(\" \"),_c('el-form',{ref:\"detailForm\",attrs:{\"model\":_vm.formData,\"inline-message\":true}},[_c('el-table',{staticClass:\"operation-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.formData.materialList,\"border\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"物料类别\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.materialCategoryCode',\"rules\":_vm.rules.materialCategoryCode}},[_c('el-select',{attrs:{\"placeholder\":\"物料类别\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.materialCategoryCodeChange(scope.row)}},model:{value:(scope.row.materialCategoryCode),callback:function ($$v) {_vm.$set(scope.row, \"materialCategoryCode\", $$v)},expression:\"scope.row.materialCategoryCode\"}},_vm._l((_vm.materialCategoryList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.materialCategoryName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料名称\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.materialCode',\"rules\":_vm.rules.materialName}},[_c('el-select',{attrs:{\"placeholder\":\"物料名称\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.materialChange(scope.row)}},model:{value:(scope.row.materialCode),callback:function ($$v) {_vm.$set(scope.row, \"materialCode\", $$v)},expression:\"scope.row.materialCode\"}},_vm._l((scope.row.materialList),function(item){return _c('el-option',{key:item.materialCode,attrs:{\"label\":item.materialName+'('+item.materialCode+')',\"value\":item.materialCode}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.materialName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料编码\",\"align\":\"center\",\"prop\":\"materialCode\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"型号\",\"align\":\"center\",\"prop\":\"modelType\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"规格\",\"align\":\"center\",\"prop\":\"specification\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"单位\",\"align\":\"center\",\"prop\":\"unitName\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"质检员\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.checkerId',\"rules\":_vm.rules.checkerId}},[_c('el-select',{attrs:{\"placeholder\":\"质检员\",\"size\":\"mini\"},on:{\"change\":function($event){_vm.checkerChange(scope.row)}},model:{value:(scope.row.checkerId),callback:function ($$v) {_vm.$set(scope.row, \"checkerId\", $$v)},expression:\"scope.row.checkerId\"}},_vm._l((_vm.checkerList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1):_c('span',[_vm._v(_vm._s(scope.row.checkerName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"到货数量\",\"align\":\"center\",\"show-overflow-tooltip\":true},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('el-form-item',{attrs:{\"label\":\"\",\"prop\":'materialList.'+scope.$index+'.arrivalAmount',\"rules\":_vm.rules.arrivalAmount}},[_c('el-input',{attrs:{\"size\":\"mini\"},model:{value:(scope.row.arrivalAmount),callback:function ($$v) {_vm.$set(scope.row, \"arrivalAmount\", $$v)},expression:\"scope.row.arrivalAmount\"}})],1):_c('span',[_vm._v(_vm._s(scope.row.arrivalAmount))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"87\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.state=='edit')?_c('div',[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.savelDetail(scope.row,scope.$index,'detailForm')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.delDetail(scope.row,scope.$index)}}},[_vm._v(\"删除\")])],1):_c('div',[_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.editDetail(scope.row,scope.$index)}}},[_vm._v(\"修改\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.delDetail(scope.row,scope.$index)}}},[_vm._v(\"删除\")])],1)]}}])})],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"receiving-note-add-body-foot\",staticStyle:{\"text-align\":\"right\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.saveOrSubmit('save')}}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.saveOrSubmit('submit')}}},[_vm._v(\"提交\")])],1)])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7765cf96\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7765cf96\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ReceivingNoteAdd.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteAdd.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ReceivingNoteAdd.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7765cf96\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ReceivingNoteAdd.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/receivingNoteAdd/ReceivingNoteAdd.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div style=\"border: 1px solid grey;height: 120px;text-align: center\" >\n      <barcode :value=\"item.barcode\" :options=\"{ displayValue: false }\"></barcode>\n    </div>\n    <div style=\"border: 1px solid grey;height: 53px;font-size:12px;line-height:18px;color:black;font-family:'宋体';padding: 1px 0px 0px 0px\">\n      <el-row>\n        <el-col :span=\"5\" style=\"text-align: right;padding-right: 7px;\">物料类别:</el-col>\n        <el-col :span=\"7\">{{item.materialCategoryName}}</el-col>\n        <el-col :span=\"5\" style=\"text-align: right;padding-right: 7px;\">物料编码:</el-col>\n        <el-col :span=\"7\">{{item.materailCode}}</el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"5\" style=\"text-align: right;padding-right: 7px;\">物料名称:</el-col>\n        <el-col :span=\"7\">{{item.materialName}}</el-col>\n        <el-col :span=\"5\" style=\"text-align: right;padding-right: 7px;\">仓库:</el-col>\n        <el-col :span=\"7\">{{item.warehouseName}}</el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"6\" style=\"text-align: right;padding-right: 7px;\">到货日期:</el-col>\n        <el-col :span=\"6\">{{item.arrivalDate}}</el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n<script>\n  import VueBarcode from '@xkeshi/vue-barcode'\n  export default{\n    name:\"Tag\",\n    props:[\"item\"],\n    mounted(){\n\n    },\n    data(){\n      return{\n\n      }\n    },\n    methods:{\n\n    },\n    components:{\n      \"barcode\":VueBarcode,\n    }\n  }\n</script>\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/printTag/Tag.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"border\":\"1px solid grey\",\"height\":\"120px\",\"text-align\":\"center\"}},[_c('barcode',{attrs:{\"value\":_vm.item.barcode,\"options\":{ displayValue: false }}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"border\":\"1px solid grey\",\"height\":\"53px\",\"font-size\":\"12px\",\"line-height\":\"18px\",\"color\":\"black\",\"font-family\":\"'宋体'\",\"padding\":\"1px 0px 0px 0px\"}},[_c('el-row',[_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-right\":\"7px\"},attrs:{\"span\":5}},[_vm._v(\"物料类别:\")]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":7}},[_vm._v(_vm._s(_vm.item.materialCategoryName))]),_vm._v(\" \"),_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-right\":\"7px\"},attrs:{\"span\":5}},[_vm._v(\"物料编码:\")]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":7}},[_vm._v(_vm._s(_vm.item.materailCode))])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-right\":\"7px\"},attrs:{\"span\":5}},[_vm._v(\"物料名称:\")]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":7}},[_vm._v(_vm._s(_vm.item.materialName))]),_vm._v(\" \"),_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-right\":\"7px\"},attrs:{\"span\":5}},[_vm._v(\"仓库:\")]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":7}},[_vm._v(_vm._s(_vm.item.warehouseName))])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{staticStyle:{\"text-align\":\"right\",\"padding-right\":\"7px\"},attrs:{\"span\":6}},[_vm._v(\"到货日期:\")]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_vm._v(_vm._s(_vm.item.arrivalDate))])],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-33bd6dec\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/printTag/Tag.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <div class=\"right-content-body-topTitle not-print\">\n      打印标签\n    </div>\n    <div style=\"padding: 0px 5px;\" id=\"tagPrint\" class=\"printTag-waterfall\">\n      <div v-for=\"item in tagList\" id=\"tag\" style=\"width: 412px;height: 178px;margin-top: 17px\" class=\"printTag-tableBox\">\n        <tag :item=\"item\"></tag>\n      </div>\n    </div>\n    <div style=\"text-align: right;padding: 10px\">\n      <el-button @click=\"print\" size=\"mini\" type=\"primary\" class=\"not-print\">打印</el-button>\n      <el-button @click=\"cancel\" size=\"mini\" class=\"not-print\">取消</el-button>\n    </div>\n  </div>\n</template>\n<script>\n  import html2Canvas from 'html2canvas'\n  import JsPDF from 'jspdf'\n  import Tag from \"./Tag.vue\"\n  export default{\n    name:\"PrintAlert\",\n    props:[\"tagList\"],\n    mounted(){\n\n    },\n    data(){\n      return{\n        isShow:false,\n        pdfData:\"\"\n      }\n    },\n    methods:{\n      print(){\n        let _this = this;\n        let tagHeight = document.getElementById(\"tag\").clientHeight+17;\n        let tagWidth = document.getElementById(\"tag\").clientWidth+10;\n        let position = -10;\n        this.getPdf(\"#tagPrint\",\"标签打印\",position,tagWidth,tagHeight,function (doc,blob,pageData) {\n          var url = window.URL.createObjectURL(blob)\n//          var arr = pageData.split(','), mime = arr[0].match(/:(.*?);/)[1],\n//            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n//          while(n--){\n//            u8arr[n] = bstr.charCodeAt(n);\n//          }\n////          return new Blob([u8arr], {type:mime});\n//          var url = window.URL.createObjectURL(new Blob([u8arr], {type:mime}))\n          var win=window.open(url);\n          win.print();\n          win.location.reload();\n        });\n      },\n      cancel(){\n        this.$emit(\"close\",true)\n      }\n    },\n    components:{\n      'tag':Tag\n    }\n  }\n</script>\n<style>\n  /*瀑布流层*/\n  .printTag-waterfall{\n    -moz-column-count:1; /* Firefox */\n    -webkit-column-count:1; /* Safari 和 Chrome */\n    column-count:1;\n  }\n  /*一个内容层*/\n  .printTag-tableBox{\n    /*padding: 12px 2% 0 2%;*/\n    /*padding-left: 3%;*/\n    -moz-page-break-inside: avoid;\n    -webkit-column-break-inside: avoid;\n    break-inside: avoid;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/putInStorageManage/printTag/PrintAlert.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33bd6dec\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Tag.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tag.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Tag.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33bd6dec\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Tag.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/printTag/Tag.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"right-content-body-topTitle not-print\"},[_vm._v(\"\\n    打印标签\\n  \")]),_vm._v(\" \"),_c('div',{staticClass:\"printTag-waterfall\",staticStyle:{\"padding\":\"0px 5px\"},attrs:{\"id\":\"tagPrint\"}},_vm._l((_vm.tagList),function(item){return _c('div',{staticClass:\"printTag-tableBox\",staticStyle:{\"width\":\"412px\",\"height\":\"178px\",\"margin-top\":\"17px\"},attrs:{\"id\":\"tag\"}},[_c('tag',{attrs:{\"item\":item}})],1)})),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"right\",\"padding\":\"10px\"}},[_c('el-button',{staticClass:\"not-print\",attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.print}},[_vm._v(\"打印\")]),_vm._v(\" \"),_c('el-button',{staticClass:\"not-print\",attrs:{\"size\":\"mini\"},on:{\"click\":_vm.cancel}},[_vm._v(\"取消\")])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d4f5195\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/printTag/PrintAlert.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"receiving-note-print-tag\">\n    <div class=\"right-topTitle\">\n      单据号：{{$store.state.receivingInfo.receiptBillCode?$store.state.receivingInfo.receiptBillCode:\"\"}}\n    </div>\n    <el-dialog title=\"\" :visible.sync=\"dialogVisible\" top=\"3vh\">\n      <print-alert @close=\"dialogVisible=false\" :tagList=\"printData\"></print-alert>\n    </el-dialog>\n    <div class=\"card-box right-content not-print\">\n      <div class=\"right-content-body\">\n        <div style=\"padding: 5px;\">\n          <span class=\"right-content-body-little-title\">\n            明细信息\n          </span>\n          <el-table :data=\"tableData\" border tooltip-effect=\"dark\" style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\n            <el-table-column type=\"selection\" align=\"center\" :show-overflow-tooltip=\"true\"></el-table-column>\n            <el-table-column label=\"物料编码\" align=\"center\" prop=\"materailCode\" :show-overflow-tooltip=\"true\"></el-table-column>\n            <el-table-column label=\"物料名称\" align=\"center\" prop=\"materialName\" :show-overflow-tooltip=\"true\"></el-table-column>\n            <el-table-column label=\"仓库\" align=\"center\" prop=\"warehouseName\" :show-overflow-tooltip=\"true\"></el-table-column>\n            <el-table-column label=\"到货日期\" align=\"center\" prop=\"arrivalDate\" :show-overflow-tooltip=\"true\"></el-table-column>\n            <el-table-column label=\"操作\" align=\"center\" width=\"75\">\n              <template slot-scope=\"scope\">\n                <el-button size=\"mini\" type=\"primary\" plain @click=\"print(scope.row)\">打印</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          <el-button size=\"mini\" type=\"primary\"  @click=\"printAll\" style=\"margin: 10px\" v-if=\"multipleSelection.length>0\">打印所选标签</el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import PrintAlert from \"./PrintAlert.vue\"\n  export default{\n    name:\"PrintTag\",\n    mounted(){\n      this.id = this.$route.params.id;\n      this.getTagList();\n    },\n    data(){\n      return{\n        id:\"\",\n        dialogVisible:false,\n        tableData:[\n//          {materailCode:\"123\",materialName:\"1212\",warehouseName:\"23323\",arrivalDate:\"2018-1-18\",barcode:\"1209384758\"}\n        ],\n        multipleSelection:[],\n        printData:[],\n      }\n    },\n    methods:{\n      getTagList(){\n        this.$http.get(\"/ys-web-wms/receivingTag/getTagList?id=\"+this.id).then(function (result) {\n          if(result.data.state == 200){\n            this.tableData = result.data.data?result.data.data:[]\n          }else{\n            this.$notify.error({\n              title:\"标签列表信息获取失败\",\n              message:result.data.message\n            })\n          }\n        })\n      },\n      handleSelectionChange(val) {\n        this.multipleSelection = val;\n      },\n      print(val){\n        this.printData = [];\n        this.printData.push(val)\n        this.dialogVisible = true;\n      },\n      printAll(){\n        this.printData = [];\n        this.printData = Object.assign([],this.multipleSelection)\n        this.dialogVisible = true;\n      }\n    },\n    components:{\n      \"print-alert\":PrintAlert\n    }\n  }\n</script>\n<style>\n  .receiving-note-print-tag .el-dialog__header{padding: 0px}\n  .receiving-note-print-tag .el-dialog__body{padding: 0px}\n  .receiving-note-print-tag .el-dialog{width: 421px}\n  .receiving-note-print-tag .el-dialog__close{display: none}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/receivingInspection/printTag/PrintTag.vue","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d4f5195\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PrintAlert.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PrintAlert.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PrintAlert.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d4f5195\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PrintAlert.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/printTag/PrintAlert.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"receiving-note-print-tag\"},[_c('div',{staticClass:\"right-topTitle\"},[_vm._v(\"\\n    单据号：\"+_vm._s(_vm.$store.state.receivingInfo.receiptBillCode?_vm.$store.state.receivingInfo.receiptBillCode:\"\")+\"\\n  \")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"\",\"visible\":_vm.dialogVisible,\"top\":\"3vh\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('print-alert',{attrs:{\"tagList\":_vm.printData},on:{\"close\":function($event){_vm.dialogVisible=false}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"card-box right-content not-print\"},[_c('div',{staticClass:\"right-content-body\"},[_c('div',{staticStyle:{\"padding\":\"5px\"}},[_c('span',{staticClass:\"right-content-body-little-title\"},[_vm._v(\"\\n          明细信息\\n        \")]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"tooltip-effect\":\"dark\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"align\":\"center\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料编码\",\"align\":\"center\",\"prop\":\"materailCode\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"物料名称\",\"align\":\"center\",\"prop\":\"materialName\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"仓库\",\"align\":\"center\",\"prop\":\"warehouseName\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"到货日期\",\"align\":\"center\",\"prop\":\"arrivalDate\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"75\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":function($event){_vm.print(scope.row)}}},[_vm._v(\"打印\")])]}}])})],1),_vm._v(\" \"),(_vm.multipleSelection.length>0)?_c('el-button',{staticStyle:{\"margin\":\"10px\"},attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.printAll}},[_vm._v(\"打印所选标签\")]):_vm._e()],1)])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-502bd47b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/receivingInspection/printTag/PrintTag.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-502bd47b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PrintTag.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PrintTag.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PrintTag.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-502bd47b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PrintTag.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/receivingInspection/printTag/PrintTag.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}