{"version":3,"sources":["webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///src/components/common/SlideBar.vue","webpack:///./src/components/common/SlideBar.vue?58b5","webpack:///./src/components/common/SlideBar.vue","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/@xkeshi/vue-barcode/dist/vue-barcode.js"],"names":["module","exports","default","__webpack_require__","__esModule","SlideBar","String","leftEl","rightEl","init","offsetWidth","eventBind","styleObj","name","this","scrollTop","resizeHandler","scrollHandler","common_SlideBar","render","_h","$createElement","_c","_self","ref","staticClass","on","click","slideHandler","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","anObject","get","getIterator","it","iterFn","TypeError","call","global","factory","getEncoding","character","characterValue","encodings","toString","getBinary","characters","indexOf","autoSelectFromAB","string","isA","ranges","A_CHARS","B_CHARS","untilC","match","RegExp","fromCharCode","autoSelectFromC","substring","length","chars","cMatch","matchSetC","matchSetALength","matchSetBLength","checksum","number","i","result","parseInt","checksum$1","checksum$2","expandToUPCA","middleDigits","numberSystem","lastUpcE","expansion","EXPANSIONS","digitIndex","c","checksum$3","data","Math","ceil","mod10","sum","n","floor","mod11","weights","linearizeEncodings$1","nextLevel","encoded","Array","isArray","text","linearEncodings","push","fixOptions$1","options","marginTop","margin","marginBottom","marginRight","marginLeft","optionsFromStrings$1","intOptions","intOption","hasOwnProperty","getOptionsFromElement","element","property","defaults$1","hasAttribute","toLowerCase","getAttribute","getEncodingHeight","encoding","height","displayValue","fontSize","textMargin","getBarcodePadding","textWidth","barcodeWidth","textAlign","calculateEncodingAttributes","barcodeOptions","context","merge","ctx","document","createElement","getContext","font","fontOptions","measureText","width","messureText","max","barcodePadding","getTotalWidthOfEncodings","totalWidth","getMaximumHeightOfEncodings","maxHeight","getRenderProperties","selector","querySelectorAll","returnArray","querySelectedRenderProperties","HTMLCanvasElement","HTMLImageElement","imgElement","canvas","renderer","renderers","CanvasRenderer","afterRender","setAttribute","toDataURL","newCanvasRenderProperties","nodeName","SVGElement","SVGRenderer","_typeof","ObjectRenderer","InvalidElementException","encode","Encoder","encoder","valid","InvalidInputException","constructor","autoSelectBarcode","barcodes","Object","keys","renderProperties","Renderer","_SET_BY_CODE","Symbol","iterator","obj","prototype","classCallCheck","AwaitValue","value","AsyncGenerator","gen","resume","key","arg","Promise","resolve","then","settle","done","err","type","front","reject","next","back","_invoke","request","return","undefined","asyncIterator","throw","instance","Constructor","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_extends","assign","arguments","source","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","Barcode","CODE39","_Barcode","toUpperCase","mod43","getCharacter","mod43checksum","getPrototypeOf","search","SET_BY_CODE","SWAP","101","100","99","A_START_CHAR","B_START_CHAR","C_START_CHAR","C_CHARS","BARS","CODE128$1","CODE128","_this","bytes","split","map","char","charCodeAt","test","startIndex","shift","startSet","RangeError","encodingResult","replace","getBar","index","set$$1","charCode","pos","nextCode","nextSet","correctIndex","weight","autoSelectModes","newString","CODE128AUTO","_CODE","CODE128A","CODE128B","CODE128C","EANencoder","startBin","endBin","middleBin","binaries","L","G","R","O","E","structure","separator","binary","EAN13","flat","guardHeight","lastChar","flatEncoding","guardedEncoding","getStructure","leftSide","substr","rightSide","EAN8","EAN5","EAN2","UPC","PARITIES","UPCE","isValid","upcA","encodeMiddleDigits","checkDigit","parity","ITF14","binaryRepresentation","0","1","2","3","4","5","6","7","8","9","calculatePair","numberPair","number1Struct","number2Struct","ITF","MSI","ret","bin","addZeroes","b","MSI10","_MSI","MSI11","MSI1010","MSI1110","pharmacode","z","isNaN","slice","codabar","getEncodings","charAt","join","-","$",":","/",".","+","A","B","C","D","GenericBarcode","old","replaceObj","format","textPosition","background","lineColor","svgns","Error","prepareCanvas","encodingOptions","drawCanvasBarcode","drawCanvasText","moveCanvasDrawing","restoreCanvas","save","clearRect","fillStyle","fillRect","translate","yFrom","x","y","fillText","restore","svg","xmlDocument","currentX","prepareSVG","group","createGroup","setGroupOptions","drawSvgBarcode","drawSVGText","firstChild","removeChild","setSvgAttributes","drawRect","parent","barWidth","textElem","createElementNS","appendChild","createTextNode","rect","object","_Error","symbology","input","message","_Error2","_this2","NoElementException","_Error3","_this3","ErrorHandler","api","e","_options","_defaults","func","apply","handleCatch","API","JsBarcode","_renderProperties","_encodings","_errorHandler","getModule","barcodes$$1","wrapBarcodeCall","newOptions","registerBarcode","blank","size","zeroes","renderProperty","window","jQuery","fn","content","elementArray","each","required","tag","$slots","watch","generate","mounted","methods","$el"],"mappings":"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","file":"static/wms/static/js/0.af5e61b5b9bc71e3ac1a.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 0","<template>\n  <div ref=\"slideBar\" @click=\"slideHandler\" class=\"slide-box\">\n    <i class=\"el-icon-d-arrow-left\"></i>\n  </div>\n</template>\n<script>\n    export default {\n      name:'SlideBar',\n      props:{\n        leftEl:{\n          type:String,\n          required:true\n        },\n        rightEl:{\n          type:String,\n          required:true\n        },\n      },\n      data(){\n        return {\n          leftBox:null,\n          leftBoxWidth:0,\n          rightBoxWidth:0,\n          rightBox:null,\n          hiddenFlag:false,\n          transitionendHandler:null,\n          resizeHandler:null,\n          scrollHandler:null\n        }\n      },\n      mounted(){\n        this.leftBox = document.querySelector(this.leftEl);\n        this.rightBox = document.querySelector(this.rightEl);\n        this.init();\n      },\n      methods:{\n        init(){\n          this.setStyle(this.leftBox,{'position':'fixed','transition':'left .5s','left':'0px','top':'0px','zIndex':'99'});\n          this.setStyle(this.rightBox,{'position':'absolute','right':'0px','top':'0px','transition':'width .5s'});\n          this.leftBoxWidth = this.leftBox.offsetWidth;\n          this.rightBoxWidth = this.rightBox.offsetWidth;\n          this.eventBind();\n        },\n        slideHandler(){\n          if(!this.hiddenFlag){\n            this.$refs['slideBar'].querySelector('i').className='el-icon-d-arrow-left hidden';\n            this.setStyle(this.leftBox,{'left':-this.leftBoxWidth+'px'});\n            this.setStyle(this.rightBox,{'width':'100%'});\n            this.hiddenFlag = true;\n          }else{\n            this.$refs['slideBar'].querySelector('i').className='el-icon-d-arrow-left';\n            this.setStyle(this.leftBox,{'visibility':'visible'});\n            this.setStyle(this.leftBox,{'left':'0px'});\n            let rightBoxWidth = (this.rightBoxWidth/(this.leftBoxWidth+this.rightBoxWidth))*100;\n            this.setStyle(this.rightBox,{'width':rightBoxWidth+'%'});\n            this.hiddenFlag = false;\n          }\n          this.$store.commit('SET_SLIDE_FLAG');\n        },\n        setStyle(el,styleObj){\n          if(!el) return;\n          let styleKeys = Object.keys(styleObj);\n          styleKeys.forEach(function(name){\n            el.style[name] = styleObj[name];\n          })\n        },\n        eventBind(){\n          this.transitionendHandler=function(){\n            if(this.hiddenFlag){\n              this.setStyle(this.leftBox,{'visibility':'hidden'});\n            }\n          }.bind(this);\n\n          this.resizeHandler=function(event){\n              this.leftBoxWidth = this.leftBox.offsetWidth;\n              if(this.hiddenFlag){\n                this.setStyle(this.leftBox,{'left':-this.leftBoxWidth+'px'});\n              }\n          }.bind(this);\n\n          this.scrollHandler=function(event){\n            let stop = document.body.scrollTop;\n            this.setStyle(this.$refs['slideBar'],{top:stop+100+'px'})\n          }.bind(this);\n\n          this.leftBox.addEventListener('transitionend',this.transitionendHandler,true);\n          window.addEventListener('resize',this.resizeHandler);\n          window.addEventListener('scroll',this.scrollHandler);\n        }\n      },\n      beforeDestroy(){\n        this.leftBox.addEventListener('transitionend',this.transitionendHandler,true);\n          window.addEventListener('resize',this.resizeHandler);\n          window.addEventListener('scroll',this.scrollHandler);\n      }\n    }\n</script>\n<style scoped>\n  .slide-box{\n    position: absolute;\n    left:0px;\n    top:100px;\n    width: 0px;\n    height: 30px;\n    z-index: 99;\n    cursor: pointer;\n    border-left:none;\n    border-top:15px solid transparent;\n    border-bottom:15px solid transparent;\n    border-left:15px solid #F5F6FA;\n    transition: 'top 0.5s'\n  }\n  .slide-box i{\n    position: absolute;\n    left:-15px;\n    top: 8px;\n    font-size: 12px;\n    color: #666;\n    transition:All 0.5s ease-in-out 0.5s;\n  }\n  .slide-box .hidden{\n    transform:rotate(180deg);\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/common/SlideBar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"slideBar\",staticClass:\"slide-box\",on:{\"click\":_vm.slideHandler}},[_c('i',{staticClass:\"el-icon-d-arrow-left\"})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-26cc17da\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/common/SlideBar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-26cc17da\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SlideBar.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SlideBar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SlideBar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-26cc17da\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SlideBar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-26cc17da\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/common/SlideBar.vue\n// module id = null\n// module chunks = ","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 0","/*!\n * vue-barcode v0.2.0\n * https://github.com/xkeshi/vue-barcode\n *\n * Copyright (c) 2017 Xkeshi\n * Released under the MIT license\n *\n * Date: 2017-09-25T08:14:37.396Z\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.VueBarcode = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Barcode = function Barcode(data, options) {\n\tclassCallCheck(this, Barcode);\n\n\tthis.data = data;\n\tthis.text = options.text || data;\n\tthis.options = options;\n};\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/Code_39#Encoding\n\nvar CODE39 = function (_Barcode) {\n\tinherits(CODE39, _Barcode);\n\n\tfunction CODE39(data, options) {\n\t\tclassCallCheck(this, CODE39);\n\n\t\tdata = data.toUpperCase();\n\n\t\t// Calculate mod43 checksum if enabled\n\t\tif (options.mod43) {\n\t\t\tdata += getCharacter(mod43checksum(data));\n\t\t}\n\n\t\treturn possibleConstructorReturn(this, (CODE39.__proto__ || Object.getPrototypeOf(CODE39)).call(this, data, options));\n\t}\n\n\tcreateClass(CODE39, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// First character is always a *\n\t\t\tvar result = getEncoding(\"*\");\n\n\t\t\t// Take every character and add the binary representation to the result\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult += getEncoding(this.data[i]) + \"0\";\n\t\t\t}\n\n\t\t\t// Last character is always a *\n\t\t\tresult += getEncoding(\"*\");\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9A-Z\\-\\.\\ \\$\\/\\+\\%]+$/) !== -1;\n\t\t}\n\t}]);\n\treturn CODE39;\n}(Barcode);\n\n// All characters. The position in the array is the (checksum) value\n\n\nvar characters = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"-\", \".\", \" \", \"$\", \"/\", \"+\", \"%\", \"*\"];\n\n// The decimal representation of the characters, is converted to the\n// corresponding binary with the getEncoding function\nvar encodings = [20957, 29783, 23639, 30485, 20951, 29813, 23669, 20855, 29789, 23645, 29975, 23831, 30533, 22295, 30149, 24005, 21623, 29981, 23837, 22301, 30023, 23879, 30545, 22343, 30161, 24017, 21959, 30065, 23921, 22385, 29015, 18263, 29141, 17879, 29045, 18293, 17783, 29021, 18269, 17477, 17489, 17681, 20753, 35770];\n\n// Get the binary representation of a character by converting the encodings\n// from decimal to binary\nfunction getEncoding(character) {\n\treturn getBinary(characterValue(character));\n}\n\nfunction getBinary(characterValue) {\n\treturn encodings[characterValue].toString(2);\n}\n\nfunction getCharacter(characterValue) {\n\treturn characters[characterValue];\n}\n\nfunction characterValue(character) {\n\treturn characters.indexOf(character);\n}\n\nfunction mod43checksum(data) {\n\tvar checksum = 0;\n\tfor (var i = 0; i < data.length; i++) {\n\t\tchecksum += characterValue(data[i]);\n\t}\n\n\tchecksum = checksum % 43;\n\treturn checksum;\n}\n\nvar _SET_BY_CODE;\n\n// constants for internal usage\nvar SET_A = 0;\nvar SET_B = 1;\nvar SET_C = 2;\n\n// Special characters\nvar SHIFT = 98;\nvar START_A = 103;\nvar START_B = 104;\nvar START_C = 105;\nvar MODULO = 103;\nvar STOP = 106;\n\n// Get set by start code\nvar SET_BY_CODE = (_SET_BY_CODE = {}, defineProperty(_SET_BY_CODE, START_A, SET_A), defineProperty(_SET_BY_CODE, START_B, SET_B), defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE);\n\n// Get next set by code\nvar SWAP = {\n\t101: SET_A,\n\t100: SET_B,\n\t99: SET_C\n};\n\nvar A_START_CHAR = String.fromCharCode(208); // START_A + 105\nvar B_START_CHAR = String.fromCharCode(209); // START_B + 105\nvar C_START_CHAR = String.fromCharCode(210); // START_C + 105\n\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\nvar A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\";\n\n// 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\nvar B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\";\n\n// 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\nvar C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\";\n\n// CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\nvar BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];\n\n// This is the master class,\n// it does require the start code to be included in the string\n\nvar CODE128$1 = function (_Barcode) {\n\tinherits(CODE128, _Barcode);\n\n\tfunction CODE128(data, options) {\n\t\tclassCallCheck(this, CODE128);\n\n\t\t// Get array of ascii codes from data\n\t\tvar _this = possibleConstructorReturn(this, (CODE128.__proto__ || Object.getPrototypeOf(CODE128)).call(this, data.substring(1), options));\n\n\t\t_this.bytes = data.split('').map(function (char) {\n\t\t\treturn char.charCodeAt(0);\n\t\t});\n\t\treturn _this;\n\t}\n\n\tcreateClass(CODE128, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\t// ASCII value ranges 0-127, 200-211\n\t\t\treturn (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(this.data)\n\t\t\t);\n\t\t}\n\n\t\t// The public encoding function\n\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tvar bytes = this.bytes;\n\t\t\t// Remove the start code from the bytes and set its index\n\t\t\tvar startIndex = bytes.shift() - 105;\n\t\t\t// Get start set by index\n\t\t\tvar startSet = SET_BY_CODE[startIndex];\n\n\t\t\tif (startSet === undefined) {\n\t\t\t\tthrow new RangeError('The encoding does not start with a start character.');\n\t\t\t}\n\n\t\t\t// Start encode with the right type\n\t\t\tvar encodingResult = CODE128.next(bytes, 1, startSet);\n\n\t\t\treturn {\n\t\t\t\ttext: this.text === this.data ? this.text.replace(/[^\\x20-\\x7E]/g, '') : this.text,\n\t\t\t\tdata:\n\t\t\t\t// Add the start bits\n\t\t\t\tCODE128.getBar(startIndex) +\n\t\t\t\t// Add the encoded bits\n\t\t\t\tencodingResult.result +\n\t\t\t\t// Add the checksum\n\t\t\t\tCODE128.getBar((encodingResult.checksum + startIndex) % MODULO) +\n\t\t\t\t// Add the end bits\n\t\t\t\tCODE128.getBar(STOP)\n\t\t\t};\n\t\t}\n\n\t\t// Get a bar symbol by index\n\n\t}], [{\n\t\tkey: 'getBar',\n\t\tvalue: function getBar(index) {\n\t\t\treturn BARS[index] ? BARS[index].toString() : '';\n\t\t}\n\n\t\t// Correct an index by a set and shift it from the bytes array\n\n\t}, {\n\t\tkey: 'correctIndex',\n\t\tvalue: function correctIndex(bytes, set$$1) {\n\t\t\tif (set$$1 === SET_A) {\n\t\t\t\tvar charCode = bytes.shift();\n\t\t\t\treturn charCode < 32 ? charCode + 64 : charCode - 32;\n\t\t\t} else if (set$$1 === SET_B) {\n\t\t\t\treturn bytes.shift() - 32;\n\t\t\t} else {\n\t\t\t\treturn (bytes.shift() - 48) * 10 + bytes.shift() - 48;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next(bytes, pos, set$$1) {\n\t\t\tif (!bytes.length) {\n\t\t\t\treturn { result: '', checksum: 0 };\n\t\t\t}\n\n\t\t\tvar nextCode = void 0,\n\t\t\t    index = void 0;\n\n\t\t\t// Special characters\n\t\t\tif (bytes[0] >= 200) {\n\t\t\t\tindex = bytes.shift() - 105;\n\t\t\t\tvar nextSet = SWAP[index];\n\n\t\t\t\t// Swap to other set\n\t\t\t\tif (nextSet !== undefined) {\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, nextSet);\n\t\t\t\t}\n\t\t\t\t// Continue on current set but encode a special character\n\t\t\t\telse {\n\t\t\t\t\t\t// Shift\n\t\t\t\t\t\tif ((set$$1 === SET_A || set$$1 === SET_B) && index === SHIFT) {\n\t\t\t\t\t\t\t// Convert the next character so that is encoded correctly\n\t\t\t\t\t\t\tbytes[0] = set$$1 === SET_A ? bytes[0] > 95 ? bytes[0] - 96 : bytes[0] : bytes[0] < 32 ? bytes[0] + 96 : bytes[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set$$1);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t// Continue encoding\n\t\t\telse {\n\t\t\t\t\tindex = CODE128.correctIndex(bytes, set$$1);\n\t\t\t\t\tnextCode = CODE128.next(bytes, pos + 1, set$$1);\n\t\t\t\t}\n\n\t\t\t// Get the correct binary encoding and calculate the weight\n\t\t\tvar enc = CODE128.getBar(index);\n\t\t\tvar weight = index * pos;\n\n\t\t\treturn {\n\t\t\t\tresult: enc + nextCode.result,\n\t\t\t\tchecksum: weight + nextCode.checksum\n\t\t\t};\n\t\t}\n\t}]);\n\treturn CODE128;\n}(Barcode);\n\n// Match Set functions\nvar matchSetALength = function matchSetALength(string) {\n\treturn string.match(new RegExp('^' + A_CHARS + '*'))[0].length;\n};\nvar matchSetBLength = function matchSetBLength(string) {\n\treturn string.match(new RegExp('^' + B_CHARS + '*'))[0].length;\n};\nvar matchSetC = function matchSetC(string) {\n\treturn string.match(new RegExp('^' + C_CHARS + '*'))[0];\n};\n\n// CODE128A or CODE128B\nfunction autoSelectFromAB(string, isA) {\n\tvar ranges = isA ? A_CHARS : B_CHARS;\n\tvar untilC = string.match(new RegExp('^(' + ranges + '+?)(([0-9]{2}){2,})([^0-9]|$)'));\n\n\tif (untilC) {\n\t\treturn untilC[1] + String.fromCharCode(204) + autoSelectFromC(string.substring(untilC[1].length));\n\t}\n\n\tvar chars = string.match(new RegExp('^' + ranges + '+'))[0];\n\n\tif (chars.length === string.length) {\n\t\treturn string;\n\t}\n\n\treturn chars + String.fromCharCode(isA ? 205 : 206) + autoSelectFromAB(string.substring(chars.length), !isA);\n}\n\n// CODE128C\nfunction autoSelectFromC(string) {\n\tvar cMatch = matchSetC(string);\n\tvar length = cMatch.length;\n\n\tif (length === string.length) {\n\t\treturn string;\n\t}\n\n\tstring = string.substring(length);\n\n\t// Select A/B depending on the longest match\n\tvar isA = matchSetALength(string) >= matchSetBLength(string);\n\treturn cMatch + String.fromCharCode(isA ? 206 : 205) + autoSelectFromAB(string, isA);\n}\n\n// Detect Code Set (A, B or C) and format the string\nvar autoSelectModes = (function (string) {\n\tvar newString = void 0;\n\tvar cLength = matchSetC(string).length;\n\n\t// Select 128C if the string start with enough digits\n\tif (cLength >= 2) {\n\t\tnewString = C_START_CHAR + autoSelectFromC(string);\n\t} else {\n\t\t// Select A/B depending on the longest match\n\t\tvar isA = matchSetALength(string) > matchSetBLength(string);\n\t\tnewString = (isA ? A_START_CHAR : B_START_CHAR) + autoSelectFromAB(string, isA);\n\t}\n\n\treturn newString.replace(/[\\xCD\\xCE]([^])[\\xCD\\xCE]/, // Any sequence between 205 and 206 characters\n\tfunction (match, char) {\n\t\treturn String.fromCharCode(203) + char;\n\t});\n});\n\nvar CODE128AUTO = function (_CODE) {\n\tinherits(CODE128AUTO, _CODE);\n\n\tfunction CODE128AUTO(data, options) {\n\t\tclassCallCheck(this, CODE128AUTO);\n\n\t\t// ASCII value ranges 0-127, 200-211\n\t\tif (/^[\\x00-\\x7F\\xC8-\\xD3]+$/.test(data)) {\n\t\t\tvar _this = possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, autoSelectModes(data), options));\n\t\t} else {\n\t\t\tvar _this = possibleConstructorReturn(this, (CODE128AUTO.__proto__ || Object.getPrototypeOf(CODE128AUTO)).call(this, data, options));\n\t\t}\n\t\treturn possibleConstructorReturn(_this);\n\t}\n\n\treturn CODE128AUTO;\n}(CODE128$1);\n\nvar CODE128A = function (_CODE) {\n\tinherits(CODE128A, _CODE);\n\n\tfunction CODE128A(string, options) {\n\t\tclassCallCheck(this, CODE128A);\n\t\treturn possibleConstructorReturn(this, (CODE128A.__proto__ || Object.getPrototypeOf(CODE128A)).call(this, A_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128A, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + A_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128A;\n}(CODE128$1);\n\nvar CODE128B = function (_CODE) {\n\tinherits(CODE128B, _CODE);\n\n\tfunction CODE128B(string, options) {\n\t\tclassCallCheck(this, CODE128B);\n\t\treturn possibleConstructorReturn(this, (CODE128B.__proto__ || Object.getPrototypeOf(CODE128B)).call(this, B_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128B, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + B_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128B;\n}(CODE128$1);\n\nvar CODE128C = function (_CODE) {\n\tinherits(CODE128C, _CODE);\n\n\tfunction CODE128C(string, options) {\n\t\tclassCallCheck(this, CODE128C);\n\t\treturn possibleConstructorReturn(this, (CODE128C.__proto__ || Object.getPrototypeOf(CODE128C)).call(this, C_START_CHAR + string, options));\n\t}\n\n\tcreateClass(CODE128C, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn new RegExp('^' + C_CHARS + '+$').test(this.data);\n\t\t}\n\t}]);\n\treturn CODE128C;\n}(CODE128$1);\n\nvar EANencoder = function () {\n\tfunction EANencoder() {\n\t\tclassCallCheck(this, EANencoder);\n\n\t\t// Standard start end and middle bits\n\t\tthis.startBin = \"101\";\n\t\tthis.endBin = \"101\";\n\t\tthis.middleBin = \"01010\";\n\n\t\tthis.binaries = {\n\t\t\t// The L (left) type of encoding\n\t\t\t\"L\": [\"0001101\", \"0011001\", \"0010011\", \"0111101\", \"0100011\", \"0110001\", \"0101111\", \"0111011\", \"0110111\", \"0001011\"],\n\n\t\t\t// The G type of encoding\n\t\t\t\"G\": [\"0100111\", \"0110011\", \"0011011\", \"0100001\", \"0011101\", \"0111001\", \"0000101\", \"0010001\", \"0001001\", \"0010111\"],\n\n\t\t\t// The R (right) type of encoding\n\t\t\t\"R\": [\"1110010\", \"1100110\", \"1101100\", \"1000010\", \"1011100\", \"1001110\", \"1010000\", \"1000100\", \"1001000\", \"1110100\"],\n\n\t\t\t// The O (odd) encoding for UPC-E\n\t\t\t\"O\": [\"0001101\", \"0011001\", \"0010011\", \"0111101\", \"0100011\", \"0110001\", \"0101111\", \"0111011\", \"0110111\", \"0001011\"],\n\n\t\t\t// The E (even) encoding for UPC-E\n\t\t\t\"E\": [\"0100111\", \"0110011\", \"0011011\", \"0100001\", \"0011101\", \"0111001\", \"0000101\", \"0010001\", \"0001001\", \"0010111\"]\n\t\t};\n\t}\n\n\t// Convert a numberarray to the representing\n\n\n\tcreateClass(EANencoder, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode(number, structure, separator) {\n\t\t\t// Create the variable that should be returned at the end of the function\n\t\t\tvar result = \"\";\n\n\t\t\t// Make sure that the separator is set\n\t\t\tseparator = separator || \"\";\n\n\t\t\t// Loop all the numbers\n\t\t\tfor (var i = 0; i < number.length; i++) {\n\t\t\t\t// Using the L, G or R encoding and add it to the returning variable\n\t\t\t\tvar binary = this.binaries[structure[i]];\n\t\t\t\tif (binary) {\n\t\t\t\t\tresult += binary[number[i]];\n\t\t\t\t}\n\n\t\t\t\t// Add separator in between encodings\n\t\t\t\tif (i < number.length - 1) {\n\t\t\t\t\tresult += separator;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn EANencoder;\n}();\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Binary_encoding_of_data_digits_into_EAN-13_barcode\n\nvar EAN13 = function (_Barcode) {\n\tinherits(EAN13, _Barcode);\n\n\tfunction EAN13(data, options) {\n\t\tclassCallCheck(this, EAN13);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{12}$/) !== -1) {\n\t\t\tdata += checksum(data);\n\t\t}\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tvar _this = possibleConstructorReturn(this, (EAN13.__proto__ || Object.getPrototypeOf(EAN13)).call(this, data, options));\n\n\t\tif (!options.flat && options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\n\t\t// Adds a last character to the end of the barcode\n\t\t_this.lastChar = options.lastChar;\n\t\treturn _this;\n\t}\n\n\tcreateClass(EAN13, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{13}$/) !== -1 && this.data[12] == checksum(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\n\t\t// Define the EAN-13 structure\n\n\t}, {\n\t\tkey: \"getStructure\",\n\t\tvalue: function getStructure() {\n\t\t\treturn [\"LLLLLL\", \"LLGLGG\", \"LLGGLG\", \"LLGGGL\", \"LGLLGG\", \"LGGLLG\", \"LGGGLL\", \"LGLGLG\", \"LGLGGL\", \"LGGLGL\"];\n\t\t}\n\n\t\t// The \"standard\" way of printing EAN13 barcodes with guard bars\n\n\t}, {\n\t\tkey: \"guardedEncoding\",\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = [];\n\n\t\t\tvar structure = this.getStructure()[this.data[0]];\n\n\t\t\t// Get the string to be encoded on the left side of the EAN code\n\t\t\tvar leftSide = this.data.substr(1, 6);\n\n\t\t\t// Get the string to be encoded on the right side of the EAN code\n\t\t\tvar rightSide = this.data.substr(7, 6);\n\n\t\t\t// Add the first digigt\n\t\t\tif (this.options.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"000000000000\",\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the left side\n\t\t\tresult.push({\n\t\t\t\tdata: encoder.encode(leftSide, structure),\n\t\t\t\ttext: this.text.substr(1, 6),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the middle bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"01010\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the right side\n\t\t\tresult.push({\n\t\t\t\tdata: encoder.encode(rightSide, \"RRRRRR\"),\n\t\t\t\ttext: this.text.substr(7, 6),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\tif (this.options.lastChar && this.options.displayValue) {\n\t\t\t\tresult.push({ data: \"00\" });\n\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000\",\n\t\t\t\t\ttext: this.options.lastChar,\n\t\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: \"flatEncoding\",\n\t\tvalue: function flatEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = \"\";\n\n\t\t\tvar structure = this.getStructure()[this.data[0]];\n\n\t\t\tresult += \"101\";\n\t\t\tresult += encoder.encode(this.data.substr(1, 6), structure);\n\t\t\tresult += \"01010\";\n\t\t\tresult += encoder.encode(this.data.substr(7, 6), \"RRRRRR\");\n\t\t\tresult += \"101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN13;\n}(Barcode);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 0; i < 12; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 1; i < 12; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\n// Encoding documentation:\n// http://www.barcodeisland.com/ean8.phtml\n\nvar EAN8 = function (_Barcode) {\n\tinherits(EAN8, _Barcode);\n\n\tfunction EAN8(data, options) {\n\t\tclassCallCheck(this, EAN8);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{7}$/) !== -1) {\n\t\t\tdata += checksum$1(data);\n\t\t}\n\n\t\treturn possibleConstructorReturn(this, (EAN8.__proto__ || Object.getPrototypeOf(EAN8)).call(this, data, options));\n\t}\n\n\tcreateClass(EAN8, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{8}$/) !== -1 && this.data[7] == checksum$1(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar encoder = new EANencoder();\n\n\t\t\t// Create the return variable\n\t\t\tvar result = \"\";\n\n\t\t\t// Get the number to be encoded on the left side of the EAN code\n\t\t\tvar leftSide = this.data.substr(0, 4);\n\n\t\t\t// Get the number to be encoded on the right side of the EAN code\n\t\t\tvar rightSide = this.data.substr(4, 4);\n\n\t\t\t// Add the start bits\n\t\t\tresult += encoder.startBin;\n\n\t\t\t// Add the left side\n\t\t\tresult += encoder.encode(leftSide, \"LLLL\");\n\n\t\t\t// Add the middle bits\n\t\t\tresult += encoder.middleBin;\n\n\t\t\t// Add the right side\n\t\t\tresult += encoder.encode(rightSide, \"RRRR\");\n\n\t\t\t// Add the end bits\n\t\t\tresult += encoder.endBin;\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN8;\n}(Barcode);\n\n// Calulate the checksum digit\n\n\nfunction checksum$1(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 0; i < 7; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\tfor (i = 1; i < 7; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_5#Encoding\n\nvar EAN5 = function (_Barcode) {\n\tinherits(EAN5, _Barcode);\n\n\tfunction EAN5(data, options) {\n\t\tclassCallCheck(this, EAN5);\n\n\t\t// Define the EAN-13 structure\n\t\tvar _this = possibleConstructorReturn(this, (EAN5.__proto__ || Object.getPrototypeOf(EAN5)).call(this, data, options));\n\n\t\t_this.structure = [\"GGLLL\", \"GLGLL\", \"GLLGL\", \"GLLLG\", \"LGGLL\", \"LLGGL\", \"LLLGG\", \"LGLGL\", \"LGLLG\", \"LLGLG\"];\n\t\treturn _this;\n\t}\n\n\tcreateClass(EAN5, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{5}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar checksum = this.checksum();\n\n\t\t\t// Start bits\n\t\t\tvar result = \"1011\";\n\n\t\t\t// Use normal ean encoding with 01 in between all digits\n\t\t\tresult += encoder.encode(this.data, this.structure[checksum], \"01\");\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"checksum\",\n\t\tvalue: function checksum() {\n\t\t\tvar result = 0;\n\n\t\t\tresult += parseInt(this.data[0]) * 3;\n\t\t\tresult += parseInt(this.data[1]) * 9;\n\t\t\tresult += parseInt(this.data[2]) * 3;\n\t\t\tresult += parseInt(this.data[3]) * 9;\n\t\t\tresult += parseInt(this.data[4]) * 3;\n\n\t\t\treturn result % 10;\n\t\t}\n\t}]);\n\treturn EAN5;\n}(Barcode);\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/EAN_2#Encoding\n\nvar EAN2 = function (_Barcode) {\n\tinherits(EAN2, _Barcode);\n\n\tfunction EAN2(data, options) {\n\t\tclassCallCheck(this, EAN2);\n\n\t\tvar _this = possibleConstructorReturn(this, (EAN2.__proto__ || Object.getPrototypeOf(EAN2)).call(this, data, options));\n\n\t\t_this.structure = [\"LL\", \"LG\", \"GL\", \"GG\"];\n\t\treturn _this;\n\t}\n\n\tcreateClass(EAN2, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{2}$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar encoder = new EANencoder();\n\n\t\t\t// Choose the structure based on the number mod 4\n\t\t\tvar structure = this.structure[parseInt(this.data) % 4];\n\n\t\t\t// Start bits\n\t\t\tvar result = \"1011\";\n\n\t\t\t// Encode the two digits with 01 in between\n\t\t\tresult += encoder.encode(this.data, structure, \"01\");\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}]);\n\treturn EAN2;\n}(Barcode);\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n\nvar UPC = function (_Barcode) {\n\tinherits(UPC, _Barcode);\n\n\tfunction UPC(data, options) {\n\t\tclassCallCheck(this, UPC);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{11}$/) !== -1) {\n\t\t\tdata += checksum$2(data);\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (UPC.__proto__ || Object.getPrototypeOf(UPC)).call(this, data, options));\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tcreateClass(UPC, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{12}$/) !== -1 && this.data[11] == checksum$2(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"flatEncoding\",\n\t\tvalue: function flatEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += encoder.encode(this.data.substr(0, 6), \"LLLLLL\");\n\t\t\tresult += \"01010\";\n\t\t\tresult += encoder.encode(this.data.substr(6, 6), \"RRRRRR\");\n\t\t\tresult += \"101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"guardedEncoding\",\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = [];\n\n\t\t\t// Add the first digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(0, 1),\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\" + encoder.encode(this.data[0], \"L\"),\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the left side\n\t\t\tresult.push({\n\t\t\t\tdata: encoder.encode(this.data.substr(1, 5), \"LLLLL\"),\n\t\t\t\ttext: this.text.substr(1, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the middle bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"01010\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the right side\n\t\t\tresult.push({\n\t\t\t\tdata: encoder.encode(this.data.substr(6, 5), \"RRRRR\"),\n\t\t\t\ttext: this.text.substr(6, 5),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: encoder.encode(this.data[11], \"R\") + \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the last digit\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text.substr(11, 1),\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn UPC;\n}(Barcode);\n\n// Calulate the checksum digit\n// https://en.wikipedia.org/wiki/International_Article_Number_(EAN)#Calculation_of_checksum_digit\n\n\nfunction checksum$2(number) {\n\tvar result = 0;\n\n\tvar i;\n\tfor (i = 1; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]);\n\t}\n\tfor (i = 0; i < 11; i += 2) {\n\t\tresult += parseInt(number[i]) * 3;\n\t}\n\n\treturn (10 - result % 10) % 10;\n}\n\n// Encoding documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#Encoding\n//\n// UPC-E documentation:\n// https://en.wikipedia.org/wiki/Universal_Product_Code#UPC-E\n\nvar EXPANSIONS = [\"XX00000XXX\", \"XX10000XXX\", \"XX20000XXX\", \"XXX00000XX\", \"XXXX00000X\", \"XXXXX00005\", \"XXXXX00006\", \"XXXXX00007\", \"XXXXX00008\", \"XXXXX00009\"];\n\nvar PARITIES = [[\"EEEOOO\", \"OOOEEE\"], [\"EEOEOO\", \"OOEOEE\"], [\"EEOOEO\", \"OOEEOE\"], [\"EEOOOE\", \"OOEEEO\"], [\"EOEEOO\", \"OEOOEE\"], [\"EOOEEO\", \"OEEOOE\"], [\"EOOOEE\", \"OEEEOO\"], [\"EOEOEO\", \"OEOEOE\"], [\"EOEOOE\", \"OEOEEO\"], [\"EOOEOE\", \"OEEOEO\"]];\n\nvar UPCE = function (_Barcode) {\n\tinherits(UPCE, _Barcode);\n\n\tfunction UPCE(data, options) {\n\t\tclassCallCheck(this, UPCE);\n\n\t\tvar _this = possibleConstructorReturn(this, (UPCE.__proto__ || Object.getPrototypeOf(UPCE)).call(this, data, options));\n\t\t// Code may be 6 or 8 digits;\n\t\t// A 7 digit code is ambiguous as to whether the extra digit\n\t\t// is a UPC-A check or number system digit.\n\n\n\t\t_this.isValid = false;\n\t\tif (data.search(/^[0-9]{6}$/) !== -1) {\n\t\t\t_this.middleDigits = data;\n\t\t\t_this.upcA = expandToUPCA(data, \"0\");\n\t\t\t_this.text = options.text || '' + _this.upcA[0] + data + _this.upcA[_this.upcA.length - 1];\n\t\t\t_this.isValid = true;\n\t\t} else if (data.search(/^[01][0-9]{7}$/) !== -1) {\n\t\t\t_this.middleDigits = data.substring(1, data.length - 1);\n\t\t\t_this.upcA = expandToUPCA(_this.middleDigits, data[0]);\n\n\t\t\tif (_this.upcA[_this.upcA.length - 1] === data[data.length - 1]) {\n\t\t\t\t_this.isValid = true;\n\t\t\t} else {\n\t\t\t\t// checksum mismatch\n\t\t\t\treturn possibleConstructorReturn(_this);\n\t\t\t}\n\t\t} else {\n\t\t\treturn possibleConstructorReturn(_this);\n\t\t}\n\n\t\t_this.displayValue = options.displayValue;\n\n\t\t// Make sure the font is not bigger than the space between the guard bars\n\t\tif (options.fontSize > options.width * 10) {\n\t\t\t_this.fontSize = options.width * 10;\n\t\t} else {\n\t\t\t_this.fontSize = options.fontSize;\n\t\t}\n\n\t\t// Make the guard bars go down half the way of the text\n\t\t_this.guardHeight = options.height + _this.fontSize / 2 + options.textMargin;\n\t\treturn _this;\n\t}\n\n\tcreateClass(UPCE, [{\n\t\tkey: 'valid',\n\t\tvalue: function valid() {\n\t\t\treturn this.isValid;\n\t\t}\n\t}, {\n\t\tkey: 'encode',\n\t\tvalue: function encode() {\n\t\t\tif (this.options.flat) {\n\t\t\t\treturn this.flatEncoding();\n\t\t\t} else {\n\t\t\t\treturn this.guardedEncoding();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'flatEncoding',\n\t\tvalue: function flatEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = \"\";\n\n\t\t\tresult += \"101\";\n\t\t\tresult += this.encodeMiddleDigits(encoder);\n\t\t\tresult += \"010101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'guardedEncoding',\n\t\tvalue: function guardedEncoding() {\n\t\t\tvar encoder = new EANencoder();\n\t\t\tvar result = [];\n\n\t\t\t// Add the UPC-A number system digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[0],\n\t\t\t\t\toptions: { textAlign: \"left\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Add the guard bars\n\t\t\tresult.push({\n\t\t\t\tdata: \"101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the 6 UPC-E digits\n\t\t\tresult.push({\n\t\t\t\tdata: this.encodeMiddleDigits(encoder),\n\t\t\t\ttext: this.text.substring(1, 7),\n\t\t\t\toptions: { fontSize: this.fontSize }\n\t\t\t});\n\n\t\t\t// Add the end bits\n\t\t\tresult.push({\n\t\t\t\tdata: \"010101\",\n\t\t\t\toptions: { height: this.guardHeight }\n\t\t\t});\n\n\t\t\t// Add the UPC-A check digit beneath the quiet zone\n\t\t\tif (this.displayValue) {\n\t\t\t\tresult.push({\n\t\t\t\t\tdata: \"00000000\",\n\t\t\t\t\ttext: this.text[7],\n\t\t\t\t\toptions: { textAlign: \"right\", fontSize: this.fontSize }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'encodeMiddleDigits',\n\t\tvalue: function encodeMiddleDigits(encoder) {\n\t\t\tvar numberSystem = this.upcA[0];\n\t\t\tvar checkDigit = this.upcA[this.upcA.length - 1];\n\t\t\tvar parity = PARITIES[parseInt(checkDigit)][parseInt(numberSystem)];\n\t\t\treturn encoder.encode(this.middleDigits, parity);\n\t\t}\n\t}]);\n\treturn UPCE;\n}(Barcode);\n\nfunction expandToUPCA(middleDigits, numberSystem) {\n\tvar lastUpcE = parseInt(middleDigits[middleDigits.length - 1]);\n\tvar expansion = EXPANSIONS[lastUpcE];\n\n\tvar result = \"\";\n\tvar digitIndex = 0;\n\tfor (var i = 0; i < expansion.length; i++) {\n\t\tvar c = expansion[i];\n\t\tif (c === 'X') {\n\t\t\tresult += middleDigits[digitIndex++];\n\t\t} else {\n\t\t\tresult += c;\n\t\t}\n\t}\n\n\tresult = '' + numberSystem + result;\n\treturn '' + result + checksum$2(result);\n}\n\nvar ITF14 = function (_Barcode) {\n\tinherits(ITF14, _Barcode);\n\n\tfunction ITF14(data, options) {\n\t\tclassCallCheck(this, ITF14);\n\n\t\t// Add checksum if it does not exist\n\t\tif (data.search(/^[0-9]{13}$/) !== -1) {\n\t\t\tdata += checksum$3(data);\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (ITF14.__proto__ || Object.getPrototypeOf(ITF14)).call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tcreateClass(ITF14, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]{14}$/) !== -1 && this.data[13] == checksum$3(this.data);\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar result = \"1010\";\n\n\t\t\t// Calculate all the digit pairs\n\t\t\tfor (var i = 0; i < 14; i += 2) {\n\t\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t\t}\n\n\t\t\t// Always add the same end bits\n\t\t\tresult += \"11101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Calculate the data of a number pair\n\n\t}, {\n\t\tkey: \"calculatePair\",\n\t\tvalue: function calculatePair(numberPair) {\n\t\t\tvar result = \"\";\n\n\t\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t\t// Take every second bit and add to the result\n\t\t\tfor (var i = 0; i < 5; i++) {\n\t\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn ITF14;\n}(Barcode);\n\n// Calulate the checksum digit\n\n\nfunction checksum$3(data) {\n\tvar result = 0;\n\n\tfor (var i = 0; i < 13; i++) {\n\t\tresult += parseInt(data[i]) * (3 - i % 2 * 2);\n\t}\n\n\treturn Math.ceil(result / 10) * 10 - result;\n}\n\nvar ITF = function (_Barcode) {\n\tinherits(ITF, _Barcode);\n\n\tfunction ITF(data, options) {\n\t\tclassCallCheck(this, ITF);\n\n\t\tvar _this = possibleConstructorReturn(this, (ITF.__proto__ || Object.getPrototypeOf(ITF)).call(this, data, options));\n\n\t\t_this.binaryRepresentation = {\n\t\t\t\"0\": \"00110\",\n\t\t\t\"1\": \"10001\",\n\t\t\t\"2\": \"01001\",\n\t\t\t\"3\": \"11000\",\n\t\t\t\"4\": \"00101\",\n\t\t\t\"5\": \"10100\",\n\t\t\t\"6\": \"01100\",\n\t\t\t\"7\": \"00011\",\n\t\t\t\"8\": \"10010\",\n\t\t\t\"9\": \"01010\"\n\t\t};\n\t\treturn _this;\n\t}\n\n\tcreateClass(ITF, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^([0-9]{2})+$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// Always add the same start bits\n\t\t\tvar result = \"1010\";\n\n\t\t\t// Calculate all the digit pairs\n\t\t\tfor (var i = 0; i < this.data.length; i += 2) {\n\t\t\t\tresult += this.calculatePair(this.data.substr(i, 2));\n\t\t\t}\n\n\t\t\t// Always add the same end bits\n\t\t\tresult += \"11101\";\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Calculate the data of a number pair\n\n\t}, {\n\t\tkey: \"calculatePair\",\n\t\tvalue: function calculatePair(numberPair) {\n\t\t\tvar result = \"\";\n\n\t\t\tvar number1Struct = this.binaryRepresentation[numberPair[0]];\n\t\t\tvar number2Struct = this.binaryRepresentation[numberPair[1]];\n\n\t\t\t// Take every second bit and add to the result\n\t\t\tfor (var i = 0; i < 5; i++) {\n\t\t\t\tresult += number1Struct[i] == \"1\" ? \"111\" : \"1\";\n\t\t\t\tresult += number2Struct[i] == \"1\" ? \"000\" : \"0\";\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}]);\n\treturn ITF;\n}(Barcode);\n\n// Encoding documentation\n// https://en.wikipedia.org/wiki/MSI_Barcode#Character_set_and_binary_lookup\n\nvar MSI = function (_Barcode) {\n\tinherits(MSI, _Barcode);\n\n\tfunction MSI(data, options) {\n\t\tclassCallCheck(this, MSI);\n\t\treturn possibleConstructorReturn(this, (MSI.__proto__ || Object.getPrototypeOf(MSI)).call(this, data, options));\n\t}\n\n\tcreateClass(MSI, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\t// Start bits\n\t\t\tvar ret = \"110\";\n\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t// Convert the character to binary (always 4 binary digits)\n\t\t\t\tvar digit = parseInt(this.data[i]);\n\t\t\t\tvar bin = digit.toString(2);\n\t\t\t\tbin = addZeroes(bin, 4 - bin.length);\n\n\t\t\t\t// Add 100 for every zero and 110 for every 1\n\t\t\t\tfor (var b = 0; b < bin.length; b++) {\n\t\t\t\t\tret += bin[b] == \"0\" ? \"100\" : \"110\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// End bits\n\t\t\tret += \"1001\";\n\n\t\t\treturn {\n\t\t\t\tdata: ret,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[0-9]+$/) !== -1;\n\t\t}\n\t}]);\n\treturn MSI;\n}(Barcode);\n\nfunction addZeroes(number, n) {\n\tfor (var i = 0; i < n; i++) {\n\t\tnumber = \"0\" + number;\n\t}\n\treturn number;\n}\n\nfunction mod10(number) {\n\tvar sum = 0;\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[i]);\n\t\tif ((i + number.length) % 2 === 0) {\n\t\t\tsum += n;\n\t\t} else {\n\t\t\tsum += n * 2 % 10 + Math.floor(n * 2 / 10);\n\t\t}\n\t}\n\treturn (10 - sum % 10) % 10;\n}\n\nfunction mod11(number) {\n\tvar sum = 0;\n\tvar weights = [2, 3, 4, 5, 6, 7];\n\tfor (var i = 0; i < number.length; i++) {\n\t\tvar n = parseInt(number[number.length - 1 - i]);\n\t\tsum += weights[i % weights.length] * n;\n\t}\n\treturn (11 - sum % 11) % 11;\n}\n\nvar MSI10 = function (_MSI) {\n\tinherits(MSI10, _MSI);\n\n\tfunction MSI10(data, options) {\n\t\tclassCallCheck(this, MSI10);\n\t\treturn possibleConstructorReturn(this, (MSI10.__proto__ || Object.getPrototypeOf(MSI10)).call(this, data + mod10(data), options));\n\t}\n\n\treturn MSI10;\n}(MSI);\n\nvar MSI11 = function (_MSI) {\n\tinherits(MSI11, _MSI);\n\n\tfunction MSI11(data, options) {\n\t\tclassCallCheck(this, MSI11);\n\t\treturn possibleConstructorReturn(this, (MSI11.__proto__ || Object.getPrototypeOf(MSI11)).call(this, data + mod11(data), options));\n\t}\n\n\treturn MSI11;\n}(MSI);\n\nvar MSI1010 = function (_MSI) {\n\tinherits(MSI1010, _MSI);\n\n\tfunction MSI1010(data, options) {\n\t\tclassCallCheck(this, MSI1010);\n\n\t\tdata += mod10(data);\n\t\tdata += mod10(data);\n\t\treturn possibleConstructorReturn(this, (MSI1010.__proto__ || Object.getPrototypeOf(MSI1010)).call(this, data, options));\n\t}\n\n\treturn MSI1010;\n}(MSI);\n\nvar MSI1110 = function (_MSI) {\n\tinherits(MSI1110, _MSI);\n\n\tfunction MSI1110(data, options) {\n\t\tclassCallCheck(this, MSI1110);\n\n\t\tdata += mod11(data);\n\t\tdata += mod10(data);\n\t\treturn possibleConstructorReturn(this, (MSI1110.__proto__ || Object.getPrototypeOf(MSI1110)).call(this, data, options));\n\t}\n\n\treturn MSI1110;\n}(MSI);\n\n// Encoding documentation\n// http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf\n\nvar pharmacode = function (_Barcode) {\n\tinherits(pharmacode, _Barcode);\n\n\tfunction pharmacode(data, options) {\n\t\tclassCallCheck(this, pharmacode);\n\n\t\tvar _this = possibleConstructorReturn(this, (pharmacode.__proto__ || Object.getPrototypeOf(pharmacode)).call(this, data, options));\n\n\t\t_this.number = parseInt(data, 10);\n\t\treturn _this;\n\t}\n\n\tcreateClass(pharmacode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar z = this.number;\n\t\t\tvar result = \"\";\n\n\t\t\t// http://i.imgur.com/RMm4UDJ.png\n\t\t\t// (source: http://www.gomaro.ch/ftproot/Laetus_PHARMA-CODE.pdf, page: 34)\n\t\t\twhile (!isNaN(z) && z != 0) {\n\t\t\t\tif (z % 2 === 0) {\n\t\t\t\t\t// Even\n\t\t\t\t\tresult = \"11100\" + result;\n\t\t\t\t\tz = (z - 2) / 2;\n\t\t\t\t} else {\n\t\t\t\t\t// Odd\n\t\t\t\t\tresult = \"100\" + result;\n\t\t\t\t\tz = (z - 1) / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove the two last zeroes\n\t\t\tresult = result.slice(0, -2);\n\n\t\t\treturn {\n\t\t\t\tdata: result,\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.number >= 3 && this.number <= 131070;\n\t\t}\n\t}]);\n\treturn pharmacode;\n}(Barcode);\n\n// Encoding specification:\n// http://www.barcodeisland.com/codabar.phtml\n\nvar codabar = function (_Barcode) {\n\tinherits(codabar, _Barcode);\n\n\tfunction codabar(data, options) {\n\t\tclassCallCheck(this, codabar);\n\n\t\tif (data.search(/^[0-9\\-\\$\\:\\.\\+\\/]+$/) === 0) {\n\t\t\tdata = \"A\" + data + \"A\";\n\t\t}\n\n\t\tvar _this = possibleConstructorReturn(this, (codabar.__proto__ || Object.getPrototypeOf(codabar)).call(this, data.toUpperCase(), options));\n\n\t\t_this.text = _this.options.text || _this.text.replace(/[A-D]/g, '');\n\t\treturn _this;\n\t}\n\n\tcreateClass(codabar, [{\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn this.data.search(/^[A-D][0-9\\-\\$\\:\\.\\+\\/]+[A-D]$/) !== -1;\n\t\t}\n\t}, {\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\tvar result = [];\n\t\t\tvar encodings = this.getEncodings();\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\tresult.push(encodings[this.data.charAt(i)]);\n\t\t\t\t// for all characters except the last, append a narrow-space (\"0\")\n\t\t\t\tif (i !== this.data.length - 1) {\n\t\t\t\t\tresult.push(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: this.text,\n\t\t\t\tdata: result.join('')\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: \"getEncodings\",\n\t\tvalue: function getEncodings() {\n\t\t\treturn {\n\t\t\t\t\"0\": \"101010011\",\n\t\t\t\t\"1\": \"101011001\",\n\t\t\t\t\"2\": \"101001011\",\n\t\t\t\t\"3\": \"110010101\",\n\t\t\t\t\"4\": \"101101001\",\n\t\t\t\t\"5\": \"110101001\",\n\t\t\t\t\"6\": \"100101011\",\n\t\t\t\t\"7\": \"100101101\",\n\t\t\t\t\"8\": \"100110101\",\n\t\t\t\t\"9\": \"110100101\",\n\t\t\t\t\"-\": \"101001101\",\n\t\t\t\t\"$\": \"101100101\",\n\t\t\t\t\":\": \"1101011011\",\n\t\t\t\t\"/\": \"1101101011\",\n\t\t\t\t\".\": \"1101101101\",\n\t\t\t\t\"+\": \"101100110011\",\n\t\t\t\t\"A\": \"1011001001\",\n\t\t\t\t\"B\": \"1010010011\",\n\t\t\t\t\"C\": \"1001001011\",\n\t\t\t\t\"D\": \"1010011001\"\n\t\t\t};\n\t\t}\n\t}]);\n\treturn codabar;\n}(Barcode);\n\nvar GenericBarcode = function (_Barcode) {\n\tinherits(GenericBarcode, _Barcode);\n\n\tfunction GenericBarcode(data, options) {\n\t\tclassCallCheck(this, GenericBarcode);\n\t\treturn possibleConstructorReturn(this, (GenericBarcode.__proto__ || Object.getPrototypeOf(GenericBarcode)).call(this, data, options)); // Sets this.data and this.text\n\t}\n\n\t// Return the corresponding binary numbers for the data provided\n\n\n\tcreateClass(GenericBarcode, [{\n\t\tkey: \"encode\",\n\t\tvalue: function encode() {\n\t\t\treturn {\n\t\t\t\tdata: \"10101010101010101010101010101010101010101\",\n\t\t\t\ttext: this.text\n\t\t\t};\n\t\t}\n\n\t\t// Resturn true/false if the string provided is valid for this encoder\n\n\t}, {\n\t\tkey: \"valid\",\n\t\tvalue: function valid() {\n\t\t\treturn true;\n\t\t}\n\t}]);\n\treturn GenericBarcode;\n}(Barcode);\n\nvar barcodes = {\n\tCODE39: CODE39,\n\tCODE128: CODE128AUTO, CODE128A: CODE128A, CODE128B: CODE128B, CODE128C: CODE128C,\n\tEAN13: EAN13, EAN8: EAN8, EAN5: EAN5, EAN2: EAN2, UPC: UPC, UPCE: UPCE,\n\tITF14: ITF14,\n\tITF: ITF,\n\tMSI: MSI, MSI10: MSI10, MSI11: MSI11, MSI1010: MSI1010, MSI1110: MSI1110,\n\tpharmacode: pharmacode,\n\tcodabar: codabar,\n\tGenericBarcode: GenericBarcode\n};\n\nvar merge = (function (old, replaceObj) {\n  return _extends({}, old, replaceObj);\n});\n\n// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n// Convert to [1-1, 1-2, 2, 3-1, 3-2]\nfunction linearizeEncodings$1(encodings) {\n\tvar linearEncodings = [];\n\tfunction nextLevel(encoded) {\n\t\tif (Array.isArray(encoded)) {\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tnextLevel(encoded[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tencoded.text = encoded.text || \"\";\n\t\t\tencoded.data = encoded.data || \"\";\n\t\t\tlinearEncodings.push(encoded);\n\t\t}\n\t}\n\tnextLevel(encodings);\n\n\treturn linearEncodings;\n}\n\nfunction fixOptions$1(options) {\n\t// Fix the margins\n\toptions.marginTop = options.marginTop || options.margin;\n\toptions.marginBottom = options.marginBottom || options.margin;\n\toptions.marginRight = options.marginRight || options.margin;\n\toptions.marginLeft = options.marginLeft || options.margin;\n\n\treturn options;\n}\n\n// Convert string to integers/booleans where it should be\nfunction optionsFromStrings$1(options) {\n\tvar intOptions = [\"width\", \"height\", \"textMargin\", \"fontSize\", \"margin\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"];\n\n\tfor (var intOption in intOptions) {\n\t\tif (intOptions.hasOwnProperty(intOption)) {\n\t\t\tintOption = intOptions[intOption];\n\t\t\tif (typeof options[intOption] === \"string\") {\n\t\t\t\toptions[intOption] = parseInt(options[intOption], 10);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options[\"displayValue\"] === \"string\") {\n\t\toptions[\"displayValue\"] = options[\"displayValue\"] != \"false\";\n\t}\n\n\treturn options;\n}\n\nvar defaults$1 = {\n\twidth: 2,\n\theight: 100,\n\tformat: \"auto\",\n\tdisplayValue: true,\n\tfontOptions: \"\",\n\tfont: \"monospace\",\n\ttext: undefined,\n\ttextAlign: \"center\",\n\ttextPosition: \"bottom\",\n\ttextMargin: 2,\n\tfontSize: 20,\n\tbackground: \"#ffffff\",\n\tlineColor: \"#000000\",\n\tmargin: 10,\n\tmarginTop: undefined,\n\tmarginBottom: undefined,\n\tmarginLeft: undefined,\n\tmarginRight: undefined,\n\tvalid: function valid() {}\n};\n\nfunction getOptionsFromElement(element) {\n\tvar options = {};\n\tfor (var property in defaults$1) {\n\t\tif (defaults$1.hasOwnProperty(property)) {\n\t\t\t// jsbarcode-*\n\t\t\tif (element.hasAttribute(\"jsbarcode-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"jsbarcode-\" + property.toLowerCase());\n\t\t\t}\n\n\t\t\t// data-*\n\t\t\tif (element.hasAttribute(\"data-\" + property.toLowerCase())) {\n\t\t\t\toptions[property] = element.getAttribute(\"data-\" + property.toLowerCase());\n\t\t\t}\n\t\t}\n\t}\n\n\toptions[\"value\"] = element.getAttribute(\"jsbarcode-value\") || element.getAttribute(\"data-value\");\n\n\t// Since all atributes are string they need to be converted to integers\n\toptions = optionsFromStrings$1(options);\n\n\treturn options;\n}\n\nfunction getEncodingHeight(encoding, options) {\n\treturn options.height + (options.displayValue && encoding.text.length > 0 ? options.fontSize + options.textMargin : 0) + options.marginTop + options.marginBottom;\n}\n\nfunction getBarcodePadding(textWidth, barcodeWidth, options) {\n\tif (options.displayValue && barcodeWidth < textWidth) {\n\t\tif (options.textAlign == \"center\") {\n\t\t\treturn Math.floor((textWidth - barcodeWidth) / 2);\n\t\t} else if (options.textAlign == \"left\") {\n\t\t\treturn 0;\n\t\t} else if (options.textAlign == \"right\") {\n\t\t\treturn Math.floor(textWidth - barcodeWidth);\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction calculateEncodingAttributes(encodings, barcodeOptions, context) {\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tvar encoding = encodings[i];\n\t\tvar options = merge(barcodeOptions, encoding.options);\n\n\t\t// Calculate the width of the encoding\n\t\tvar textWidth;\n\t\tif (options.displayValue) {\n\t\t\ttextWidth = messureText(encoding.text, options, context);\n\t\t} else {\n\t\t\ttextWidth = 0;\n\t\t}\n\n\t\tvar barcodeWidth = encoding.data.length * options.width;\n\t\tencoding.width = Math.ceil(Math.max(textWidth, barcodeWidth));\n\n\t\tencoding.height = getEncodingHeight(encoding, options);\n\n\t\tencoding.barcodePadding = getBarcodePadding(textWidth, barcodeWidth, options);\n\t}\n}\n\nfunction getTotalWidthOfEncodings(encodings) {\n\tvar totalWidth = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\ttotalWidth += encodings[i].width;\n\t}\n\treturn totalWidth;\n}\n\nfunction getMaximumHeightOfEncodings(encodings) {\n\tvar maxHeight = 0;\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tif (encodings[i].height > maxHeight) {\n\t\t\tmaxHeight = encodings[i].height;\n\t\t}\n\t}\n\treturn maxHeight;\n}\n\nfunction messureText(string, options, context) {\n\tvar ctx;\n\n\tif (context) {\n\t\tctx = context;\n\t} else if (typeof document !== \"undefined\") {\n\t\tctx = document.createElement(\"canvas\").getContext(\"2d\");\n\t} else {\n\t\t// If the text cannot be messured we will return 0.\n\t\t// This will make some barcode with big text render incorrectly\n\t\treturn 0;\n\t}\n\tctx.font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t// Calculate the width of the encoding\n\tvar size = ctx.measureText(string).width;\n\n\treturn size;\n}\n\nvar CanvasRenderer = function () {\n\tfunction CanvasRenderer(canvas, encodings, options) {\n\t\tclassCallCheck(this, CanvasRenderer);\n\n\t\tthis.canvas = canvas;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tcreateClass(CanvasRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\t// Abort if the browser does not support HTML5 canvas\n\t\t\tif (!this.canvas.getContext) {\n\t\t\t\tthrow new Error('The browser does not support canvas.');\n\t\t\t}\n\n\t\t\tthis.prepareCanvas();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encodingOptions = merge(this.options, this.encodings[i].options);\n\n\t\t\t\tthis.drawCanvasBarcode(encodingOptions, this.encodings[i]);\n\t\t\t\tthis.drawCanvasText(encodingOptions, this.encodings[i]);\n\n\t\t\t\tthis.moveCanvasDrawing(this.encodings[i]);\n\t\t\t}\n\n\t\t\tthis.restoreCanvas();\n\t\t}\n\t}, {\n\t\tkey: \"prepareCanvas\",\n\t\tvalue: function prepareCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.save();\n\n\t\t\tcalculateEncodingAttributes(this.encodings, this.options, ctx);\n\t\t\tvar totalWidth = getTotalWidthOfEncodings(this.encodings);\n\t\t\tvar maxHeight = getMaximumHeightOfEncodings(this.encodings);\n\n\t\t\tthis.canvas.width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\n\t\t\tthis.canvas.height = maxHeight;\n\n\t\t\t// Paint the canvas\n\t\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\tif (this.options.background) {\n\t\t\t\tctx.fillStyle = this.options.background;\n\t\t\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\t}\n\n\t\t\tctx.translate(this.options.marginLeft, 0);\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasBarcode\",\n\t\tvalue: function drawCanvasBarcode(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.marginTop + options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = options.marginTop;\n\t\t\t}\n\n\t\t\tctx.fillStyle = options.lineColor;\n\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tvar x = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height);\n\t\t\t\t} else if (binary[b]) {\n\t\t\t\t\tctx.fillRect(x, yFrom, options.width, options.height * binary[b]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawCanvasText\",\n\t\tvalue: function drawCanvasText(options, encoding) {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tvar font = options.fontOptions + \" \" + options.fontSize + \"px \" + options.font;\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.marginTop + options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.marginTop + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\tctx.font = font;\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t}\n\n\t\t\t\tctx.fillText(encoding.text, x, y);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"moveCanvasDrawing\",\n\t\tvalue: function moveCanvasDrawing(encoding) {\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.translate(encoding.width, 0);\n\t\t}\n\t}, {\n\t\tkey: \"restoreCanvas\",\n\t\tvalue: function restoreCanvas() {\n\t\t\t// Get the canvas context\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\n\t\t\tctx.restore();\n\t\t}\n\t}]);\n\treturn CanvasRenderer;\n}();\n\nvar svgns = \"http://www.w3.org/2000/svg\";\n\nvar SVGRenderer = function () {\n\tfunction SVGRenderer(svg, encodings, options) {\n\t\tclassCallCheck(this, SVGRenderer);\n\n\t\tthis.svg = svg;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t\tthis.document = options.xmlDocument || document;\n\t}\n\n\tcreateClass(SVGRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar currentX = this.options.marginLeft;\n\n\t\t\tthis.prepareSVG();\n\t\t\tfor (var i = 0; i < this.encodings.length; i++) {\n\t\t\t\tvar encoding = this.encodings[i];\n\t\t\t\tvar encodingOptions = merge(this.options, encoding.options);\n\n\t\t\t\tvar group = this.createGroup(currentX, encodingOptions.marginTop, this.svg);\n\n\t\t\t\tthis.setGroupOptions(group, encodingOptions);\n\n\t\t\t\tthis.drawSvgBarcode(group, encodingOptions, encoding);\n\t\t\t\tthis.drawSVGText(group, encodingOptions, encoding);\n\n\t\t\t\tcurrentX += encoding.width;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"prepareSVG\",\n\t\tvalue: function prepareSVG() {\n\t\t\t// Clear the SVG\n\t\t\twhile (this.svg.firstChild) {\n\t\t\t\tthis.svg.removeChild(this.svg.firstChild);\n\t\t\t}\n\n\t\t\tcalculateEncodingAttributes(this.encodings, this.options);\n\t\t\tvar totalWidth = getTotalWidthOfEncodings(this.encodings);\n\t\t\tvar maxHeight = getMaximumHeightOfEncodings(this.encodings);\n\n\t\t\tvar width = totalWidth + this.options.marginLeft + this.options.marginRight;\n\t\t\tthis.setSvgAttributes(width, maxHeight);\n\n\t\t\tif (this.options.background) {\n\t\t\t\tthis.drawRect(0, 0, width, maxHeight, this.svg).setAttribute(\"style\", \"fill:\" + this.options.background + \";\");\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSvgBarcode\",\n\t\tvalue: function drawSvgBarcode(parent, options, encoding) {\n\t\t\tvar binary = encoding.data;\n\n\t\t\t// Creates the barcode out of the encoded binary\n\t\t\tvar yFrom;\n\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\tyFrom = options.fontSize + options.textMargin;\n\t\t\t} else {\n\t\t\t\tyFrom = 0;\n\t\t\t}\n\n\t\t\tvar barWidth = 0;\n\t\t\tvar x = 0;\n\t\t\tfor (var b = 0; b < binary.length; b++) {\n\t\t\t\tx = b * options.width + encoding.barcodePadding;\n\n\t\t\t\tif (binary[b] === \"1\") {\n\t\t\t\t\tbarWidth++;\n\t\t\t\t} else if (barWidth > 0) {\n\t\t\t\t\tthis.drawRect(x - options.width * barWidth, yFrom, options.width * barWidth, options.height, parent);\n\t\t\t\t\tbarWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Last draw is needed since the barcode ends with 1\n\t\t\tif (barWidth > 0) {\n\t\t\t\tthis.drawRect(x - options.width * (barWidth - 1), yFrom, options.width * barWidth, options.height, parent);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"drawSVGText\",\n\t\tvalue: function drawSVGText(parent, options, encoding) {\n\t\t\tvar textElem = this.document.createElementNS(svgns, 'text');\n\n\t\t\t// Draw the text if displayValue is set\n\t\t\tif (options.displayValue) {\n\t\t\t\tvar x, y;\n\n\t\t\t\ttextElem.setAttribute(\"style\", \"font:\" + options.fontOptions + \" \" + options.fontSize + \"px \" + options.font);\n\n\t\t\t\tif (options.textPosition == \"top\") {\n\t\t\t\t\ty = options.fontSize - options.textMargin;\n\t\t\t\t} else {\n\t\t\t\t\ty = options.height + options.textMargin + options.fontSize;\n\t\t\t\t}\n\n\t\t\t\t// Draw the text in the correct X depending on the textAlign option\n\t\t\t\tif (options.textAlign == \"left\" || encoding.barcodePadding > 0) {\n\t\t\t\t\tx = 0;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"start\");\n\t\t\t\t} else if (options.textAlign == \"right\") {\n\t\t\t\t\tx = encoding.width - 1;\n\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"end\");\n\t\t\t\t}\n\t\t\t\t// In all other cases, center the text\n\t\t\t\telse {\n\t\t\t\t\t\tx = encoding.width / 2;\n\t\t\t\t\t\ttextElem.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\t\t}\n\n\t\t\t\ttextElem.setAttribute(\"x\", x);\n\t\t\t\ttextElem.setAttribute(\"y\", y);\n\n\t\t\t\ttextElem.appendChild(this.document.createTextNode(encoding.text));\n\n\t\t\t\tparent.appendChild(textElem);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: \"setSvgAttributes\",\n\t\tvalue: function setSvgAttributes(width, height) {\n\t\t\tvar svg = this.svg;\n\t\t\tsvg.setAttribute(\"width\", width + \"px\");\n\t\t\tsvg.setAttribute(\"height\", height + \"px\");\n\t\t\tsvg.setAttribute(\"x\", \"0px\");\n\t\t\tsvg.setAttribute(\"y\", \"0px\");\n\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n\t\t\tsvg.setAttribute(\"xmlns\", svgns);\n\t\t\tsvg.setAttribute(\"version\", \"1.1\");\n\n\t\t\tsvg.setAttribute(\"style\", \"transform: translate(0,0)\");\n\t\t}\n\t}, {\n\t\tkey: \"createGroup\",\n\t\tvalue: function createGroup(x, y, parent) {\n\t\t\tvar group = this.document.createElementNS(svgns, 'g');\n\t\t\tgroup.setAttribute(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\t\t\tparent.appendChild(group);\n\n\t\t\treturn group;\n\t\t}\n\t}, {\n\t\tkey: \"setGroupOptions\",\n\t\tvalue: function setGroupOptions(group, options) {\n\t\t\tgroup.setAttribute(\"style\", \"fill:\" + options.lineColor + \";\");\n\t\t}\n\t}, {\n\t\tkey: \"drawRect\",\n\t\tvalue: function drawRect(x, y, width, height, parent) {\n\t\t\tvar rect = this.document.createElementNS(svgns, 'rect');\n\n\t\t\trect.setAttribute(\"x\", x);\n\t\t\trect.setAttribute(\"y\", y);\n\t\t\trect.setAttribute(\"width\", width);\n\t\t\trect.setAttribute(\"height\", height);\n\n\t\t\tparent.appendChild(rect);\n\n\t\t\treturn rect;\n\t\t}\n\t}]);\n\treturn SVGRenderer;\n}();\n\nvar ObjectRenderer = function () {\n\tfunction ObjectRenderer(object, encodings, options) {\n\t\tclassCallCheck(this, ObjectRenderer);\n\n\t\tthis.object = object;\n\t\tthis.encodings = encodings;\n\t\tthis.options = options;\n\t}\n\n\tcreateClass(ObjectRenderer, [{\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tthis.object.encodings = this.encodings;\n\t\t}\n\t}]);\n\treturn ObjectRenderer;\n}();\n\nvar renderers = { CanvasRenderer: CanvasRenderer, SVGRenderer: SVGRenderer, ObjectRenderer: ObjectRenderer };\n\nvar InvalidInputException = function (_Error) {\n\tinherits(InvalidInputException, _Error);\n\n\tfunction InvalidInputException(symbology, input) {\n\t\tclassCallCheck(this, InvalidInputException);\n\n\t\tvar _this = possibleConstructorReturn(this, (InvalidInputException.__proto__ || Object.getPrototypeOf(InvalidInputException)).call(this));\n\n\t\t_this.name = \"InvalidInputException\";\n\n\t\t_this.symbology = symbology;\n\t\t_this.input = input;\n\n\t\t_this.message = '\"' + _this.input + '\" is not a valid input for ' + _this.symbology;\n\t\treturn _this;\n\t}\n\n\treturn InvalidInputException;\n}(Error);\n\nvar InvalidElementException = function (_Error2) {\n\tinherits(InvalidElementException, _Error2);\n\n\tfunction InvalidElementException() {\n\t\tclassCallCheck(this, InvalidElementException);\n\n\t\tvar _this2 = possibleConstructorReturn(this, (InvalidElementException.__proto__ || Object.getPrototypeOf(InvalidElementException)).call(this));\n\n\t\t_this2.name = \"InvalidElementException\";\n\t\t_this2.message = \"Not supported type to render on\";\n\t\treturn _this2;\n\t}\n\n\treturn InvalidElementException;\n}(Error);\n\nvar NoElementException = function (_Error3) {\n\tinherits(NoElementException, _Error3);\n\n\tfunction NoElementException() {\n\t\tclassCallCheck(this, NoElementException);\n\n\t\tvar _this3 = possibleConstructorReturn(this, (NoElementException.__proto__ || Object.getPrototypeOf(NoElementException)).call(this));\n\n\t\t_this3.name = \"NoElementException\";\n\t\t_this3.message = \"No element to render on.\";\n\t\treturn _this3;\n\t}\n\n\treturn NoElementException;\n}(Error);\n\n/* global HTMLImageElement */\n/* global HTMLCanvasElement */\n/* global SVGElement */\n\n// Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\nfunction getRenderProperties(element) {\n\t// If the element is a string, query select call again\n\tif (typeof element === \"string\") {\n\t\treturn querySelectedRenderProperties(element);\n\t}\n\t// If element is array. Recursivly call with every object in the array\n\telse if (Array.isArray(element)) {\n\t\t\tvar returnArray = [];\n\t\t\tfor (var i = 0; i < element.length; i++) {\n\t\t\t\treturnArray.push(getRenderProperties(element[i]));\n\t\t\t}\n\t\t\treturn returnArray;\n\t\t}\n\t\t// If element, render on canvas and set the uri as src\n\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n\t\t\t\treturn newCanvasRenderProperties(element);\n\t\t\t}\n\t\t\t// If SVG\n\t\t\telse if (element && element.nodeName === 'svg' || typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: element,\n\t\t\t\t\t\toptions: getOptionsFromElement(element),\n\t\t\t\t\t\trenderer: renderers.SVGRenderer\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// If canvas (in browser)\n\t\t\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\toptions: getOptionsFromElement(element),\n\t\t\t\t\t\t\trenderer: renderers.CanvasRenderer\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// If canvas (in node)\n\t\t\t\t\telse if (element && element.getContext) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: renderers.CanvasRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: renderers.ObjectRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new InvalidElementException();\n\t\t\t\t\t\t}\n}\n\nfunction querySelectedRenderProperties(string) {\n\tvar selector = document.querySelectorAll(string);\n\tif (selector.length === 0) {\n\t\treturn undefined;\n\t} else {\n\t\tvar returnArray = [];\n\t\tfor (var i = 0; i < selector.length; i++) {\n\t\t\treturnArray.push(getRenderProperties(selector[i]));\n\t\t}\n\t\treturn returnArray;\n\t}\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n\tvar canvas = document.createElement('canvas');\n\treturn {\n\t\telement: canvas,\n\t\toptions: getOptionsFromElement(imgElement),\n\t\trenderer: renderers.CanvasRenderer,\n\t\tafterRender: function afterRender() {\n\t\t\timgElement.setAttribute(\"src\", canvas.toDataURL());\n\t\t}\n\t};\n}\n\n/*eslint no-console: 0 */\n\nvar ErrorHandler = function () {\n\tfunction ErrorHandler(api) {\n\t\tclassCallCheck(this, ErrorHandler);\n\n\t\tthis.api = api;\n\t}\n\n\tcreateClass(ErrorHandler, [{\n\t\tkey: \"handleCatch\",\n\t\tvalue: function handleCatch(e) {\n\t\t\t// If babel supported extending of Error in a correct way instanceof would be used here\n\t\t\tif (e.name === \"InvalidInputException\") {\n\t\t\t\tif (this.api._options.valid !== this.api._defaults.valid) {\n\t\t\t\t\tthis.api._options.valid(false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e.message;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tthis.api.render = function () {};\n\t\t}\n\t}, {\n\t\tkey: \"wrapBarcodeCall\",\n\t\tvalue: function wrapBarcodeCall(func) {\n\t\t\ttry {\n\t\t\t\tvar result = func.apply(undefined, arguments);\n\t\t\t\tthis.api._options.valid(true);\n\t\t\t\treturn result;\n\t\t\t} catch (e) {\n\t\t\t\tthis.handleCatch(e);\n\n\t\t\t\treturn this.api;\n\t\t\t}\n\t\t}\n\t}]);\n\treturn ErrorHandler;\n}();\n\n// Import all the barcodes\n// Help functions\n// Exceptions\n// Default values\n// The protype of the object returned from the JsBarcode() call\nvar API = function API() {};\n\n// The first call of the library API\n// Will return an object with all barcodes calls and the data that is used\n// by the renderers\nvar JsBarcode = function JsBarcode(element, text, options) {\n\tvar api = new API();\n\n\tif (typeof element === \"undefined\") {\n\t\tthrow Error(\"No element to render on was provided.\");\n\t}\n\n\t// Variables that will be pased through the API calls\n\tapi._renderProperties = getRenderProperties(element);\n\tapi._encodings = [];\n\tapi._options = defaults$1;\n\tapi._errorHandler = new ErrorHandler(api);\n\n\t// If text is set, use the simple syntax (render the barcode directly)\n\tif (typeof text !== \"undefined\") {\n\t\toptions = options || {};\n\n\t\tif (!options.format) {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tapi.options(options)[options.format](text, options).render();\n\t}\n\n\treturn api;\n};\n\n// To make tests work TODO: remove\nJsBarcode.getModule = function (name) {\n\treturn barcodes[name];\n};\n\n// Register all barcodes\nfor (var name in barcodes) {\n\tif (barcodes.hasOwnProperty(name)) {\n\t\t// Security check if the propery is a prototype property\n\t\tregisterBarcode(barcodes, name);\n\t}\n}\nfunction registerBarcode(barcodes$$1, name) {\n\tAPI.prototype[name] = API.prototype[name.toUpperCase()] = API.prototype[name.toLowerCase()] = function (text, options) {\n\t\tvar api = this;\n\t\treturn api._errorHandler.wrapBarcodeCall(function () {\n\t\t\t// Ensure text is options.text\n\t\t\toptions.text = typeof options.text === 'undefined' ? undefined : '' + options.text;\n\n\t\t\tvar newOptions = merge(api._options, options);\n\t\t\tnewOptions = optionsFromStrings$1(newOptions);\n\t\t\tvar Encoder = barcodes$$1[name];\n\t\t\tvar encoded = encode(text, Encoder, newOptions);\n\t\t\tapi._encodings.push(encoded);\n\n\t\t\treturn api;\n\t\t});\n\t};\n}\n\n// encode() handles the Encoder call and builds the binary string to be rendered\nfunction encode(text, Encoder, options) {\n\t// Ensure that text is a string\n\ttext = \"\" + text;\n\n\tvar encoder = new Encoder(text, options);\n\n\t// If the input is not valid for the encoder, throw error.\n\t// If the valid callback option is set, call it instead of throwing error\n\tif (!encoder.valid()) {\n\t\tthrow new InvalidInputException(encoder.constructor.name, text);\n\t}\n\n\t// Make a request for the binary data (and other infromation) that should be rendered\n\tvar encoded = encoder.encode();\n\n\t// Encodings can be nestled like [[1-1, 1-2], 2, [3-1, 3-2]\n\t// Convert to [1-1, 1-2, 2, 3-1, 3-2]\n\tencoded = linearizeEncodings$1(encoded);\n\n\t// Merge\n\tfor (var i = 0; i < encoded.length; i++) {\n\t\tencoded[i].options = merge(options, encoded[i].options);\n\t}\n\n\treturn encoded;\n}\n\nfunction autoSelectBarcode() {\n\t// If CODE128 exists. Use it\n\tif (barcodes[\"CODE128\"]) {\n\t\treturn \"CODE128\";\n\t}\n\n\t// Else, take the first (probably only) barcode\n\treturn Object.keys(barcodes)[0];\n}\n\n// Sets global encoder options\n// Added to the api by the JsBarcode function\nAPI.prototype.options = function (options) {\n\tthis._options = merge(this._options, options);\n\treturn this;\n};\n\n// Will create a blank space (usually in between barcodes)\nAPI.prototype.blank = function (size) {\n\tvar zeroes = new Array(size + 1).join(\"0\");\n\tthis._encodings.push({ data: zeroes });\n\treturn this;\n};\n\n// Initialize JsBarcode on all HTML elements defined.\nAPI.prototype.init = function () {\n\t// Should do nothing if no elements where found\n\tif (!this._renderProperties) {\n\t\treturn;\n\t}\n\n\t// Make sure renderProperies is an array\n\tif (!Array.isArray(this._renderProperties)) {\n\t\tthis._renderProperties = [this._renderProperties];\n\t}\n\n\tvar renderProperty;\n\tfor (var i in this._renderProperties) {\n\t\trenderProperty = this._renderProperties[i];\n\t\tvar options = merge(this._options, renderProperty.options);\n\n\t\tif (options.format == \"auto\") {\n\t\t\toptions.format = autoSelectBarcode();\n\t\t}\n\n\t\tthis._errorHandler.wrapBarcodeCall(function () {\n\t\t\tvar text = options.value;\n\t\t\tvar Encoder = barcodes[options.format.toUpperCase()];\n\t\t\tvar encoded = encode(text, Encoder, options);\n\n\t\t\trender(renderProperty, encoded, options);\n\t\t});\n\t}\n};\n\n// The render API call. Calls the real render function.\nAPI.prototype.render = function () {\n\tif (!this._renderProperties) {\n\t\tthrow new NoElementException();\n\t}\n\n\tif (Array.isArray(this._renderProperties)) {\n\t\tfor (var i = 0; i < this._renderProperties.length; i++) {\n\t\t\trender(this._renderProperties[i], this._encodings, this._options);\n\t\t}\n\t} else {\n\t\trender(this._renderProperties, this._encodings, this._options);\n\t}\n\n\treturn this;\n};\n\nAPI.prototype._defaults = defaults$1;\n\n// Prepares the encodings and calls the renderer\nfunction render(renderProperties, encodings, options) {\n\tencodings = linearizeEncodings$1(encodings);\n\n\tfor (var i = 0; i < encodings.length; i++) {\n\t\tencodings[i].options = merge(options, encodings[i].options);\n\t\tfixOptions$1(encodings[i].options);\n\t}\n\n\tfixOptions$1(options);\n\n\tvar Renderer = renderProperties.renderer;\n\tvar renderer = new Renderer(renderProperties.element, encodings, options);\n\trenderer.render();\n\n\tif (renderProperties.afterRender) {\n\t\trenderProperties.afterRender();\n\t}\n}\n\n// Export to browser\nif (typeof window !== \"undefined\") {\n\twindow.JsBarcode = JsBarcode;\n}\n\n// Export to jQuery\n/*global jQuery */\nif (typeof jQuery !== 'undefined') {\n\tjQuery.fn.JsBarcode = function (content, options) {\n\t\tvar elementArray = [];\n\t\tjQuery(this).each(function () {\n\t\t\telementArray.push(this);\n\t\t});\n\t\treturn JsBarcode(elementArray, content, options);\n\t};\n}\n\nvar index = {\n  props: {\n    /*\n     * The value of the barcode.\n     */\n    value: {\n      type: String,\n      required: true\n    },\n\n    /*\n     * The options for the barcode generator.\n     * {@link https://github.com/lindell/JsBarcode#options}\n     */\n    options: {\n      type: Object\n    },\n\n    /*\n     * The tag of the component root element.\n     */\n    tag: {\n      type: String,\n      default: 'canvas'\n    }\n  },\n\n  render: function render(createElement) {\n    return createElement(this.tag, this.$slots.default);\n  },\n\n\n  watch: {\n    /*\n     * Update barcode when value change\n     */\n    value: function value() {\n      this.generate();\n    },\n\n\n    /*\n     * Update barcode when options change\n     */\n    options: function options() {\n      this.generate();\n    }\n  },\n\n  mounted: function mounted() {\n    this.generate();\n  },\n\n\n  methods: {\n    /**\n     * Generate barcode\n     */\n    generate: function generate() {\n      JsBarcode(this.$el, this.value, this.options);\n    }\n  }\n};\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@xkeshi/vue-barcode/dist/vue-barcode.js\n// module id = pwxT\n// module chunks = 0"],"sourceRoot":""}