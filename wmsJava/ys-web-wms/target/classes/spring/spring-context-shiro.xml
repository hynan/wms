<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jeesz.properties" />
	
	<!-- Shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="https://www.ys-i4p.com:7443/cas/login?service=http://www.ys-i4p.com:8470/ys-web-wms/shiro-cas"></property>
		<property name="successUrl" value="http://www.ys-i4p.com:8470/ys-web-wms/a"></property>  
		<property name="filters">
			<map>
				 <!-- 添加casFilter到shiroFilter -->  
				 <entry key="casFilter" value-ref="casFilter" />  
			</map>
		</property>
		
		<!-- 定义过滤规则 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- /static/** = anon -->
				/userfiles/** = anon
				/shiro-cas= casFilter 
				${adminPath}/login = authc
				${adminPath}/logout = logout
				${adminPath}/** = user
				/act/rest/service/editor/** = perms[act:model:edit]
				/act/rest/service/model/**  = perms[act:model:edit]
				/act/rest/service/** = user
				/ReportServer/** = user
				/*.jsp* = authc
				/*.do* = authc
				/jeesz-web-bidms/**  = user
			</value>
		</property>
	</bean>
	
	
	
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
        <!-- 配置验证错误时的失败页面  -->  
        <property name="failureUrl" value="http://www.ys-i4p.com:8470/ys-web-wms/validFailure"/>  
    </bean>  
    
    <bean id="casShiroRealm" class="com.sml.sz.sys.security.CasShiroRealm">
		<property name="casServerUrlPrefix" value="https://www.ys-i4p.com:7443/cas" />
		<property name="casService" value="http://www.ys-i4p.com:8470/ys-web-wms/shiro-cas" />
	</bean>
	
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">      
        <property name="realm" ref="casShiroRealm"/>  
        <property name="subjectFactory" ref="casSubjectFactory"/>  
    </bean>  
    
    <!-- 自定义会话管理配置 -->
	<bean id="sessionManager" class="com.sml.sz.common.security.shiro.session.SessionManager"> 
		<property name="sessionDAO" ref="sessionDAO"/>
		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="jeesz.session.id"/>
	</bean>


	<bean id="sessionDAO" class="com.sml.sz.common.security.shiro.session.JedisSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="sessionKeyPrefix" value="{redis.keyPrefix}_session_" />
	</bean>
	
	<!-- <bean id="sessionDAO" class="com.sml.sz.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
	</bean> -->
      
    <!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->  
    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>  
  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
  
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
        <property name="arguments" ref="securityManager"/>  
    </bean>
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
</beans>