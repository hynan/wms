<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sml.sz.sys.dao.OfficeDao">

	<sql id="officeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.area_id AS "area.id",
		a.code,
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address, 
		a.zip_code, 
		a.master, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.useable AS useable,
		a.primary_person AS "primaryPerson.id",
		a.deputy_person AS "deputyPerson.id",
		dl.name AS "deptLevel.name",
		dl.id AS "deptLevel.id",
		dt.id AS "deptType.id",
		dt.name AS "deptType.name",
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>
	
	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN sys_area ar ON ar.id = a.area_id
		LEFT JOIN sys_user pp ON pp.id = a.primary_person
		LEFT JOIN sys_user dp ON dp.id = a.deputy_person
		LEFT JOIN sys_department_level dl ON dl.id = a.level_id
		LEFT JOIN sys_department_type dt ON dt.id = a.depttype_id
    </sql>
	
	<select id="get" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.id}
		ORDER BY a.code
	</select>
			
	<select id="findAllList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>
	
	<select id="findByParentIdsLike" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.code
	</select>
	
	<select id="findByParentId" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_id = #{id}
		ORDER BY a.code
	</select>
	
	
	<select id="getByName" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = 0 AND a.name = #{parentIds}
		ORDER BY a.code LIMIT 1
	</select>
	
	<insert id="insert">
		INSERT INTO sys_office(
			id, 
			parent_id, 
			parent_ids, 
			area_id, 
			code, 
			name, 
			sort, 
			type, 
			grade, 
			address, 
			zip_code, 
			master, 
			phone, 
			fax, 
			email, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			useable,
			primary_person,
			deputy_person,
			level_id,
			depttype_id
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{area.id}, 
			#{code}, 
			#{name}, 
			#{sort}, 
			#{type}, 
			#{grade}, 
			#{address}, 
			#{zipCode}, 
			#{master}, 
			#{phone}, 
			#{fax}, 
			#{email}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{useable},
			#{primaryPerson.id},
			#{deputyPerson.id},
			#{deptLevel.id},
			#{deptType.id}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			area_id = #{area.id}, 
			code = #{code}, 
			name = #{name}, 
			type = #{type}, 
			grade = #{grade}, 
			address = #{address}, 
			zip_code = #{zipCode}, 
			master = #{master}, 
			phone = #{phone}, 
			fax = #{fax}, 
			email = #{email}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			useable=#{useable},
			primary_person=#{primaryPerson.id},
			deputy_person=#{deputyPerson.id},
			level_id = #{deptLevel.id},
			depttype_id = #{deptType.id}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_office SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<select id="getTeamList" resultType="com.sml.sz.sys.dto.TeamBaseDto">
		SELECT
			a.id,
            a.parent_id AS "parent.id",
		    a.parent_ids,
		    a.area_id AS "area.id",
		    a.code,
		    a.name,
		    a.type,
		    a.grade
		FROM sys_office a	
		WHERE a.del_flag = 0   AND a.type = 3
		ORDER BY a.code
	</select>
	
	<select id="getOfficeListByRole" resultType="com.sml.sz.sys.dto.TeamBaseDto" parameterType="string">
		SELECT
			a.id,
            a.parent_id AS "parent.id",
		    a.parent_ids,
		    a.area_id AS "area.id",
		    a.code,
		    a.name,
		    a.type,
		    a.grade
		FROM sys_office a	
		RIGHT JOIN sys_role_office b ON a.id = b.office_id
		WHERE a.del_flag = 0  AND b.role_id = #{roleId}
		ORDER BY a.code
	</select>
	
	<select id="getTechnicalDept" resultType="com.sml.sz.sys.dto.DeptDto">
		SELECT id,name,code 
		FROM sys_office o
        WHERE o.code =#{code}  AND o.del_flag =0
	</select>
	
	<select id="saveOfficeRole" parameterType="java.util.HashMap">
	INSERT INTO sys_role_office 
	(office_id,role_id)
	VALUES
	(#{officeId},#{roleId})
	</select>
	
	<select id="getRoleByOfficeId" parameterType="java.lang.String" resultType="java.lang.String">
	SELECT role_id from sys_role_office where office_id = #{officeId}
	</select>
	
	<select id="deleteRoleByOfficeId" parameterType="java.lang.String" >
	delete from sys_role_office where office_id = #{officeId}
	</select>
</mapper>