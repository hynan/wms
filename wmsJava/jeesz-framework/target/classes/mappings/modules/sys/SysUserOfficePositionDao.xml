<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sml.sz.sys.dao.SysUserOfficePositionDao">
    
	<sql id="sysUserOfficePositionColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.office_id AS "officeId",
		a.position_id AS "positionId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		b.name AS "officeName",
		c.name AS "positionName",
		d.name AS "userName"
	</sql>
	
	<sql id="sysUserOfficePositionJoins">
		LEFT JOIN sys_office b ON a.office_id = b.id
		LEFT JOIN sys_position c ON a.position_id = c.id
		LEFT JOIN sys_user d ON a.user_id = d.id
	</sql>
    
	<select id="get" resultType="SysUserOfficePosition">
		SELECT 
			<include refid="sysUserOfficePositionColumns"/>
		FROM sys_user_office_position a
		<include refid="sysUserOfficePositionJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SysUserOfficePosition">
		SELECT 
			<include refid="sysUserOfficePositionColumns"/>
		FROM sys_user_office_position a
		<include refid="sysUserOfficePositionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="userId != null and userId != ''">
			and a.user_id = #{userId}
			</if>
			<if test="userName != null and userName !='' ">
			and d.name  LIKE concat('%',#{userName},'%')
			</if>
			<if test="officeName != null and officeName !='' ">
			and b.name  LIKE concat('%',#{officeName},'%')
			</if>
			<if test="positionName != null and positionName !='' ">
			and c.name  LIKE concat('%',#{positionName},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SysUserOfficePosition">
		SELECT 
			<include refid="sysUserOfficePositionColumns"/>
		FROM sys_user_office_position a
		<include refid="sysUserOfficePositionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_user_office_position(
			
			user_id,
			office_id,
			position_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			
			#{userId},
			#{officeId},
			#{positionId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_user_office_position SET 	
			user_id = #{userId},
			office_id = #{officeId},
			position_id = #{positionId},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id} and del_flag = 0
	</update>
	
	<update id="delete">
		UPDATE sys_user_office_position SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="isExist" parameterType="java.lang.String" resultType="java.lang.Long">
		select id from sys_user_office_position where user_id = #{userId} and del_flag = 0 limit 1;
	</select>
	
	<select id="deleteByUserId" parameterType="java.lang.String">
		DELETE FROM sys_user_office_position where user_id = #{userId}
	</select>
	
	<select id="getApps" parameterType="java.lang.Long" resultType="com.sml.sz.sys.entity.SysApplicationInfo">
	select b.id,b.name from sys_application_info b where id in (select a.app_id from sys_user_office_position_app a where a.office_position_id = #{suopId} and a.del_flag = 0) 
	</select>
	
	<select id="deleteAppBySuopId">
	delete from sys_user_office_position_app where office_position_id = #{suopId}
	</select>
	
	<select id="insertApps" parameterType="java.util.List">	
	INSERT INTO sys_user_office_position_app(			
			office_position_id,
			app_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES
		<foreach collection="list" item="item" index="index" separator=",">
            ( #{item.officePositionId}, #{item.appId},#{item.createBy.id},#{item.createDate},#{item.updateBy.id},
              #{item.updateDate},#{item.delFlag}                      
            )			
        </foreach>
	</select>
	
	<select id="isSameOfficeId" resultType="java.lang.Long">
	SELECT id FROM sys_user_office_position 
	WHERE del_flag = 0 and office_id = #{officeId} and user_id = #{userId}
	Group by office_id,user_id 
	limit 1
	</select>
	
	<select id="getOfficeIdByUserIdAppId" resultType="java.lang.String">
	SELECT b.office_id FROM sys_user_office_position_app a 
    JOIN sys_user_office_position b ON a.office_position_id = b.id
    <where>
        a.del_flag = 0
        <if test="userId != null and userId != '' ">
        and b.user_id = #{userId} 
        </if>
        <if test="appId != null and appId != '' ">
        and a.app_id = #{appId} 
        </if>
    </where>
	</select>
	
	<select id="getIdByUserIdOfficeId" resultType="java.lang.Integer">
	SELECT COUNT(id) FROM sys_user_office_position 
	<where>
	del_flag = 0
	<if test="userId != null and userId != '' ">
	and user_id = #{userId}
	</if>
	<if test="officeId != null and officeId != '' ">
	and office_id = #{officeId}
	</if>
	</where>
	</select>
	
	<select id="insertNewDb" parameterType="java.util.List">
	INSERT INTO sys_user_office_position(			
			user_id,
			office_id,
			position_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES
		<foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id}, #{item.office.id}, #{item.positionId},#{item.createBy.id},#{item.createDate},#{item.updateBy.id},
              #{item.updateDate},#{item.delFlag}                      
            )			
        </foreach>
	</select>
	
	<select id="deleteByAppId" parameterType="java.lang.Long">
	delete from sys_user_office_position_app where app_id = #{appId} and del_flag = 0
	</select>
	
	<select id="getUeridByOfficeidAppid" resultType="java.lang.String">
	     SELECT a.user_id 
	     FROM sys_user_office_position a 
	     LEFT JOIN sys_user_office_position_app b ON a.id = b.office_position_id 
	     <where>
	     a.del_flag = 0 AND b.del_flag = 0
	     <if test="officeId != null and officeId != '' ">
	     and a.office_id = #{officeId}
	     </if>
	     <if test="appId != null and appId != 0 ">
	     and b.app_id = #{appId}
	     </if>
	     </where>
	</select>
</mapper>